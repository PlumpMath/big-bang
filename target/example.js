var CLOSURE_NO_DEPS = true;
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.DEBUG = true;
goog.LOCALE = "en";
goog.TRUSTED_SITE = true;
goog.provide = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while (namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if (goog.getObjectByName(namespace)) {
        break;
      }
      goog.implicitNamespaces_[namespace] = true;
    }
  }
  goog.exportPath_(name);
};
goog.setTestOnly = function(opt_message) {
  if (COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + opt_message ? ": " + opt_message : ".");
  }
};
if (!COMPILED) {
  goog.isProvided_ = function(name) {
    return!goog.implicitNamespaces_[name] && !!goog.getObjectByName(name);
  };
  goog.implicitNamespaces_ = {};
}
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if (!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0]);
  }
  for (var part;parts.length && (part = parts.shift());) {
    if (!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object;
    } else {
      if (cur[part]) {
        cur = cur[part];
      } else {
        cur = cur[part] = {};
      }
    }
  }
};
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for (var part;part = parts.shift();) {
    if (goog.isDefAndNotNull(cur[part])) {
      cur = cur[part];
    } else {
      return null;
    }
  }
  return cur;
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for (var x in obj) {
    global[x] = obj[x];
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if (!COMPILED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for (var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if (!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {};
      }
      deps.pathToNames[path][provide] = true;
    }
    for (var j = 0;require = requires[j];j++) {
      if (!(path in deps.requires)) {
        deps.requires[path] = {};
      }
      deps.requires[path][require] = true;
    }
  }
};
goog.ENABLE_DEBUG_LOADER = true;
goog.require = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      return;
    }
    if (goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if (path) {
        goog.included_[path] = true;
        goog.writeScripts_();
        return;
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    if (goog.global.console) {
      goog.global.console["error"](errorMessage);
    }
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    if (ctor.instance_) {
      return ctor.instance_;
    }
    if (goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;
    }
    return ctor.instance_ = new ctor;
  };
};
goog.instantiatedSingletons_ = [];
if (!COMPILED && goog.ENABLE_DEBUG_LOADER) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc;
  };
  goog.findBasePath_ = function() {
    if (goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return;
    } else {
      if (!goog.inHtmlDocument_()) {
        return;
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for (var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if (src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return;
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if (!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.writeScriptTag_ = function(src) {
    if (goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      if (doc.readyState == "complete") {
        var isDeps = /\bdeps.js$/.test(src);
        if (isDeps) {
          return false;
        } else {
          throw Error('Cannot write "' + src + '" after document load');
        }
      }
      doc.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"\x3e\x3c/' + "script\x3e");
      return true;
    } else {
      return false;
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if (path in deps.written) {
        return;
      }
      if (path in deps.visited) {
        if (!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path);
        }
        return;
      }
      deps.visited[path] = true;
      if (path in deps.requires) {
        for (var requireName in deps.requires[path]) {
          if (!goog.isProvided_(requireName)) {
            if (requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName]);
            } else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if (!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path);
      }
    }
    for (var path in goog.included_) {
      if (!deps.written[path]) {
        visitNode(path);
      }
    }
    for (var i = 0;i < scripts.length;i++) {
      if (scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i]);
      } else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if (rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule];
    } else {
      return null;
    }
  };
  goog.findBasePath_();
  if (!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js");
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if (s == "object") {
    if (value) {
      if (value instanceof Array) {
        return "array";
      } else {
        if (value instanceof Object) {
          return s;
        }
      }
      var className = Object.prototype.toString.call((value));
      if (className == "[object Window]") {
        return "object";
      }
      if (className == "[object Array]" || typeof value.length == "number" && (typeof value.splice != "undefined" && (typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")))) {
        return "array";
      }
      if (className == "[object Function]" || typeof value.call != "undefined" && (typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call"))) {
        return "function";
      }
    } else {
      return "null";
    }
  } else {
    if (s == "function" && typeof value.call == "undefined") {
      return "object";
    }
  }
  return s;
};
goog.isDef = function(val) {
  return val !== undefined;
};
goog.isNull = function(val) {
  return val === null;
};
goog.isDefAndNotNull = function(val) {
  return val != null;
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array";
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number";
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function";
};
goog.isString = function(val) {
  return typeof val == "string";
};
goog.isBoolean = function(val) {
  return typeof val == "boolean";
};
goog.isNumber = function(val) {
  return typeof val == "number";
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function";
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function";
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);
};
goog.removeUid = function(obj) {
  if ("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_);
  }
  try {
    delete obj[goog.UID_PROPERTY_];
  } catch (ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1E9 >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.cloneObject(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return(fn.call.apply(fn.bind, arguments));
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if (!fn) {
    throw new Error;
  }
  if (arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs);
    };
  } else {
    return function() {
      return fn.apply(selfObj, arguments);
    };
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if (Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_;
  } else {
    goog.bind = goog.bindJs_;
  }
  return goog.bind.apply(null, arguments);
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = Array.prototype.slice.call(arguments);
    newArgs.unshift.apply(newArgs, args);
    return fn.apply(this, newArgs);
  };
};
goog.mixin = function(target, source) {
  for (var x in source) {
    target[x] = source[x];
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return+new Date;
};
goog.globalEval = function(script) {
  if (goog.global.execScript) {
    goog.global.execScript(script, "JavaScript");
  } else {
    if (goog.global.eval) {
      if (goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ \x3d 1;");
        if (typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true;
        } else {
          goog.evalWorksForGlobals_ = false;
        }
      }
      if (goog.evalWorksForGlobals_) {
        goog.global.eval(script);
      } else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt);
      }
    } else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName;
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for (var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]));
    }
    return mapped.join("-");
  };
  var rename;
  if (goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts;
  } else {
    rename = function(a) {
      return a;
    };
  }
  if (opt_modifier) {
    return className + "-" + rename(opt_modifier);
  } else {
    return rename(className);
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style;
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;
}
goog.getMsg = function(str, opt_values) {
  var values = opt_values || {};
  for (var key in values) {
    var value = ("" + values[key]).replace(/\$/g, "$$$$");
    str = str.replace(new RegExp("\\{\\$" + key + "\\}", "gi"), value);
  }
  return str;
};
goog.getMsgWithFallback = function(a, b) {
  return a;
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo);
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol;
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor;
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if (caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1));
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for (var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if (ctor.prototype[opt_methodName] === caller) {
      foundCaller = true;
    } else {
      if (foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args);
      }
    }
  }
  if (me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args);
  } else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global);
};
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0;
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l;
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0;
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0;
};
goog.string.subs = function(str, var_args) {
  for (var i = 1;i < arguments.length;i++) {
    var replacement = String(arguments[i]).replace(/\$/g, "$$$$");
    str = str.replace(/\%s/, replacement);
  }
  return str;
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str);
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str));
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str);
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str);
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str);
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str);
};
goog.string.isSpace = function(ch) {
  return ch == " ";
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && (ch >= " " && ch <= "~") || ch >= "\u0080" && ch <= "\ufffd";
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ");
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n");
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ");
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ");
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "");
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "");
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "");
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "");
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if (test1 < test2) {
    return-1;
  } else {
    if (test1 == test2) {
      return 0;
    } else {
      return 1;
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if (str1 == str2) {
    return 0;
  }
  if (!str1) {
    return-1;
  }
  if (!str2) {
    return 1;
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for (var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if (a != b) {
      var num1 = parseInt(a, 10);
      if (!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if (!isNaN(num2) && num1 - num2) {
          return num1 - num2;
        }
      }
      return a < b ? -1 : 1;
    }
  }
  if (tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length;
  }
  return str1 < str2 ? -1 : 1;
};
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str));
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "));
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "\x3cbr /\x3e" : "\x3cbr\x3e");
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if (opt_isLikelyToContainHtmlChars) {
    return str.replace(goog.string.amperRe_, "\x26amp;").replace(goog.string.ltRe_, "\x26lt;").replace(goog.string.gtRe_, "\x26gt;").replace(goog.string.quotRe_, "\x26quot;");
  } else {
    if (!goog.string.allRe_.test(str)) {
      return str;
    }
    if (str.indexOf("\x26") != -1) {
      str = str.replace(goog.string.amperRe_, "\x26amp;");
    }
    if (str.indexOf("\x3c") != -1) {
      str = str.replace(goog.string.ltRe_, "\x26lt;");
    }
    if (str.indexOf("\x3e") != -1) {
      str = str.replace(goog.string.gtRe_, "\x26gt;");
    }
    if (str.indexOf('"') != -1) {
      str = str.replace(goog.string.quotRe_, "\x26quot;");
    }
    return str;
  }
};
goog.string.amperRe_ = /&/g;
goog.string.ltRe_ = /</g;
goog.string.gtRe_ = />/g;
goog.string.quotRe_ = /\"/g;
goog.string.allRe_ = /[&<>\"]/;
goog.string.unescapeEntities = function(str) {
  if (goog.string.contains(str, "\x26")) {
    if ("document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str);
    } else {
      return goog.string.unescapePureXmlEntities_(str);
    }
  }
  return str;
};
goog.string.unescapeEntitiesUsingDom_ = function(str) {
  var seen = {"\x26amp;":"\x26", "\x26lt;":"\x3c", "\x26gt;":"\x3e", "\x26quot;":'"'};
  var div = document.createElement("div");
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if (value) {
      return value;
    }
    if (entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if (!isNaN(n)) {
        value = String.fromCharCode(n);
      }
    }
    if (!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1);
    }
    return seen[s] = value;
  });
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return "\x26";
      case "lt":
        return "\x3c";
      case "gt":
        return "\x3e";
      case "quot":
        return'"';
      default:
        if (entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if (!isNaN(n)) {
            return String.fromCharCode(n);
          }
        }
        return s;
    }
  });
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " \x26#160;"), opt_xml);
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for (var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if (str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1);
    }
  }
  return str;
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (str.length > chars) {
    str = str.substring(0, chars - 3) + "...";
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (opt_trailingChars && str.length > chars) {
    if (opt_trailingChars > chars) {
      opt_trailingChars = chars;
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint);
  } else {
    if (str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos);
    }
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if (s.quote) {
    return s.quote();
  } else {
    var sb = ['"'];
    for (var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch));
    }
    sb.push('"');
    return sb.join("");
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for (var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i));
  }
  return sb.join("");
};
goog.string.escapeChar = function(c) {
  if (c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c];
  }
  if (c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c];
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if (cc > 31 && cc < 127) {
    rv = c;
  } else {
    if (cc < 256) {
      rv = "\\x";
      if (cc < 16 || cc > 256) {
        rv += "0";
      }
    } else {
      rv = "\\u";
      if (cc < 4096) {
        rv += "0";
      }
    }
    rv += cc.toString(16).toUpperCase();
  }
  return goog.string.jsEscapeCache_[c] = rv;
};
goog.string.toMap = function(s) {
  var rv = {};
  for (var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true;
  }
  return rv;
};
goog.string.contains = function(s, ss) {
  return s.indexOf(ss) != -1;
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0;
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if (index >= 0 && (index < s.length && stringLength > 0)) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength);
  }
  return resultStr;
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "");
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "");
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string);
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if (index == -1) {
    index = s.length;
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s;
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj);
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "");
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36);
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for (var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if (v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break;
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || (goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2]));
    } while (order == 0);
  }
  return order;
};
goog.string.compareElements_ = function(left, right) {
  if (left < right) {
    return-1;
  } else {
    if (left > right) {
      return 1;
    }
  }
  return 0;
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for (var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_;
  }
  return result;
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return "goog_" + goog.string.uniqueStringCounter_++;
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if (num == 0 && goog.string.isEmpty(str)) {
    return NaN;
  }
  return num;
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase();
  });
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase();
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase();
  });
};
goog.string.parseInt = function(value) {
  if (isFinite(value)) {
    value = String(value);
  }
  if (goog.isString(value)) {
    return/^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10);
  }
  return NaN;
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error);
  } else {
    this.stack = (new Error).stack || "";
  }
  if (opt_msg) {
    this.message = String(opt_msg);
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.string");
goog.asserts.ENABLE_ASSERTS = goog.DEBUG;
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern;
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if (givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs;
  } else {
    if (defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs;
    }
  }
  throw new goog.asserts.AssertionError("" + message, args || []);
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return condition;
};
goog.asserts.fail = function(opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS) {
    throw new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3));
  }
  return(value);
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.NATIVE_ARRAY_PROTOTYPES = goog.TRUSTED_SITE;
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1];
};
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.indexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.indexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i < arr.length;i++) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.lastIndexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if (fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex);
  }
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.lastIndexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i >= 0;i--) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.forEach ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;--i) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.filter ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      var val = arr2[i];
      if (f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val;
      }
    }
  }
  return res;
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.map ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr);
    }
  }
  return res;
};
goog.array.reduce = function(arr, f, val, opt_obj) {
  if (arr.reduce) {
    if (opt_obj) {
      return arr.reduce(goog.bind(f, opt_obj), val);
    } else {
      return arr.reduce(f, val);
    }
  }
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.reduceRight = function(arr, f, val, opt_obj) {
  if (arr.reduceRight) {
    if (opt_obj) {
      return arr.reduceRight(goog.bind(f, opt_obj), val);
    } else {
      return arr.reduceRight(f, val);
    }
  }
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.some ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true;
    }
  }
  return false;
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.every ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false;
    }
  }
  return true;
};
goog.array.count = function(arr, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr, function(element, index, arr) {
    if (f.call(opt_obj, element, index, arr)) {
      ++count;
    }
  }, opt_obj);
  return count;
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;i--) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0;
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0;
};
goog.array.clear = function(arr) {
  if (!goog.isArray(arr)) {
    for (var i = arr.length - 1;i >= 0;i--) {
      delete arr[i];
    }
  }
  arr.length = 0;
};
goog.array.insert = function(arr, obj) {
  if (!goog.array.contains(arr, obj)) {
    arr.push(obj);
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj);
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd);
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if (arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj);
  } else {
    goog.array.insertAt(arr, obj, i);
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if (rv = i >= 0) {
    goog.array.removeAt(arr, i);
  }
  return rv;
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1;
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if (i >= 0) {
    goog.array.removeAt(arr, i);
    return true;
  }
  return false;
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.toArray = function(object) {
  var length = object.length;
  if (length > 0) {
    var rv = new Array(length);
    for (var i = 0;i < length;i++) {
      rv[i] = object[i];
    }
    return rv;
  }
  return[];
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for (var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if (goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && Object.prototype.hasOwnProperty.call(arr2, "callee")) {
      arr1.push.apply(arr1, arr2);
    } else {
      if (isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for (var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j];
        }
      } else {
        arr1.push(arr2);
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1));
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if (arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start);
  } else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end);
  }
};
goog.array.removeDuplicates = function(arr, opt_rv) {
  var returnArray = opt_rv || arr;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while (cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
    if (!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current;
    }
  }
  returnArray.length = cursorInsert;
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target);
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj);
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while (left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if (isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr);
    } else {
      compareResult = compareFn(opt_target, arr[middle]);
    }
    if (compareResult > 0) {
      left = middle + 1;
    } else {
      right = middle;
      found = !compareResult;
    }
  }
  return found ? left : ~left;
};
goog.array.sort = function(arr, opt_compareFn) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.sort.call(arr, opt_compareFn || goog.array.defaultCompare);
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for (var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]};
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index;
  }
  goog.array.sort(arr, stableCompareFn);
  for (var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value;
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key]);
  });
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for (var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if (compareResult > 0 || compareResult == 0 && opt_strict) {
      return false;
    }
  }
  return true;
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if (!goog.isArrayLike(arr1) || (!goog.isArrayLike(arr2) || arr1.length != arr2.length)) {
    return false;
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for (var i = 0;i < l;i++) {
    if (!equalsFn(arr1[i], arr2[i])) {
      return false;
    }
  }
  return true;
};
goog.array.compare = function(arr1, arr2, opt_equalsFn) {
  return goog.array.equals(arr1, arr2, opt_equalsFn);
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for (var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if (result != 0) {
      return result;
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length);
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0;
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b;
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if (index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true;
  }
  return false;
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false;
};
goog.array.bucket = function(array, sorter) {
  var buckets = {};
  for (var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter(value, i, array);
    if (goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value);
    }
  }
  return buckets;
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call(opt_obj, element, index, arr)] = element;
  });
  return ret;
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [];
  var start = 0;
  var end = startOrEnd;
  var step = opt_step || 1;
  if (opt_end !== undefined) {
    start = startOrEnd;
    end = opt_end;
  }
  if (step * (end - start) < 0) {
    return[];
  }
  if (step > 0) {
    for (var i = start;i < end;i += step) {
      array.push(i);
    }
  } else {
    for (var i = start;i > end;i += step) {
      array.push(i);
    }
  }
  return array;
};
goog.array.repeat = function(value, n) {
  var array = [];
  for (var i = 0;i < n;i++) {
    array[i] = value;
  }
  return array;
};
goog.array.flatten = function(var_args) {
  var result = [];
  for (var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if (goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element));
    } else {
      result.push(element);
    }
  }
  return result;
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if (array.length) {
    n %= array.length;
    if (n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n));
    } else {
      if (n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n));
      }
    }
  }
  return array;
};
goog.array.zip = function(var_args) {
  if (!arguments.length) {
    return[];
  }
  var result = [];
  for (var i = 0;true;i++) {
    var value = [];
    for (var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if (i >= arr.length) {
        return result;
      }
      value.push(arr[i]);
    }
    result.push(value);
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for (var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp;
  }
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for (var key in obj) {
    f.call(opt_obj, obj[key], key, obj);
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key];
    }
  }
  return res;
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj);
  }
  return res;
};
goog.object.some = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      return true;
    }
  }
  return false;
};
goog.object.every = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (!f.call(opt_obj, obj[key], key, obj)) {
      return false;
    }
  }
  return true;
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for (var key in obj) {
    rv++;
  }
  return rv;
};
goog.object.getAnyKey = function(obj) {
  for (var key in obj) {
    return key;
  }
};
goog.object.getAnyValue = function(obj) {
  for (var key in obj) {
    return obj[key];
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val);
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = obj[key];
  }
  return res;
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = key;
  }
  return res;
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for (var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if (!goog.isDef(obj)) {
      break;
    }
  }
  return obj;
};
goog.object.containsKey = function(obj, key) {
  return key in obj;
};
goog.object.containsValue = function(obj, val) {
  for (var key in obj) {
    if (obj[key] == val) {
      return true;
    }
  }
  return false;
};
goog.object.findKey = function(obj, f, opt_this) {
  for (var key in obj) {
    if (f.call(opt_this, obj[key], key, obj)) {
      return key;
    }
  }
  return undefined;
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key];
};
goog.object.isEmpty = function(obj) {
  for (var key in obj) {
    return false;
  }
  return true;
};
goog.object.clear = function(obj) {
  for (var i in obj) {
    delete obj[i];
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if (rv = key in obj) {
    delete obj[key];
  }
  return rv;
};
goog.object.add = function(obj, key, val) {
  if (key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val);
};
goog.object.get = function(obj, key, opt_val) {
  if (key in obj) {
    return obj[key];
  }
  return opt_val;
};
goog.object.set = function(obj, key, value) {
  obj[key] = value;
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value;
};
goog.object.clone = function(obj) {
  var res = {};
  for (var key in obj) {
    res[key] = obj[key];
  }
  return res;
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for (var key in obj) {
    transposed[obj[key]] = key;
  }
  return transposed;
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for (var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for (key in source) {
      target[key] = source[key];
    }
    for (var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0]);
  }
  if (argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for (var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1];
  }
  return rv;
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0]);
  }
  var rv = {};
  for (var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true;
  }
  return rv;
};
goog.object.createImmutableView = function(obj) {
  var result = obj;
  if (Object.isFrozen && !Object.isFrozen(obj)) {
    result = Object.create(obj);
    Object.freeze(result);
  }
  return result;
};
goog.object.isImmutableView = function(obj) {
  return!!Object.isFrozen && Object.isFrozen(obj);
};
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if (opt_a1 != null) {
    this.append.apply(this, arguments);
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s;
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += a1;
  if (opt_a2 != null) {
    for (var i = 1;i < arguments.length;i++) {
      this.buffer_ += arguments[i];
    }
  }
  return this;
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = "";
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length;
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_;
};
goog.provide("cljs.core");
goog.require("goog.array");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.object");
goog.require("goog.string.StringBuffer");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
goog.require("goog.string");
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2138";
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_print_fn_STAR_ = function _STAR_print_fn_STAR_(_) {
  throw new Error("No *print-fn* fn set for evaluation environment");
};
cljs.core.set_print_fn_BANG_ = function set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f;
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
cljs.core.pr_opts = function pr_opts() {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", 4338025857), cljs.core._STAR_flush_on_newline_STAR_, new cljs.core.Keyword(null, "readably", "readably", 4441712502), cljs.core._STAR_print_readably_STAR_, new cljs.core.Keyword(null, "meta", "meta", 1017252215), cljs.core._STAR_print_meta_STAR_, new cljs.core.Keyword(null, "dup", "dup", 1014004081), cljs.core._STAR_print_dup_STAR_, new cljs.core.Keyword(null, "print-length", "print-length", 
  3960797560), cljs.core._STAR_print_length_STAR_], null);
};
cljs.core.enable_console_print_BANG_ = function enable_console_print_BANG_() {
  cljs.core._STAR_print_newline_STAR_ = false;
  return cljs.core._STAR_print_fn_STAR_ = function() {
    var G__22963__delegate = function(args) {
      return console.log.apply(console, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args) : cljs.core.into_array.call(null, args));
    };
    var G__22963 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__22963__delegate.call(this, args);
    };
    G__22963.cljs$lang$maxFixedArity = 0;
    G__22963.cljs$lang$applyTo = function(arglist__22964) {
      var args = cljs.core.seq(arglist__22964);
      return G__22963__delegate(args);
    };
    G__22963.cljs$core$IFn$_invoke$arity$variadic = G__22963__delegate;
    return G__22963;
  }();
};
cljs.core.truth_ = function truth_(x) {
  return x != null && x !== false;
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function identical_QMARK_(x, y) {
  return x === y;
};
cljs.core.nil_QMARK_ = function nil_QMARK_(x) {
  return x == null;
};
cljs.core.array_QMARK_ = function array_QMARK_(x) {
  return x instanceof Array;
};
cljs.core.number_QMARK_ = function number_QMARK_(n) {
  return typeof n === "number";
};
cljs.core.not = function not(x) {
  if (cljs.core.truth_(x)) {
    return false;
  } else {
    return true;
  }
};
cljs.core.object_QMARK_ = function object_QMARK_(x) {
  if (!(x == null)) {
    return x.constructor === Object;
  } else {
    return false;
  }
};
cljs.core.string_QMARK_ = function string_QMARK_(x) {
  return goog.isString(x);
};
cljs.core.native_satisfies_QMARK_ = function native_satisfies_QMARK_(p, x) {
  var x__$1 = x == null ? null : x;
  if (p[goog.typeOf(x__$1)]) {
    return true;
  } else {
    if (p["_"]) {
      return true;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return false;
      } else {
        return null;
      }
    }
  }
};
cljs.core.is_proto_ = function is_proto_(x) {
  return x.constructor.prototype === x;
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = function type(x) {
  if (x == null) {
    return null;
  } else {
    return x.constructor;
  }
};
cljs.core.missing_protocol = function missing_protocol(proto, obj) {
  var ty = cljs.core.type(obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__3396__auto__ = ty;
    if (cljs.core.truth_(and__3396__auto__)) {
      return ty.cljs$lang$type;
    } else {
      return and__3396__auto__;
    }
  }()) ? ty.cljs$lang$ctorStr : goog.typeOf(obj);
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""));
};
cljs.core.type__GT_str = function type__GT_str(ty) {
  var temp__4090__auto__ = ty.cljs$lang$ctorStr;
  if (cljs.core.truth_(temp__4090__auto__)) {
    var s = temp__4090__auto__;
    return s;
  } else {
    return[cljs.core.str(ty)].join("");
  }
};
cljs.core.make_array = function() {
  var make_array = null;
  var make_array__1 = function(size) {
    return new Array(size);
  };
  var make_array__2 = function(type, size) {
    return make_array.cljs$core$IFn$_invoke$arity$1(size);
  };
  make_array = function(type, size) {
    switch(arguments.length) {
      case 1:
        return make_array__1.call(this, type);
      case 2:
        return make_array__2.call(this, type, size);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
  make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
  return make_array;
}();
cljs.core.aclone = function aclone(arr) {
  var len = arr.length;
  var new_arr = new Array(len);
  var n__4250__auto___22965 = len;
  var i_22966 = 0;
  while (true) {
    if (i_22966 < n__4250__auto___22965) {
      new_arr[i_22966] = arr[i_22966];
      var G__22967 = i_22966 + 1;
      i_22966 = G__22967;
      continue;
    } else {
    }
    break;
  }
  return new_arr;
};
cljs.core.array = function array(var_args) {
  return Array.prototype.slice.call(arguments);
};
cljs.core.aget = function() {
  var aget = null;
  var aget__2 = function(array, i) {
    return array[i];
  };
  var aget__3 = function() {
    var G__22968__delegate = function(array, i, idxs) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(aget, aget.cljs$core$IFn$_invoke$arity$2(array, i), idxs) : cljs.core.apply.call(null, aget, aget.cljs$core$IFn$_invoke$arity$2(array, i), idxs);
    };
    var G__22968 = function(array, i, var_args) {
      var idxs = null;
      if (arguments.length > 2) {
        idxs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__22968__delegate.call(this, array, i, idxs);
    };
    G__22968.cljs$lang$maxFixedArity = 2;
    G__22968.cljs$lang$applyTo = function(arglist__22969) {
      var array = cljs.core.first(arglist__22969);
      arglist__22969 = cljs.core.next(arglist__22969);
      var i = cljs.core.first(arglist__22969);
      var idxs = cljs.core.rest(arglist__22969);
      return G__22968__delegate(array, i, idxs);
    };
    G__22968.cljs$core$IFn$_invoke$arity$variadic = G__22968__delegate;
    return G__22968;
  }();
  aget = function(array, i, var_args) {
    var idxs = var_args;
    switch(arguments.length) {
      case 2:
        return aget__2.call(this, array, i);
      default:
        return aget__3.cljs$core$IFn$_invoke$arity$variadic(array, i, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aget.cljs$lang$maxFixedArity = 2;
  aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
  aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
  aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
  return aget;
}();
cljs.core.aset = function() {
  var aset = null;
  var aset__3 = function(array, i, val) {
    return array[i] = val;
  };
  var aset__4 = function() {
    var G__22970__delegate = function(array, idx, idx2, idxv) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(aset, array[idx], idx2, idxv) : cljs.core.apply.call(null, aset, array[idx], idx2, idxv);
    };
    var G__22970 = function(array, idx, idx2, var_args) {
      var idxv = null;
      if (arguments.length > 3) {
        idxv = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__22970__delegate.call(this, array, idx, idx2, idxv);
    };
    G__22970.cljs$lang$maxFixedArity = 3;
    G__22970.cljs$lang$applyTo = function(arglist__22971) {
      var array = cljs.core.first(arglist__22971);
      arglist__22971 = cljs.core.next(arglist__22971);
      var idx = cljs.core.first(arglist__22971);
      arglist__22971 = cljs.core.next(arglist__22971);
      var idx2 = cljs.core.first(arglist__22971);
      var idxv = cljs.core.rest(arglist__22971);
      return G__22970__delegate(array, idx, idx2, idxv);
    };
    G__22970.cljs$core$IFn$_invoke$arity$variadic = G__22970__delegate;
    return G__22970;
  }();
  aset = function(array, idx, idx2, var_args) {
    var idxv = var_args;
    switch(arguments.length) {
      case 3:
        return aset__3.call(this, array, idx, idx2);
      default:
        return aset__4.cljs$core$IFn$_invoke$arity$variadic(array, idx, idx2, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aset.cljs$lang$maxFixedArity = 3;
  aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
  aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
  aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
  return aset;
}();
cljs.core.alength = function alength(array) {
  return array.length;
};
cljs.core.into_array = function() {
  var into_array = null;
  var into_array__1 = function(aseq) {
    return into_array.cljs$core$IFn$_invoke$arity$2(null, aseq);
  };
  var into_array__2 = function(type, aseq) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(a, x) {
      a.push(x);
      return a;
    }, [], aseq) : cljs.core.reduce.call(null, function(a, x) {
      a.push(x);
      return a;
    }, [], aseq);
  };
  into_array = function(type, aseq) {
    switch(arguments.length) {
      case 1:
        return into_array__1.call(this, type);
      case 2:
        return into_array__2.call(this, type, aseq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
  into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
  return into_array;
}();
cljs.core.Fn = function() {
  var obj22973 = {};
  return obj22973;
}();
cljs.core.IFn = function() {
  var obj22975 = {};
  return obj22975;
}();
cljs.core._invoke = function() {
  var _invoke = null;
  var _invoke__1 = function(this$) {
    if (function() {
      var and__3396__auto__ = this$;
      if (and__3396__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$1;
      } else {
        return and__3396__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$1(this$);
    } else {
      var x__4029__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3408__auto__ = cljs.core._invoke[goog.typeOf(x__4029__auto__)];
        if (or__3408__auto__) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = cljs.core._invoke["_"];
          if (or__3408__auto____$1) {
            return or__3408__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var _invoke__2 = function(this$, a) {
    if (function() {
      var and__3396__auto__ = this$;
      if (and__3396__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$2;
      } else {
        return and__3396__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$2(this$, a);
    } else {
      var x__4029__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3408__auto__ = cljs.core._invoke[goog.typeOf(x__4029__auto__)];
        if (or__3408__auto__) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = cljs.core._invoke["_"];
          if (or__3408__auto____$1) {
            return or__3408__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a);
    }
  };
  var _invoke__3 = function(this$, a, b) {
    if (function() {
      var and__3396__auto__ = this$;
      if (and__3396__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$3;
      } else {
        return and__3396__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b);
    } else {
      var x__4029__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3408__auto__ = cljs.core._invoke[goog.typeOf(x__4029__auto__)];
        if (or__3408__auto__) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = cljs.core._invoke["_"];
          if (or__3408__auto____$1) {
            return or__3408__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b);
    }
  };
  var _invoke__4 = function(this$, a, b, c) {
    if (function() {
      var and__3396__auto__ = this$;
      if (and__3396__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$4;
      } else {
        return and__3396__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c);
    } else {
      var x__4029__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3408__auto__ = cljs.core._invoke[goog.typeOf(x__4029__auto__)];
        if (or__3408__auto__) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = cljs.core._invoke["_"];
          if (or__3408__auto____$1) {
            return or__3408__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c);
    }
  };
  var _invoke__5 = function(this$, a, b, c, d) {
    if (function() {
      var and__3396__auto__ = this$;
      if (and__3396__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$5;
      } else {
        return and__3396__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d);
    } else {
      var x__4029__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3408__auto__ = cljs.core._invoke[goog.typeOf(x__4029__auto__)];
        if (or__3408__auto__) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = cljs.core._invoke["_"];
          if (or__3408__auto____$1) {
            return or__3408__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d);
    }
  };
  var _invoke__6 = function(this$, a, b, c, d, e) {
    if (function() {
      var and__3396__auto__ = this$;
      if (and__3396__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$6;
      } else {
        return and__3396__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e);
    } else {
      var x__4029__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3408__auto__ = cljs.core._invoke[goog.typeOf(x__4029__auto__)];
        if (or__3408__auto__) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = cljs.core._invoke["_"];
          if (or__3408__auto____$1) {
            return or__3408__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e);
    }
  };
  var _invoke__7 = function(this$, a, b, c, d, e, f) {
    if (function() {
      var and__3396__auto__ = this$;
      if (and__3396__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$7;
      } else {
        return and__3396__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f);
    } else {
      var x__4029__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3408__auto__ = cljs.core._invoke[goog.typeOf(x__4029__auto__)];
        if (or__3408__auto__) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = cljs.core._invoke["_"];
          if (or__3408__auto____$1) {
            return or__3408__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f);
    }
  };
  var _invoke__8 = function(this$, a, b, c, d, e, f, g) {
    if (function() {
      var and__3396__auto__ = this$;
      if (and__3396__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$8;
      } else {
        return and__3396__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g);
    } else {
      var x__4029__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3408__auto__ = cljs.core._invoke[goog.typeOf(x__4029__auto__)];
        if (or__3408__auto__) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = cljs.core._invoke["_"];
          if (or__3408__auto____$1) {
            return or__3408__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g);
    }
  };
  var _invoke__9 = function(this$, a, b, c, d, e, f, g, h) {
    if (function() {
      var and__3396__auto__ = this$;
      if (and__3396__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$9;
      } else {
        return and__3396__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h);
    } else {
      var x__4029__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3408__auto__ = cljs.core._invoke[goog.typeOf(x__4029__auto__)];
        if (or__3408__auto__) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = cljs.core._invoke["_"];
          if (or__3408__auto____$1) {
            return or__3408__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h);
    }
  };
  var _invoke__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    if (function() {
      var and__3396__auto__ = this$;
      if (and__3396__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$10;
      } else {
        return and__3396__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i);
    } else {
      var x__4029__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3408__auto__ = cljs.core._invoke[goog.typeOf(x__4029__auto__)];
        if (or__3408__auto__) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = cljs.core._invoke["_"];
          if (or__3408__auto____$1) {
            return or__3408__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i);
    }
  };
  var _invoke__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    if (function() {
      var and__3396__auto__ = this$;
      if (and__3396__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$11;
      } else {
        return and__3396__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j);
    } else {
      var x__4029__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3408__auto__ = cljs.core._invoke[goog.typeOf(x__4029__auto__)];
        if (or__3408__auto__) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = cljs.core._invoke["_"];
          if (or__3408__auto____$1) {
            return or__3408__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j);
    }
  };
  var _invoke__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    if (function() {
      var and__3396__auto__ = this$;
      if (and__3396__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$12;
      } else {
        return and__3396__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k);
    } else {
      var x__4029__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3408__auto__ = cljs.core._invoke[goog.typeOf(x__4029__auto__)];
        if (or__3408__auto__) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = cljs.core._invoke["_"];
          if (or__3408__auto____$1) {
            return or__3408__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
    }
  };
  var _invoke__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    if (function() {
      var and__3396__auto__ = this$;
      if (and__3396__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$13;
      } else {
        return and__3396__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l);
    } else {
      var x__4029__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3408__auto__ = cljs.core._invoke[goog.typeOf(x__4029__auto__)];
        if (or__3408__auto__) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = cljs.core._invoke["_"];
          if (or__3408__auto____$1) {
            return or__3408__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
    }
  };
  var _invoke__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    if (function() {
      var and__3396__auto__ = this$;
      if (and__3396__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$14;
      } else {
        return and__3396__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    } else {
      var x__4029__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3408__auto__ = cljs.core._invoke[goog.typeOf(x__4029__auto__)];
        if (or__3408__auto__) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = cljs.core._invoke["_"];
          if (or__3408__auto____$1) {
            return or__3408__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    }
  };
  var _invoke__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    if (function() {
      var and__3396__auto__ = this$;
      if (and__3396__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$15;
      } else {
        return and__3396__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    } else {
      var x__4029__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3408__auto__ = cljs.core._invoke[goog.typeOf(x__4029__auto__)];
        if (or__3408__auto__) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = cljs.core._invoke["_"];
          if (or__3408__auto____$1) {
            return or__3408__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    }
  };
  var _invoke__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    if (function() {
      var and__3396__auto__ = this$;
      if (and__3396__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$16;
      } else {
        return and__3396__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    } else {
      var x__4029__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3408__auto__ = cljs.core._invoke[goog.typeOf(x__4029__auto__)];
        if (or__3408__auto__) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = cljs.core._invoke["_"];
          if (or__3408__auto____$1) {
            return or__3408__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    }
  };
  var _invoke__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    if (function() {
      var and__3396__auto__ = this$;
      if (and__3396__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$17;
      } else {
        return and__3396__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    } else {
      var x__4029__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3408__auto__ = cljs.core._invoke[goog.typeOf(x__4029__auto__)];
        if (or__3408__auto__) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = cljs.core._invoke["_"];
          if (or__3408__auto____$1) {
            return or__3408__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    }
  };
  var _invoke__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    if (function() {
      var and__3396__auto__ = this$;
      if (and__3396__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$18;
      } else {
        return and__3396__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    } else {
      var x__4029__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3408__auto__ = cljs.core._invoke[goog.typeOf(x__4029__auto__)];
        if (or__3408__auto__) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = cljs.core._invoke["_"];
          if (or__3408__auto____$1) {
            return or__3408__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    }
  };
  var _invoke__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s) {
    if (function() {
      var and__3396__auto__ = this$;
      if (and__3396__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$19;
      } else {
        return and__3396__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
    } else {
      var x__4029__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3408__auto__ = cljs.core._invoke[goog.typeOf(x__4029__auto__)];
        if (or__3408__auto__) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = cljs.core._invoke["_"];
          if (or__3408__auto____$1) {
            return or__3408__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
    }
  };
  var _invoke__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t) {
    if (function() {
      var and__3396__auto__ = this$;
      if (and__3396__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$20;
      } else {
        return and__3396__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
    } else {
      var x__4029__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3408__auto__ = cljs.core._invoke[goog.typeOf(x__4029__auto__)];
        if (or__3408__auto__) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = cljs.core._invoke["_"];
          if (or__3408__auto____$1) {
            return or__3408__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
    }
  };
  var _invoke__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    if (function() {
      var and__3396__auto__ = this$;
      if (and__3396__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$21;
      } else {
        return and__3396__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest);
    } else {
      var x__4029__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3408__auto__ = cljs.core._invoke[goog.typeOf(x__4029__auto__)];
        if (or__3408__auto__) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = cljs.core._invoke["_"];
          if (or__3408__auto____$1) {
            return or__3408__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest);
    }
  };
  _invoke = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return _invoke__1.call(this, this$);
      case 2:
        return _invoke__2.call(this, this$, a);
      case 3:
        return _invoke__3.call(this, this$, a, b);
      case 4:
        return _invoke__4.call(this, this$, a, b, c);
      case 5:
        return _invoke__5.call(this, this$, a, b, c, d);
      case 6:
        return _invoke__6.call(this, this$, a, b, c, d, e);
      case 7:
        return _invoke__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return _invoke__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return _invoke__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return _invoke__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return _invoke__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return _invoke__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return _invoke__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return _invoke__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return _invoke__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return _invoke__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return _invoke__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return _invoke__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return _invoke__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
      case 20:
        return _invoke__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
      case 21:
        return _invoke__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
  _invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
  _invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
  _invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
  _invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
  _invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
  _invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
  _invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
  _invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
  _invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
  _invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
  _invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
  _invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
  _invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
  _invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
  _invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
  _invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
  _invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
  _invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
  _invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
  _invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
  return _invoke;
}();
cljs.core.ICloneable = function() {
  var obj22977 = {};
  return obj22977;
}();
cljs.core._clone = function _clone(value) {
  if (function() {
    var and__3396__auto__ = value;
    if (and__3396__auto__) {
      return value.cljs$core$ICloneable$_clone$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return value.cljs$core$ICloneable$_clone$arity$1(value);
  } else {
    var x__4029__auto__ = value == null ? null : value;
    return function() {
      var or__3408__auto__ = cljs.core._clone[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._clone["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ICloneable.-clone", value);
        }
      }
    }().call(null, value);
  }
};
cljs.core.ICounted = function() {
  var obj22979 = {};
  return obj22979;
}();
cljs.core._count = function _count(coll) {
  if (function() {
    var and__3396__auto__ = coll;
    if (and__3396__auto__) {
      return coll.cljs$core$ICounted$_count$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll);
  } else {
    var x__4029__auto__ = coll == null ? null : coll;
    return function() {
      var or__3408__auto__ = cljs.core._count[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._count["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ICounted.-count", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IEmptyableCollection = function() {
  var obj22981 = {};
  return obj22981;
}();
cljs.core._empty = function _empty(coll) {
  if (function() {
    var and__3396__auto__ = coll;
    if (and__3396__auto__) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
  } else {
    var x__4029__auto__ = coll == null ? null : coll;
    return function() {
      var or__3408__auto__ = cljs.core._empty[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._empty["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ICollection = function() {
  var obj22983 = {};
  return obj22983;
}();
cljs.core._conj = function _conj(coll, o) {
  if (function() {
    var and__3396__auto__ = coll;
    if (and__3396__auto__) {
      return coll.cljs$core$ICollection$_conj$arity$2;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o);
  } else {
    var x__4029__auto__ = coll == null ? null : coll;
    return function() {
      var or__3408__auto__ = cljs.core._conj[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._conj["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o);
  }
};
cljs.core.IIndexed = function() {
  var obj22985 = {};
  return obj22985;
}();
cljs.core._nth = function() {
  var _nth = null;
  var _nth__2 = function(coll, n) {
    if (function() {
      var and__3396__auto__ = coll;
      if (and__3396__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$2;
      } else {
        return and__3396__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$2(coll, n);
    } else {
      var x__4029__auto__ = coll == null ? null : coll;
      return function() {
        var or__3408__auto__ = cljs.core._nth[goog.typeOf(x__4029__auto__)];
        if (or__3408__auto__) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = cljs.core._nth["_"];
          if (or__3408__auto____$1) {
            return or__3408__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n);
    }
  };
  var _nth__3 = function(coll, n, not_found) {
    if (function() {
      var and__3396__auto__ = coll;
      if (and__3396__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$3;
      } else {
        return and__3396__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found);
    } else {
      var x__4029__auto__ = coll == null ? null : coll;
      return function() {
        var or__3408__auto__ = cljs.core._nth[goog.typeOf(x__4029__auto__)];
        if (or__3408__auto__) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = cljs.core._nth["_"];
          if (or__3408__auto____$1) {
            return or__3408__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n, not_found);
    }
  };
  _nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return _nth__2.call(this, coll, n);
      case 3:
        return _nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
  _nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
  return _nth;
}();
cljs.core.ASeq = function() {
  var obj22987 = {};
  return obj22987;
}();
cljs.core.ISeq = function() {
  var obj22989 = {};
  return obj22989;
}();
cljs.core._first = function _first(coll) {
  if (function() {
    var and__3396__auto__ = coll;
    if (and__3396__auto__) {
      return coll.cljs$core$ISeq$_first$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll);
  } else {
    var x__4029__auto__ = coll == null ? null : coll;
    return function() {
      var or__3408__auto__ = cljs.core._first[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._first["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISeq.-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._rest = function _rest(coll) {
  if (function() {
    var and__3396__auto__ = coll;
    if (and__3396__auto__) {
      return coll.cljs$core$ISeq$_rest$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll);
  } else {
    var x__4029__auto__ = coll == null ? null : coll;
    return function() {
      var or__3408__auto__ = cljs.core._rest[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._rest["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISeq.-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INext = function() {
  var obj22991 = {};
  return obj22991;
}();
cljs.core._next = function _next(coll) {
  if (function() {
    var and__3396__auto__ = coll;
    if (and__3396__auto__) {
      return coll.cljs$core$INext$_next$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll);
  } else {
    var x__4029__auto__ = coll == null ? null : coll;
    return function() {
      var or__3408__auto__ = cljs.core._next[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._next["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("INext.-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ILookup = function() {
  var obj22993 = {};
  return obj22993;
}();
cljs.core._lookup = function() {
  var _lookup = null;
  var _lookup__2 = function(o, k) {
    if (function() {
      var and__3396__auto__ = o;
      if (and__3396__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$2;
      } else {
        return and__3396__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(o, k);
    } else {
      var x__4029__auto__ = o == null ? null : o;
      return function() {
        var or__3408__auto__ = cljs.core._lookup[goog.typeOf(x__4029__auto__)];
        if (or__3408__auto__) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = cljs.core._lookup["_"];
          if (or__3408__auto____$1) {
            return or__3408__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ILookup.-lookup", o);
          }
        }
      }().call(null, o, k);
    }
  };
  var _lookup__3 = function(o, k, not_found) {
    if (function() {
      var and__3396__auto__ = o;
      if (and__3396__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$3;
      } else {
        return and__3396__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found);
    } else {
      var x__4029__auto__ = o == null ? null : o;
      return function() {
        var or__3408__auto__ = cljs.core._lookup[goog.typeOf(x__4029__auto__)];
        if (or__3408__auto__) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = cljs.core._lookup["_"];
          if (or__3408__auto____$1) {
            return or__3408__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ILookup.-lookup", o);
          }
        }
      }().call(null, o, k, not_found);
    }
  };
  _lookup = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return _lookup__2.call(this, o, k);
      case 3:
        return _lookup__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
  _lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
  return _lookup;
}();
cljs.core.IAssociative = function() {
  var obj22995 = {};
  return obj22995;
}();
cljs.core._contains_key_QMARK_ = function _contains_key_QMARK_(coll, k) {
  if (function() {
    var and__3396__auto__ = coll;
    if (and__3396__auto__) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k);
  } else {
    var x__4029__auto__ = coll == null ? null : coll;
    return function() {
      var or__3408__auto__ = cljs.core._contains_key_QMARK_[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._contains_key_QMARK_["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core._assoc = function _assoc(coll, k, v) {
  if (function() {
    var and__3396__auto__ = coll;
    if (and__3396__auto__) {
      return coll.cljs$core$IAssociative$_assoc$arity$3;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v);
  } else {
    var x__4029__auto__ = coll == null ? null : coll;
    return function() {
      var or__3408__auto__ = cljs.core._assoc[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._assoc["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v);
  }
};
cljs.core.IMap = function() {
  var obj22997 = {};
  return obj22997;
}();
cljs.core._dissoc = function _dissoc(coll, k) {
  if (function() {
    var and__3396__auto__ = coll;
    if (and__3396__auto__) {
      return coll.cljs$core$IMap$_dissoc$arity$2;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k);
  } else {
    var x__4029__auto__ = coll == null ? null : coll;
    return function() {
      var or__3408__auto__ = cljs.core._dissoc[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._dissoc["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core.IMapEntry = function() {
  var obj22999 = {};
  return obj22999;
}();
cljs.core._key = function _key(coll) {
  if (function() {
    var and__3396__auto__ = coll;
    if (and__3396__auto__) {
      return coll.cljs$core$IMapEntry$_key$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll);
  } else {
    var x__4029__auto__ = coll == null ? null : coll;
    return function() {
      var or__3408__auto__ = cljs.core._key[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._key["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMapEntry.-key", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._val = function _val(coll) {
  if (function() {
    var and__3396__auto__ = coll;
    if (and__3396__auto__) {
      return coll.cljs$core$IMapEntry$_val$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll);
  } else {
    var x__4029__auto__ = coll == null ? null : coll;
    return function() {
      var or__3408__auto__ = cljs.core._val[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._val["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMapEntry.-val", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISet = function() {
  var obj23001 = {};
  return obj23001;
}();
cljs.core._disjoin = function _disjoin(coll, v) {
  if (function() {
    var and__3396__auto__ = coll;
    if (and__3396__auto__) {
      return coll.cljs$core$ISet$_disjoin$arity$2;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v);
  } else {
    var x__4029__auto__ = coll == null ? null : coll;
    return function() {
      var or__3408__auto__ = cljs.core._disjoin[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._disjoin["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v);
  }
};
cljs.core.IStack = function() {
  var obj23003 = {};
  return obj23003;
}();
cljs.core._peek = function _peek(coll) {
  if (function() {
    var and__3396__auto__ = coll;
    if (and__3396__auto__) {
      return coll.cljs$core$IStack$_peek$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll);
  } else {
    var x__4029__auto__ = coll == null ? null : coll;
    return function() {
      var or__3408__auto__ = cljs.core._peek[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._peek["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IStack.-peek", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._pop = function _pop(coll) {
  if (function() {
    var and__3396__auto__ = coll;
    if (and__3396__auto__) {
      return coll.cljs$core$IStack$_pop$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll);
  } else {
    var x__4029__auto__ = coll == null ? null : coll;
    return function() {
      var or__3408__auto__ = cljs.core._pop[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._pop["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IStack.-pop", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IVector = function() {
  var obj23005 = {};
  return obj23005;
}();
cljs.core._assoc_n = function _assoc_n(coll, n, val) {
  if (function() {
    var and__3396__auto__ = coll;
    if (and__3396__auto__) {
      return coll.cljs$core$IVector$_assoc_n$arity$3;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val);
  } else {
    var x__4029__auto__ = coll == null ? null : coll;
    return function() {
      var or__3408__auto__ = cljs.core._assoc_n[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._assoc_n["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val);
  }
};
cljs.core.IDeref = function() {
  var obj23007 = {};
  return obj23007;
}();
cljs.core._deref = function _deref(o) {
  if (function() {
    var and__3396__auto__ = o;
    if (and__3396__auto__) {
      return o.cljs$core$IDeref$_deref$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o);
  } else {
    var x__4029__auto__ = o == null ? null : o;
    return function() {
      var or__3408__auto__ = cljs.core._deref[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._deref["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IDeref.-deref", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IDerefWithTimeout = function() {
  var obj23009 = {};
  return obj23009;
}();
cljs.core._deref_with_timeout = function _deref_with_timeout(o, msec, timeout_val) {
  if (function() {
    var and__3396__auto__ = o;
    if (and__3396__auto__) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val);
  } else {
    var x__4029__auto__ = o == null ? null : o;
    return function() {
      var or__3408__auto__ = cljs.core._deref_with_timeout[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._deref_with_timeout["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val);
  }
};
cljs.core.IMeta = function() {
  var obj23011 = {};
  return obj23011;
}();
cljs.core._meta = function _meta(o) {
  if (function() {
    var and__3396__auto__ = o;
    if (and__3396__auto__) {
      return o.cljs$core$IMeta$_meta$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o);
  } else {
    var x__4029__auto__ = o == null ? null : o;
    return function() {
      var or__3408__auto__ = cljs.core._meta[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._meta["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMeta.-meta", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IWithMeta = function() {
  var obj23013 = {};
  return obj23013;
}();
cljs.core._with_meta = function _with_meta(o, meta) {
  if (function() {
    var and__3396__auto__ = o;
    if (and__3396__auto__) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta);
  } else {
    var x__4029__auto__ = o == null ? null : o;
    return function() {
      var or__3408__auto__ = cljs.core._with_meta[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._with_meta["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta);
  }
};
cljs.core.IReduce = function() {
  var obj23015 = {};
  return obj23015;
}();
cljs.core._reduce = function() {
  var _reduce = null;
  var _reduce__2 = function(coll, f) {
    if (function() {
      var and__3396__auto__ = coll;
      if (and__3396__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$2;
      } else {
        return and__3396__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(coll, f);
    } else {
      var x__4029__auto__ = coll == null ? null : coll;
      return function() {
        var or__3408__auto__ = cljs.core._reduce[goog.typeOf(x__4029__auto__)];
        if (or__3408__auto__) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = cljs.core._reduce["_"];
          if (or__3408__auto____$1) {
            return or__3408__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f);
    }
  };
  var _reduce__3 = function(coll, f, start) {
    if (function() {
      var and__3396__auto__ = coll;
      if (and__3396__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$3;
      } else {
        return and__3396__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start);
    } else {
      var x__4029__auto__ = coll == null ? null : coll;
      return function() {
        var or__3408__auto__ = cljs.core._reduce[goog.typeOf(x__4029__auto__)];
        if (or__3408__auto__) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = cljs.core._reduce["_"];
          if (or__3408__auto____$1) {
            return or__3408__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f, start);
    }
  };
  _reduce = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return _reduce__2.call(this, coll, f);
      case 3:
        return _reduce__3.call(this, coll, f, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
  _reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
  return _reduce;
}();
cljs.core.IKVReduce = function() {
  var obj23017 = {};
  return obj23017;
}();
cljs.core._kv_reduce = function _kv_reduce(coll, f, init) {
  if (function() {
    var and__3396__auto__ = coll;
    if (and__3396__auto__) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init);
  } else {
    var x__4029__auto__ = coll == null ? null : coll;
    return function() {
      var or__3408__auto__ = cljs.core._kv_reduce[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._kv_reduce["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init);
  }
};
cljs.core.IEquiv = function() {
  var obj23019 = {};
  return obj23019;
}();
cljs.core._equiv = function _equiv(o, other) {
  if (function() {
    var and__3396__auto__ = o;
    if (and__3396__auto__) {
      return o.cljs$core$IEquiv$_equiv$arity$2;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other);
  } else {
    var x__4029__auto__ = o == null ? null : o;
    return function() {
      var or__3408__auto__ = cljs.core._equiv[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._equiv["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other);
  }
};
cljs.core.IHash = function() {
  var obj23021 = {};
  return obj23021;
}();
cljs.core._hash = function _hash(o) {
  if (function() {
    var and__3396__auto__ = o;
    if (and__3396__auto__) {
      return o.cljs$core$IHash$_hash$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o);
  } else {
    var x__4029__auto__ = o == null ? null : o;
    return function() {
      var or__3408__auto__ = cljs.core._hash[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._hash["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IHash.-hash", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISeqable = function() {
  var obj23023 = {};
  return obj23023;
}();
cljs.core._seq = function _seq(o) {
  if (function() {
    var and__3396__auto__ = o;
    if (and__3396__auto__) {
      return o.cljs$core$ISeqable$_seq$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o);
  } else {
    var x__4029__auto__ = o == null ? null : o;
    return function() {
      var or__3408__auto__ = cljs.core._seq[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._seq["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISeqable.-seq", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISequential = function() {
  var obj23025 = {};
  return obj23025;
}();
cljs.core.IList = function() {
  var obj23027 = {};
  return obj23027;
}();
cljs.core.IRecord = function() {
  var obj23029 = {};
  return obj23029;
}();
cljs.core.IReversible = function() {
  var obj23031 = {};
  return obj23031;
}();
cljs.core._rseq = function _rseq(coll) {
  if (function() {
    var and__3396__auto__ = coll;
    if (and__3396__auto__) {
      return coll.cljs$core$IReversible$_rseq$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll);
  } else {
    var x__4029__auto__ = coll == null ? null : coll;
    return function() {
      var or__3408__auto__ = cljs.core._rseq[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._rseq["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IReversible.-rseq", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISorted = function() {
  var obj23033 = {};
  return obj23033;
}();
cljs.core._sorted_seq = function _sorted_seq(coll, ascending_QMARK_) {
  if (function() {
    var and__3396__auto__ = coll;
    if (and__3396__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_);
  } else {
    var x__4029__auto__ = coll == null ? null : coll;
    return function() {
      var or__3408__auto__ = cljs.core._sorted_seq[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._sorted_seq["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_);
  }
};
cljs.core._sorted_seq_from = function _sorted_seq_from(coll, k, ascending_QMARK_) {
  if (function() {
    var and__3396__auto__ = coll;
    if (and__3396__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_);
  } else {
    var x__4029__auto__ = coll == null ? null : coll;
    return function() {
      var or__3408__auto__ = cljs.core._sorted_seq_from[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._sorted_seq_from["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_);
  }
};
cljs.core._entry_key = function _entry_key(coll, entry) {
  if (function() {
    var and__3396__auto__ = coll;
    if (and__3396__auto__) {
      return coll.cljs$core$ISorted$_entry_key$arity$2;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry);
  } else {
    var x__4029__auto__ = coll == null ? null : coll;
    return function() {
      var or__3408__auto__ = cljs.core._entry_key[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._entry_key["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry);
  }
};
cljs.core._comparator = function _comparator(coll) {
  if (function() {
    var and__3396__auto__ = coll;
    if (and__3396__auto__) {
      return coll.cljs$core$ISorted$_comparator$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll);
  } else {
    var x__4029__auto__ = coll == null ? null : coll;
    return function() {
      var or__3408__auto__ = cljs.core._comparator[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._comparator["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-comparator", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IWriter = function() {
  var obj23035 = {};
  return obj23035;
}();
cljs.core._write = function _write(writer, s) {
  if (function() {
    var and__3396__auto__ = writer;
    if (and__3396__auto__) {
      return writer.cljs$core$IWriter$_write$arity$2;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s);
  } else {
    var x__4029__auto__ = writer == null ? null : writer;
    return function() {
      var or__3408__auto__ = cljs.core._write[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._write["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWriter.-write", writer);
        }
      }
    }().call(null, writer, s);
  }
};
cljs.core._flush = function _flush(writer) {
  if (function() {
    var and__3396__auto__ = writer;
    if (and__3396__auto__) {
      return writer.cljs$core$IWriter$_flush$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer);
  } else {
    var x__4029__auto__ = writer == null ? null : writer;
    return function() {
      var or__3408__auto__ = cljs.core._flush[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._flush["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWriter.-flush", writer);
        }
      }
    }().call(null, writer);
  }
};
cljs.core.IPrintWithWriter = function() {
  var obj23037 = {};
  return obj23037;
}();
cljs.core._pr_writer = function _pr_writer(o, writer, opts) {
  if (function() {
    var and__3396__auto__ = o;
    if (and__3396__auto__) {
      return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts);
  } else {
    var x__4029__auto__ = o == null ? null : o;
    return function() {
      var or__3408__auto__ = cljs.core._pr_writer[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._pr_writer["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer", o);
        }
      }
    }().call(null, o, writer, opts);
  }
};
cljs.core.IPending = function() {
  var obj23039 = {};
  return obj23039;
}();
cljs.core._realized_QMARK_ = function _realized_QMARK_(d) {
  if (function() {
    var and__3396__auto__ = d;
    if (and__3396__auto__) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
  } else {
    var x__4029__auto__ = d == null ? null : d;
    return function() {
      var or__3408__auto__ = cljs.core._realized_QMARK_[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._realized_QMARK_["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IPending.-realized?", d);
        }
      }
    }().call(null, d);
  }
};
cljs.core.IWatchable = function() {
  var obj23041 = {};
  return obj23041;
}();
cljs.core._notify_watches = function _notify_watches(this$, oldval, newval) {
  if (function() {
    var and__3396__auto__ = this$;
    if (and__3396__auto__) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval);
  } else {
    var x__4029__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3408__auto__ = cljs.core._notify_watches[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._notify_watches["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval);
  }
};
cljs.core._add_watch = function _add_watch(this$, key, f) {
  if (function() {
    var and__3396__auto__ = this$;
    if (and__3396__auto__) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f);
  } else {
    var x__4029__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3408__auto__ = cljs.core._add_watch[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._add_watch["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f);
  }
};
cljs.core._remove_watch = function _remove_watch(this$, key) {
  if (function() {
    var and__3396__auto__ = this$;
    if (and__3396__auto__) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key);
  } else {
    var x__4029__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3408__auto__ = cljs.core._remove_watch[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._remove_watch["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key);
  }
};
cljs.core.IEditableCollection = function() {
  var obj23043 = {};
  return obj23043;
}();
cljs.core._as_transient = function _as_transient(coll) {
  if (function() {
    var and__3396__auto__ = coll;
    if (and__3396__auto__) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
  } else {
    var x__4029__auto__ = coll == null ? null : coll;
    return function() {
      var or__3408__auto__ = cljs.core._as_transient[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._as_transient["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ITransientCollection = function() {
  var obj23045 = {};
  return obj23045;
}();
cljs.core._conj_BANG_ = function _conj_BANG_(tcoll, val) {
  if (function() {
    var and__3396__auto__ = tcoll;
    if (and__3396__auto__) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val);
  } else {
    var x__4029__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3408__auto__ = cljs.core._conj_BANG_[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._conj_BANG_["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val);
  }
};
cljs.core._persistent_BANG_ = function _persistent_BANG_(tcoll) {
  if (function() {
    var and__3396__auto__ = tcoll;
    if (and__3396__auto__) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
  } else {
    var x__4029__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3408__auto__ = cljs.core._persistent_BANG_[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._persistent_BANG_["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientAssociative = function() {
  var obj23047 = {};
  return obj23047;
}();
cljs.core._assoc_BANG_ = function _assoc_BANG_(tcoll, key, val) {
  if (function() {
    var and__3396__auto__ = tcoll;
    if (and__3396__auto__) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val);
  } else {
    var x__4029__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3408__auto__ = cljs.core._assoc_BANG_[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._assoc_BANG_["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val);
  }
};
cljs.core.ITransientMap = function() {
  var obj23049 = {};
  return obj23049;
}();
cljs.core._dissoc_BANG_ = function _dissoc_BANG_(tcoll, key) {
  if (function() {
    var and__3396__auto__ = tcoll;
    if (and__3396__auto__) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key);
  } else {
    var x__4029__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3408__auto__ = cljs.core._dissoc_BANG_[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._dissoc_BANG_["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key);
  }
};
cljs.core.ITransientVector = function() {
  var obj23051 = {};
  return obj23051;
}();
cljs.core._assoc_n_BANG_ = function _assoc_n_BANG_(tcoll, n, val) {
  if (function() {
    var and__3396__auto__ = tcoll;
    if (and__3396__auto__) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val);
  } else {
    var x__4029__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3408__auto__ = cljs.core._assoc_n_BANG_[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._assoc_n_BANG_["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val);
  }
};
cljs.core._pop_BANG_ = function _pop_BANG_(tcoll) {
  if (function() {
    var and__3396__auto__ = tcoll;
    if (and__3396__auto__) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
  } else {
    var x__4029__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3408__auto__ = cljs.core._pop_BANG_[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._pop_BANG_["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientSet = function() {
  var obj23053 = {};
  return obj23053;
}();
cljs.core._disjoin_BANG_ = function _disjoin_BANG_(tcoll, v) {
  if (function() {
    var and__3396__auto__ = tcoll;
    if (and__3396__auto__) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v);
  } else {
    var x__4029__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3408__auto__ = cljs.core._disjoin_BANG_[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._disjoin_BANG_["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v);
  }
};
cljs.core.IComparable = function() {
  var obj23055 = {};
  return obj23055;
}();
cljs.core._compare = function _compare(x, y) {
  if (function() {
    var and__3396__auto__ = x;
    if (and__3396__auto__) {
      return x.cljs$core$IComparable$_compare$arity$2;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y);
  } else {
    var x__4029__auto__ = x == null ? null : x;
    return function() {
      var or__3408__auto__ = cljs.core._compare[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._compare["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IComparable.-compare", x);
        }
      }
    }().call(null, x, y);
  }
};
cljs.core.IChunk = function() {
  var obj23057 = {};
  return obj23057;
}();
cljs.core._drop_first = function _drop_first(coll) {
  if (function() {
    var and__3396__auto__ = coll;
    if (and__3396__auto__) {
      return coll.cljs$core$IChunk$_drop_first$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
  } else {
    var x__4029__auto__ = coll == null ? null : coll;
    return function() {
      var or__3408__auto__ = cljs.core._drop_first[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._drop_first["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedSeq = function() {
  var obj23059 = {};
  return obj23059;
}();
cljs.core._chunked_first = function _chunked_first(coll) {
  if (function() {
    var and__3396__auto__ = coll;
    if (and__3396__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
  } else {
    var x__4029__auto__ = coll == null ? null : coll;
    return function() {
      var or__3408__auto__ = cljs.core._chunked_first[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._chunked_first["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._chunked_rest = function _chunked_rest(coll) {
  if (function() {
    var and__3396__auto__ = coll;
    if (and__3396__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
  } else {
    var x__4029__auto__ = coll == null ? null : coll;
    return function() {
      var or__3408__auto__ = cljs.core._chunked_rest[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._chunked_rest["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedNext = function() {
  var obj23061 = {};
  return obj23061;
}();
cljs.core._chunked_next = function _chunked_next(coll) {
  if (function() {
    var and__3396__auto__ = coll;
    if (and__3396__auto__) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
  } else {
    var x__4029__auto__ = coll == null ? null : coll;
    return function() {
      var or__3408__auto__ = cljs.core._chunked_next[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._chunked_next["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INamed = function() {
  var obj23063 = {};
  return obj23063;
}();
cljs.core._name = function _name(x) {
  if (function() {
    var and__3396__auto__ = x;
    if (and__3396__auto__) {
      return x.cljs$core$INamed$_name$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(x);
  } else {
    var x__4029__auto__ = x == null ? null : x;
    return function() {
      var or__3408__auto__ = cljs.core._name[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._name["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("INamed.-name", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._namespace = function _namespace(x) {
  if (function() {
    var and__3396__auto__ = x;
    if (and__3396__auto__) {
      return x.cljs$core$INamed$_namespace$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(x);
  } else {
    var x__4029__auto__ = x == null ? null : x;
    return function() {
      var or__3408__auto__ = cljs.core._namespace[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._namespace["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("INamed.-namespace", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824;
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core/StringBufferWriter");
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return self__.sb.append(s);
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return null;
};
cljs.core.__GT_StringBufferWriter = function __GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb);
};
cljs.core.pr_str_STAR_ = function pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, cljs.core.pr_opts());
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return[cljs.core.str(sb)].join("");
};
cljs.core.instance_QMARK_ = function instance_QMARK_(t, o) {
  return o instanceof t;
};
cljs.core.symbol_QMARK_ = function symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol;
};
cljs.core.hash_symbol = function hash_symbol(sym) {
  return cljs.core.hash_combine.cljs$core$IFn$_invoke$arity$2 ? cljs.core.hash_combine.cljs$core$IFn$_invoke$arity$2(cljs.core.hash.cljs$core$IFn$_invoke$arity$1 ? cljs.core.hash.cljs$core$IFn$_invoke$arity$1(sym.ns) : cljs.core.hash.call(null, sym.ns), cljs.core.hash.cljs$core$IFn$_invoke$arity$1 ? cljs.core.hash.cljs$core$IFn$_invoke$arity$1(sym.name) : cljs.core.hash.call(null, sym.name)) : cljs.core.hash_combine.call(null, cljs.core.hash.cljs$core$IFn$_invoke$arity$1 ? cljs.core.hash.cljs$core$IFn$_invoke$arity$1(sym.ns) : 
  cljs.core.hash.call(null, sym.ns), cljs.core.hash.cljs$core$IFn$_invoke$arity$1 ? cljs.core.hash.cljs$core$IFn$_invoke$arity$1(sym.name) : cljs.core.hash.call(null, sym.name));
};
cljs.core.compare_symbols = function compare_symbols(a, b) {
  if (cljs.core.truth_(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2 ? cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a, b) : cljs.core._EQ_.call(null, a, b))) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__3396__auto__ = cljs.core.not(a.ns);
      if (and__3396__auto__) {
        return b.ns;
      } else {
        return and__3396__auto__;
      }
    }())) {
      return-1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = cljs.core.compare.cljs$core$IFn$_invoke$arity$2 ? cljs.core.compare.cljs$core$IFn$_invoke$arity$2(a.ns, b.ns) : cljs.core.compare.call(null, a.ns, b.ns);
          if (nsc === 0) {
            return cljs.core.compare.cljs$core$IFn$_invoke$arity$2 ? cljs.core.compare.cljs$core$IFn$_invoke$arity$2(a.name, b.name) : cljs.core.compare.call(null, a.name, b.name);
          } else {
            return nsc;
          }
        }
      } else {
        if (new cljs.core.Keyword(null, "default", "default", 2558708147)) {
          return cljs.core.compare.cljs$core$IFn$_invoke$arity$2 ? cljs.core.compare.cljs$core$IFn$_invoke$arity$2(a.name, b.name) : cljs.core.compare.call(null, a.name, b.name);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core/Symbol");
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, self__.str);
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(sym) {
  var self__ = this;
  var sym__$1 = this;
  var h__3819__auto__ = self__._hash;
  if (!(h__3819__auto__ == null)) {
    return h__3819__auto__;
  } else {
    var h__3819__auto____$1 = cljs.core.hash_symbol(sym__$1);
    self__._hash = h__3819__auto____$1;
    return h__3819__auto____$1;
  }
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta);
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Symbol.prototype.call = function() {
  var G__23065 = null;
  var G__23065__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, null);
  };
  var G__23065__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found);
  };
  G__23065 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__23065__2.call(this, self__, coll);
      case 3:
        return G__23065__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__23065;
}();
cljs.core.Symbol.prototype.apply = function(self__, args23064) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args23064)));
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, null);
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found);
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Symbol) {
    return self__.str === other.str;
  } else {
    return false;
  }
};
cljs.core.Symbol.prototype.cljs$core$ICloneable$ = true;
cljs.core.Symbol.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, self__._meta);
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str;
};
cljs.core.__GT_Symbol = function __GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta);
};
cljs.core.symbol = function() {
  var symbol = null;
  var symbol__1 = function(name) {
    if (name instanceof cljs.core.Symbol) {
      return name;
    } else {
      return symbol.cljs$core$IFn$_invoke$arity$2(null, name);
    }
  };
  var symbol__2 = function(ns, name) {
    var sym_str = !(ns == null) ? [cljs.core.str(ns), cljs.core.str("/"), cljs.core.str(name)].join("") : name;
    return new cljs.core.Symbol(ns, name, sym_str, null, null);
  };
  symbol = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return symbol__1.call(this, ns);
      case 2:
        return symbol__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
  symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
  return symbol;
}();
cljs.core.clone = function clone(value) {
  return cljs.core._clone(value);
};
cljs.core.seq = function seq(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__23067 = coll;
      if (G__23067) {
        var bit__4045__auto__ = G__23067.cljs$lang$protocol_mask$partition0$ & 8388608;
        if (bit__4045__auto__ || G__23067.cljs$core$ISeqable$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ISeqable$_seq$arity$1(null);
    } else {
      if (coll instanceof Array) {
        if (coll.length === 0) {
          return null;
        } else {
          return new cljs.core.IndexedSeq(coll, 0);
        }
      } else {
        if (typeof coll === "string") {
          if (coll.length === 0) {
            return null;
          } else {
            return new cljs.core.IndexedSeq(coll, 0);
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, coll)) {
            return cljs.core._seq(coll);
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              throw new Error([cljs.core.str(coll), cljs.core.str("is not ISeqable")].join(""));
            } else {
              return null;
            }
          }
        }
      }
    }
  }
};
cljs.core.first = function first(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__23069 = coll;
      if (G__23069) {
        var bit__4045__auto__ = G__23069.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4045__auto__ || G__23069.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ISeq$_first$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s == null) {
        return null;
      } else {
        return cljs.core._first(s);
      }
    }
  }
};
cljs.core.rest = function rest(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__23071 = coll;
      if (G__23071) {
        var bit__4045__auto__ = G__23071.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4045__auto__ || G__23071.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ISeq$_rest$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s) {
        return cljs.core._rest(s);
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.next = function next(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__23073 = coll;
      if (G__23073) {
        var bit__4045__auto__ = G__23073.cljs$lang$protocol_mask$partition0$ & 128;
        if (bit__4045__auto__ || G__23073.cljs$core$INext$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$INext$_next$arity$1(null);
    } else {
      return cljs.core.seq(cljs.core.rest(coll));
    }
  }
};
cljs.core._EQ_ = function() {
  var _EQ_ = null;
  var _EQ___1 = function(x) {
    return true;
  };
  var _EQ___2 = function(x, y) {
    if (x == null) {
      return y == null;
    } else {
      return x === y || cljs.core._equiv(x, y);
    }
  };
  var _EQ___3 = function() {
    var G__23074__delegate = function(x, y, more) {
      while (true) {
        if (_EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
          if (cljs.core.next(more)) {
            var G__23075 = y;
            var G__23076 = cljs.core.first(more);
            var G__23077 = cljs.core.next(more);
            x = G__23075;
            y = G__23076;
            more = G__23077;
            continue;
          } else {
            return _EQ_.cljs$core$IFn$_invoke$arity$2(y, cljs.core.first(more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__23074 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__23074__delegate.call(this, x, y, more);
    };
    G__23074.cljs$lang$maxFixedArity = 2;
    G__23074.cljs$lang$applyTo = function(arglist__23078) {
      var x = cljs.core.first(arglist__23078);
      arglist__23078 = cljs.core.next(arglist__23078);
      var y = cljs.core.first(arglist__23078);
      var more = cljs.core.rest(arglist__23078);
      return G__23074__delegate(x, y, more);
    };
    G__23074.cljs$core$IFn$_invoke$arity$variadic = G__23074__delegate;
    return G__23074;
  }();
  _EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ___1.call(this, x);
      case 2:
        return _EQ___2.call(this, x, y);
      default:
        return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ_.cljs$lang$maxFixedArity = 2;
  _EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
  _EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
  _EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
  _EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ_;
}();
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0;
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var o__$1 = this;
  return other instanceof Date && o__$1.toString() === other.toString();
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o;
};
cljs.core.IMeta["function"] = true;
cljs.core._meta["function"] = function(_) {
  return null;
};
cljs.core.Fn["function"] = true;
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  return goog.getUid(o);
};
cljs.core.inc = function inc(x) {
  return x + 1;
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core/Reduced");
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  var o__$1 = this;
  return self__.val;
};
cljs.core.__GT_Reduced = function __GT_Reduced(val) {
  return new cljs.core.Reduced(val);
};
cljs.core.reduced = function reduced(x) {
  return new cljs.core.Reduced(x);
};
cljs.core.reduced_QMARK_ = function reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced;
};
cljs.core.ci_reduce = function() {
  var ci_reduce = null;
  var ci_reduce__2 = function(cicoll, f) {
    var cnt = cljs.core._count(cicoll);
    if (cnt === 0) {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    } else {
      var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, 0);
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(val, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n)) : f.call(null, val, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n));
          if (cljs.core.reduced_QMARK_(nval)) {
            return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(nval) : cljs.core.deref.call(null, nval);
          } else {
            var G__23079 = nval;
            var G__23080 = n + 1;
            val = G__23079;
            n = G__23080;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var ci_reduce__3 = function(cicoll, f, val) {
    var cnt = cljs.core._count(cicoll);
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(val__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n)) : f.call(null, val__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n));
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(nval) : cljs.core.deref.call(null, nval);
        } else {
          var G__23081 = nval;
          var G__23082 = n + 1;
          val__$1 = G__23081;
          n = G__23082;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var ci_reduce__4 = function(cicoll, f, val, idx) {
    var cnt = cljs.core._count(cicoll);
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(val__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n)) : f.call(null, val__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n));
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(nval) : cljs.core.deref.call(null, nval);
        } else {
          var G__23083 = nval;
          var G__23084 = n + 1;
          val__$1 = G__23083;
          n = G__23084;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  ci_reduce = function(cicoll, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return ci_reduce__2.call(this, cicoll, f);
      case 3:
        return ci_reduce__3.call(this, cicoll, f, val);
      case 4:
        return ci_reduce__4.call(this, cicoll, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
  ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
  ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
  return ci_reduce;
}();
cljs.core.array_reduce = function() {
  var array_reduce = null;
  var array_reduce__2 = function(arr, f) {
    var cnt = arr.length;
    if (arr.length === 0) {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    } else {
      var val = arr[0];
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(val, arr[n]) : f.call(null, val, arr[n]);
          if (cljs.core.reduced_QMARK_(nval)) {
            return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(nval) : cljs.core.deref.call(null, nval);
          } else {
            var G__23085 = nval;
            var G__23086 = n + 1;
            val = G__23085;
            n = G__23086;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var array_reduce__3 = function(arr, f, val) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(val__$1, arr[n]) : f.call(null, val__$1, arr[n]);
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(nval) : cljs.core.deref.call(null, nval);
        } else {
          var G__23087 = nval;
          var G__23088 = n + 1;
          val__$1 = G__23087;
          n = G__23088;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var array_reduce__4 = function(arr, f, val, idx) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(val__$1, arr[n]) : f.call(null, val__$1, arr[n]);
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(nval) : cljs.core.deref.call(null, nval);
        } else {
          var G__23089 = nval;
          var G__23090 = n + 1;
          val__$1 = G__23089;
          n = G__23090;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  array_reduce = function(arr, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return array_reduce__2.call(this, arr, f);
      case 3:
        return array_reduce__3.call(this, arr, f, val);
      case 4:
        return array_reduce__4.call(this, arr, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
  array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
  array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
  return array_reduce;
}();
cljs.core.counted_QMARK_ = function counted_QMARK_(x) {
  var G__23092 = x;
  if (G__23092) {
    var bit__4052__auto__ = G__23092.cljs$lang$protocol_mask$partition0$ & 2;
    if (bit__4052__auto__ || G__23092.cljs$core$ICounted$) {
      return true;
    } else {
      if (!G__23092.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, G__23092);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, G__23092);
  }
};
cljs.core.indexed_QMARK_ = function indexed_QMARK_(x) {
  var G__23094 = x;
  if (G__23094) {
    var bit__4052__auto__ = G__23094.cljs$lang$protocol_mask$partition0$ & 16;
    if (bit__4052__auto__ || G__23094.cljs$core$IIndexed$) {
      return true;
    } else {
      if (!G__23094.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, G__23094);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, G__23094);
  }
};
cljs.core.IndexedSeq = function(arr, i) {
  this.arr = arr;
  this.i = i;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 166199550;
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core/IndexedSeq");
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.cljs$core$IFn$_invoke$arity$1 ? cljs.core.hash_coll.cljs$core$IFn$_invoke$arity$1(coll__$1) : cljs.core.hash_coll.call(null, coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(o, coll__$1) : cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var c = cljs.core._count(coll__$1);
  if (c > 0) {
    return new cljs.core.RSeq(coll__$1, c - 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.i], self__.i + 1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr.length - self__.i;
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr[self__.i];
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(coll__$1, other) : cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.IndexedSeq(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return not_found;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.__GT_IndexedSeq = function __GT_IndexedSeq(arr, i) {
  return new cljs.core.IndexedSeq(arr, i);
};
cljs.core.prim_seq = function() {
  var prim_seq = null;
  var prim_seq__1 = function(prim) {
    return prim_seq.cljs$core$IFn$_invoke$arity$2(prim, 0);
  };
  var prim_seq__2 = function(prim, i) {
    if (i < prim.length) {
      return new cljs.core.IndexedSeq(prim, i);
    } else {
      return null;
    }
  };
  prim_seq = function(prim, i) {
    switch(arguments.length) {
      case 1:
        return prim_seq__1.call(this, prim);
      case 2:
        return prim_seq__2.call(this, prim, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
  prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
  return prim_seq;
}();
cljs.core.array_seq = function() {
  var array_seq = null;
  var array_seq__1 = function(array) {
    return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, 0);
  };
  var array_seq__2 = function(array, i) {
    return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, i);
  };
  array_seq = function(array, i) {
    switch(arguments.length) {
      case 1:
        return array_seq__1.call(this, array);
      case 2:
        return array_seq__2.call(this, array, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
  array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
  return array_seq;
}();
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374862;
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core/RSeq");
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.cljs$core$IFn$_invoke$arity$1 ? cljs.core.hash_coll.cljs$core$IFn$_invoke$arity$1(coll__$1) : cljs.core.hash_coll.call(null, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(o, coll__$1) : cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, col__$1) : cljs.core.seq_reduce.call(null, f, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, col__$1) : cljs.core.seq_reduce.call(null, f, start, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.i + 1;
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci, self__.i);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return null;
  }
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(coll__$1, other) : cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, new_meta);
};
cljs.core.RSeq.prototype.cljs$core$ICloneable$ = true;
cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(cljs.core.List.EMPTY, self__.meta) : cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_RSeq = function __GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta);
};
cljs.core.second = function second(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.ffirst = function ffirst(coll) {
  return cljs.core.first(cljs.core.first(coll));
};
cljs.core.nfirst = function nfirst(coll) {
  return cljs.core.next(cljs.core.first(coll));
};
cljs.core.fnext = function fnext(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.nnext = function nnext(coll) {
  return cljs.core.next(cljs.core.next(coll));
};
cljs.core.last = function last(s) {
  while (true) {
    var sn = cljs.core.next(s);
    if (!(sn == null)) {
      var G__23095 = sn;
      s = G__23095;
      continue;
    } else {
      return cljs.core.first(s);
    }
    break;
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o;
};
cljs.core.conj = function() {
  var conj = null;
  var conj__2 = function(coll, x) {
    if (!(coll == null)) {
      return cljs.core._conj(coll, x);
    } else {
      return cljs.core._conj(cljs.core.List.EMPTY, x);
    }
  };
  var conj__3 = function() {
    var G__23096__delegate = function(coll, x, xs) {
      while (true) {
        if (cljs.core.truth_(xs)) {
          var G__23097 = conj.cljs$core$IFn$_invoke$arity$2(coll, x);
          var G__23098 = cljs.core.first(xs);
          var G__23099 = cljs.core.next(xs);
          coll = G__23097;
          x = G__23098;
          xs = G__23099;
          continue;
        } else {
          return conj.cljs$core$IFn$_invoke$arity$2(coll, x);
        }
        break;
      }
    };
    var G__23096 = function(coll, x, var_args) {
      var xs = null;
      if (arguments.length > 2) {
        xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__23096__delegate.call(this, coll, x, xs);
    };
    G__23096.cljs$lang$maxFixedArity = 2;
    G__23096.cljs$lang$applyTo = function(arglist__23100) {
      var coll = cljs.core.first(arglist__23100);
      arglist__23100 = cljs.core.next(arglist__23100);
      var x = cljs.core.first(arglist__23100);
      var xs = cljs.core.rest(arglist__23100);
      return G__23096__delegate(coll, x, xs);
    };
    G__23096.cljs$core$IFn$_invoke$arity$variadic = G__23096__delegate;
    return G__23096;
  }();
  conj = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 2:
        return conj__2.call(this, coll, x);
      default:
        return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll, x, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj.cljs$lang$maxFixedArity = 2;
  conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
  conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
  conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
  return conj;
}();
cljs.core.empty = function empty(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._empty(coll);
  }
};
cljs.core.accumulating_seq_count = function accumulating_seq_count(coll) {
  var s = cljs.core.seq(coll);
  var acc = 0;
  while (true) {
    if (cljs.core.counted_QMARK_(s)) {
      return acc + cljs.core._count(s);
    } else {
      var G__23101 = cljs.core.next(s);
      var G__23102 = acc + 1;
      s = G__23101;
      acc = G__23102;
      continue;
    }
    break;
  }
};
cljs.core.count = function count(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__23104 = coll;
      if (G__23104) {
        var bit__4045__auto__ = G__23104.cljs$lang$protocol_mask$partition0$ & 2;
        if (bit__4045__auto__ || G__23104.cljs$core$ICounted$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ICounted$_count$arity$1(null);
    } else {
      if (coll instanceof Array) {
        return coll.length;
      } else {
        if (typeof coll === "string") {
          return coll.length;
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, coll)) {
            return cljs.core._count(coll);
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return cljs.core.accumulating_seq_count(coll);
            } else {
              return null;
            }
          }
        }
      }
    }
  } else {
    return 0;
  }
};
cljs.core.linear_traversal_nth = function() {
  var linear_traversal_nth = null;
  var linear_traversal_nth__2 = function(coll, n) {
    while (true) {
      if (coll == null) {
        throw new Error("Index out of bounds");
      } else {
        if (n === 0) {
          if (cljs.core.seq(coll)) {
            return cljs.core.first(coll);
          } else {
            throw new Error("Index out of bounds");
          }
        } else {
          if (cljs.core.indexed_QMARK_(coll)) {
            return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
          } else {
            if (cljs.core.seq(coll)) {
              var G__23105 = cljs.core.next(coll);
              var G__23106 = n - 1;
              coll = G__23105;
              n = G__23106;
              continue;
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw new Error("Index out of bounds");
              } else {
                return null;
              }
            }
          }
        }
      }
      break;
    }
  };
  var linear_traversal_nth__3 = function(coll, n, not_found) {
    while (true) {
      if (coll == null) {
        return not_found;
      } else {
        if (n === 0) {
          if (cljs.core.seq(coll)) {
            return cljs.core.first(coll);
          } else {
            return not_found;
          }
        } else {
          if (cljs.core.indexed_QMARK_(coll)) {
            return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
          } else {
            if (cljs.core.seq(coll)) {
              var G__23107 = cljs.core.next(coll);
              var G__23108 = n - 1;
              var G__23109 = not_found;
              coll = G__23107;
              n = G__23108;
              not_found = G__23109;
              continue;
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return not_found;
              } else {
                return null;
              }
            }
          }
        }
      }
      break;
    }
  };
  linear_traversal_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return linear_traversal_nth__2.call(this, coll, n);
      case 3:
        return linear_traversal_nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
  return linear_traversal_nth;
}();
cljs.core.nth = function() {
  var nth = null;
  var nth__2 = function(coll, n) {
    if (coll == null) {
      return null;
    } else {
      if (function() {
        var G__23114 = coll;
        if (G__23114) {
          var bit__4045__auto__ = G__23114.cljs$lang$protocol_mask$partition0$ & 16;
          if (bit__4045__auto__ || G__23114.cljs$core$IIndexed$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return coll.cljs$core$IIndexed$_nth$arity$2(null, n);
      } else {
        if (coll instanceof Array) {
          if (n < coll.length) {
            return coll[n];
          } else {
            return null;
          }
        } else {
          if (typeof coll === "string") {
            if (n < coll.length) {
              return coll[n];
            } else {
              return null;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
              return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                if (function() {
                  var G__23115 = coll;
                  if (G__23115) {
                    var bit__4052__auto__ = G__23115.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__4052__auto__ || G__23115.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__23115.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__23115);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__23115);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll, n);
                } else {
                  throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
                }
              } else {
                return null;
              }
            }
          }
        }
      }
    }
  };
  var nth__3 = function(coll, n, not_found) {
    if (!(coll == null)) {
      if (function() {
        var G__23116 = coll;
        if (G__23116) {
          var bit__4045__auto__ = G__23116.cljs$lang$protocol_mask$partition0$ & 16;
          if (bit__4045__auto__ || G__23116.cljs$core$IIndexed$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return coll.cljs$core$IIndexed$_nth$arity$3(null, n, not_found);
      } else {
        if (coll instanceof Array) {
          if (n < coll.length) {
            return coll[n];
          } else {
            return not_found;
          }
        } else {
          if (typeof coll === "string") {
            if (n < coll.length) {
              return coll[n];
            } else {
              return not_found;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
              return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                if (function() {
                  var G__23117 = coll;
                  if (G__23117) {
                    var bit__4052__auto__ = G__23117.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__4052__auto__ || G__23117.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__23117.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__23117);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__23117);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
                } else {
                  throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
                }
              } else {
                return null;
              }
            }
          }
        }
      }
    } else {
      return not_found;
    }
  };
  nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return nth__2.call(this, coll, n);
      case 3:
        return nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
  nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
  return nth;
}();
cljs.core.get = function() {
  var get = null;
  var get__2 = function(o, k) {
    if (o == null) {
      return null;
    } else {
      if (function() {
        var G__23120 = o;
        if (G__23120) {
          var bit__4045__auto__ = G__23120.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4045__auto__ || G__23120.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return o.cljs$core$ILookup$_lookup$arity$2(null, k);
      } else {
        if (o instanceof Array) {
          if (k < o.length) {
            return o[k];
          } else {
            return null;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return null;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
              return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o, k);
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return null;
              } else {
                return null;
              }
            }
          }
        }
      }
    }
  };
  var get__3 = function(o, k, not_found) {
    if (!(o == null)) {
      if (function() {
        var G__23121 = o;
        if (G__23121) {
          var bit__4045__auto__ = G__23121.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4045__auto__ || G__23121.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return o.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
      } else {
        if (o instanceof Array) {
          if (k < o.length) {
            return o[k];
          } else {
            return not_found;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return not_found;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
              return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o, k, not_found);
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return not_found;
              } else {
                return null;
              }
            }
          }
        }
      }
    } else {
      return not_found;
    }
  };
  get = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return get__2.call(this, o, k);
      case 3:
        return get__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get.cljs$core$IFn$_invoke$arity$2 = get__2;
  get.cljs$core$IFn$_invoke$arity$3 = get__3;
  return get;
}();
cljs.core.assoc = function() {
  var assoc = null;
  var assoc__3 = function(coll, k, v) {
    if (!(coll == null)) {
      return cljs.core._assoc(coll, k, v);
    } else {
      return cljs.core.PersistentHashMap.fromArrays.cljs$core$IFn$_invoke$arity$2 ? cljs.core.PersistentHashMap.fromArrays.cljs$core$IFn$_invoke$arity$2([k], [v]) : cljs.core.PersistentHashMap.fromArrays.call(null, [k], [v]);
    }
  };
  var assoc__4 = function() {
    var G__23122__delegate = function(coll, k, v, kvs) {
      while (true) {
        var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll, k, v);
        if (cljs.core.truth_(kvs)) {
          var G__23123 = ret;
          var G__23124 = cljs.core.first(kvs);
          var G__23125 = cljs.core.second(kvs);
          var G__23126 = cljs.core.nnext(kvs);
          coll = G__23123;
          k = G__23124;
          v = G__23125;
          kvs = G__23126;
          continue;
        } else {
          return ret;
        }
        break;
      }
    };
    var G__23122 = function(coll, k, v, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__23122__delegate.call(this, coll, k, v, kvs);
    };
    G__23122.cljs$lang$maxFixedArity = 3;
    G__23122.cljs$lang$applyTo = function(arglist__23127) {
      var coll = cljs.core.first(arglist__23127);
      arglist__23127 = cljs.core.next(arglist__23127);
      var k = cljs.core.first(arglist__23127);
      arglist__23127 = cljs.core.next(arglist__23127);
      var v = cljs.core.first(arglist__23127);
      var kvs = cljs.core.rest(arglist__23127);
      return G__23122__delegate(coll, k, v, kvs);
    };
    G__23122.cljs$core$IFn$_invoke$arity$variadic = G__23122__delegate;
    return G__23122;
  }();
  assoc = function(coll, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc__3.call(this, coll, k, v);
      default:
        return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll, k, v, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc.cljs$lang$maxFixedArity = 3;
  assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
  assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
  assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc;
}();
cljs.core.dissoc = function() {
  var dissoc = null;
  var dissoc__1 = function(coll) {
    return coll;
  };
  var dissoc__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._dissoc(coll, k);
    }
  };
  var dissoc__3 = function() {
    var G__23128__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll, k);
          if (cljs.core.truth_(ks)) {
            var G__23129 = ret;
            var G__23130 = cljs.core.first(ks);
            var G__23131 = cljs.core.next(ks);
            coll = G__23129;
            k = G__23130;
            ks = G__23131;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__23128 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__23128__delegate.call(this, coll, k, ks);
    };
    G__23128.cljs$lang$maxFixedArity = 2;
    G__23128.cljs$lang$applyTo = function(arglist__23132) {
      var coll = cljs.core.first(arglist__23132);
      arglist__23132 = cljs.core.next(arglist__23132);
      var k = cljs.core.first(arglist__23132);
      var ks = cljs.core.rest(arglist__23132);
      return G__23128__delegate(coll, k, ks);
    };
    G__23128.cljs$core$IFn$_invoke$arity$variadic = G__23128__delegate;
    return G__23128;
  }();
  dissoc = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return dissoc__1.call(this, coll);
      case 2:
        return dissoc__2.call(this, coll, k);
      default:
        return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc.cljs$lang$maxFixedArity = 2;
  dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
  dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
  dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
  dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc;
}();
cljs.core.fn_QMARK_ = function fn_QMARK_(f) {
  var or__3408__auto__ = goog.isFunction(f);
  if (or__3408__auto__) {
    return or__3408__auto__;
  } else {
    var G__23136 = f;
    if (G__23136) {
      var bit__4052__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3408__auto____$1 = bit__4052__auto__;
        if (cljs.core.truth_(or__3408__auto____$1)) {
          return or__3408__auto____$1;
        } else {
          return G__23136.cljs$core$Fn$;
        }
      }())) {
        return true;
      } else {
        if (!G__23136.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, G__23136);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, G__23136);
    }
  }
};
cljs.core.with_meta = function with_meta(o, meta) {
  if (cljs.core.fn_QMARK_(o) && !function() {
    var G__23144 = o;
    if (G__23144) {
      var bit__4052__auto__ = G__23144.cljs$lang$protocol_mask$partition0$ & 262144;
      if (bit__4052__auto__ || G__23144.cljs$core$IWithMeta$) {
        return true;
      } else {
        if (!G__23144.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta, G__23144);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta, G__23144);
    }
  }()) {
    return with_meta(function() {
      if (typeof cljs.core.t23145 !== "undefined") {
      } else {
        cljs.core.t23145 = function(meta, o, with_meta, meta23146) {
          this.meta = meta;
          this.o = o;
          this.with_meta = with_meta;
          this.meta23146 = meta23146;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393217;
        };
        cljs.core.t23145.cljs$lang$type = true;
        cljs.core.t23145.cljs$lang$ctorStr = "cljs.core/t23145";
        cljs.core.t23145.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
          return cljs.core._write(writer__3971__auto__, "cljs.core/t23145");
        };
        cljs.core.t23145.prototype.call = function() {
          var G__23149__delegate = function(self__, args) {
            var self____$1 = this;
            var _ = self____$1;
            return cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.o, args) : cljs.core.apply.call(null, self__.o, args);
          };
          var G__23149 = function(self__, var_args) {
            var self__ = this;
            var args = null;
            if (arguments.length > 1) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
            }
            return G__23149__delegate.call(this, self__, args);
          };
          G__23149.cljs$lang$maxFixedArity = 1;
          G__23149.cljs$lang$applyTo = function(arglist__23150) {
            var self__ = cljs.core.first(arglist__23150);
            var args = cljs.core.rest(arglist__23150);
            return G__23149__delegate(self__, args);
          };
          G__23149.cljs$core$IFn$_invoke$arity$variadic = G__23149__delegate;
          return G__23149;
        }();
        cljs.core.t23145.prototype.apply = function(self__, args23148) {
          var self__ = this;
          var self____$1 = this;
          return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args23148)));
        };
        cljs.core.t23145.prototype.cljs$core$IFn$_invoke$arity$2 = function() {
          var G__23151__delegate = function(args) {
            var _ = this;
            return cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.o, args) : cljs.core.apply.call(null, self__.o, args);
          };
          var G__23151 = function(var_args) {
            var self__ = this;
            var args = null;
            if (arguments.length > 0) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
            }
            return G__23151__delegate.call(this, args);
          };
          G__23151.cljs$lang$maxFixedArity = 0;
          G__23151.cljs$lang$applyTo = function(arglist__23152) {
            var args = cljs.core.seq(arglist__23152);
            return G__23151__delegate(args);
          };
          G__23151.cljs$core$IFn$_invoke$arity$variadic = G__23151__delegate;
          return G__23151;
        }();
        cljs.core.t23145.prototype.cljs$core$Fn$ = true;
        cljs.core.t23145.prototype.cljs$core$IMeta$_meta$arity$1 = function(_23147) {
          var self__ = this;
          var _23147__$1 = this;
          return self__.meta23146;
        };
        cljs.core.t23145.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_23147, meta23146__$1) {
          var self__ = this;
          var _23147__$1 = this;
          return new cljs.core.t23145(self__.meta, self__.o, self__.with_meta, meta23146__$1);
        };
        cljs.core.__GT_t23145 = function __GT_t23145(meta__$1, o__$1, with_meta__$1, meta23146) {
          return new cljs.core.t23145(meta__$1, o__$1, with_meta__$1, meta23146);
        };
      }
      return new cljs.core.t23145(meta, o, with_meta, null);
    }(), meta);
  } else {
    if (o == null) {
      return null;
    } else {
      return cljs.core._with_meta(o, meta);
    }
  }
};
cljs.core.meta = function meta(o) {
  if (function() {
    var and__3396__auto__ = !(o == null);
    if (and__3396__auto__) {
      var G__23156 = o;
      if (G__23156) {
        var bit__4052__auto__ = G__23156.cljs$lang$protocol_mask$partition0$ & 131072;
        if (bit__4052__auto__ || G__23156.cljs$core$IMeta$) {
          return true;
        } else {
          if (!G__23156.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__23156);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__23156);
      }
    } else {
      return and__3396__auto__;
    }
  }()) {
    return cljs.core._meta(o);
  } else {
    return null;
  }
};
cljs.core.peek = function peek(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._peek(coll);
  }
};
cljs.core.pop = function pop(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._pop(coll);
  }
};
cljs.core.disj = function() {
  var disj = null;
  var disj__1 = function(coll) {
    return coll;
  };
  var disj__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._disjoin(coll, k);
    }
  };
  var disj__3 = function() {
    var G__23157__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = disj.cljs$core$IFn$_invoke$arity$2(coll, k);
          if (cljs.core.truth_(ks)) {
            var G__23158 = ret;
            var G__23159 = cljs.core.first(ks);
            var G__23160 = cljs.core.next(ks);
            coll = G__23158;
            k = G__23159;
            ks = G__23160;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__23157 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__23157__delegate.call(this, coll, k, ks);
    };
    G__23157.cljs$lang$maxFixedArity = 2;
    G__23157.cljs$lang$applyTo = function(arglist__23161) {
      var coll = cljs.core.first(arglist__23161);
      arglist__23161 = cljs.core.next(arglist__23161);
      var k = cljs.core.first(arglist__23161);
      var ks = cljs.core.rest(arglist__23161);
      return G__23157__delegate(coll, k, ks);
    };
    G__23157.cljs$core$IFn$_invoke$arity$variadic = G__23157__delegate;
    return G__23157;
  }();
  disj = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return disj__1.call(this, coll);
      case 2:
        return disj__2.call(this, coll, k);
      default:
        return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj.cljs$lang$maxFixedArity = 2;
  disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
  disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
  disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
  disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
  return disj;
}();
cljs.core.string_hash_cache = function() {
  var obj23163 = {};
  return obj23163;
}();
cljs.core.string_hash_cache_count = 0;
cljs.core.add_to_string_hash_cache = function add_to_string_hash_cache(k) {
  var h = goog.string.hashCode(k);
  cljs.core.string_hash_cache[k] = h;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h;
};
cljs.core.check_string_hash_cache = function check_string_hash_cache(k) {
  if (cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = function() {
      var obj23167 = {};
      return obj23167;
    }();
    cljs.core.string_hash_cache_count = 0;
  } else {
  }
  var h = cljs.core.string_hash_cache[k];
  if (typeof h === "number") {
    return h;
  } else {
    return cljs.core.add_to_string_hash_cache(k);
  }
};
cljs.core.hash = function hash(o) {
  if (function() {
    var G__23169 = o;
    if (G__23169) {
      var bit__4045__auto__ = G__23169.cljs$lang$protocol_mask$partition0$ & 4194304;
      if (bit__4045__auto__ || G__23169.cljs$core$IHash$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(null);
  } else {
    if (typeof o === "number") {
      return Math.floor(o) % 2147483647;
    } else {
      if (o === true) {
        return 1;
      } else {
        if (o === false) {
          return 0;
        } else {
          if (typeof o === "string") {
            return cljs.core.check_string_hash_cache(o);
          } else {
            if (o == null) {
              return 0;
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return cljs.core._hash(o);
              } else {
                return null;
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.empty_QMARK_ = function empty_QMARK_(coll) {
  return coll == null || cljs.core.not(cljs.core.seq(coll));
};
cljs.core.coll_QMARK_ = function coll_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__23171 = x;
    if (G__23171) {
      var bit__4052__auto__ = G__23171.cljs$lang$protocol_mask$partition0$ & 8;
      if (bit__4052__auto__ || G__23171.cljs$core$ICollection$) {
        return true;
      } else {
        if (!G__23171.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, G__23171);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, G__23171);
    }
  }
};
cljs.core.set_QMARK_ = function set_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__23173 = x;
    if (G__23173) {
      var bit__4052__auto__ = G__23173.cljs$lang$protocol_mask$partition0$ & 4096;
      if (bit__4052__auto__ || G__23173.cljs$core$ISet$) {
        return true;
      } else {
        if (!G__23173.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, G__23173);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, G__23173);
    }
  }
};
cljs.core.associative_QMARK_ = function associative_QMARK_(x) {
  var G__23175 = x;
  if (G__23175) {
    var bit__4052__auto__ = G__23175.cljs$lang$protocol_mask$partition0$ & 512;
    if (bit__4052__auto__ || G__23175.cljs$core$IAssociative$) {
      return true;
    } else {
      if (!G__23175.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, G__23175);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, G__23175);
  }
};
cljs.core.sequential_QMARK_ = function sequential_QMARK_(x) {
  var G__23177 = x;
  if (G__23177) {
    var bit__4052__auto__ = G__23177.cljs$lang$protocol_mask$partition0$ & 16777216;
    if (bit__4052__auto__ || G__23177.cljs$core$ISequential$) {
      return true;
    } else {
      if (!G__23177.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, G__23177);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, G__23177);
  }
};
cljs.core.sorted_QMARK_ = function sorted_QMARK_(x) {
  var G__23179 = x;
  if (G__23179) {
    var bit__4052__auto__ = G__23179.cljs$lang$protocol_mask$partition0$ & 268435456;
    if (bit__4052__auto__ || G__23179.cljs$core$ISorted$) {
      return true;
    } else {
      if (!G__23179.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, G__23179);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, G__23179);
  }
};
cljs.core.reduceable_QMARK_ = function reduceable_QMARK_(x) {
  var G__23181 = x;
  if (G__23181) {
    var bit__4052__auto__ = G__23181.cljs$lang$protocol_mask$partition0$ & 524288;
    if (bit__4052__auto__ || G__23181.cljs$core$IReduce$) {
      return true;
    } else {
      if (!G__23181.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, G__23181);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, G__23181);
  }
};
cljs.core.map_QMARK_ = function map_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__23183 = x;
    if (G__23183) {
      var bit__4052__auto__ = G__23183.cljs$lang$protocol_mask$partition0$ & 1024;
      if (bit__4052__auto__ || G__23183.cljs$core$IMap$) {
        return true;
      } else {
        if (!G__23183.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, G__23183);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, G__23183);
    }
  }
};
cljs.core.vector_QMARK_ = function vector_QMARK_(x) {
  var G__23185 = x;
  if (G__23185) {
    var bit__4052__auto__ = G__23185.cljs$lang$protocol_mask$partition0$ & 16384;
    if (bit__4052__auto__ || G__23185.cljs$core$IVector$) {
      return true;
    } else {
      if (!G__23185.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, G__23185);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, G__23185);
  }
};
cljs.core.chunked_seq_QMARK_ = function chunked_seq_QMARK_(x) {
  var G__23187 = x;
  if (G__23187) {
    var bit__4045__auto__ = G__23187.cljs$lang$protocol_mask$partition1$ & 512;
    if (bit__4045__auto__ || G__23187.cljs$core$IChunkedSeq$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.js_obj = function() {
  var js_obj = null;
  var js_obj__0 = function() {
    var obj23191 = {};
    return obj23191;
  };
  var js_obj__1 = function() {
    var G__23192__delegate = function(keyvals) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(goog.object.create, keyvals) : cljs.core.apply.call(null, goog.object.create, keyvals);
    };
    var G__23192 = function(var_args) {
      var keyvals = null;
      if (arguments.length > 0) {
        keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__23192__delegate.call(this, keyvals);
    };
    G__23192.cljs$lang$maxFixedArity = 0;
    G__23192.cljs$lang$applyTo = function(arglist__23193) {
      var keyvals = cljs.core.seq(arglist__23193);
      return G__23192__delegate(keyvals);
    };
    G__23192.cljs$core$IFn$_invoke$arity$variadic = G__23192__delegate;
    return G__23192;
  }();
  js_obj = function(var_args) {
    var keyvals = var_args;
    switch(arguments.length) {
      case 0:
        return js_obj__0.call(this);
      default:
        return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(arguments, 0));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js_obj.cljs$lang$maxFixedArity = 0;
  js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
  js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
  js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
  return js_obj;
}();
cljs.core.js_keys = function js_keys(obj) {
  var keys = [];
  goog.object.forEach(obj, function(val, key, obj__$1) {
    return keys.push(key);
  });
  return keys;
};
cljs.core.js_delete = function js_delete(obj, key) {
  return delete obj[key];
};
cljs.core.array_copy = function array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__23194 = i__$1 + 1;
      var G__23195 = j__$1 + 1;
      var G__23196 = len__$1 - 1;
      i__$1 = G__23194;
      j__$1 = G__23195;
      len__$1 = G__23196;
      continue;
    }
    break;
  }
};
cljs.core.array_copy_downward = function array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__23197 = i__$1 - 1;
      var G__23198 = j__$1 - 1;
      var G__23199 = len__$1 - 1;
      i__$1 = G__23197;
      j__$1 = G__23198;
      len__$1 = G__23199;
      continue;
    }
    break;
  }
};
cljs.core.lookup_sentinel = function() {
  var obj23201 = {};
  return obj23201;
}();
cljs.core.false_QMARK_ = function false_QMARK_(x) {
  return x === false;
};
cljs.core.true_QMARK_ = function true_QMARK_(x) {
  return x === true;
};
cljs.core.undefined_QMARK_ = function undefined_QMARK_(x) {
  return void 0 === x;
};
cljs.core.seq_QMARK_ = function seq_QMARK_(s) {
  if (s == null) {
    return false;
  } else {
    var G__23203 = s;
    if (G__23203) {
      var bit__4052__auto__ = G__23203.cljs$lang$protocol_mask$partition0$ & 64;
      if (bit__4052__auto__ || G__23203.cljs$core$ISeq$) {
        return true;
      } else {
        if (!G__23203.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__23203);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__23203);
    }
  }
};
cljs.core.seqable_QMARK_ = function seqable_QMARK_(s) {
  var G__23205 = s;
  if (G__23205) {
    var bit__4052__auto__ = G__23205.cljs$lang$protocol_mask$partition0$ & 8388608;
    if (bit__4052__auto__ || G__23205.cljs$core$ISeqable$) {
      return true;
    } else {
      if (!G__23205.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, G__23205);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, G__23205);
  }
};
cljs.core.boolean$ = function boolean$(x) {
  if (cljs.core.truth_(x)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ifn_QMARK_ = function ifn_QMARK_(f) {
  var or__3408__auto__ = cljs.core.fn_QMARK_(f);
  if (or__3408__auto__) {
    return or__3408__auto__;
  } else {
    var G__23209 = f;
    if (G__23209) {
      var bit__4052__auto__ = G__23209.cljs$lang$protocol_mask$partition0$ & 1;
      if (bit__4052__auto__ || G__23209.cljs$core$IFn$) {
        return true;
      } else {
        if (!G__23209.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, G__23209);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, G__23209);
    }
  }
};
cljs.core.integer_QMARK_ = function integer_QMARK_(n) {
  return typeof n === "number" && (!isNaN(n) && (!(n === Infinity) && parseFloat(n) === parseInt(n, 10)));
};
cljs.core.contains_QMARK_ = function contains_QMARK_(coll, v) {
  if (cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false;
  } else {
    return true;
  }
};
cljs.core.find = function find(coll, k) {
  if (!(coll == null) && (cljs.core.associative_QMARK_(coll) && cljs.core.contains_QMARK_(coll, k))) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, k)], null);
  } else {
    return null;
  }
};
cljs.core.distinct_QMARK_ = function() {
  var distinct_QMARK_ = null;
  var distinct_QMARK___1 = function(x) {
    return true;
  };
  var distinct_QMARK___2 = function(x, y) {
    return!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
  };
  var distinct_QMARK___3 = function() {
    var G__23210__delegate = function(x, y, more) {
      if (!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
        var s = cljs.core.PersistentHashSet.fromArray([y, x], true);
        var xs = more;
        while (true) {
          var x__$1 = cljs.core.first(xs);
          var etc = cljs.core.next(xs);
          if (cljs.core.truth_(xs)) {
            if (cljs.core.contains_QMARK_(s, x__$1)) {
              return false;
            } else {
              var G__23211 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s, x__$1);
              var G__23212 = etc;
              s = G__23211;
              xs = G__23212;
              continue;
            }
          } else {
            return true;
          }
          break;
        }
      } else {
        return false;
      }
    };
    var G__23210 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__23210__delegate.call(this, x, y, more);
    };
    G__23210.cljs$lang$maxFixedArity = 2;
    G__23210.cljs$lang$applyTo = function(arglist__23213) {
      var x = cljs.core.first(arglist__23213);
      arglist__23213 = cljs.core.next(arglist__23213);
      var y = cljs.core.first(arglist__23213);
      var more = cljs.core.rest(arglist__23213);
      return G__23210__delegate(x, y, more);
    };
    G__23210.cljs$core$IFn$_invoke$arity$variadic = G__23210__delegate;
    return G__23210;
  }();
  distinct_QMARK_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return distinct_QMARK___1.call(this, x);
      case 2:
        return distinct_QMARK___2.call(this, x, y);
      default:
        return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  distinct_QMARK_.cljs$lang$maxFixedArity = 2;
  distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
  return distinct_QMARK_;
}();
cljs.core.sequence = function sequence(coll) {
  if (cljs.core.seq_QMARK_(coll)) {
    return coll;
  } else {
    var or__3408__auto__ = cljs.core.seq(coll);
    if (or__3408__auto__) {
      return or__3408__auto__;
    } else {
      return cljs.core.List.EMPTY;
    }
  }
};
cljs.core.compare = function compare(x, y) {
  if (x === y) {
    return 0;
  } else {
    if (x == null) {
      return-1;
    } else {
      if (y == null) {
        return 1;
      } else {
        if (cljs.core.type(x) === cljs.core.type(y)) {
          if (function() {
            var G__23215 = x;
            if (G__23215) {
              var bit__4045__auto__ = G__23215.cljs$lang$protocol_mask$partition1$ & 2048;
              if (bit__4045__auto__ || G__23215.cljs$core$IComparable$) {
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          }()) {
            return x.cljs$core$IComparable$_compare$arity$2(null, y);
          } else {
            return goog.array.defaultCompare(x, y);
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw new Error("compare on non-nil objects of different types");
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.core.compare_indexed = function() {
  var compare_indexed = null;
  var compare_indexed__2 = function(xs, ys) {
    var xl = cljs.core.count(xs);
    var yl = cljs.core.count(ys);
    if (xl < yl) {
      return-1;
    } else {
      if (xl > yl) {
        return 1;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs, ys, xl, 0);
        } else {
          return null;
        }
      }
    }
  };
  var compare_indexed__4 = function(xs, ys, len, n) {
    while (true) {
      var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs, n), cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys, n));
      if (d === 0 && n + 1 < len) {
        var G__23216 = xs;
        var G__23217 = ys;
        var G__23218 = len;
        var G__23219 = n + 1;
        xs = G__23216;
        ys = G__23217;
        len = G__23218;
        n = G__23219;
        continue;
      } else {
        return d;
      }
      break;
    }
  };
  compare_indexed = function(xs, ys, len, n) {
    switch(arguments.length) {
      case 2:
        return compare_indexed__2.call(this, xs, ys);
      case 4:
        return compare_indexed__4.call(this, xs, ys, len, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
  compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
  return compare_indexed;
}();
cljs.core.fn__GT_comparator = function fn__GT_comparator(f) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f, cljs.core.compare)) {
    return cljs.core.compare;
  } else {
    return function(x, y) {
      var r = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y);
      if (typeof r === "number") {
        return r;
      } else {
        if (cljs.core.truth_(r)) {
          return-1;
        } else {
          if (cljs.core.truth_(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(y, x) : f.call(null, y, x))) {
            return 1;
          } else {
            return 0;
          }
        }
      }
    };
  }
};
cljs.core.sort = function() {
  var sort = null;
  var sort__1 = function(coll) {
    return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare, coll);
  };
  var sort__2 = function(comp, coll) {
    if (cljs.core.seq(coll)) {
      var a = cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.to_array.call(null, coll);
      goog.array.stableSort(a, cljs.core.fn__GT_comparator(comp));
      return cljs.core.seq(a);
    } else {
      return cljs.core.List.EMPTY;
    }
  };
  sort = function(comp, coll) {
    switch(arguments.length) {
      case 1:
        return sort__1.call(this, comp);
      case 2:
        return sort__2.call(this, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
  sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
  return sort;
}();
cljs.core.sort_by = function() {
  var sort_by = null;
  var sort_by__2 = function(keyfn, coll) {
    return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn, cljs.core.compare, coll);
  };
  var sort_by__3 = function(keyfn, comp, coll) {
    return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(function(x, y) {
      return cljs.core.fn__GT_comparator(comp).call(null, keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(x) : keyfn.call(null, x), keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(y) : keyfn.call(null, y));
    }, coll);
  };
  sort_by = function(keyfn, comp, coll) {
    switch(arguments.length) {
      case 2:
        return sort_by__2.call(this, keyfn, comp);
      case 3:
        return sort_by__3.call(this, keyfn, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
  sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
  return sort_by;
}();
cljs.core.seq_reduce = function() {
  var seq_reduce = null;
  var seq_reduce__2 = function(f, coll) {
    var temp__4090__auto__ = cljs.core.seq(coll);
    if (temp__4090__auto__) {
      var s = temp__4090__auto__;
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f, cljs.core.first(s), cljs.core.next(s)) : cljs.core.reduce.call(null, f, cljs.core.first(s), cljs.core.next(s));
    } else {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    }
  };
  var seq_reduce__3 = function(f, val, coll) {
    var val__$1 = val;
    var coll__$1 = cljs.core.seq(coll);
    while (true) {
      if (coll__$1) {
        var nval = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(val__$1, cljs.core.first(coll__$1)) : f.call(null, val__$1, cljs.core.first(coll__$1));
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(nval) : cljs.core.deref.call(null, nval);
        } else {
          var G__23220 = nval;
          var G__23221 = cljs.core.next(coll__$1);
          val__$1 = G__23220;
          coll__$1 = G__23221;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  seq_reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return seq_reduce__2.call(this, f, val);
      case 3:
        return seq_reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
  seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
  return seq_reduce;
}();
cljs.core.shuffle = function shuffle(coll) {
  var a = cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.to_array.call(null, coll);
  goog.array.shuffle(a);
  return cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(a) : cljs.core.vec.call(null, a);
};
cljs.core.reduce = function() {
  var reduce = null;
  var reduce__2 = function(f, coll) {
    if (function() {
      var G__23224 = coll;
      if (G__23224) {
        var bit__4045__auto__ = G__23224.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__4045__auto__ || G__23224.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(null, f);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
            return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll);
            } else {
              return null;
            }
          }
        }
      }
    }
  };
  var reduce__3 = function(f, val, coll) {
    if (function() {
      var G__23225 = coll;
      if (G__23225) {
        var bit__4045__auto__ = G__23225.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__4045__auto__ || G__23225.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(null, f, val);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
            return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, val, coll);
            } else {
              return null;
            }
          }
        }
      }
    }
  };
  reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return reduce__2.call(this, f, val);
      case 3:
        return reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
  reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
  return reduce;
}();
cljs.core.reduce_kv = function reduce_kv(f, init, coll) {
  if (!(coll == null)) {
    return cljs.core._kv_reduce(coll, f, init);
  } else {
    return init;
  }
};
cljs.core._PLUS_ = function() {
  var _PLUS_ = null;
  var _PLUS___0 = function() {
    return 0;
  };
  var _PLUS___1 = function(x) {
    return x;
  };
  var _PLUS___2 = function(x, y) {
    return x + y;
  };
  var _PLUS___3 = function() {
    var G__23226__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_, x + y, more);
    };
    var G__23226 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__23226__delegate.call(this, x, y, more);
    };
    G__23226.cljs$lang$maxFixedArity = 2;
    G__23226.cljs$lang$applyTo = function(arglist__23227) {
      var x = cljs.core.first(arglist__23227);
      arglist__23227 = cljs.core.next(arglist__23227);
      var y = cljs.core.first(arglist__23227);
      var more = cljs.core.rest(arglist__23227);
      return G__23226__delegate(x, y, more);
    };
    G__23226.cljs$core$IFn$_invoke$arity$variadic = G__23226__delegate;
    return G__23226;
  }();
  _PLUS_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _PLUS___0.call(this);
      case 1:
        return _PLUS___1.call(this, x);
      case 2:
        return _PLUS___2.call(this, x, y);
      default:
        return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _PLUS_.cljs$lang$maxFixedArity = 2;
  _PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
  _PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
  _PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
  _PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
  _PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
  return _PLUS_;
}();
cljs.core._ = function() {
  var _ = null;
  var ___1 = function(x) {
    return-x;
  };
  var ___2 = function(x, y) {
    return x - y;
  };
  var ___3 = function() {
    var G__23228__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_, x - y, more);
    };
    var G__23228 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__23228__delegate.call(this, x, y, more);
    };
    G__23228.cljs$lang$maxFixedArity = 2;
    G__23228.cljs$lang$applyTo = function(arglist__23229) {
      var x = cljs.core.first(arglist__23229);
      arglist__23229 = cljs.core.next(arglist__23229);
      var y = cljs.core.first(arglist__23229);
      var more = cljs.core.rest(arglist__23229);
      return G__23228__delegate(x, y, more);
    };
    G__23228.cljs$core$IFn$_invoke$arity$variadic = G__23228__delegate;
    return G__23228;
  }();
  _ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return ___1.call(this, x);
      case 2:
        return ___2.call(this, x, y);
      default:
        return ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _.cljs$lang$maxFixedArity = 2;
  _.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
  _.cljs$core$IFn$_invoke$arity$1 = ___1;
  _.cljs$core$IFn$_invoke$arity$2 = ___2;
  _.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _;
}();
cljs.core._STAR_ = function() {
  var _STAR_ = null;
  var _STAR___0 = function() {
    return 1;
  };
  var _STAR___1 = function(x) {
    return x;
  };
  var _STAR___2 = function(x, y) {
    return x * y;
  };
  var _STAR___3 = function() {
    var G__23230__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_, x * y, more);
    };
    var G__23230 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__23230__delegate.call(this, x, y, more);
    };
    G__23230.cljs$lang$maxFixedArity = 2;
    G__23230.cljs$lang$applyTo = function(arglist__23231) {
      var x = cljs.core.first(arglist__23231);
      arglist__23231 = cljs.core.next(arglist__23231);
      var y = cljs.core.first(arglist__23231);
      var more = cljs.core.rest(arglist__23231);
      return G__23230__delegate(x, y, more);
    };
    G__23230.cljs$core$IFn$_invoke$arity$variadic = G__23230__delegate;
    return G__23230;
  }();
  _STAR_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _STAR___0.call(this);
      case 1:
        return _STAR___1.call(this, x);
      case 2:
        return _STAR___2.call(this, x, y);
      default:
        return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _STAR_.cljs$lang$maxFixedArity = 2;
  _STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
  _STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
  _STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
  _STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
  _STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
  return _STAR_;
}();
cljs.core._SLASH_ = function() {
  var _SLASH_ = null;
  var _SLASH___1 = function(x) {
    return _SLASH_.cljs$core$IFn$_invoke$arity$2(1, x);
  };
  var _SLASH___2 = function(x, y) {
    return x / y;
  };
  var _SLASH___3 = function() {
    var G__23232__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_, _SLASH_.cljs$core$IFn$_invoke$arity$2(x, y), more);
    };
    var G__23232 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__23232__delegate.call(this, x, y, more);
    };
    G__23232.cljs$lang$maxFixedArity = 2;
    G__23232.cljs$lang$applyTo = function(arglist__23233) {
      var x = cljs.core.first(arglist__23233);
      arglist__23233 = cljs.core.next(arglist__23233);
      var y = cljs.core.first(arglist__23233);
      var more = cljs.core.rest(arglist__23233);
      return G__23232__delegate(x, y, more);
    };
    G__23232.cljs$core$IFn$_invoke$arity$variadic = G__23232__delegate;
    return G__23232;
  }();
  _SLASH_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _SLASH___1.call(this, x);
      case 2:
        return _SLASH___2.call(this, x, y);
      default:
        return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _SLASH_.cljs$lang$maxFixedArity = 2;
  _SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
  _SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
  _SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
  _SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
  return _SLASH_;
}();
cljs.core._LT_ = function() {
  var _LT_ = null;
  var _LT___1 = function(x) {
    return true;
  };
  var _LT___2 = function(x, y) {
    return x < y;
  };
  var _LT___3 = function() {
    var G__23234__delegate = function(x, y, more) {
      while (true) {
        if (x < y) {
          if (cljs.core.next(more)) {
            var G__23235 = y;
            var G__23236 = cljs.core.first(more);
            var G__23237 = cljs.core.next(more);
            x = G__23235;
            y = G__23236;
            more = G__23237;
            continue;
          } else {
            return y < cljs.core.first(more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__23234 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__23234__delegate.call(this, x, y, more);
    };
    G__23234.cljs$lang$maxFixedArity = 2;
    G__23234.cljs$lang$applyTo = function(arglist__23238) {
      var x = cljs.core.first(arglist__23238);
      arglist__23238 = cljs.core.next(arglist__23238);
      var y = cljs.core.first(arglist__23238);
      var more = cljs.core.rest(arglist__23238);
      return G__23234__delegate(x, y, more);
    };
    G__23234.cljs$core$IFn$_invoke$arity$variadic = G__23234__delegate;
    return G__23234;
  }();
  _LT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT___1.call(this, x);
      case 2:
        return _LT___2.call(this, x, y);
      default:
        return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT_.cljs$lang$maxFixedArity = 2;
  _LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
  _LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
  _LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
  _LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT_;
}();
cljs.core._LT__EQ_ = function() {
  var _LT__EQ_ = null;
  var _LT__EQ___1 = function(x) {
    return true;
  };
  var _LT__EQ___2 = function(x, y) {
    return x <= y;
  };
  var _LT__EQ___3 = function() {
    var G__23239__delegate = function(x, y, more) {
      while (true) {
        if (x <= y) {
          if (cljs.core.next(more)) {
            var G__23240 = y;
            var G__23241 = cljs.core.first(more);
            var G__23242 = cljs.core.next(more);
            x = G__23240;
            y = G__23241;
            more = G__23242;
            continue;
          } else {
            return y <= cljs.core.first(more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__23239 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__23239__delegate.call(this, x, y, more);
    };
    G__23239.cljs$lang$maxFixedArity = 2;
    G__23239.cljs$lang$applyTo = function(arglist__23243) {
      var x = cljs.core.first(arglist__23243);
      arglist__23243 = cljs.core.next(arglist__23243);
      var y = cljs.core.first(arglist__23243);
      var more = cljs.core.rest(arglist__23243);
      return G__23239__delegate(x, y, more);
    };
    G__23239.cljs$core$IFn$_invoke$arity$variadic = G__23239__delegate;
    return G__23239;
  }();
  _LT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT__EQ___1.call(this, x);
      case 2:
        return _LT__EQ___2.call(this, x, y);
      default:
        return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT__EQ_.cljs$lang$maxFixedArity = 2;
  _LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT__EQ_;
}();
cljs.core._GT_ = function() {
  var _GT_ = null;
  var _GT___1 = function(x) {
    return true;
  };
  var _GT___2 = function(x, y) {
    return x > y;
  };
  var _GT___3 = function() {
    var G__23244__delegate = function(x, y, more) {
      while (true) {
        if (x > y) {
          if (cljs.core.next(more)) {
            var G__23245 = y;
            var G__23246 = cljs.core.first(more);
            var G__23247 = cljs.core.next(more);
            x = G__23245;
            y = G__23246;
            more = G__23247;
            continue;
          } else {
            return y > cljs.core.first(more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__23244 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__23244__delegate.call(this, x, y, more);
    };
    G__23244.cljs$lang$maxFixedArity = 2;
    G__23244.cljs$lang$applyTo = function(arglist__23248) {
      var x = cljs.core.first(arglist__23248);
      arglist__23248 = cljs.core.next(arglist__23248);
      var y = cljs.core.first(arglist__23248);
      var more = cljs.core.rest(arglist__23248);
      return G__23244__delegate(x, y, more);
    };
    G__23244.cljs$core$IFn$_invoke$arity$variadic = G__23244__delegate;
    return G__23244;
  }();
  _GT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT___1.call(this, x);
      case 2:
        return _GT___2.call(this, x, y);
      default:
        return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT_.cljs$lang$maxFixedArity = 2;
  _GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
  _GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
  _GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
  _GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT_;
}();
cljs.core._GT__EQ_ = function() {
  var _GT__EQ_ = null;
  var _GT__EQ___1 = function(x) {
    return true;
  };
  var _GT__EQ___2 = function(x, y) {
    return x >= y;
  };
  var _GT__EQ___3 = function() {
    var G__23249__delegate = function(x, y, more) {
      while (true) {
        if (x >= y) {
          if (cljs.core.next(more)) {
            var G__23250 = y;
            var G__23251 = cljs.core.first(more);
            var G__23252 = cljs.core.next(more);
            x = G__23250;
            y = G__23251;
            more = G__23252;
            continue;
          } else {
            return y >= cljs.core.first(more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__23249 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__23249__delegate.call(this, x, y, more);
    };
    G__23249.cljs$lang$maxFixedArity = 2;
    G__23249.cljs$lang$applyTo = function(arglist__23253) {
      var x = cljs.core.first(arglist__23253);
      arglist__23253 = cljs.core.next(arglist__23253);
      var y = cljs.core.first(arglist__23253);
      var more = cljs.core.rest(arglist__23253);
      return G__23249__delegate(x, y, more);
    };
    G__23249.cljs$core$IFn$_invoke$arity$variadic = G__23249__delegate;
    return G__23249;
  }();
  _GT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT__EQ___1.call(this, x);
      case 2:
        return _GT__EQ___2.call(this, x, y);
      default:
        return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT__EQ_.cljs$lang$maxFixedArity = 2;
  _GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT__EQ_;
}();
cljs.core.dec = function dec(x) {
  return x - 1;
};
cljs.core.max = function() {
  var max = null;
  var max__1 = function(x) {
    return x;
  };
  var max__2 = function(x, y) {
    var x__3715__auto__ = x;
    var y__3716__auto__ = y;
    return x__3715__auto__ > y__3716__auto__ ? x__3715__auto__ : y__3716__auto__;
  };
  var max__3 = function() {
    var G__23254__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max, function() {
        var x__3715__auto__ = x;
        var y__3716__auto__ = y;
        return x__3715__auto__ > y__3716__auto__ ? x__3715__auto__ : y__3716__auto__;
      }(), more);
    };
    var G__23254 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__23254__delegate.call(this, x, y, more);
    };
    G__23254.cljs$lang$maxFixedArity = 2;
    G__23254.cljs$lang$applyTo = function(arglist__23255) {
      var x = cljs.core.first(arglist__23255);
      arglist__23255 = cljs.core.next(arglist__23255);
      var y = cljs.core.first(arglist__23255);
      var more = cljs.core.rest(arglist__23255);
      return G__23254__delegate(x, y, more);
    };
    G__23254.cljs$core$IFn$_invoke$arity$variadic = G__23254__delegate;
    return G__23254;
  }();
  max = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return max__1.call(this, x);
      case 2:
        return max__2.call(this, x, y);
      default:
        return max__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max.cljs$lang$maxFixedArity = 2;
  max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
  max.cljs$core$IFn$_invoke$arity$1 = max__1;
  max.cljs$core$IFn$_invoke$arity$2 = max__2;
  max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
  return max;
}();
cljs.core.min = function() {
  var min = null;
  var min__1 = function(x) {
    return x;
  };
  var min__2 = function(x, y) {
    var x__3722__auto__ = x;
    var y__3723__auto__ = y;
    return x__3722__auto__ < y__3723__auto__ ? x__3722__auto__ : y__3723__auto__;
  };
  var min__3 = function() {
    var G__23256__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min, function() {
        var x__3722__auto__ = x;
        var y__3723__auto__ = y;
        return x__3722__auto__ < y__3723__auto__ ? x__3722__auto__ : y__3723__auto__;
      }(), more);
    };
    var G__23256 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__23256__delegate.call(this, x, y, more);
    };
    G__23256.cljs$lang$maxFixedArity = 2;
    G__23256.cljs$lang$applyTo = function(arglist__23257) {
      var x = cljs.core.first(arglist__23257);
      arglist__23257 = cljs.core.next(arglist__23257);
      var y = cljs.core.first(arglist__23257);
      var more = cljs.core.rest(arglist__23257);
      return G__23256__delegate(x, y, more);
    };
    G__23256.cljs$core$IFn$_invoke$arity$variadic = G__23256__delegate;
    return G__23256;
  }();
  min = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return min__1.call(this, x);
      case 2:
        return min__2.call(this, x, y);
      default:
        return min__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min.cljs$lang$maxFixedArity = 2;
  min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
  min.cljs$core$IFn$_invoke$arity$1 = min__1;
  min.cljs$core$IFn$_invoke$arity$2 = min__2;
  min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
  return min;
}();
cljs.core.byte$ = function byte$(x) {
  return x;
};
cljs.core.char$ = function char$(x) {
  if (typeof x === "number") {
    return String.fromCharCode(x);
  } else {
    if (typeof x === "string" && x.length === 1) {
      return x;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw new Error("Argument to char must be a character or number");
      } else {
        return null;
      }
    }
  }
};
cljs.core.short$ = function short$(x) {
  return x;
};
cljs.core.float$ = function float$(x) {
  return x;
};
cljs.core.double$ = function double$(x) {
  return x;
};
cljs.core.unchecked_byte = function unchecked_byte(x) {
  return x;
};
cljs.core.unchecked_char = function unchecked_char(x) {
  return x;
};
cljs.core.unchecked_short = function unchecked_short(x) {
  return x;
};
cljs.core.unchecked_float = function unchecked_float(x) {
  return x;
};
cljs.core.unchecked_double = function unchecked_double(x) {
  return x;
};
cljs.core.unchecked_add = function() {
  var unchecked_add = null;
  var unchecked_add__0 = function() {
    return 0;
  };
  var unchecked_add__1 = function(x) {
    return x;
  };
  var unchecked_add__2 = function(x, y) {
    return x + y;
  };
  var unchecked_add__3 = function() {
    var G__23258__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add, x + y, more);
    };
    var G__23258 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__23258__delegate.call(this, x, y, more);
    };
    G__23258.cljs$lang$maxFixedArity = 2;
    G__23258.cljs$lang$applyTo = function(arglist__23259) {
      var x = cljs.core.first(arglist__23259);
      arglist__23259 = cljs.core.next(arglist__23259);
      var y = cljs.core.first(arglist__23259);
      var more = cljs.core.rest(arglist__23259);
      return G__23258__delegate(x, y, more);
    };
    G__23258.cljs$core$IFn$_invoke$arity$variadic = G__23258__delegate;
    return G__23258;
  }();
  unchecked_add = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add__0.call(this);
      case 1:
        return unchecked_add__1.call(this, x);
      case 2:
        return unchecked_add__2.call(this, x, y);
      default:
        return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add.cljs$lang$maxFixedArity = 2;
  unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
  unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
  unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
  unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
  unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add;
}();
cljs.core.unchecked_add_int = function() {
  var unchecked_add_int = null;
  var unchecked_add_int__0 = function() {
    return 0;
  };
  var unchecked_add_int__1 = function(x) {
    return x;
  };
  var unchecked_add_int__2 = function(x, y) {
    return x + y;
  };
  var unchecked_add_int__3 = function() {
    var G__23260__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int, x + y, more);
    };
    var G__23260 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__23260__delegate.call(this, x, y, more);
    };
    G__23260.cljs$lang$maxFixedArity = 2;
    G__23260.cljs$lang$applyTo = function(arglist__23261) {
      var x = cljs.core.first(arglist__23261);
      arglist__23261 = cljs.core.next(arglist__23261);
      var y = cljs.core.first(arglist__23261);
      var more = cljs.core.rest(arglist__23261);
      return G__23260__delegate(x, y, more);
    };
    G__23260.cljs$core$IFn$_invoke$arity$variadic = G__23260__delegate;
    return G__23260;
  }();
  unchecked_add_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add_int__0.call(this);
      case 1:
        return unchecked_add_int__1.call(this, x);
      case 2:
        return unchecked_add_int__2.call(this, x, y);
      default:
        return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add_int.cljs$lang$maxFixedArity = 2;
  unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add_int;
}();
cljs.core.unchecked_dec = function unchecked_dec(x) {
  return x - 1;
};
cljs.core.unchecked_dec_int = function unchecked_dec_int(x) {
  return x - 1;
};
cljs.core.unchecked_divide_int = function() {
  var unchecked_divide_int = null;
  var unchecked_divide_int__1 = function(x) {
    return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(1, x);
  };
  var unchecked_divide_int__2 = function(x, y) {
    return x / y;
  };
  var unchecked_divide_int__3 = function() {
    var G__23262__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int, unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x, y), more);
    };
    var G__23262 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__23262__delegate.call(this, x, y, more);
    };
    G__23262.cljs$lang$maxFixedArity = 2;
    G__23262.cljs$lang$applyTo = function(arglist__23263) {
      var x = cljs.core.first(arglist__23263);
      arglist__23263 = cljs.core.next(arglist__23263);
      var y = cljs.core.first(arglist__23263);
      var more = cljs.core.rest(arglist__23263);
      return G__23262__delegate(x, y, more);
    };
    G__23262.cljs$core$IFn$_invoke$arity$variadic = G__23262__delegate;
    return G__23262;
  }();
  unchecked_divide_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_divide_int__1.call(this, x);
      case 2:
        return unchecked_divide_int__2.call(this, x, y);
      default:
        return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_divide_int.cljs$lang$maxFixedArity = 2;
  unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_divide_int;
}();
cljs.core.unchecked_inc = function unchecked_inc(x) {
  return x + 1;
};
cljs.core.unchecked_inc_int = function unchecked_inc_int(x) {
  return x + 1;
};
cljs.core.unchecked_multiply = function() {
  var unchecked_multiply = null;
  var unchecked_multiply__0 = function() {
    return 1;
  };
  var unchecked_multiply__1 = function(x) {
    return x;
  };
  var unchecked_multiply__2 = function(x, y) {
    return x * y;
  };
  var unchecked_multiply__3 = function() {
    var G__23264__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply, x * y, more);
    };
    var G__23264 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__23264__delegate.call(this, x, y, more);
    };
    G__23264.cljs$lang$maxFixedArity = 2;
    G__23264.cljs$lang$applyTo = function(arglist__23265) {
      var x = cljs.core.first(arglist__23265);
      arglist__23265 = cljs.core.next(arglist__23265);
      var y = cljs.core.first(arglist__23265);
      var more = cljs.core.rest(arglist__23265);
      return G__23264__delegate(x, y, more);
    };
    G__23264.cljs$core$IFn$_invoke$arity$variadic = G__23264__delegate;
    return G__23264;
  }();
  unchecked_multiply = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply__0.call(this);
      case 1:
        return unchecked_multiply__1.call(this, x);
      case 2:
        return unchecked_multiply__2.call(this, x, y);
      default:
        return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply.cljs$lang$maxFixedArity = 2;
  unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply;
}();
cljs.core.unchecked_multiply_int = function() {
  var unchecked_multiply_int = null;
  var unchecked_multiply_int__0 = function() {
    return 1;
  };
  var unchecked_multiply_int__1 = function(x) {
    return x;
  };
  var unchecked_multiply_int__2 = function(x, y) {
    return x * y;
  };
  var unchecked_multiply_int__3 = function() {
    var G__23266__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int, x * y, more);
    };
    var G__23266 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__23266__delegate.call(this, x, y, more);
    };
    G__23266.cljs$lang$maxFixedArity = 2;
    G__23266.cljs$lang$applyTo = function(arglist__23267) {
      var x = cljs.core.first(arglist__23267);
      arglist__23267 = cljs.core.next(arglist__23267);
      var y = cljs.core.first(arglist__23267);
      var more = cljs.core.rest(arglist__23267);
      return G__23266__delegate(x, y, more);
    };
    G__23266.cljs$core$IFn$_invoke$arity$variadic = G__23266__delegate;
    return G__23266;
  }();
  unchecked_multiply_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply_int__0.call(this);
      case 1:
        return unchecked_multiply_int__1.call(this, x);
      case 2:
        return unchecked_multiply_int__2.call(this, x, y);
      default:
        return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
  unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply_int;
}();
cljs.core.unchecked_negate = function unchecked_negate(x) {
  return-x;
};
cljs.core.unchecked_negate_int = function unchecked_negate_int(x) {
  return-x;
};
cljs.core.unchecked_remainder_int = function unchecked_remainder_int(x, n) {
  return cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(x, n) : cljs.core.mod.call(null, x, n);
};
cljs.core.unchecked_substract = function() {
  var unchecked_substract = null;
  var unchecked_substract__1 = function(x) {
    return-x;
  };
  var unchecked_substract__2 = function(x, y) {
    return x - y;
  };
  var unchecked_substract__3 = function() {
    var G__23268__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_substract, x - y, more);
    };
    var G__23268 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__23268__delegate.call(this, x, y, more);
    };
    G__23268.cljs$lang$maxFixedArity = 2;
    G__23268.cljs$lang$applyTo = function(arglist__23269) {
      var x = cljs.core.first(arglist__23269);
      arglist__23269 = cljs.core.next(arglist__23269);
      var y = cljs.core.first(arglist__23269);
      var more = cljs.core.rest(arglist__23269);
      return G__23268__delegate(x, y, more);
    };
    G__23268.cljs$core$IFn$_invoke$arity$variadic = G__23268__delegate;
    return G__23268;
  }();
  unchecked_substract = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_substract__1.call(this, x);
      case 2:
        return unchecked_substract__2.call(this, x, y);
      default:
        return unchecked_substract__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_substract.cljs$lang$maxFixedArity = 2;
  unchecked_substract.cljs$lang$applyTo = unchecked_substract__3.cljs$lang$applyTo;
  unchecked_substract.cljs$core$IFn$_invoke$arity$1 = unchecked_substract__1;
  unchecked_substract.cljs$core$IFn$_invoke$arity$2 = unchecked_substract__2;
  unchecked_substract.cljs$core$IFn$_invoke$arity$variadic = unchecked_substract__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_substract;
}();
cljs.core.unchecked_substract_int = function() {
  var unchecked_substract_int = null;
  var unchecked_substract_int__1 = function(x) {
    return-x;
  };
  var unchecked_substract_int__2 = function(x, y) {
    return x - y;
  };
  var unchecked_substract_int__3 = function() {
    var G__23270__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_substract_int, x - y, more);
    };
    var G__23270 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__23270__delegate.call(this, x, y, more);
    };
    G__23270.cljs$lang$maxFixedArity = 2;
    G__23270.cljs$lang$applyTo = function(arglist__23271) {
      var x = cljs.core.first(arglist__23271);
      arglist__23271 = cljs.core.next(arglist__23271);
      var y = cljs.core.first(arglist__23271);
      var more = cljs.core.rest(arglist__23271);
      return G__23270__delegate(x, y, more);
    };
    G__23270.cljs$core$IFn$_invoke$arity$variadic = G__23270__delegate;
    return G__23270;
  }();
  unchecked_substract_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_substract_int__1.call(this, x);
      case 2:
        return unchecked_substract_int__2.call(this, x, y);
      default:
        return unchecked_substract_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_substract_int.cljs$lang$maxFixedArity = 2;
  unchecked_substract_int.cljs$lang$applyTo = unchecked_substract_int__3.cljs$lang$applyTo;
  unchecked_substract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_substract_int__1;
  unchecked_substract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_substract_int__2;
  unchecked_substract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_substract_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_substract_int;
}();
cljs.core.fix = function fix(q) {
  if (q >= 0) {
    return Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(q) : Math.floor.call(null, q);
  } else {
    return Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(q) : Math.ceil.call(null, q);
  }
};
cljs.core.int$ = function int$(x) {
  return x | 0;
};
cljs.core.unchecked_int = function unchecked_int(x) {
  return cljs.core.fix(x);
};
cljs.core.long$ = function long$(x) {
  return cljs.core.fix(x);
};
cljs.core.unchecked_long = function unchecked_long(x) {
  return cljs.core.fix(x);
};
cljs.core.booleans = function booleans(x) {
  return x;
};
cljs.core.bytes = function bytes(x) {
  return x;
};
cljs.core.chars = function chars(x) {
  return x;
};
cljs.core.shorts = function shorts(x) {
  return x;
};
cljs.core.ints = function ints(x) {
  return x;
};
cljs.core.floats = function floats(x) {
  return x;
};
cljs.core.doubles = function doubles(x) {
  return x;
};
cljs.core.longs = function longs(x) {
  return x;
};
cljs.core.js_mod = function js_mod(n, d) {
  return n % d;
};
cljs.core.mod = function mod(n, d) {
  return(n % d + d) % d;
};
cljs.core.quot = function quot(n, d) {
  var rem = n % d;
  return cljs.core.fix((n - rem) / d);
};
cljs.core.rem = function rem(n, d) {
  var q = cljs.core.quot(n, d);
  return n - d * q;
};
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null);
  };
  var rand__1 = function(n) {
    return n * rand.cljs$core$IFn$_invoke$arity$0();
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand;
}();
cljs.core.rand_int = function rand_int(n) {
  return cljs.core.fix(cljs.core.rand.cljs$core$IFn$_invoke$arity$1(n));
};
cljs.core.bit_xor = function bit_xor(x, y) {
  return x ^ y;
};
cljs.core.bit_and = function bit_and(x, y) {
  return x & y;
};
cljs.core.bit_or = function bit_or(x, y) {
  return x | y;
};
cljs.core.bit_and_not = function bit_and_not(x, y) {
  return x & ~y;
};
cljs.core.bit_clear = function bit_clear(x, n) {
  return x & ~(1 << n);
};
cljs.core.bit_flip = function bit_flip(x, n) {
  return x ^ 1 << n;
};
cljs.core.bit_not = function bit_not(x) {
  return~x;
};
cljs.core.bit_set = function bit_set(x, n) {
  return x | 1 << n;
};
cljs.core.bit_test = function bit_test(x, n) {
  return(x & 1 << n) != 0;
};
cljs.core.bit_shift_left = function bit_shift_left(x, n) {
  return x << n;
};
cljs.core.bit_shift_right = function bit_shift_right(x, n) {
  return x >> n;
};
cljs.core.bit_shift_right_zero_fill = function bit_shift_right_zero_fill(x, n) {
  return x >>> n;
};
cljs.core.unsigned_bit_shift_right = function unsigned_bit_shift_right(x, n) {
  return x >>> n;
};
cljs.core.bit_count = function bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return(v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24;
};
cljs.core._EQ__EQ_ = function() {
  var _EQ__EQ_ = null;
  var _EQ__EQ___1 = function(x) {
    return true;
  };
  var _EQ__EQ___2 = function(x, y) {
    return cljs.core._equiv(x, y);
  };
  var _EQ__EQ___3 = function() {
    var G__23272__delegate = function(x, y, more) {
      while (true) {
        if (_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
          if (cljs.core.next(more)) {
            var G__23273 = y;
            var G__23274 = cljs.core.first(more);
            var G__23275 = cljs.core.next(more);
            x = G__23273;
            y = G__23274;
            more = G__23275;
            continue;
          } else {
            return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y, cljs.core.first(more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__23272 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__23272__delegate.call(this, x, y, more);
    };
    G__23272.cljs$lang$maxFixedArity = 2;
    G__23272.cljs$lang$applyTo = function(arglist__23276) {
      var x = cljs.core.first(arglist__23276);
      arglist__23276 = cljs.core.next(arglist__23276);
      var y = cljs.core.first(arglist__23276);
      var more = cljs.core.rest(arglist__23276);
      return G__23272__delegate(x, y, more);
    };
    G__23272.cljs$core$IFn$_invoke$arity$variadic = G__23272__delegate;
    return G__23272;
  }();
  _EQ__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ__EQ___1.call(this, x);
      case 2:
        return _EQ__EQ___2.call(this, x, y);
      default:
        return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ__EQ_.cljs$lang$maxFixedArity = 2;
  _EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ__EQ_;
}();
cljs.core.pos_QMARK_ = function pos_QMARK_(n) {
  return n > 0;
};
cljs.core.zero_QMARK_ = function zero_QMARK_(n) {
  return n === 0;
};
cljs.core.neg_QMARK_ = function neg_QMARK_(x) {
  return x < 0;
};
cljs.core.nthnext = function nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq(coll);
  while (true) {
    if (xs && n__$1 > 0) {
      var G__23277 = n__$1 - 1;
      var G__23278 = cljs.core.next(xs);
      n__$1 = G__23277;
      xs = G__23278;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.str = function() {
  var str = null;
  var str__0 = function() {
    return "";
  };
  var str__1 = function(x) {
    if (x == null) {
      return "";
    } else {
      return x.toString();
    }
  };
  var str__2 = function() {
    var G__23279__delegate = function(x, ys) {
      var sb = new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x));
      var more = ys;
      while (true) {
        if (cljs.core.truth_(more)) {
          var G__23280 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
          var G__23281 = cljs.core.next(more);
          sb = G__23280;
          more = G__23281;
          continue;
        } else {
          return sb.toString();
        }
        break;
      }
    };
    var G__23279 = function(x, var_args) {
      var ys = null;
      if (arguments.length > 1) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__23279__delegate.call(this, x, ys);
    };
    G__23279.cljs$lang$maxFixedArity = 1;
    G__23279.cljs$lang$applyTo = function(arglist__23282) {
      var x = cljs.core.first(arglist__23282);
      var ys = cljs.core.rest(arglist__23282);
      return G__23279__delegate(x, ys);
    };
    G__23279.cljs$core$IFn$_invoke$arity$variadic = G__23279__delegate;
    return G__23279;
  }();
  str = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str__0.call(this);
      case 1:
        return str__1.call(this, x);
      default:
        return str__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  str.cljs$lang$maxFixedArity = 1;
  str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
  str.cljs$core$IFn$_invoke$arity$0 = str__0;
  str.cljs$core$IFn$_invoke$arity$1 = str__1;
  str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
  return str;
}();
cljs.core.subs = function() {
  var subs = null;
  var subs__2 = function(s, start) {
    return s.substring(start);
  };
  var subs__3 = function(s, start, end) {
    return s.substring(start, end);
  };
  subs = function(s, start, end) {
    switch(arguments.length) {
      case 2:
        return subs__2.call(this, s, start);
      case 3:
        return subs__3.call(this, s, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
  subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
  return subs;
}();
cljs.core.equiv_sequential = function equiv_sequential(x, y) {
  return cljs.core.boolean$(cljs.core.sequential_QMARK_(y) ? function() {
    var xs = cljs.core.seq(x);
    var ys = cljs.core.seq(y);
    while (true) {
      if (xs == null) {
        return ys == null;
      } else {
        if (ys == null) {
          return false;
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs), cljs.core.first(ys))) {
            var G__23283 = cljs.core.next(xs);
            var G__23284 = cljs.core.next(ys);
            xs = G__23283;
            ys = G__23284;
            continue;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return false;
            } else {
              return null;
            }
          }
        }
      }
      break;
    }
  }() : null);
};
cljs.core.hash_combine = function hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);
};
cljs.core.hash_coll = function hash_coll(coll) {
  if (cljs.core.seq(coll)) {
    var res = cljs.core.hash(cljs.core.first(coll));
    var s = cljs.core.next(coll);
    while (true) {
      if (s == null) {
        return res;
      } else {
        var G__23285 = cljs.core.hash_combine(res, cljs.core.hash(cljs.core.first(s)));
        var G__23286 = cljs.core.next(s);
        res = G__23285;
        s = G__23286;
        continue;
      }
      break;
    }
  } else {
    return 0;
  }
};
cljs.core.hash_imap = function hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq(m);
  while (true) {
    if (s) {
      var e = cljs.core.first(s);
      var G__23287 = (h + (cljs.core.hash(cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.key.call(null, e)) ^ cljs.core.hash(cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.val.call(null, e)))) % 4503599627370496;
      var G__23288 = cljs.core.next(s);
      h = G__23287;
      s = G__23288;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.hash_iset = function hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq(s);
  while (true) {
    if (s__$1) {
      var e = cljs.core.first(s__$1);
      var G__23289 = (h + cljs.core.hash(e)) % 4503599627370496;
      var G__23290 = cljs.core.next(s__$1);
      h = G__23289;
      s__$1 = G__23290;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.extend_object_BANG_ = function extend_object_BANG_(obj, fn_map) {
  var seq__23297_23303 = cljs.core.seq(fn_map);
  var chunk__23298_23304 = null;
  var count__23299_23305 = 0;
  var i__23300_23306 = 0;
  while (true) {
    if (i__23300_23306 < count__23299_23305) {
      var vec__23301_23307 = chunk__23298_23304.cljs$core$IIndexed$_nth$arity$2(null, i__23300_23306);
      var key_name_23308 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23301_23307, 0, null);
      var f_23309 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23301_23307, 1, null);
      var str_name_23310 = cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(key_name_23308) : cljs.core.name.call(null, key_name_23308);
      obj[str_name_23310] = f_23309;
      var G__23311 = seq__23297_23303;
      var G__23312 = chunk__23298_23304;
      var G__23313 = count__23299_23305;
      var G__23314 = i__23300_23306 + 1;
      seq__23297_23303 = G__23311;
      chunk__23298_23304 = G__23312;
      count__23299_23305 = G__23313;
      i__23300_23306 = G__23314;
      continue;
    } else {
      var temp__4092__auto___23315 = cljs.core.seq(seq__23297_23303);
      if (temp__4092__auto___23315) {
        var seq__23297_23316__$1 = temp__4092__auto___23315;
        if (cljs.core.chunked_seq_QMARK_(seq__23297_23316__$1)) {
          var c__4150__auto___23317 = cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(seq__23297_23316__$1) : cljs.core.chunk_first.call(null, seq__23297_23316__$1);
          var G__23318 = cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(seq__23297_23316__$1) : cljs.core.chunk_rest.call(null, seq__23297_23316__$1);
          var G__23319 = c__4150__auto___23317;
          var G__23320 = cljs.core.count(c__4150__auto___23317);
          var G__23321 = 0;
          seq__23297_23303 = G__23318;
          chunk__23298_23304 = G__23319;
          count__23299_23305 = G__23320;
          i__23300_23306 = G__23321;
          continue;
        } else {
          var vec__23302_23322 = cljs.core.first(seq__23297_23316__$1);
          var key_name_23323 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23302_23322, 0, null);
          var f_23324 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23302_23322, 1, null);
          var str_name_23325 = cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(key_name_23323) : cljs.core.name.call(null, key_name_23323);
          obj[str_name_23325] = f_23324;
          var G__23326 = cljs.core.next(seq__23297_23316__$1);
          var G__23327 = null;
          var G__23328 = 0;
          var G__23329 = 0;
          seq__23297_23303 = G__23326;
          chunk__23298_23304 = G__23327;
          count__23299_23305 = G__23328;
          i__23300_23306 = G__23329;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return obj;
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65937646;
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core/List");
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3819__auto__ = self__.__hash;
  if (!(h__3819__auto__ == null)) {
    return h__3819__auto__;
  } else {
    var h__3819__auto____$1 = cljs.core.hash_coll(coll__$1);
    self__.__hash = h__3819__auto____$1;
    return h__3819__auto____$1;
  }
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return null;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, coll__$1, self__.count + 1, null);
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._rest(coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(meta__$1, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$ICloneable$ = true;
cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.List(self__.meta, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.__GT_List = function __GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash);
};
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65937614;
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core/EmptyList");
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, null, 1, null);
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.EmptyList(meta__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ICloneable$ = true;
cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.EmptyList(self__.meta);
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.__GT_EmptyList = function __GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta);
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.reversible_QMARK_ = function reversible_QMARK_(coll) {
  var G__23331 = coll;
  if (G__23331) {
    var bit__4052__auto__ = G__23331.cljs$lang$protocol_mask$partition0$ & 134217728;
    if (bit__4052__auto__ || G__23331.cljs$core$IReversible$) {
      return true;
    } else {
      if (!G__23331.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, G__23331);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, G__23331);
  }
};
cljs.core.rseq = function rseq(coll) {
  return cljs.core._rseq(coll);
};
cljs.core.reverse = function reverse(coll) {
  if (cljs.core.reversible_QMARK_(coll)) {
    return cljs.core.rseq(coll);
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, coll);
  }
};
cljs.core.list = function() {
  var list__delegate = function(xs) {
    var arr = xs instanceof cljs.core.IndexedSeq && xs.i === 0 ? xs.arr : function() {
      var arr = [];
      var xs__$1 = xs;
      while (true) {
        if (!(xs__$1 == null)) {
          arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));
          var G__23332 = xs__$1.cljs$core$INext$_next$arity$1(null);
          xs__$1 = G__23332;
          continue;
        } else {
          return arr;
        }
        break;
      }
    }();
    var i = arr.length;
    var r = cljs.core.List.EMPTY;
    while (true) {
      if (i > 0) {
        var G__23333 = i - 1;
        var G__23334 = r.cljs$core$ICollection$_conj$arity$2(null, arr[i - 1]);
        i = G__23333;
        r = G__23334;
        continue;
      } else {
        return r;
      }
      break;
    }
  };
  var list = function(var_args) {
    var xs = null;
    if (arguments.length > 0) {
      xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return list__delegate.call(this, xs);
  };
  list.cljs$lang$maxFixedArity = 0;
  list.cljs$lang$applyTo = function(arglist__23335) {
    var xs = cljs.core.seq(arglist__23335);
    return list__delegate(xs);
  };
  list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
  return list;
}();
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65929452;
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core/Cons");
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3819__auto__ = self__.__hash;
  if (!(h__3819__auto__ == null)) {
    return h__3819__auto__;
  } else {
    var h__3819__auto____$1 = cljs.core.hash_coll(coll__$1);
    self__.__hash = h__3819__auto____$1;
    return h__3819__auto____$1;
  }
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core.seq(self__.rest);
  }
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(null, o, coll__$1, self__.__hash);
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(meta__$1, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$ICloneable$ = true;
cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Cons(self__.meta, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_Cons = function __GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash);
};
cljs.core.cons = function cons(x, coll) {
  if (function() {
    var or__3408__auto__ = coll == null;
    if (or__3408__auto__) {
      return or__3408__auto__;
    } else {
      var G__23339 = coll;
      if (G__23339) {
        var bit__4045__auto__ = G__23339.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4045__auto__ || G__23339.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null);
  } else {
    return new cljs.core.Cons(null, x, cljs.core.seq(coll), null);
  }
};
cljs.core.list_QMARK_ = function list_QMARK_(x) {
  var G__23341 = x;
  if (G__23341) {
    var bit__4052__auto__ = G__23341.cljs$lang$protocol_mask$partition0$ & 33554432;
    if (bit__4052__auto__ || G__23341.cljs$core$IList$) {
      return true;
    } else {
      if (!G__23341.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IList, G__23341);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IList, G__23341);
  }
};
cljs.core.Keyword = function(ns, name, fqn, _hash) {
  this.ns = ns;
  this.name = name;
  this.fqn = fqn;
  this._hash = _hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core/Keyword");
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, [cljs.core.str(":"), cljs.core.str(self__.fqn)].join(""));
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__._hash == null) {
    self__._hash = cljs.core.hash_combine(cljs.core.hash(self__.ns), cljs.core.hash(self__.name)) + 2654435769;
    return self__._hash;
  } else {
    return self__._hash;
  }
};
cljs.core.Keyword.prototype.call = function() {
  var G__23343 = null;
  var G__23343__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
  };
  var G__23343__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
  };
  G__23343 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__23343__2.call(this, self__, coll);
      case 3:
        return G__23343__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__23343;
}();
cljs.core.Keyword.prototype.apply = function(self__, args23342) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args23342)));
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Keyword) {
    return self__.fqn === other.fqn;
  } else {
    return false;
  }
};
cljs.core.Keyword.prototype.cljs$core$ICloneable$ = true;
cljs.core.Keyword.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Keyword(self__.ns, self__.name, self__.fqn, self__._hash);
};
cljs.core.Keyword.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return[cljs.core.str(":"), cljs.core.str(self__.fqn)].join("");
};
cljs.core.__GT_Keyword = function __GT_Keyword(ns, name, fqn, _hash) {
  return new cljs.core.Keyword(ns, name, fqn, _hash);
};
cljs.core.keyword_QMARK_ = function keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword;
};
cljs.core.keyword_identical_QMARK_ = function keyword_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Keyword && y instanceof cljs.core.Keyword) {
      return x.fqn === y.fqn;
    } else {
      return false;
    }
  }
};
cljs.core.namespace = function namespace(x) {
  if (function() {
    var G__23345 = x;
    if (G__23345) {
      var bit__4045__auto__ = G__23345.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4045__auto__ || G__23345.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(null);
  } else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.keyword = function() {
  var keyword = null;
  var keyword__1 = function(name) {
    if (name instanceof cljs.core.Keyword) {
      return name;
    } else {
      if (name instanceof cljs.core.Symbol) {
        return new cljs.core.Keyword(cljs.core.namespace(name), cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(name) : cljs.core.name.call(null, name), name.str, null);
      } else {
        if (typeof name === "string") {
          var parts = name.split("/");
          if (parts.length === 2) {
            return new cljs.core.Keyword(parts[0], parts[1], name, null);
          } else {
            return new cljs.core.Keyword(null, parts[0], name, null);
          }
        } else {
          return null;
        }
      }
    }
  };
  var keyword__2 = function(ns, name) {
    return new cljs.core.Keyword(ns, name, [cljs.core.str(cljs.core.truth_(ns) ? [cljs.core.str(ns), cljs.core.str("/")].join("") : null), cljs.core.str(name)].join(""), null);
  };
  keyword = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return keyword__1.call(this, ns);
      case 2:
        return keyword__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
  keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
  return keyword;
}();
cljs.core.LazySeq = function(meta, fn, s, __hash) {
  this.meta = meta;
  this.fn = fn;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core/LazySeq");
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3819__auto__ = self__.__hash;
  if (!(h__3819__auto__ == null)) {
    return h__3819__auto__;
  } else {
    var h__3819__auto____$1 = cljs.core.hash_coll(coll__$1);
    self__.__hash = h__3819__auto____$1;
    return h__3819__auto____$1;
  }
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.next(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.LazySeq.prototype.sval = function() {
  var self__ = this;
  var coll = this;
  if (self__.fn == null) {
    return self__.s;
  } else {
    self__.s = self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null);
    self__.fn = null;
    return self__.s;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.sval();
  if (self__.s == null) {
    return null;
  } else {
    var ls = self__.s;
    while (true) {
      if (ls instanceof cljs.core.LazySeq) {
        var G__23346 = ls.sval();
        ls = G__23346;
        continue;
      } else {
        self__.s = ls;
        return cljs.core.seq(self__.s);
      }
      break;
    }
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (!(self__.s == null)) {
    return cljs.core.rest(self__.s);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.LazySeq(meta__$1, self__.fn, self__.s, self__.__hash);
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_LazySeq = function __GT_LazySeq(meta, fn, s, __hash) {
  return new cljs.core.LazySeq(meta, fn, s, __hash);
};
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core/ChunkBuffer");
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end;
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1;
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret;
};
cljs.core.__GT_ChunkBuffer = function __GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end);
};
cljs.core.chunk_buffer = function chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0);
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 524306;
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core/ArrayChunk");
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.off], self__.off + 1);
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.off);
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  } else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end);
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  var coll__$1 = this;
  return self__.arr[self__.off + i];
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (i >= 0 && i < self__.end - self__.off) {
    return self__.arr[self__.off + i];
  } else {
    return not_found;
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end - self__.off;
};
cljs.core.__GT_ArrayChunk = function __GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk = function() {
  var array_chunk = null;
  var array_chunk__1 = function(arr) {
    return new cljs.core.ArrayChunk(arr, 0, arr.length);
  };
  var array_chunk__2 = function(arr, off) {
    return new cljs.core.ArrayChunk(arr, off, arr.length);
  };
  var array_chunk__3 = function(arr, off, end) {
    return new cljs.core.ArrayChunk(arr, off, end);
  };
  array_chunk = function(arr, off, end) {
    switch(arguments.length) {
      case 1:
        return array_chunk__1.call(this, arr);
      case 2:
        return array_chunk__2.call(this, arr, off);
      case 3:
        return array_chunk__3.call(this, arr, off, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
  array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
  array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
  return array_chunk;
}();
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core/ChunkedCons");
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3819__auto__ = self__.__hash;
  if (!(h__3819__auto__ == null)) {
    return h__3819__auto__;
  } else {
    var h__3819__auto____$1 = cljs.core.hash_coll(coll__$1);
    self__.__hash = h__3819__auto____$1;
    return h__3819__auto____$1;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, self__.meta, null);
  } else {
    var more__$1 = cljs.core._seq(self__.more);
    if (more__$1 == null) {
      return null;
    } else {
      return more__$1;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, this$__$1);
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk, 0);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, self__.meta, null);
  } else {
    if (self__.more == null) {
      return cljs.core.List.EMPTY;
    } else {
      return self__.more;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return null;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ChunkedCons(self__.chunk, self__.more, m, self__.__hash);
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.chunk;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.more;
  }
};
cljs.core.__GT_ChunkedCons = function __GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash);
};
cljs.core.chunk_cons = function chunk_cons(chunk, rest) {
  if (cljs.core._count(chunk) === 0) {
    return rest;
  } else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null);
  }
};
cljs.core.chunk_append = function chunk_append(b, x) {
  return b.add(x);
};
cljs.core.chunk = function chunk(b) {
  return b.chunk();
};
cljs.core.chunk_first = function chunk_first(s) {
  return cljs.core._chunked_first(s);
};
cljs.core.chunk_rest = function chunk_rest(s) {
  return cljs.core._chunked_rest(s);
};
cljs.core.chunk_next = function chunk_next(s) {
  if (function() {
    var G__23348 = s;
    if (G__23348) {
      var bit__4045__auto__ = G__23348.cljs$lang$protocol_mask$partition1$ & 1024;
      if (bit__4045__auto__ || G__23348.cljs$core$IChunkedNext$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._chunked_next(s);
  } else {
    return cljs.core.seq(cljs.core._chunked_rest(s));
  }
};
cljs.core.to_array = function to_array(s) {
  var ary = [];
  var s__$1 = s;
  while (true) {
    if (cljs.core.seq(s__$1)) {
      ary.push(cljs.core.first(s__$1));
      var G__23349 = cljs.core.next(s__$1);
      s__$1 = G__23349;
      continue;
    } else {
      return ary;
    }
    break;
  }
};
cljs.core.to_array_2d = function to_array_2d(coll) {
  var ret = new Array(cljs.core.count(coll));
  var i_23350 = 0;
  var xs_23351 = cljs.core.seq(coll);
  while (true) {
    if (xs_23351) {
      ret[i_23350] = cljs.core.to_array(cljs.core.first(xs_23351));
      var G__23352 = i_23350 + 1;
      var G__23353 = cljs.core.next(xs_23351);
      i_23350 = G__23352;
      xs_23351 = G__23353;
      continue;
    } else {
    }
    break;
  }
  return ret;
};
cljs.core.int_array = function() {
  var int_array = null;
  var int_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
    } else {
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
    }
  };
  var int_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_(init_val_or_seq)) {
      var s = cljs.core.seq(init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first(s__$1);
          var G__23354 = i + 1;
          var G__23355 = cljs.core.next(s__$1);
          i = G__23354;
          s__$1 = G__23355;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4250__auto___23356 = size;
      var i_23357 = 0;
      while (true) {
        if (i_23357 < n__4250__auto___23356) {
          a[i_23357] = init_val_or_seq;
          var G__23358 = i_23357 + 1;
          i_23357 = G__23358;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  int_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return int_array__1.call(this, size);
      case 2:
        return int_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
  int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
  return int_array;
}();
cljs.core.long_array = function() {
  var long_array = null;
  var long_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
    } else {
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
    }
  };
  var long_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_(init_val_or_seq)) {
      var s = cljs.core.seq(init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first(s__$1);
          var G__23359 = i + 1;
          var G__23360 = cljs.core.next(s__$1);
          i = G__23359;
          s__$1 = G__23360;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4250__auto___23361 = size;
      var i_23362 = 0;
      while (true) {
        if (i_23362 < n__4250__auto___23361) {
          a[i_23362] = init_val_or_seq;
          var G__23363 = i_23362 + 1;
          i_23362 = G__23363;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  long_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return long_array__1.call(this, size);
      case 2:
        return long_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
  long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
  return long_array;
}();
cljs.core.double_array = function() {
  var double_array = null;
  var double_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
    } else {
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
    }
  };
  var double_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_(init_val_or_seq)) {
      var s = cljs.core.seq(init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first(s__$1);
          var G__23364 = i + 1;
          var G__23365 = cljs.core.next(s__$1);
          i = G__23364;
          s__$1 = G__23365;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4250__auto___23366 = size;
      var i_23367 = 0;
      while (true) {
        if (i_23367 < n__4250__auto___23366) {
          a[i_23367] = init_val_or_seq;
          var G__23368 = i_23367 + 1;
          i_23367 = G__23368;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  double_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return double_array__1.call(this, size);
      case 2:
        return double_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
  double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
  return double_array;
}();
cljs.core.object_array = function() {
  var object_array = null;
  var object_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
    } else {
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
    }
  };
  var object_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_(init_val_or_seq)) {
      var s = cljs.core.seq(init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first(s__$1);
          var G__23369 = i + 1;
          var G__23370 = cljs.core.next(s__$1);
          i = G__23369;
          s__$1 = G__23370;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4250__auto___23371 = size;
      var i_23372 = 0;
      while (true) {
        if (i_23372 < n__4250__auto___23371) {
          a[i_23372] = init_val_or_seq;
          var G__23373 = i_23372 + 1;
          i_23372 = G__23373;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  object_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return object_array__1.call(this, size);
      case 2:
        return object_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
  object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
  return object_array;
}();
cljs.core.bounded_count = function bounded_count(s, n) {
  if (cljs.core.counted_QMARK_(s)) {
    return cljs.core.count(s);
  } else {
    var s__$1 = s;
    var i = n;
    var sum = 0;
    while (true) {
      if (i > 0 && cljs.core.seq(s__$1)) {
        var G__23374 = cljs.core.next(s__$1);
        var G__23375 = i - 1;
        var G__23376 = sum + 1;
        s__$1 = G__23374;
        i = G__23375;
        sum = G__23376;
        continue;
      } else {
        return sum;
      }
      break;
    }
  }
};
cljs.core.spread = function spread(arglist) {
  if (arglist == null) {
    return null;
  } else {
    if (cljs.core.next(arglist) == null) {
      return cljs.core.seq(cljs.core.first(arglist));
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core.cons(cljs.core.first(arglist), spread(cljs.core.next(arglist)));
      } else {
        return null;
      }
    }
  }
};
cljs.core.concat = function() {
  var concat = null;
  var concat__0 = function() {
    return new cljs.core.LazySeq(null, function() {
      return null;
    }, null, null);
  };
  var concat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return x;
    }, null, null);
  };
  var concat__2 = function(x, y) {
    return new cljs.core.LazySeq(null, function() {
      var s = cljs.core.seq(x);
      if (s) {
        if (cljs.core.chunked_seq_QMARK_(s)) {
          return cljs.core.chunk_cons(cljs.core.chunk_first(s), concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s), y));
        } else {
          return cljs.core.cons(cljs.core.first(s), concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s), y));
        }
      } else {
        return y;
      }
    }, null, null);
  };
  var concat__3 = function() {
    var G__23377__delegate = function(x, y, zs) {
      var cat = function cat(xys, zs__$1) {
        return new cljs.core.LazySeq(null, function() {
          var xys__$1 = cljs.core.seq(xys);
          if (xys__$1) {
            if (cljs.core.chunked_seq_QMARK_(xys__$1)) {
              return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1), cat(cljs.core.chunk_rest(xys__$1), zs__$1));
            } else {
              return cljs.core.cons(cljs.core.first(xys__$1), cat(cljs.core.rest(xys__$1), zs__$1));
            }
          } else {
            if (cljs.core.truth_(zs__$1)) {
              return cat(cljs.core.first(zs__$1), cljs.core.next(zs__$1));
            } else {
              return null;
            }
          }
        }, null, null);
      };
      return cat(concat.cljs$core$IFn$_invoke$arity$2(x, y), zs);
    };
    var G__23377 = function(x, y, var_args) {
      var zs = null;
      if (arguments.length > 2) {
        zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__23377__delegate.call(this, x, y, zs);
    };
    G__23377.cljs$lang$maxFixedArity = 2;
    G__23377.cljs$lang$applyTo = function(arglist__23378) {
      var x = cljs.core.first(arglist__23378);
      arglist__23378 = cljs.core.next(arglist__23378);
      var y = cljs.core.first(arglist__23378);
      var zs = cljs.core.rest(arglist__23378);
      return G__23377__delegate(x, y, zs);
    };
    G__23377.cljs$core$IFn$_invoke$arity$variadic = G__23377__delegate;
    return G__23377;
  }();
  concat = function(x, y, var_args) {
    var zs = var_args;
    switch(arguments.length) {
      case 0:
        return concat__0.call(this);
      case 1:
        return concat__1.call(this, x);
      case 2:
        return concat__2.call(this, x, y);
      default:
        return concat__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  concat.cljs$lang$maxFixedArity = 2;
  concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
  concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
  concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
  concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
  concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
  return concat;
}();
cljs.core.list_STAR_ = function() {
  var list_STAR_ = null;
  var list_STAR___1 = function(args) {
    return cljs.core.seq(args);
  };
  var list_STAR___2 = function(a, args) {
    return cljs.core.cons(a, args);
  };
  var list_STAR___3 = function(a, b, args) {
    return cljs.core.cons(a, cljs.core.cons(b, args));
  };
  var list_STAR___4 = function(a, b, c, args) {
    return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, args)));
  };
  var list_STAR___5 = function() {
    var G__23379__delegate = function(a, b, c, d, more) {
      return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(more)))));
    };
    var G__23379 = function(a, b, c, d, var_args) {
      var more = null;
      if (arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__23379__delegate.call(this, a, b, c, d, more);
    };
    G__23379.cljs$lang$maxFixedArity = 4;
    G__23379.cljs$lang$applyTo = function(arglist__23380) {
      var a = cljs.core.first(arglist__23380);
      arglist__23380 = cljs.core.next(arglist__23380);
      var b = cljs.core.first(arglist__23380);
      arglist__23380 = cljs.core.next(arglist__23380);
      var c = cljs.core.first(arglist__23380);
      arglist__23380 = cljs.core.next(arglist__23380);
      var d = cljs.core.first(arglist__23380);
      var more = cljs.core.rest(arglist__23380);
      return G__23379__delegate(a, b, c, d, more);
    };
    G__23379.cljs$core$IFn$_invoke$arity$variadic = G__23379__delegate;
    return G__23379;
  }();
  list_STAR_ = function(a, b, c, d, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return list_STAR___1.call(this, a);
      case 2:
        return list_STAR___2.call(this, a, b);
      case 3:
        return list_STAR___3.call(this, a, b, c);
      case 4:
        return list_STAR___4.call(this, a, b, c, d);
      default:
        return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a, b, c, d, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  list_STAR_.cljs$lang$maxFixedArity = 4;
  list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
  list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
  list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
  list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
  list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
  list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
  return list_STAR_;
}();
cljs.core.transient$ = function transient$(coll) {
  return cljs.core._as_transient(coll);
};
cljs.core.persistent_BANG_ = function persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_(tcoll);
};
cljs.core.conj_BANG_ = function conj_BANG_(tcoll, val) {
  return cljs.core._conj_BANG_(tcoll, val);
};
cljs.core.assoc_BANG_ = function assoc_BANG_(tcoll, key, val) {
  return cljs.core._assoc_BANG_(tcoll, key, val);
};
cljs.core.dissoc_BANG_ = function dissoc_BANG_(tcoll, key) {
  return cljs.core._dissoc_BANG_(tcoll, key);
};
cljs.core.pop_BANG_ = function pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_(tcoll);
};
cljs.core.disj_BANG_ = function disj_BANG_(tcoll, val) {
  return cljs.core._disjoin_BANG_(tcoll, val);
};
cljs.core.apply_to = function apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq(args);
  if (argc === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var a = cljs.core._first(args__$1);
    var args__$2 = cljs.core._rest(args__$1);
    if (argc === 1) {
      if (f.cljs$core$IFn$_invoke$arity$1) {
        return f.cljs$core$IFn$_invoke$arity$1(a);
      } else {
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(a) : f.call(null, a);
      }
    } else {
      var b = cljs.core._first(args__$2);
      var args__$3 = cljs.core._rest(args__$2);
      if (argc === 2) {
        if (f.cljs$core$IFn$_invoke$arity$2) {
          return f.cljs$core$IFn$_invoke$arity$2(a, b);
        } else {
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(a, b) : f.call(null, a, b);
        }
      } else {
        var c = cljs.core._first(args__$3);
        var args__$4 = cljs.core._rest(args__$3);
        if (argc === 3) {
          if (f.cljs$core$IFn$_invoke$arity$3) {
            return f.cljs$core$IFn$_invoke$arity$3(a, b, c);
          } else {
            return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(a, b, c) : f.call(null, a, b, c);
          }
        } else {
          var d = cljs.core._first(args__$4);
          var args__$5 = cljs.core._rest(args__$4);
          if (argc === 4) {
            if (f.cljs$core$IFn$_invoke$arity$4) {
              return f.cljs$core$IFn$_invoke$arity$4(a, b, c, d);
            } else {
              return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : f.call(null, a, b, c, d);
            }
          } else {
            var e = cljs.core._first(args__$5);
            var args__$6 = cljs.core._rest(args__$5);
            if (argc === 5) {
              if (f.cljs$core$IFn$_invoke$arity$5) {
                return f.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e);
              } else {
                return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : f.call(null, a, b, c, d, e);
              }
            } else {
              var f__$1 = cljs.core._first(args__$6);
              var args__$7 = cljs.core._rest(args__$6);
              if (argc === 6) {
                if (f__$1.cljs$core$IFn$_invoke$arity$6) {
                  return f__$1.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f__$1);
                } else {
                  return f__$1.cljs$core$IFn$_invoke$arity$6 ? f__$1.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f__$1) : f__$1.call(null, a, b, c, d, e, f__$1);
                }
              } else {
                var g = cljs.core._first(args__$7);
                var args__$8 = cljs.core._rest(args__$7);
                if (argc === 7) {
                  if (f__$1.cljs$core$IFn$_invoke$arity$7) {
                    return f__$1.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f__$1, g);
                  } else {
                    return f__$1.cljs$core$IFn$_invoke$arity$7 ? f__$1.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f__$1, g) : f__$1.call(null, a, b, c, d, e, f__$1, g);
                  }
                } else {
                  var h = cljs.core._first(args__$8);
                  var args__$9 = cljs.core._rest(args__$8);
                  if (argc === 8) {
                    if (f__$1.cljs$core$IFn$_invoke$arity$8) {
                      return f__$1.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f__$1, g, h);
                    } else {
                      return f__$1.cljs$core$IFn$_invoke$arity$8 ? f__$1.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f__$1, g, h) : f__$1.call(null, a, b, c, d, e, f__$1, g, h);
                    }
                  } else {
                    var i = cljs.core._first(args__$9);
                    var args__$10 = cljs.core._rest(args__$9);
                    if (argc === 9) {
                      if (f__$1.cljs$core$IFn$_invoke$arity$9) {
                        return f__$1.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f__$1, g, h, i);
                      } else {
                        return f__$1.cljs$core$IFn$_invoke$arity$9 ? f__$1.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f__$1, g, h, i) : f__$1.call(null, a, b, c, d, e, f__$1, g, h, i);
                      }
                    } else {
                      var j = cljs.core._first(args__$10);
                      var args__$11 = cljs.core._rest(args__$10);
                      if (argc === 10) {
                        if (f__$1.cljs$core$IFn$_invoke$arity$10) {
                          return f__$1.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f__$1, g, h, i, j);
                        } else {
                          return f__$1.cljs$core$IFn$_invoke$arity$10 ? f__$1.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f__$1, g, h, i, j) : f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j);
                        }
                      } else {
                        var k = cljs.core._first(args__$11);
                        var args__$12 = cljs.core._rest(args__$11);
                        if (argc === 11) {
                          if (f__$1.cljs$core$IFn$_invoke$arity$11) {
                            return f__$1.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f__$1, g, h, i, j, k);
                          } else {
                            return f__$1.cljs$core$IFn$_invoke$arity$11 ? f__$1.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f__$1, g, h, i, j, k) : f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k);
                          }
                        } else {
                          var l = cljs.core._first(args__$12);
                          var args__$13 = cljs.core._rest(args__$12);
                          if (argc === 12) {
                            if (f__$1.cljs$core$IFn$_invoke$arity$12) {
                              return f__$1.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f__$1, g, h, i, j, k, l);
                            } else {
                              return f__$1.cljs$core$IFn$_invoke$arity$12 ? f__$1.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f__$1, g, h, i, j, k, l) : f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l);
                            }
                          } else {
                            var m = cljs.core._first(args__$13);
                            var args__$14 = cljs.core._rest(args__$13);
                            if (argc === 13) {
                              if (f__$1.cljs$core$IFn$_invoke$arity$13) {
                                return f__$1.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f__$1, g, h, i, j, k, l, m);
                              } else {
                                return f__$1.cljs$core$IFn$_invoke$arity$13 ? f__$1.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f__$1, g, h, i, j, k, l, m) : f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m);
                              }
                            } else {
                              var n = cljs.core._first(args__$14);
                              var args__$15 = cljs.core._rest(args__$14);
                              if (argc === 14) {
                                if (f__$1.cljs$core$IFn$_invoke$arity$14) {
                                  return f__$1.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n);
                                } else {
                                  return f__$1.cljs$core$IFn$_invoke$arity$14 ? f__$1.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n) : f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n);
                                }
                              } else {
                                var o = cljs.core._first(args__$15);
                                var args__$16 = cljs.core._rest(args__$15);
                                if (argc === 15) {
                                  if (f__$1.cljs$core$IFn$_invoke$arity$15) {
                                    return f__$1.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o);
                                  } else {
                                    return f__$1.cljs$core$IFn$_invoke$arity$15 ? f__$1.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o) : f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o);
                                  }
                                } else {
                                  var p = cljs.core._first(args__$16);
                                  var args__$17 = cljs.core._rest(args__$16);
                                  if (argc === 16) {
                                    if (f__$1.cljs$core$IFn$_invoke$arity$16) {
                                      return f__$1.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p);
                                    } else {
                                      return f__$1.cljs$core$IFn$_invoke$arity$16 ? f__$1.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p) : f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p);
                                    }
                                  } else {
                                    var q = cljs.core._first(args__$17);
                                    var args__$18 = cljs.core._rest(args__$17);
                                    if (argc === 17) {
                                      if (f__$1.cljs$core$IFn$_invoke$arity$17) {
                                        return f__$1.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q);
                                      } else {
                                        return f__$1.cljs$core$IFn$_invoke$arity$17 ? f__$1.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q) : f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q);
                                      }
                                    } else {
                                      var r = cljs.core._first(args__$18);
                                      var args__$19 = cljs.core._rest(args__$18);
                                      if (argc === 18) {
                                        if (f__$1.cljs$core$IFn$_invoke$arity$18) {
                                          return f__$1.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r);
                                        } else {
                                          return f__$1.cljs$core$IFn$_invoke$arity$18 ? f__$1.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r) : f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r);
                                        }
                                      } else {
                                        var s = cljs.core._first(args__$19);
                                        var args__$20 = cljs.core._rest(args__$19);
                                        if (argc === 19) {
                                          if (f__$1.cljs$core$IFn$_invoke$arity$19) {
                                            return f__$1.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s);
                                          } else {
                                            return f__$1.cljs$core$IFn$_invoke$arity$19 ? f__$1.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s) : f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s);
                                          }
                                        } else {
                                          var t = cljs.core._first(args__$20);
                                          var args__$21 = cljs.core._rest(args__$20);
                                          if (argc === 20) {
                                            if (f__$1.cljs$core$IFn$_invoke$arity$20) {
                                              return f__$1.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
                                            } else {
                                              return f__$1.cljs$core$IFn$_invoke$arity$20 ? f__$1.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
                                            }
                                          } else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function() {
  var apply = null;
  var apply__2 = function(f, args) {
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count(args, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to(f, bc, args);
      } else {
        return f.cljs$lang$applyTo(args);
      }
    } else {
      return f.apply(f, cljs.core.to_array(args));
    }
  };
  var apply__3 = function(f, x, args) {
    var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to(f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array(arglist));
    }
  };
  var apply__4 = function(f, x, y, args) {
    var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x, y, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to(f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array(arglist));
    }
  };
  var apply__5 = function(f, x, y, z, args) {
    var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x, y, z, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to(f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array(arglist));
    }
  };
  var apply__6 = function() {
    var G__23381__delegate = function(f, a, b, c, d, args) {
      var arglist = cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(args)))));
      var fixed_arity = f.cljs$lang$maxFixedArity;
      if (f.cljs$lang$applyTo) {
        var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
        if (bc <= fixed_arity) {
          return cljs.core.apply_to(f, bc, arglist);
        } else {
          return f.cljs$lang$applyTo(arglist);
        }
      } else {
        return f.apply(f, cljs.core.to_array(arglist));
      }
    };
    var G__23381 = function(f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 5) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0);
      }
      return G__23381__delegate.call(this, f, a, b, c, d, args);
    };
    G__23381.cljs$lang$maxFixedArity = 5;
    G__23381.cljs$lang$applyTo = function(arglist__23382) {
      var f = cljs.core.first(arglist__23382);
      arglist__23382 = cljs.core.next(arglist__23382);
      var a = cljs.core.first(arglist__23382);
      arglist__23382 = cljs.core.next(arglist__23382);
      var b = cljs.core.first(arglist__23382);
      arglist__23382 = cljs.core.next(arglist__23382);
      var c = cljs.core.first(arglist__23382);
      arglist__23382 = cljs.core.next(arglist__23382);
      var d = cljs.core.first(arglist__23382);
      var args = cljs.core.rest(arglist__23382);
      return G__23381__delegate(f, a, b, c, d, args);
    };
    G__23381.cljs$core$IFn$_invoke$arity$variadic = G__23381__delegate;
    return G__23381;
  }();
  apply = function(f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return apply__2.call(this, f, a);
      case 3:
        return apply__3.call(this, f, a, b);
      case 4:
        return apply__4.call(this, f, a, b, c);
      case 5:
        return apply__5.call(this, f, a, b, c, d);
      default:
        return apply__6.cljs$core$IFn$_invoke$arity$variadic(f, a, b, c, d, cljs.core.array_seq(arguments, 5));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  apply.cljs$lang$maxFixedArity = 5;
  apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
  apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
  apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
  apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
  apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
  apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
  return apply;
}();
cljs.core.vary_meta = function() {
  var vary_meta = null;
  var vary_meta__2 = function(obj, f) {
    return cljs.core.with_meta(obj, f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(cljs.core.meta(obj)) : f.call(null, cljs.core.meta(obj)));
  };
  var vary_meta__3 = function(obj, f, a) {
    return cljs.core.with_meta(obj, f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(cljs.core.meta(obj), a) : f.call(null, cljs.core.meta(obj), a));
  };
  var vary_meta__4 = function(obj, f, a, b) {
    return cljs.core.with_meta(obj, f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(cljs.core.meta(obj), a, b) : f.call(null, cljs.core.meta(obj), a, b));
  };
  var vary_meta__5 = function(obj, f, a, b, c) {
    return cljs.core.with_meta(obj, f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(cljs.core.meta(obj), a, b, c) : f.call(null, cljs.core.meta(obj), a, b, c));
  };
  var vary_meta__6 = function(obj, f, a, b, c, d) {
    return cljs.core.with_meta(obj, f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(cljs.core.meta(obj), a, b, c, d) : f.call(null, cljs.core.meta(obj), a, b, c, d));
  };
  var vary_meta__7 = function() {
    var G__23383__delegate = function(obj, f, a, b, c, d, args) {
      return cljs.core.with_meta(obj, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.meta(obj), a, b, c, cljs.core.array_seq([d, args], 0)));
    };
    var G__23383 = function(obj, f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 6) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 6), 0);
      }
      return G__23383__delegate.call(this, obj, f, a, b, c, d, args);
    };
    G__23383.cljs$lang$maxFixedArity = 6;
    G__23383.cljs$lang$applyTo = function(arglist__23384) {
      var obj = cljs.core.first(arglist__23384);
      arglist__23384 = cljs.core.next(arglist__23384);
      var f = cljs.core.first(arglist__23384);
      arglist__23384 = cljs.core.next(arglist__23384);
      var a = cljs.core.first(arglist__23384);
      arglist__23384 = cljs.core.next(arglist__23384);
      var b = cljs.core.first(arglist__23384);
      arglist__23384 = cljs.core.next(arglist__23384);
      var c = cljs.core.first(arglist__23384);
      arglist__23384 = cljs.core.next(arglist__23384);
      var d = cljs.core.first(arglist__23384);
      var args = cljs.core.rest(arglist__23384);
      return G__23383__delegate(obj, f, a, b, c, d, args);
    };
    G__23383.cljs$core$IFn$_invoke$arity$variadic = G__23383__delegate;
    return G__23383;
  }();
  vary_meta = function(obj, f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return vary_meta__2.call(this, obj, f);
      case 3:
        return vary_meta__3.call(this, obj, f, a);
      case 4:
        return vary_meta__4.call(this, obj, f, a, b);
      case 5:
        return vary_meta__5.call(this, obj, f, a, b, c);
      case 6:
        return vary_meta__6.call(this, obj, f, a, b, c, d);
      default:
        return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj, f, a, b, c, d, cljs.core.array_seq(arguments, 6));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  vary_meta.cljs$lang$maxFixedArity = 6;
  vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
  vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
  vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
  vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
  vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
  vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
  vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
  return vary_meta;
}();
cljs.core.not_EQ_ = function() {
  var not_EQ_ = null;
  var not_EQ___1 = function(x) {
    return false;
  };
  var not_EQ___2 = function(x, y) {
    return!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
  };
  var not_EQ___3 = function() {
    var G__23385__delegate = function(x, y, more) {
      return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_, x, y, more));
    };
    var G__23385 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__23385__delegate.call(this, x, y, more);
    };
    G__23385.cljs$lang$maxFixedArity = 2;
    G__23385.cljs$lang$applyTo = function(arglist__23386) {
      var x = cljs.core.first(arglist__23386);
      arglist__23386 = cljs.core.next(arglist__23386);
      var y = cljs.core.first(arglist__23386);
      var more = cljs.core.rest(arglist__23386);
      return G__23385__delegate(x, y, more);
    };
    G__23385.cljs$core$IFn$_invoke$arity$variadic = G__23385__delegate;
    return G__23385;
  }();
  not_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return not_EQ___1.call(this, x);
      case 2:
        return not_EQ___2.call(this, x, y);
      default:
        return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  not_EQ_.cljs$lang$maxFixedArity = 2;
  not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
  not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
  not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
  not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return not_EQ_;
}();
cljs.core.not_empty = function not_empty(coll) {
  if (cljs.core.seq(coll)) {
    return coll;
  } else {
    return null;
  }
};
cljs.core.every_QMARK_ = function every_QMARK_(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll) == null) {
      return true;
    } else {
      if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(cljs.core.first(coll)) : pred.call(null, cljs.core.first(coll)))) {
        var G__23387 = pred;
        var G__23388 = cljs.core.next(coll);
        pred = G__23387;
        coll = G__23388;
        continue;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return false;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.not_every_QMARK_ = function not_every_QMARK_(pred, coll) {
  return!cljs.core.every_QMARK_(pred, coll);
};
cljs.core.some = function some(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll)) {
      var or__3408__auto__ = pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(cljs.core.first(coll)) : pred.call(null, cljs.core.first(coll));
      if (cljs.core.truth_(or__3408__auto__)) {
        return or__3408__auto__;
      } else {
        var G__23389 = pred;
        var G__23390 = cljs.core.next(coll);
        pred = G__23389;
        coll = G__23390;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.not_any_QMARK_ = function not_any_QMARK_(pred, coll) {
  return cljs.core.not(cljs.core.some(pred, coll));
};
cljs.core.even_QMARK_ = function even_QMARK_(n) {
  if (cljs.core.integer_QMARK_(n)) {
    return(n & 1) === 0;
  } else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function odd_QMARK_(n) {
  return!cljs.core.even_QMARK_(n);
};
cljs.core.identity = function identity(x) {
  return x;
};
cljs.core.complement = function complement(f) {
  return function() {
    var G__23391 = null;
    var G__23391__0 = function() {
      return cljs.core.not(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
    };
    var G__23391__1 = function(x) {
      return cljs.core.not(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x));
    };
    var G__23391__2 = function(x, y) {
      return cljs.core.not(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y));
    };
    var G__23391__3 = function() {
      var G__23392__delegate = function(x, y, zs) {
        return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f, x, y, zs));
      };
      var G__23392 = function(x, y, var_args) {
        var zs = null;
        if (arguments.length > 2) {
          zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
        }
        return G__23392__delegate.call(this, x, y, zs);
      };
      G__23392.cljs$lang$maxFixedArity = 2;
      G__23392.cljs$lang$applyTo = function(arglist__23393) {
        var x = cljs.core.first(arglist__23393);
        arglist__23393 = cljs.core.next(arglist__23393);
        var y = cljs.core.first(arglist__23393);
        var zs = cljs.core.rest(arglist__23393);
        return G__23392__delegate(x, y, zs);
      };
      G__23392.cljs$core$IFn$_invoke$arity$variadic = G__23392__delegate;
      return G__23392;
    }();
    G__23391 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__23391__0.call(this);
        case 1:
          return G__23391__1.call(this, x);
        case 2:
          return G__23391__2.call(this, x, y);
        default:
          return G__23391__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__23391.cljs$lang$maxFixedArity = 2;
    G__23391.cljs$lang$applyTo = G__23391__3.cljs$lang$applyTo;
    return G__23391;
  }();
};
cljs.core.constantly = function constantly(x) {
  return function() {
    var G__23394__delegate = function(args) {
      return x;
    };
    var G__23394 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__23394__delegate.call(this, args);
    };
    G__23394.cljs$lang$maxFixedArity = 0;
    G__23394.cljs$lang$applyTo = function(arglist__23395) {
      var args = cljs.core.seq(arglist__23395);
      return G__23394__delegate(args);
    };
    G__23394.cljs$core$IFn$_invoke$arity$variadic = G__23394__delegate;
    return G__23394;
  }();
};
cljs.core.comp = function() {
  var comp = null;
  var comp__0 = function() {
    return cljs.core.identity;
  };
  var comp__1 = function(f) {
    return f;
  };
  var comp__2 = function(f, g) {
    return function() {
      var G__23396 = null;
      var G__23396__0 = function() {
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null)) : f.call(null, g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
      };
      var G__23396__1 = function(x) {
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null, x)) : f.call(null, g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null, x));
      };
      var G__23396__2 = function(x, y) {
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(x, y) : g.call(null, x, y)) : f.call(null, g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(x, y) : g.call(null, x, y));
      };
      var G__23396__3 = function(x, y, z) {
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(x, y, z) : g.call(null, x, y, z)) : f.call(null, g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(x, y, z) : g.call(null, x, y, z));
      };
      var G__23396__4 = function() {
        var G__23397__delegate = function(x, y, z, args) {
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args)) : f.call(null, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args));
        };
        var G__23397 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__23397__delegate.call(this, x, y, z, args);
        };
        G__23397.cljs$lang$maxFixedArity = 3;
        G__23397.cljs$lang$applyTo = function(arglist__23398) {
          var x = cljs.core.first(arglist__23398);
          arglist__23398 = cljs.core.next(arglist__23398);
          var y = cljs.core.first(arglist__23398);
          arglist__23398 = cljs.core.next(arglist__23398);
          var z = cljs.core.first(arglist__23398);
          var args = cljs.core.rest(arglist__23398);
          return G__23397__delegate(x, y, z, args);
        };
        G__23397.cljs$core$IFn$_invoke$arity$variadic = G__23397__delegate;
        return G__23397;
      }();
      G__23396 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__23396__0.call(this);
          case 1:
            return G__23396__1.call(this, x);
          case 2:
            return G__23396__2.call(this, x, y);
          case 3:
            return G__23396__3.call(this, x, y, z);
          default:
            return G__23396__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__23396.cljs$lang$maxFixedArity = 3;
      G__23396.cljs$lang$applyTo = G__23396__4.cljs$lang$applyTo;
      return G__23396;
    }();
  };
  var comp__3 = function(f, g, h) {
    return function() {
      var G__23399 = null;
      var G__23399__0 = function() {
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null)) : g.call(null, h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null))) : f.call(null, g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null)) : g.call(null, 
        h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null)));
      };
      var G__23399__1 = function(x) {
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(x) : h.call(null, x)) : g.call(null, h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(x) : h.call(null, x))) : f.call(null, g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(x) : h.call(null, 
        x)) : g.call(null, h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(x) : h.call(null, x)));
      };
      var G__23399__2 = function(x, y) {
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(x, y) : h.call(null, x, y)) : g.call(null, h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(x, y) : h.call(null, x, y))) : f.call(null, g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(x, 
        y) : h.call(null, x, y)) : g.call(null, h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(x, y) : h.call(null, x, y)));
      };
      var G__23399__3 = function(x, y, z) {
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(x, y, z) : h.call(null, x, y, z)) : g.call(null, h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(x, y, z) : h.call(null, x, y, z))) : f.call(null, g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(x, 
        y, z) : h.call(null, x, y, z)) : g.call(null, h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(x, y, z) : h.call(null, x, y, z)));
      };
      var G__23399__4 = function() {
        var G__23400__delegate = function(x, y, z, args) {
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args)) : g.call(null, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args))) : f.call(null, g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args)) : g.call(null, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, 
          x, y, z, args)));
        };
        var G__23400 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__23400__delegate.call(this, x, y, z, args);
        };
        G__23400.cljs$lang$maxFixedArity = 3;
        G__23400.cljs$lang$applyTo = function(arglist__23401) {
          var x = cljs.core.first(arglist__23401);
          arglist__23401 = cljs.core.next(arglist__23401);
          var y = cljs.core.first(arglist__23401);
          arglist__23401 = cljs.core.next(arglist__23401);
          var z = cljs.core.first(arglist__23401);
          var args = cljs.core.rest(arglist__23401);
          return G__23400__delegate(x, y, z, args);
        };
        G__23400.cljs$core$IFn$_invoke$arity$variadic = G__23400__delegate;
        return G__23400;
      }();
      G__23399 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__23399__0.call(this);
          case 1:
            return G__23399__1.call(this, x);
          case 2:
            return G__23399__2.call(this, x, y);
          case 3:
            return G__23399__3.call(this, x, y, z);
          default:
            return G__23399__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__23399.cljs$lang$maxFixedArity = 3;
      G__23399.cljs$lang$applyTo = G__23399__4.cljs$lang$applyTo;
      return G__23399;
    }();
  };
  var comp__4 = function() {
    var G__23402__delegate = function(f1, f2, f3, fs) {
      var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1, f2, f3, fs));
      return function() {
        var G__23403__delegate = function(args) {
          var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1), args);
          var fs__$2 = cljs.core.next(fs__$1);
          while (true) {
            if (fs__$2) {
              var G__23404 = cljs.core.first(fs__$2).call(null, ret);
              var G__23405 = cljs.core.next(fs__$2);
              ret = G__23404;
              fs__$2 = G__23405;
              continue;
            } else {
              return ret;
            }
            break;
          }
        };
        var G__23403 = function(var_args) {
          var args = null;
          if (arguments.length > 0) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
          }
          return G__23403__delegate.call(this, args);
        };
        G__23403.cljs$lang$maxFixedArity = 0;
        G__23403.cljs$lang$applyTo = function(arglist__23406) {
          var args = cljs.core.seq(arglist__23406);
          return G__23403__delegate(args);
        };
        G__23403.cljs$core$IFn$_invoke$arity$variadic = G__23403__delegate;
        return G__23403;
      }();
    };
    var G__23402 = function(f1, f2, f3, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__23402__delegate.call(this, f1, f2, f3, fs);
    };
    G__23402.cljs$lang$maxFixedArity = 3;
    G__23402.cljs$lang$applyTo = function(arglist__23407) {
      var f1 = cljs.core.first(arglist__23407);
      arglist__23407 = cljs.core.next(arglist__23407);
      var f2 = cljs.core.first(arglist__23407);
      arglist__23407 = cljs.core.next(arglist__23407);
      var f3 = cljs.core.first(arglist__23407);
      var fs = cljs.core.rest(arglist__23407);
      return G__23402__delegate(f1, f2, f3, fs);
    };
    G__23402.cljs$core$IFn$_invoke$arity$variadic = G__23402__delegate;
    return G__23402;
  }();
  comp = function(f1, f2, f3, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 0:
        return comp__0.call(this);
      case 1:
        return comp__1.call(this, f1);
      case 2:
        return comp__2.call(this, f1, f2);
      case 3:
        return comp__3.call(this, f1, f2, f3);
      default:
        return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1, f2, f3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  comp.cljs$lang$maxFixedArity = 3;
  comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
  comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
  comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
  comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
  comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
  comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
  return comp;
}();
cljs.core.partial = function() {
  var partial = null;
  var partial__1 = function(f) {
    return f;
  };
  var partial__2 = function(f, arg1) {
    return function() {
      var G__23408__delegate = function(args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, arg1, args);
      };
      var G__23408 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__23408__delegate.call(this, args);
      };
      G__23408.cljs$lang$maxFixedArity = 0;
      G__23408.cljs$lang$applyTo = function(arglist__23409) {
        var args = cljs.core.seq(arglist__23409);
        return G__23408__delegate(args);
      };
      G__23408.cljs$core$IFn$_invoke$arity$variadic = G__23408__delegate;
      return G__23408;
    }();
  };
  var partial__3 = function(f, arg1, arg2) {
    return function() {
      var G__23410__delegate = function(args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f, arg1, arg2, args);
      };
      var G__23410 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__23410__delegate.call(this, args);
      };
      G__23410.cljs$lang$maxFixedArity = 0;
      G__23410.cljs$lang$applyTo = function(arglist__23411) {
        var args = cljs.core.seq(arglist__23411);
        return G__23410__delegate(args);
      };
      G__23410.cljs$core$IFn$_invoke$arity$variadic = G__23410__delegate;
      return G__23410;
    }();
  };
  var partial__4 = function(f, arg1, arg2, arg3) {
    return function() {
      var G__23412__delegate = function(args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, arg1, arg2, arg3, args);
      };
      var G__23412 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__23412__delegate.call(this, args);
      };
      G__23412.cljs$lang$maxFixedArity = 0;
      G__23412.cljs$lang$applyTo = function(arglist__23413) {
        var args = cljs.core.seq(arglist__23413);
        return G__23412__delegate(args);
      };
      G__23412.cljs$core$IFn$_invoke$arity$variadic = G__23412__delegate;
      return G__23412;
    }();
  };
  var partial__5 = function() {
    var G__23414__delegate = function(f, arg1, arg2, arg3, more) {
      return function() {
        var G__23415__delegate = function(args) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, arg1, arg2, arg3, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more, args));
        };
        var G__23415 = function(var_args) {
          var args = null;
          if (arguments.length > 0) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
          }
          return G__23415__delegate.call(this, args);
        };
        G__23415.cljs$lang$maxFixedArity = 0;
        G__23415.cljs$lang$applyTo = function(arglist__23416) {
          var args = cljs.core.seq(arglist__23416);
          return G__23415__delegate(args);
        };
        G__23415.cljs$core$IFn$_invoke$arity$variadic = G__23415__delegate;
        return G__23415;
      }();
    };
    var G__23414 = function(f, arg1, arg2, arg3, var_args) {
      var more = null;
      if (arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__23414__delegate.call(this, f, arg1, arg2, arg3, more);
    };
    G__23414.cljs$lang$maxFixedArity = 4;
    G__23414.cljs$lang$applyTo = function(arglist__23417) {
      var f = cljs.core.first(arglist__23417);
      arglist__23417 = cljs.core.next(arglist__23417);
      var arg1 = cljs.core.first(arglist__23417);
      arglist__23417 = cljs.core.next(arglist__23417);
      var arg2 = cljs.core.first(arglist__23417);
      arglist__23417 = cljs.core.next(arglist__23417);
      var arg3 = cljs.core.first(arglist__23417);
      var more = cljs.core.rest(arglist__23417);
      return G__23414__delegate(f, arg1, arg2, arg3, more);
    };
    G__23414.cljs$core$IFn$_invoke$arity$variadic = G__23414__delegate;
    return G__23414;
  }();
  partial = function(f, arg1, arg2, arg3, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return partial__1.call(this, f);
      case 2:
        return partial__2.call(this, f, arg1);
      case 3:
        return partial__3.call(this, f, arg1, arg2);
      case 4:
        return partial__4.call(this, f, arg1, arg2, arg3);
      default:
        return partial__5.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partial.cljs$lang$maxFixedArity = 4;
  partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
  partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
  partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
  partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
  partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
  partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
  return partial;
}();
cljs.core.fnil = function() {
  var fnil = null;
  var fnil__2 = function(f, x) {
    return function() {
      var G__23418 = null;
      var G__23418__1 = function(a) {
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(a == null ? x : a) : f.call(null, a == null ? x : a);
      };
      var G__23418__2 = function(a, b) {
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(a == null ? x : a, b) : f.call(null, a == null ? x : a, b);
      };
      var G__23418__3 = function(a, b, c) {
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(a == null ? x : a, b, c) : f.call(null, a == null ? x : a, b, c);
      };
      var G__23418__4 = function() {
        var G__23419__delegate = function(a, b, c, ds) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b, c, ds);
        };
        var G__23419 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__23419__delegate.call(this, a, b, c, ds);
        };
        G__23419.cljs$lang$maxFixedArity = 3;
        G__23419.cljs$lang$applyTo = function(arglist__23420) {
          var a = cljs.core.first(arglist__23420);
          arglist__23420 = cljs.core.next(arglist__23420);
          var b = cljs.core.first(arglist__23420);
          arglist__23420 = cljs.core.next(arglist__23420);
          var c = cljs.core.first(arglist__23420);
          var ds = cljs.core.rest(arglist__23420);
          return G__23419__delegate(a, b, c, ds);
        };
        G__23419.cljs$core$IFn$_invoke$arity$variadic = G__23419__delegate;
        return G__23419;
      }();
      G__23418 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 1:
            return G__23418__1.call(this, a);
          case 2:
            return G__23418__2.call(this, a, b);
          case 3:
            return G__23418__3.call(this, a, b, c);
          default:
            return G__23418__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__23418.cljs$lang$maxFixedArity = 3;
      G__23418.cljs$lang$applyTo = G__23418__4.cljs$lang$applyTo;
      return G__23418;
    }();
  };
  var fnil__3 = function(f, x, y) {
    return function() {
      var G__23421 = null;
      var G__23421__2 = function(a, b) {
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(a == null ? x : a, b == null ? y : b) : f.call(null, a == null ? x : a, b == null ? y : b);
      };
      var G__23421__3 = function(a, b, c) {
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(a == null ? x : a, b == null ? y : b, c) : f.call(null, a == null ? x : a, b == null ? y : b, c);
      };
      var G__23421__4 = function() {
        var G__23422__delegate = function(a, b, c, ds) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c, ds);
        };
        var G__23422 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__23422__delegate.call(this, a, b, c, ds);
        };
        G__23422.cljs$lang$maxFixedArity = 3;
        G__23422.cljs$lang$applyTo = function(arglist__23423) {
          var a = cljs.core.first(arglist__23423);
          arglist__23423 = cljs.core.next(arglist__23423);
          var b = cljs.core.first(arglist__23423);
          arglist__23423 = cljs.core.next(arglist__23423);
          var c = cljs.core.first(arglist__23423);
          var ds = cljs.core.rest(arglist__23423);
          return G__23422__delegate(a, b, c, ds);
        };
        G__23422.cljs$core$IFn$_invoke$arity$variadic = G__23422__delegate;
        return G__23422;
      }();
      G__23421 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__23421__2.call(this, a, b);
          case 3:
            return G__23421__3.call(this, a, b, c);
          default:
            return G__23421__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__23421.cljs$lang$maxFixedArity = 3;
      G__23421.cljs$lang$applyTo = G__23421__4.cljs$lang$applyTo;
      return G__23421;
    }();
  };
  var fnil__4 = function(f, x, y, z) {
    return function() {
      var G__23424 = null;
      var G__23424__2 = function(a, b) {
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(a == null ? x : a, b == null ? y : b) : f.call(null, a == null ? x : a, b == null ? y : b);
      };
      var G__23424__3 = function(a, b, c) {
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(a == null ? x : a, b == null ? y : b, c == null ? z : c) : f.call(null, a == null ? x : a, b == null ? y : b, c == null ? z : c);
      };
      var G__23424__4 = function() {
        var G__23425__delegate = function(a, b, c, ds) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds);
        };
        var G__23425 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__23425__delegate.call(this, a, b, c, ds);
        };
        G__23425.cljs$lang$maxFixedArity = 3;
        G__23425.cljs$lang$applyTo = function(arglist__23426) {
          var a = cljs.core.first(arglist__23426);
          arglist__23426 = cljs.core.next(arglist__23426);
          var b = cljs.core.first(arglist__23426);
          arglist__23426 = cljs.core.next(arglist__23426);
          var c = cljs.core.first(arglist__23426);
          var ds = cljs.core.rest(arglist__23426);
          return G__23425__delegate(a, b, c, ds);
        };
        G__23425.cljs$core$IFn$_invoke$arity$variadic = G__23425__delegate;
        return G__23425;
      }();
      G__23424 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__23424__2.call(this, a, b);
          case 3:
            return G__23424__3.call(this, a, b, c);
          default:
            return G__23424__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__23424.cljs$lang$maxFixedArity = 3;
      G__23424.cljs$lang$applyTo = G__23424__4.cljs$lang$applyTo;
      return G__23424;
    }();
  };
  fnil = function(f, x, y, z) {
    switch(arguments.length) {
      case 2:
        return fnil__2.call(this, f, x);
      case 3:
        return fnil__3.call(this, f, x, y);
      case 4:
        return fnil__4.call(this, f, x, y, z);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
  fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
  fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
  return fnil;
}();
cljs.core.map_indexed = function map_indexed(f, coll) {
  var mapi = function mapi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq(coll__$1);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__4250__auto___23427 = size;
          var i_23428 = 0;
          while (true) {
            if (i_23428 < n__4250__auto___23427) {
              cljs.core.chunk_append(b, f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(idx + i_23428, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_23428)) : f.call(null, idx + i_23428, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_23428)));
              var G__23429 = i_23428 + 1;
              i_23428 = G__23429;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), mapi(idx + size, cljs.core.chunk_rest(s)));
        } else {
          return cljs.core.cons(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(idx, cljs.core.first(s)) : f.call(null, idx, cljs.core.first(s)), mapi(idx + 1, cljs.core.rest(s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return mapi(0, coll);
};
cljs.core.keep = function keep(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq(coll);
    if (temp__4092__auto__) {
      var s = temp__4092__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__4250__auto___23430 = size;
        var i_23431 = 0;
        while (true) {
          if (i_23431 < n__4250__auto___23430) {
            var x_23432 = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_23431)) : f.call(null, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_23431));
            if (x_23432 == null) {
            } else {
              cljs.core.chunk_append(b, x_23432);
            }
            var G__23433 = i_23431 + 1;
            i_23431 = G__23433;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), keep(f, cljs.core.chunk_rest(s)));
      } else {
        var x = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(cljs.core.first(s)) : f.call(null, cljs.core.first(s));
        if (x == null) {
          return keep(f, cljs.core.rest(s));
        } else {
          return cljs.core.cons(x, keep(f, cljs.core.rest(s)));
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.keep_indexed = function keep_indexed(f, coll) {
  var keepi = function keepi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq(coll__$1);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__4250__auto___23434 = size;
          var i_23435 = 0;
          while (true) {
            if (i_23435 < n__4250__auto___23434) {
              var x_23436 = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(idx + i_23435, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_23435)) : f.call(null, idx + i_23435, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_23435));
              if (x_23436 == null) {
              } else {
                cljs.core.chunk_append(b, x_23436);
              }
              var G__23437 = i_23435 + 1;
              i_23435 = G__23437;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), keepi(idx + size, cljs.core.chunk_rest(s)));
        } else {
          var x = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(idx, cljs.core.first(s)) : f.call(null, idx, cljs.core.first(s));
          if (x == null) {
            return keepi(idx + 1, cljs.core.rest(s));
          } else {
            return cljs.core.cons(x, keepi(idx + 1, cljs.core.rest(s)));
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return keepi(0, coll);
};
cljs.core.every_pred = function() {
  var every_pred = null;
  var every_pred__1 = function(p) {
    return function() {
      var ep1 = null;
      var ep1__0 = function() {
        return true;
      };
      var ep1__1 = function(x) {
        return cljs.core.boolean$(p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x));
      };
      var ep1__2 = function(x, y) {
        return cljs.core.boolean$(function() {
          var and__3396__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
          if (cljs.core.truth_(and__3396__auto__)) {
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
          } else {
            return and__3396__auto__;
          }
        }());
      };
      var ep1__3 = function(x, y, z) {
        return cljs.core.boolean$(function() {
          var and__3396__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
          if (cljs.core.truth_(and__3396__auto__)) {
            var and__3396__auto____$1 = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
            if (cljs.core.truth_(and__3396__auto____$1)) {
              return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(z) : p.call(null, z);
            } else {
              return and__3396__auto____$1;
            }
          } else {
            return and__3396__auto__;
          }
        }());
      };
      var ep1__4 = function() {
        var G__23444__delegate = function(x, y, z, args) {
          return cljs.core.boolean$(ep1.cljs$core$IFn$_invoke$arity$3(x, y, z) && cljs.core.every_QMARK_(p, args));
        };
        var G__23444 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__23444__delegate.call(this, x, y, z, args);
        };
        G__23444.cljs$lang$maxFixedArity = 3;
        G__23444.cljs$lang$applyTo = function(arglist__23445) {
          var x = cljs.core.first(arglist__23445);
          arglist__23445 = cljs.core.next(arglist__23445);
          var y = cljs.core.first(arglist__23445);
          arglist__23445 = cljs.core.next(arglist__23445);
          var z = cljs.core.first(arglist__23445);
          var args = cljs.core.rest(arglist__23445);
          return G__23444__delegate(x, y, z, args);
        };
        G__23444.cljs$core$IFn$_invoke$arity$variadic = G__23444__delegate;
        return G__23444;
      }();
      ep1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep1__0.call(this);
          case 1:
            return ep1__1.call(this, x);
          case 2:
            return ep1__2.call(this, x, y);
          case 3:
            return ep1__3.call(this, x, y, z);
          default:
            return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep1.cljs$lang$maxFixedArity = 3;
      ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
      ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
      ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
      ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
      ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
      ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep1;
    }();
  };
  var every_pred__2 = function(p1, p2) {
    return function() {
      var ep2 = null;
      var ep2__0 = function() {
        return true;
      };
      var ep2__1 = function(x) {
        return cljs.core.boolean$(function() {
          var and__3396__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
          if (cljs.core.truth_(and__3396__auto__)) {
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          } else {
            return and__3396__auto__;
          }
        }());
      };
      var ep2__2 = function(x, y) {
        return cljs.core.boolean$(function() {
          var and__3396__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
          if (cljs.core.truth_(and__3396__auto__)) {
            var and__3396__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
            if (cljs.core.truth_(and__3396__auto____$1)) {
              var and__3396__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
              if (cljs.core.truth_(and__3396__auto____$2)) {
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
              } else {
                return and__3396__auto____$2;
              }
            } else {
              return and__3396__auto____$1;
            }
          } else {
            return and__3396__auto__;
          }
        }());
      };
      var ep2__3 = function(x, y, z) {
        return cljs.core.boolean$(function() {
          var and__3396__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
          if (cljs.core.truth_(and__3396__auto__)) {
            var and__3396__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
            if (cljs.core.truth_(and__3396__auto____$1)) {
              var and__3396__auto____$2 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
              if (cljs.core.truth_(and__3396__auto____$2)) {
                var and__3396__auto____$3 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
                if (cljs.core.truth_(and__3396__auto____$3)) {
                  var and__3396__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
                  if (cljs.core.truth_(and__3396__auto____$4)) {
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
                  } else {
                    return and__3396__auto____$4;
                  }
                } else {
                  return and__3396__auto____$3;
                }
              } else {
                return and__3396__auto____$2;
              }
            } else {
              return and__3396__auto____$1;
            }
          } else {
            return and__3396__auto__;
          }
        }());
      };
      var ep2__4 = function() {
        var G__23446__delegate = function(x, y, z, args) {
          return cljs.core.boolean$(ep2.cljs$core$IFn$_invoke$arity$3(x, y, z) && cljs.core.every_QMARK_(function(p1__23438_SHARP_) {
            var and__3396__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__23438_SHARP_) : p1.call(null, p1__23438_SHARP_);
            if (cljs.core.truth_(and__3396__auto__)) {
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__23438_SHARP_) : p2.call(null, p1__23438_SHARP_);
            } else {
              return and__3396__auto__;
            }
          }, args));
        };
        var G__23446 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__23446__delegate.call(this, x, y, z, args);
        };
        G__23446.cljs$lang$maxFixedArity = 3;
        G__23446.cljs$lang$applyTo = function(arglist__23447) {
          var x = cljs.core.first(arglist__23447);
          arglist__23447 = cljs.core.next(arglist__23447);
          var y = cljs.core.first(arglist__23447);
          arglist__23447 = cljs.core.next(arglist__23447);
          var z = cljs.core.first(arglist__23447);
          var args = cljs.core.rest(arglist__23447);
          return G__23446__delegate(x, y, z, args);
        };
        G__23446.cljs$core$IFn$_invoke$arity$variadic = G__23446__delegate;
        return G__23446;
      }();
      ep2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep2__0.call(this);
          case 1:
            return ep2__1.call(this, x);
          case 2:
            return ep2__2.call(this, x, y);
          case 3:
            return ep2__3.call(this, x, y, z);
          default:
            return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep2.cljs$lang$maxFixedArity = 3;
      ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
      ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
      ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
      ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
      ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
      ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep2;
    }();
  };
  var every_pred__3 = function(p1, p2, p3) {
    return function() {
      var ep3 = null;
      var ep3__0 = function() {
        return true;
      };
      var ep3__1 = function(x) {
        return cljs.core.boolean$(function() {
          var and__3396__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
          if (cljs.core.truth_(and__3396__auto__)) {
            var and__3396__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
            if (cljs.core.truth_(and__3396__auto____$1)) {
              return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
            } else {
              return and__3396__auto____$1;
            }
          } else {
            return and__3396__auto__;
          }
        }());
      };
      var ep3__2 = function(x, y) {
        return cljs.core.boolean$(function() {
          var and__3396__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
          if (cljs.core.truth_(and__3396__auto__)) {
            var and__3396__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
            if (cljs.core.truth_(and__3396__auto____$1)) {
              var and__3396__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
              if (cljs.core.truth_(and__3396__auto____$2)) {
                var and__3396__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
                if (cljs.core.truth_(and__3396__auto____$3)) {
                  var and__3396__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
                  if (cljs.core.truth_(and__3396__auto____$4)) {
                    return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
                  } else {
                    return and__3396__auto____$4;
                  }
                } else {
                  return and__3396__auto____$3;
                }
              } else {
                return and__3396__auto____$2;
              }
            } else {
              return and__3396__auto____$1;
            }
          } else {
            return and__3396__auto__;
          }
        }());
      };
      var ep3__3 = function(x, y, z) {
        return cljs.core.boolean$(function() {
          var and__3396__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
          if (cljs.core.truth_(and__3396__auto__)) {
            var and__3396__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
            if (cljs.core.truth_(and__3396__auto____$1)) {
              var and__3396__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
              if (cljs.core.truth_(and__3396__auto____$2)) {
                var and__3396__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
                if (cljs.core.truth_(and__3396__auto____$3)) {
                  var and__3396__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
                  if (cljs.core.truth_(and__3396__auto____$4)) {
                    var and__3396__auto____$5 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
                    if (cljs.core.truth_(and__3396__auto____$5)) {
                      var and__3396__auto____$6 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
                      if (cljs.core.truth_(and__3396__auto____$6)) {
                        var and__3396__auto____$7 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
                        if (cljs.core.truth_(and__3396__auto____$7)) {
                          return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(z) : p3.call(null, z);
                        } else {
                          return and__3396__auto____$7;
                        }
                      } else {
                        return and__3396__auto____$6;
                      }
                    } else {
                      return and__3396__auto____$5;
                    }
                  } else {
                    return and__3396__auto____$4;
                  }
                } else {
                  return and__3396__auto____$3;
                }
              } else {
                return and__3396__auto____$2;
              }
            } else {
              return and__3396__auto____$1;
            }
          } else {
            return and__3396__auto__;
          }
        }());
      };
      var ep3__4 = function() {
        var G__23448__delegate = function(x, y, z, args) {
          return cljs.core.boolean$(ep3.cljs$core$IFn$_invoke$arity$3(x, y, z) && cljs.core.every_QMARK_(function(p1__23439_SHARP_) {
            var and__3396__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__23439_SHARP_) : p1.call(null, p1__23439_SHARP_);
            if (cljs.core.truth_(and__3396__auto__)) {
              var and__3396__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__23439_SHARP_) : p2.call(null, p1__23439_SHARP_);
              if (cljs.core.truth_(and__3396__auto____$1)) {
                return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(p1__23439_SHARP_) : p3.call(null, p1__23439_SHARP_);
              } else {
                return and__3396__auto____$1;
              }
            } else {
              return and__3396__auto__;
            }
          }, args));
        };
        var G__23448 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__23448__delegate.call(this, x, y, z, args);
        };
        G__23448.cljs$lang$maxFixedArity = 3;
        G__23448.cljs$lang$applyTo = function(arglist__23449) {
          var x = cljs.core.first(arglist__23449);
          arglist__23449 = cljs.core.next(arglist__23449);
          var y = cljs.core.first(arglist__23449);
          arglist__23449 = cljs.core.next(arglist__23449);
          var z = cljs.core.first(arglist__23449);
          var args = cljs.core.rest(arglist__23449);
          return G__23448__delegate(x, y, z, args);
        };
        G__23448.cljs$core$IFn$_invoke$arity$variadic = G__23448__delegate;
        return G__23448;
      }();
      ep3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep3__0.call(this);
          case 1:
            return ep3__1.call(this, x);
          case 2:
            return ep3__2.call(this, x, y);
          case 3:
            return ep3__3.call(this, x, y, z);
          default:
            return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep3.cljs$lang$maxFixedArity = 3;
      ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
      ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
      ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
      ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
      ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
      ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep3;
    }();
  };
  var every_pred__4 = function() {
    var G__23450__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
      return function() {
        var epn = null;
        var epn__0 = function() {
          return true;
        };
        var epn__1 = function(x) {
          return cljs.core.every_QMARK_(function(p1__23440_SHARP_) {
            return p1__23440_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__23440_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__23440_SHARP_.call(null, x);
          }, ps__$1);
        };
        var epn__2 = function(x, y) {
          return cljs.core.every_QMARK_(function(p1__23441_SHARP_) {
            var and__3396__auto__ = p1__23441_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__23441_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__23441_SHARP_.call(null, x);
            if (cljs.core.truth_(and__3396__auto__)) {
              return p1__23441_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__23441_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__23441_SHARP_.call(null, y);
            } else {
              return and__3396__auto__;
            }
          }, ps__$1);
        };
        var epn__3 = function(x, y, z) {
          return cljs.core.every_QMARK_(function(p1__23442_SHARP_) {
            var and__3396__auto__ = p1__23442_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__23442_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__23442_SHARP_.call(null, x);
            if (cljs.core.truth_(and__3396__auto__)) {
              var and__3396__auto____$1 = p1__23442_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__23442_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__23442_SHARP_.call(null, y);
              if (cljs.core.truth_(and__3396__auto____$1)) {
                return p1__23442_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__23442_SHARP_.cljs$core$IFn$_invoke$arity$1(z) : p1__23442_SHARP_.call(null, z);
              } else {
                return and__3396__auto____$1;
              }
            } else {
              return and__3396__auto__;
            }
          }, ps__$1);
        };
        var epn__4 = function() {
          var G__23451__delegate = function(x, y, z, args) {
            return cljs.core.boolean$(epn.cljs$core$IFn$_invoke$arity$3(x, y, z) && cljs.core.every_QMARK_(function(p1__23443_SHARP_) {
              return cljs.core.every_QMARK_(p1__23443_SHARP_, args);
            }, ps__$1));
          };
          var G__23451 = function(x, y, z, var_args) {
            var args = null;
            if (arguments.length > 3) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
            }
            return G__23451__delegate.call(this, x, y, z, args);
          };
          G__23451.cljs$lang$maxFixedArity = 3;
          G__23451.cljs$lang$applyTo = function(arglist__23452) {
            var x = cljs.core.first(arglist__23452);
            arglist__23452 = cljs.core.next(arglist__23452);
            var y = cljs.core.first(arglist__23452);
            arglist__23452 = cljs.core.next(arglist__23452);
            var z = cljs.core.first(arglist__23452);
            var args = cljs.core.rest(arglist__23452);
            return G__23451__delegate(x, y, z, args);
          };
          G__23451.cljs$core$IFn$_invoke$arity$variadic = G__23451__delegate;
          return G__23451;
        }();
        epn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return epn__0.call(this);
            case 1:
              return epn__1.call(this, x);
            case 2:
              return epn__2.call(this, x, y);
            case 3:
              return epn__3.call(this, x, y, z);
            default:
              return epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        epn.cljs$lang$maxFixedArity = 3;
        epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
        epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
        epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
        epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
        epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
        epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
        return epn;
      }();
    };
    var G__23450 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__23450__delegate.call(this, p1, p2, p3, ps);
    };
    G__23450.cljs$lang$maxFixedArity = 3;
    G__23450.cljs$lang$applyTo = function(arglist__23453) {
      var p1 = cljs.core.first(arglist__23453);
      arglist__23453 = cljs.core.next(arglist__23453);
      var p2 = cljs.core.first(arglist__23453);
      arglist__23453 = cljs.core.next(arglist__23453);
      var p3 = cljs.core.first(arglist__23453);
      var ps = cljs.core.rest(arglist__23453);
      return G__23450__delegate(p1, p2, p3, ps);
    };
    G__23450.cljs$core$IFn$_invoke$arity$variadic = G__23450__delegate;
    return G__23450;
  }();
  every_pred = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return every_pred__1.call(this, p1);
      case 2:
        return every_pred__2.call(this, p1, p2);
      case 3:
        return every_pred__3.call(this, p1, p2, p3);
      default:
        return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  every_pred.cljs$lang$maxFixedArity = 3;
  every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
  every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
  every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
  every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
  every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
  return every_pred;
}();
cljs.core.some_fn = function() {
  var some_fn = null;
  var some_fn__1 = function(p) {
    return function() {
      var sp1 = null;
      var sp1__0 = function() {
        return null;
      };
      var sp1__1 = function(x) {
        return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
      };
      var sp1__2 = function(x, y) {
        var or__3408__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
        if (cljs.core.truth_(or__3408__auto__)) {
          return or__3408__auto__;
        } else {
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
        }
      };
      var sp1__3 = function(x, y, z) {
        var or__3408__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
        if (cljs.core.truth_(or__3408__auto__)) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
          if (cljs.core.truth_(or__3408__auto____$1)) {
            return or__3408__auto____$1;
          } else {
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(z) : p.call(null, z);
          }
        }
      };
      var sp1__4 = function() {
        var G__23460__delegate = function(x, y, z, args) {
          var or__3408__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(or__3408__auto__)) {
            return or__3408__auto__;
          } else {
            return cljs.core.some(p, args);
          }
        };
        var G__23460 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__23460__delegate.call(this, x, y, z, args);
        };
        G__23460.cljs$lang$maxFixedArity = 3;
        G__23460.cljs$lang$applyTo = function(arglist__23461) {
          var x = cljs.core.first(arglist__23461);
          arglist__23461 = cljs.core.next(arglist__23461);
          var y = cljs.core.first(arglist__23461);
          arglist__23461 = cljs.core.next(arglist__23461);
          var z = cljs.core.first(arglist__23461);
          var args = cljs.core.rest(arglist__23461);
          return G__23460__delegate(x, y, z, args);
        };
        G__23460.cljs$core$IFn$_invoke$arity$variadic = G__23460__delegate;
        return G__23460;
      }();
      sp1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp1__0.call(this);
          case 1:
            return sp1__1.call(this, x);
          case 2:
            return sp1__2.call(this, x, y);
          case 3:
            return sp1__3.call(this, x, y, z);
          default:
            return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp1.cljs$lang$maxFixedArity = 3;
      sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
      sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
      sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
      sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
      sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
      sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp1;
    }();
  };
  var some_fn__2 = function(p1, p2) {
    return function() {
      var sp2 = null;
      var sp2__0 = function() {
        return null;
      };
      var sp2__1 = function(x) {
        var or__3408__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(or__3408__auto__)) {
          return or__3408__auto__;
        } else {
          return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        }
      };
      var sp2__2 = function(x, y) {
        var or__3408__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(or__3408__auto__)) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
          if (cljs.core.truth_(or__3408__auto____$1)) {
            return or__3408__auto____$1;
          } else {
            var or__3408__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
            if (cljs.core.truth_(or__3408__auto____$2)) {
              return or__3408__auto____$2;
            } else {
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
            }
          }
        }
      };
      var sp2__3 = function(x, y, z) {
        var or__3408__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(or__3408__auto__)) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
          if (cljs.core.truth_(or__3408__auto____$1)) {
            return or__3408__auto____$1;
          } else {
            var or__3408__auto____$2 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
            if (cljs.core.truth_(or__3408__auto____$2)) {
              return or__3408__auto____$2;
            } else {
              var or__3408__auto____$3 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
              if (cljs.core.truth_(or__3408__auto____$3)) {
                return or__3408__auto____$3;
              } else {
                var or__3408__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
                if (cljs.core.truth_(or__3408__auto____$4)) {
                  return or__3408__auto____$4;
                } else {
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
                }
              }
            }
          }
        }
      };
      var sp2__4 = function() {
        var G__23462__delegate = function(x, y, z, args) {
          var or__3408__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(or__3408__auto__)) {
            return or__3408__auto__;
          } else {
            return cljs.core.some(function(p1__23454_SHARP_) {
              var or__3408__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__23454_SHARP_) : p1.call(null, p1__23454_SHARP_);
              if (cljs.core.truth_(or__3408__auto____$1)) {
                return or__3408__auto____$1;
              } else {
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__23454_SHARP_) : p2.call(null, p1__23454_SHARP_);
              }
            }, args);
          }
        };
        var G__23462 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__23462__delegate.call(this, x, y, z, args);
        };
        G__23462.cljs$lang$maxFixedArity = 3;
        G__23462.cljs$lang$applyTo = function(arglist__23463) {
          var x = cljs.core.first(arglist__23463);
          arglist__23463 = cljs.core.next(arglist__23463);
          var y = cljs.core.first(arglist__23463);
          arglist__23463 = cljs.core.next(arglist__23463);
          var z = cljs.core.first(arglist__23463);
          var args = cljs.core.rest(arglist__23463);
          return G__23462__delegate(x, y, z, args);
        };
        G__23462.cljs$core$IFn$_invoke$arity$variadic = G__23462__delegate;
        return G__23462;
      }();
      sp2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp2__0.call(this);
          case 1:
            return sp2__1.call(this, x);
          case 2:
            return sp2__2.call(this, x, y);
          case 3:
            return sp2__3.call(this, x, y, z);
          default:
            return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp2.cljs$lang$maxFixedArity = 3;
      sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
      sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
      sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
      sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
      sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
      sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp2;
    }();
  };
  var some_fn__3 = function(p1, p2, p3) {
    return function() {
      var sp3 = null;
      var sp3__0 = function() {
        return null;
      };
      var sp3__1 = function(x) {
        var or__3408__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(or__3408__auto__)) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(or__3408__auto____$1)) {
            return or__3408__auto____$1;
          } else {
            return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
          }
        }
      };
      var sp3__2 = function(x, y) {
        var or__3408__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(or__3408__auto__)) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(or__3408__auto____$1)) {
            return or__3408__auto____$1;
          } else {
            var or__3408__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
            if (cljs.core.truth_(or__3408__auto____$2)) {
              return or__3408__auto____$2;
            } else {
              var or__3408__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
              if (cljs.core.truth_(or__3408__auto____$3)) {
                return or__3408__auto____$3;
              } else {
                var or__3408__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
                if (cljs.core.truth_(or__3408__auto____$4)) {
                  return or__3408__auto____$4;
                } else {
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
                }
              }
            }
          }
        }
      };
      var sp3__3 = function(x, y, z) {
        var or__3408__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(or__3408__auto__)) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(or__3408__auto____$1)) {
            return or__3408__auto____$1;
          } else {
            var or__3408__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
            if (cljs.core.truth_(or__3408__auto____$2)) {
              return or__3408__auto____$2;
            } else {
              var or__3408__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
              if (cljs.core.truth_(or__3408__auto____$3)) {
                return or__3408__auto____$3;
              } else {
                var or__3408__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
                if (cljs.core.truth_(or__3408__auto____$4)) {
                  return or__3408__auto____$4;
                } else {
                  var or__3408__auto____$5 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
                  if (cljs.core.truth_(or__3408__auto____$5)) {
                    return or__3408__auto____$5;
                  } else {
                    var or__3408__auto____$6 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
                    if (cljs.core.truth_(or__3408__auto____$6)) {
                      return or__3408__auto____$6;
                    } else {
                      var or__3408__auto____$7 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
                      if (cljs.core.truth_(or__3408__auto____$7)) {
                        return or__3408__auto____$7;
                      } else {
                        return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(z) : p3.call(null, z);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      var sp3__4 = function() {
        var G__23464__delegate = function(x, y, z, args) {
          var or__3408__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(or__3408__auto__)) {
            return or__3408__auto__;
          } else {
            return cljs.core.some(function(p1__23455_SHARP_) {
              var or__3408__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__23455_SHARP_) : p1.call(null, p1__23455_SHARP_);
              if (cljs.core.truth_(or__3408__auto____$1)) {
                return or__3408__auto____$1;
              } else {
                var or__3408__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__23455_SHARP_) : p2.call(null, p1__23455_SHARP_);
                if (cljs.core.truth_(or__3408__auto____$2)) {
                  return or__3408__auto____$2;
                } else {
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(p1__23455_SHARP_) : p3.call(null, p1__23455_SHARP_);
                }
              }
            }, args);
          }
        };
        var G__23464 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__23464__delegate.call(this, x, y, z, args);
        };
        G__23464.cljs$lang$maxFixedArity = 3;
        G__23464.cljs$lang$applyTo = function(arglist__23465) {
          var x = cljs.core.first(arglist__23465);
          arglist__23465 = cljs.core.next(arglist__23465);
          var y = cljs.core.first(arglist__23465);
          arglist__23465 = cljs.core.next(arglist__23465);
          var z = cljs.core.first(arglist__23465);
          var args = cljs.core.rest(arglist__23465);
          return G__23464__delegate(x, y, z, args);
        };
        G__23464.cljs$core$IFn$_invoke$arity$variadic = G__23464__delegate;
        return G__23464;
      }();
      sp3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp3__0.call(this);
          case 1:
            return sp3__1.call(this, x);
          case 2:
            return sp3__2.call(this, x, y);
          case 3:
            return sp3__3.call(this, x, y, z);
          default:
            return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp3.cljs$lang$maxFixedArity = 3;
      sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
      sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
      sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
      sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
      sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
      sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp3;
    }();
  };
  var some_fn__4 = function() {
    var G__23466__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
      return function() {
        var spn = null;
        var spn__0 = function() {
          return null;
        };
        var spn__1 = function(x) {
          return cljs.core.some(function(p1__23456_SHARP_) {
            return p1__23456_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__23456_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__23456_SHARP_.call(null, x);
          }, ps__$1);
        };
        var spn__2 = function(x, y) {
          return cljs.core.some(function(p1__23457_SHARP_) {
            var or__3408__auto__ = p1__23457_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__23457_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__23457_SHARP_.call(null, x);
            if (cljs.core.truth_(or__3408__auto__)) {
              return or__3408__auto__;
            } else {
              return p1__23457_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__23457_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__23457_SHARP_.call(null, y);
            }
          }, ps__$1);
        };
        var spn__3 = function(x, y, z) {
          return cljs.core.some(function(p1__23458_SHARP_) {
            var or__3408__auto__ = p1__23458_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__23458_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__23458_SHARP_.call(null, x);
            if (cljs.core.truth_(or__3408__auto__)) {
              return or__3408__auto__;
            } else {
              var or__3408__auto____$1 = p1__23458_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__23458_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__23458_SHARP_.call(null, y);
              if (cljs.core.truth_(or__3408__auto____$1)) {
                return or__3408__auto____$1;
              } else {
                return p1__23458_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__23458_SHARP_.cljs$core$IFn$_invoke$arity$1(z) : p1__23458_SHARP_.call(null, z);
              }
            }
          }, ps__$1);
        };
        var spn__4 = function() {
          var G__23467__delegate = function(x, y, z, args) {
            var or__3408__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x, y, z);
            if (cljs.core.truth_(or__3408__auto__)) {
              return or__3408__auto__;
            } else {
              return cljs.core.some(function(p1__23459_SHARP_) {
                return cljs.core.some(p1__23459_SHARP_, args);
              }, ps__$1);
            }
          };
          var G__23467 = function(x, y, z, var_args) {
            var args = null;
            if (arguments.length > 3) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
            }
            return G__23467__delegate.call(this, x, y, z, args);
          };
          G__23467.cljs$lang$maxFixedArity = 3;
          G__23467.cljs$lang$applyTo = function(arglist__23468) {
            var x = cljs.core.first(arglist__23468);
            arglist__23468 = cljs.core.next(arglist__23468);
            var y = cljs.core.first(arglist__23468);
            arglist__23468 = cljs.core.next(arglist__23468);
            var z = cljs.core.first(arglist__23468);
            var args = cljs.core.rest(arglist__23468);
            return G__23467__delegate(x, y, z, args);
          };
          G__23467.cljs$core$IFn$_invoke$arity$variadic = G__23467__delegate;
          return G__23467;
        }();
        spn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return spn__0.call(this);
            case 1:
              return spn__1.call(this, x);
            case 2:
              return spn__2.call(this, x, y);
            case 3:
              return spn__3.call(this, x, y, z);
            default:
              return spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        spn.cljs$lang$maxFixedArity = 3;
        spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
        spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
        spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
        spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
        spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
        spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
        return spn;
      }();
    };
    var G__23466 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__23466__delegate.call(this, p1, p2, p3, ps);
    };
    G__23466.cljs$lang$maxFixedArity = 3;
    G__23466.cljs$lang$applyTo = function(arglist__23469) {
      var p1 = cljs.core.first(arglist__23469);
      arglist__23469 = cljs.core.next(arglist__23469);
      var p2 = cljs.core.first(arglist__23469);
      arglist__23469 = cljs.core.next(arglist__23469);
      var p3 = cljs.core.first(arglist__23469);
      var ps = cljs.core.rest(arglist__23469);
      return G__23466__delegate(p1, p2, p3, ps);
    };
    G__23466.cljs$core$IFn$_invoke$arity$variadic = G__23466__delegate;
    return G__23466;
  }();
  some_fn = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return some_fn__1.call(this, p1);
      case 2:
        return some_fn__2.call(this, p1, p2);
      case 3:
        return some_fn__3.call(this, p1, p2, p3);
      default:
        return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  some_fn.cljs$lang$maxFixedArity = 3;
  some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
  some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
  some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
  some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
  some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
  return some_fn;
}();
cljs.core.map = function() {
  var map = null;
  var map__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq(coll);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__4250__auto___23471 = size;
          var i_23472 = 0;
          while (true) {
            if (i_23472 < n__4250__auto___23471) {
              cljs.core.chunk_append(b, f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_23472)) : f.call(null, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_23472)));
              var G__23473 = i_23472 + 1;
              i_23472 = G__23473;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
        } else {
          return cljs.core.cons(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(cljs.core.first(s)) : f.call(null, cljs.core.first(s)), map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var map__3 = function(f, c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq(c1);
      var s2 = cljs.core.seq(c2);
      if (s1 && s2) {
        return cljs.core.cons(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(cljs.core.first(s1), cljs.core.first(s2)) : f.call(null, cljs.core.first(s1), cljs.core.first(s2)), map.cljs$core$IFn$_invoke$arity$3(f, cljs.core.rest(s1), cljs.core.rest(s2)));
      } else {
        return null;
      }
    }, null, null);
  };
  var map__4 = function(f, c1, c2, c3) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq(c1);
      var s2 = cljs.core.seq(c2);
      var s3 = cljs.core.seq(c3);
      if (s1 && (s2 && s3)) {
        return cljs.core.cons(f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(cljs.core.first(s1), cljs.core.first(s2), cljs.core.first(s3)) : f.call(null, cljs.core.first(s1), cljs.core.first(s2), cljs.core.first(s3)), map.cljs$core$IFn$_invoke$arity$4(f, cljs.core.rest(s1), cljs.core.rest(s2), cljs.core.rest(s3)));
      } else {
        return null;
      }
    }, null, null);
  };
  var map__5 = function() {
    var G__23474__delegate = function(f, c1, c2, c3, colls) {
      var step = function step(cs) {
        return new cljs.core.LazySeq(null, function() {
          var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cs);
          if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
            return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
          } else {
            return null;
          }
        }, null, null);
      };
      return map.cljs$core$IFn$_invoke$arity$2(function(p1__23470_SHARP_) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, p1__23470_SHARP_);
      }, step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c3, cljs.core.array_seq([c2, c1], 0))));
    };
    var G__23474 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__23474__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__23474.cljs$lang$maxFixedArity = 4;
    G__23474.cljs$lang$applyTo = function(arglist__23475) {
      var f = cljs.core.first(arglist__23475);
      arglist__23475 = cljs.core.next(arglist__23475);
      var c1 = cljs.core.first(arglist__23475);
      arglist__23475 = cljs.core.next(arglist__23475);
      var c2 = cljs.core.first(arglist__23475);
      arglist__23475 = cljs.core.next(arglist__23475);
      var c3 = cljs.core.first(arglist__23475);
      var colls = cljs.core.rest(arglist__23475);
      return G__23474__delegate(f, c1, c2, c3, colls);
    };
    G__23474.cljs$core$IFn$_invoke$arity$variadic = G__23474__delegate;
    return G__23474;
  }();
  map = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, c1);
      case 3:
        return map__3.call(this, f, c1, c2);
      case 4:
        return map__4.call(this, f, c1, c2, c3);
      default:
        return map__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$lang$maxFixedArity = 4;
  map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  map.cljs$core$IFn$_invoke$arity$4 = map__4;
  map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
  return map;
}();
cljs.core.take = function take(n, coll) {
  return new cljs.core.LazySeq(null, function() {
    if (n > 0) {
      var temp__4092__auto__ = cljs.core.seq(coll);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        return cljs.core.cons(cljs.core.first(s), take(n - 1, cljs.core.rest(s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.drop = function drop(n, coll) {
  var step = function(n__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq(coll__$1);
      if (n__$1 > 0 && s) {
        var G__23476 = n__$1 - 1;
        var G__23477 = cljs.core.rest(s);
        n__$1 = G__23476;
        coll__$1 = G__23477;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function() {
    return step(n, coll);
  }, null, null);
};
cljs.core.drop_last = function() {
  var drop_last = null;
  var drop_last__1 = function(s) {
    return drop_last.cljs$core$IFn$_invoke$arity$2(1, s);
  };
  var drop_last__2 = function(n, s) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$3(function(x, _) {
      return x;
    }, s, cljs.core.drop(n, s));
  };
  drop_last = function(n, s) {
    switch(arguments.length) {
      case 1:
        return drop_last__1.call(this, n);
      case 2:
        return drop_last__2.call(this, n, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
  drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
  return drop_last;
}();
cljs.core.take_last = function take_last(n, coll) {
  var s = cljs.core.seq(coll);
  var lead = cljs.core.seq(cljs.core.drop(n, coll));
  while (true) {
    if (lead) {
      var G__23478 = cljs.core.next(s);
      var G__23479 = cljs.core.next(lead);
      s = G__23478;
      lead = G__23479;
      continue;
    } else {
      return s;
    }
    break;
  }
};
cljs.core.drop_while = function drop_while(pred, coll) {
  var step = function(pred__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq(coll__$1);
      if (cljs.core.truth_(function() {
        var and__3396__auto__ = s;
        if (and__3396__auto__) {
          return pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(cljs.core.first(s)) : pred__$1.call(null, cljs.core.first(s));
        } else {
          return and__3396__auto__;
        }
      }())) {
        var G__23480 = pred__$1;
        var G__23481 = cljs.core.rest(s);
        pred__$1 = G__23480;
        coll__$1 = G__23481;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function() {
    return step(pred, coll);
  }, null, null);
};
cljs.core.cycle = function cycle(coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq(coll);
    if (temp__4092__auto__) {
      var s = temp__4092__auto__;
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s, cycle(s));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.split_at = function split_at(n, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take(n, coll), cljs.core.drop(n, coll)], null);
};
cljs.core.repeat = function() {
  var repeat = null;
  var repeat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(x, repeat.cljs$core$IFn$_invoke$arity$1(x));
    }, null, null);
  };
  var repeat__2 = function(n, x) {
    return cljs.core.take(n, repeat.cljs$core$IFn$_invoke$arity$1(x));
  };
  repeat = function(n, x) {
    switch(arguments.length) {
      case 1:
        return repeat__1.call(this, n);
      case 2:
        return repeat__2.call(this, n, x);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
  repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
  return repeat;
}();
cljs.core.replicate = function replicate(n, x) {
  return cljs.core.take(n, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
};
cljs.core.repeatedly = function() {
  var repeatedly = null;
  var repeatedly__1 = function(f) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), repeatedly.cljs$core$IFn$_invoke$arity$1(f));
    }, null, null);
  };
  var repeatedly__2 = function(n, f) {
    return cljs.core.take(n, repeatedly.cljs$core$IFn$_invoke$arity$1(f));
  };
  repeatedly = function(n, f) {
    switch(arguments.length) {
      case 1:
        return repeatedly__1.call(this, n);
      case 2:
        return repeatedly__2.call(this, n, f);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
  repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
  return repeatedly;
}();
cljs.core.iterate = function iterate(f, x) {
  return cljs.core.cons(x, new cljs.core.LazySeq(null, function() {
    return iterate(f, f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x));
  }, null, null));
};
cljs.core.interleave = function() {
  var interleave = null;
  var interleave__2 = function(c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq(c1);
      var s2 = cljs.core.seq(c2);
      if (s1 && s2) {
        return cljs.core.cons(cljs.core.first(s1), cljs.core.cons(cljs.core.first(s2), interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1), cljs.core.rest(s2))));
      } else {
        return null;
      }
    }, null, null);
  };
  var interleave__3 = function() {
    var G__23482__delegate = function(c1, c2, colls) {
      return new cljs.core.LazySeq(null, function() {
        var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c2, cljs.core.array_seq([c1], 0)));
        if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
          return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
        } else {
          return null;
        }
      }, null, null);
    };
    var G__23482 = function(c1, c2, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__23482__delegate.call(this, c1, c2, colls);
    };
    G__23482.cljs$lang$maxFixedArity = 2;
    G__23482.cljs$lang$applyTo = function(arglist__23483) {
      var c1 = cljs.core.first(arglist__23483);
      arglist__23483 = cljs.core.next(arglist__23483);
      var c2 = cljs.core.first(arglist__23483);
      var colls = cljs.core.rest(arglist__23483);
      return G__23482__delegate(c1, c2, colls);
    };
    G__23482.cljs$core$IFn$_invoke$arity$variadic = G__23482__delegate;
    return G__23482;
  }();
  interleave = function(c1, c2, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return interleave__2.call(this, c1, c2);
      default:
        return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1, c2, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  interleave.cljs$lang$maxFixedArity = 2;
  interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
  interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
  interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
  return interleave;
}();
cljs.core.interpose = function interpose(sep, coll) {
  return cljs.core.drop(1, cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep), coll));
};
cljs.core.flatten1 = function flatten1(colls) {
  var cat = function cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4090__auto__ = cljs.core.seq(coll);
      if (temp__4090__auto__) {
        var coll__$1 = temp__4090__auto__;
        return cljs.core.cons(cljs.core.first(coll__$1), cat(cljs.core.rest(coll__$1), colls__$1));
      } else {
        if (cljs.core.seq(colls__$1)) {
          return cat(cljs.core.first(colls__$1), cljs.core.rest(colls__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat(null, colls);
};
cljs.core.mapcat = function() {
  var mapcat = null;
  var mapcat__2 = function(f, coll) {
    return cljs.core.flatten1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(f, coll));
  };
  var mapcat__3 = function() {
    var G__23484__delegate = function(f, coll, colls) {
      return cljs.core.flatten1(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.map, f, coll, colls));
    };
    var G__23484 = function(f, coll, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__23484__delegate.call(this, f, coll, colls);
    };
    G__23484.cljs$lang$maxFixedArity = 2;
    G__23484.cljs$lang$applyTo = function(arglist__23485) {
      var f = cljs.core.first(arglist__23485);
      arglist__23485 = cljs.core.next(arglist__23485);
      var coll = cljs.core.first(arglist__23485);
      var colls = cljs.core.rest(arglist__23485);
      return G__23484__delegate(f, coll, colls);
    };
    G__23484.cljs$core$IFn$_invoke$arity$variadic = G__23484__delegate;
    return G__23484;
  }();
  mapcat = function(f, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapcat__2.call(this, f, coll);
      default:
        return mapcat__3.cljs$core$IFn$_invoke$arity$variadic(f, coll, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat.cljs$lang$maxFixedArity = 2;
  mapcat.cljs$lang$applyTo = mapcat__3.cljs$lang$applyTo;
  mapcat.cljs$core$IFn$_invoke$arity$2 = mapcat__2;
  mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__3.cljs$core$IFn$_invoke$arity$variadic;
  return mapcat;
}();
cljs.core.filter = function filter(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq(coll);
    if (temp__4092__auto__) {
      var s = temp__4092__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__4250__auto___23486 = size;
        var i_23487 = 0;
        while (true) {
          if (i_23487 < n__4250__auto___23486) {
            if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_23487)) : pred.call(null, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_23487)))) {
              cljs.core.chunk_append(b, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_23487));
            } else {
            }
            var G__23488 = i_23487 + 1;
            i_23487 = G__23488;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), filter(pred, cljs.core.chunk_rest(s)));
      } else {
        var f = cljs.core.first(s);
        var r = cljs.core.rest(s);
        if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(f) : pred.call(null, f))) {
          return cljs.core.cons(f, filter(pred, r));
        } else {
          return filter(pred, r);
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.remove = function remove(pred, coll) {
  return cljs.core.filter(cljs.core.complement(pred), coll);
};
cljs.core.tree_seq = function tree_seq(branch_QMARK_, children, root) {
  var walk = function walk(node) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(node, cljs.core.truth_(branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(node) : branch_QMARK_.call(null, node)) ? cljs.core.mapcat.cljs$core$IFn$_invoke$arity$2(walk, children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(node) : children.call(null, node)) : null);
    }, null, null);
  };
  return walk(root);
};
cljs.core.flatten = function flatten(x) {
  return cljs.core.filter(function(p1__23489_SHARP_) {
    return!cljs.core.sequential_QMARK_(p1__23489_SHARP_);
  }, cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_, cljs.core.seq, x)));
};
cljs.core.into = function into(to, from) {
  if (!(to == null)) {
    if (function() {
      var G__23491 = to;
      if (G__23491) {
        var bit__4045__auto__ = G__23491.cljs$lang$protocol_mask$partition1$ & 4;
        if (bit__4045__auto__ || G__23491.cljs$core$IEditableCollection$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core.transient$(to), from));
    } else {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, to, from);
    }
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, from);
  }
};
cljs.core.mapv = function() {
  var mapv = null;
  var mapv__2 = function(f, coll) {
    return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
      return cljs.core.conj_BANG_(v, f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(o) : f.call(null, o));
    }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
  };
  var mapv__3 = function(f, c1, c2) {
    return cljs.core.into(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$3(f, c1, c2));
  };
  var mapv__4 = function(f, c1, c2, c3) {
    return cljs.core.into(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$4(f, c1, c2, c3));
  };
  var mapv__5 = function() {
    var G__23492__delegate = function(f, c1, c2, c3, colls) {
      return cljs.core.into(cljs.core.PersistentVector.EMPTY, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map, f, c1, c2, c3, cljs.core.array_seq([colls], 0)));
    };
    var G__23492 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__23492__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__23492.cljs$lang$maxFixedArity = 4;
    G__23492.cljs$lang$applyTo = function(arglist__23493) {
      var f = cljs.core.first(arglist__23493);
      arglist__23493 = cljs.core.next(arglist__23493);
      var c1 = cljs.core.first(arglist__23493);
      arglist__23493 = cljs.core.next(arglist__23493);
      var c2 = cljs.core.first(arglist__23493);
      arglist__23493 = cljs.core.next(arglist__23493);
      var c3 = cljs.core.first(arglist__23493);
      var colls = cljs.core.rest(arglist__23493);
      return G__23492__delegate(f, c1, c2, c3, colls);
    };
    G__23492.cljs$core$IFn$_invoke$arity$variadic = G__23492__delegate;
    return G__23492;
  }();
  mapv = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapv__2.call(this, f, c1);
      case 3:
        return mapv__3.call(this, f, c1, c2);
      case 4:
        return mapv__4.call(this, f, c1, c2, c3);
      default:
        return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapv.cljs$lang$maxFixedArity = 4;
  mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
  mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
  mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
  mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
  mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
  return mapv;
}();
cljs.core.filterv = function filterv(pred, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
    if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(o) : pred.call(null, o))) {
      return cljs.core.conj_BANG_(v, o);
    } else {
      return v;
    }
  }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.partition = function() {
  var partition = null;
  var partition__2 = function(n, coll) {
    return partition.cljs$core$IFn$_invoke$arity$3(n, n, coll);
  };
  var partition__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq(coll);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        var p = cljs.core.take(n, s);
        if (n === cljs.core.count(p)) {
          return cljs.core.cons(p, partition.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop(step, s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var partition__4 = function(n, step, pad, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq(coll);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        var p = cljs.core.take(n, s);
        if (n === cljs.core.count(p)) {
          return cljs.core.cons(p, partition.cljs$core$IFn$_invoke$arity$4(n, step, pad, cljs.core.drop(step, s)));
        } else {
          return cljs.core._conj(cljs.core.List.EMPTY, cljs.core.take(n, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p, pad)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  partition = function(n, step, pad, coll) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, step);
      case 3:
        return partition__3.call(this, n, step, pad);
      case 4:
        return partition__4.call(this, n, step, pad, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
  partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
  partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
  return partition;
}();
cljs.core.get_in = function() {
  var get_in = null;
  var get_in__2 = function(m, ks) {
    return get_in.cljs$core$IFn$_invoke$arity$3(m, ks, null);
  };
  var get_in__3 = function(m, ks, not_found) {
    var sentinel = cljs.core.lookup_sentinel;
    var m__$1 = m;
    var ks__$1 = cljs.core.seq(ks);
    while (true) {
      if (ks__$1) {
        if (!function() {
          var G__23495 = m__$1;
          if (G__23495) {
            var bit__4052__auto__ = G__23495.cljs$lang$protocol_mask$partition0$ & 256;
            if (bit__4052__auto__ || G__23495.cljs$core$ILookup$) {
              return true;
            } else {
              if (!G__23495.cljs$lang$protocol_mask$partition0$) {
                return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, G__23495);
              } else {
                return false;
              }
            }
          } else {
            return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, G__23495);
          }
        }()) {
          return not_found;
        } else {
          var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1, cljs.core.first(ks__$1), sentinel);
          if (sentinel === m__$2) {
            return not_found;
          } else {
            var G__23496 = sentinel;
            var G__23497 = m__$2;
            var G__23498 = cljs.core.next(ks__$1);
            sentinel = G__23496;
            m__$1 = G__23497;
            ks__$1 = G__23498;
            continue;
          }
        }
      } else {
        return m__$1;
      }
      break;
    }
  };
  get_in = function(m, ks, not_found) {
    switch(arguments.length) {
      case 2:
        return get_in__2.call(this, m, ks);
      case 3:
        return get_in__3.call(this, m, ks, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
  get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
  return get_in;
}();
cljs.core.assoc_in = function assoc_in(m, p__23499, v) {
  var vec__23501 = p__23499;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23501, 0, null);
  var ks = cljs.core.nthnext(vec__23501, 1);
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, v));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
  }
};
cljs.core.update_in = function() {
  var update_in = null;
  var update_in__3 = function(m, p__23502, f) {
    var vec__23512 = p__23502;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23512, 0, null);
    var ks = cljs.core.nthnext(vec__23512, 1);
    if (ks) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f));
    } else {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k)) : f.call(null, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k)));
    }
  };
  var update_in__4 = function(m, p__23503, f, a) {
    var vec__23513 = p__23503;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23513, 0, null);
    var ks = cljs.core.nthnext(vec__23513, 1);
    if (ks) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a));
    } else {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), a) : f.call(null, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), a));
    }
  };
  var update_in__5 = function(m, p__23504, f, a, b) {
    var vec__23514 = p__23504;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23514, 0, null);
    var ks = cljs.core.nthnext(vec__23514, 1);
    if (ks) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b));
    } else {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), a, b) : f.call(null, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), a, b));
    }
  };
  var update_in__6 = function(m, p__23505, f, a, b, c) {
    var vec__23515 = p__23505;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23515, 0, null);
    var ks = cljs.core.nthnext(vec__23515, 1);
    if (ks) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b, c));
    } else {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), a, b, c) : f.call(null, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), a, b, c));
    }
  };
  var update_in__7 = function() {
    var G__23517__delegate = function(m, p__23506, f, a, b, c, args) {
      var vec__23516 = p__23506;
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23516, 0, null);
      var ks = cljs.core.nthnext(vec__23516, 1);
      if (ks) {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, cljs.core.array_seq([b, c, args], 0)));
      } else {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), a, b, c, cljs.core.array_seq([args], 0)));
      }
    };
    var G__23517 = function(m, p__23506, f, a, b, c, var_args) {
      var args = null;
      if (arguments.length > 6) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 6), 0);
      }
      return G__23517__delegate.call(this, m, p__23506, f, a, b, c, args);
    };
    G__23517.cljs$lang$maxFixedArity = 6;
    G__23517.cljs$lang$applyTo = function(arglist__23518) {
      var m = cljs.core.first(arglist__23518);
      arglist__23518 = cljs.core.next(arglist__23518);
      var p__23506 = cljs.core.first(arglist__23518);
      arglist__23518 = cljs.core.next(arglist__23518);
      var f = cljs.core.first(arglist__23518);
      arglist__23518 = cljs.core.next(arglist__23518);
      var a = cljs.core.first(arglist__23518);
      arglist__23518 = cljs.core.next(arglist__23518);
      var b = cljs.core.first(arglist__23518);
      arglist__23518 = cljs.core.next(arglist__23518);
      var c = cljs.core.first(arglist__23518);
      var args = cljs.core.rest(arglist__23518);
      return G__23517__delegate(m, p__23506, f, a, b, c, args);
    };
    G__23517.cljs$core$IFn$_invoke$arity$variadic = G__23517__delegate;
    return G__23517;
  }();
  update_in = function(m, p__23506, f, a, b, c, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 3:
        return update_in__3.call(this, m, p__23506, f);
      case 4:
        return update_in__4.call(this, m, p__23506, f, a);
      case 5:
        return update_in__5.call(this, m, p__23506, f, a, b);
      case 6:
        return update_in__6.call(this, m, p__23506, f, a, b, c);
      default:
        return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m, p__23506, f, a, b, c, cljs.core.array_seq(arguments, 6));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_in.cljs$lang$maxFixedArity = 6;
  update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
  update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
  update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
  update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
  update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
  update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
  return update_in;
}();
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr;
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__3973__auto__, writer__3974__auto__, opts__3975__auto__) {
  return cljs.core._write(writer__3974__auto__, "cljs.core/VectorNode");
};
cljs.core.__GT_VectorNode = function __GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr);
};
cljs.core.pv_fresh_node = function pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
};
cljs.core.pv_aget = function pv_aget(node, idx) {
  return node.arr[idx];
};
cljs.core.pv_aset = function pv_aset(node, idx, val) {
  return node.arr[idx] = val;
};
cljs.core.pv_clone_node = function pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, cljs.core.aclone(node.arr));
};
cljs.core.tail_off = function tail_off(pv) {
  var cnt = pv.cnt;
  if (cnt < 32) {
    return 0;
  } else {
    return cnt - 1 >>> 5 << 5;
  }
};
cljs.core.new_path = function new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while (true) {
    if (ll === 0) {
      return ret;
    } else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node(edit);
      var _ = cljs.core.pv_aset(r, 0, embed);
      var G__23519 = ll - 5;
      var G__23520 = r;
      ll = G__23519;
      ret = G__23520;
      continue;
    }
    break;
  }
};
cljs.core.push_tail = function push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node(parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if (5 === level) {
    cljs.core.pv_aset(ret, subidx, tailnode);
    return ret;
  } else {
    var child = cljs.core.pv_aget(parent, subidx);
    if (!(child == null)) {
      var node_to_insert = push_tail(pv, level - 5, child, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    } else {
      var node_to_insert = cljs.core.new_path(null, level - 5, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    }
  }
};
cljs.core.vector_index_out_of_bounds = function vector_index_out_of_bounds(i, cnt) {
  throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(cnt)].join(""));
};
cljs.core.array_for = function array_for(pv, i) {
  if (0 <= i && i < pv.cnt) {
    if (i >= cljs.core.tail_off(pv)) {
      return pv.tail;
    } else {
      var node = pv.root;
      var level = pv.shift;
      while (true) {
        if (level > 0) {
          var G__23521 = cljs.core.pv_aget(node, i >>> level & 31);
          var G__23522 = level - 5;
          node = G__23521;
          level = G__23522;
          continue;
        } else {
          return node.arr;
        }
        break;
      }
    }
  } else {
    return cljs.core.vector_index_out_of_bounds(i, pv.cnt);
  }
};
cljs.core.do_assoc = function do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node(node);
  if (level === 0) {
    cljs.core.pv_aset(ret, i & 31, val);
    return ret;
  } else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset(ret, subidx, do_assoc(pv, level - 5, cljs.core.pv_aget(node, subidx), i, val));
    return ret;
  }
};
cljs.core.pop_tail = function pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = pop_tail(pv, level - 5, cljs.core.pv_aget(node, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, new_child);
      return ret;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var ret = cljs.core.pv_clone_node(node);
        cljs.core.pv_aset(ret, subidx, null);
        return ret;
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 167668511;
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core/PersistentVector");
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(self__.root) : cljs.core.tv_editable_root.call(null, self__.root), cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(self__.tail) : cljs.core.tv_editable_tail.call(null, self__.tail));
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3819__auto__ = self__.__hash;
  if (!(h__3819__auto__ == null)) {
    return h__3819__auto__;
  } else {
    var h__3819__auto____$1 = cljs.core.hash_coll(coll__$1);
    self__.__hash = h__3819__auto____$1;
    return h__3819__auto____$1;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= k && k < self__.cnt) {
    if (cljs.core.tail_off(coll__$1) <= k) {
      var new_tail = cljs.core.aclone(self__.tail);
      new_tail[k & 31] = v;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null);
    } else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc(coll__$1, self__.shift, self__.root, k, v), self__.tail, null);
    }
  } else {
    if (k === self__.cnt) {
      return cljs.core._conj(coll__$1, v);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw new Error([cljs.core.str("Index "), cljs.core.str(k), cljs.core.str(" out of bounds  [0,"), cljs.core.str(self__.cnt), cljs.core.str("]")].join(""));
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__23524 = null;
  var G__23524__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__23524__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__23524 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__23524__2.call(this, self__, k);
      case 3:
        return G__23524__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__23524;
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args23523) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args23523)));
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var step_init = [0, init];
  var i = 0;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.array_for(v__$1, i);
      var len = arr.length;
      var init__$1 = function() {
        var j = 0;
        var init__$1 = step_init[1];
        while (true) {
          if (j < len) {
            var init__$2 = f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(init__$1, j + i, arr[j]) : f.call(null, init__$1, j + i, arr[j]);
            if (cljs.core.reduced_QMARK_(init__$2)) {
              return init__$2;
            } else {
              var G__23525 = j + 1;
              var G__23526 = init__$2;
              j = G__23525;
              init__$1 = G__23526;
              continue;
            }
          } else {
            step_init[0] = len;
            step_init[1] = init__$1;
            return init__$1;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$1)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$1) : cljs.core.deref.call(null, init__$1);
      } else {
        var G__23527 = i + step_init[0];
        i = G__23527;
        continue;
      }
    } else {
      return step_init[1];
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt - cljs.core.tail_off(coll__$1) < 32) {
    var len = self__.tail.length;
    var new_tail = new Array(len + 1);
    var n__4250__auto___23528 = len;
    var i_23529 = 0;
    while (true) {
      if (i_23529 < n__4250__auto___23528) {
        new_tail[i_23529] = self__.tail[i_23529];
        var G__23530 = i_23529 + 1;
        i_23529 = G__23530;
        continue;
      } else {
      }
      break;
    }
    new_tail[len] = o;
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null);
  } else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node(null);
      cljs.core.pv_aset(n_r, 0, self__.root);
      cljs.core.pv_aset(n_r, 1, cljs.core.new_path(null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r;
    }() : cljs.core.push_tail(coll__$1, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null);
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return new cljs.core.RSeq(coll__$1, self__.cnt - 1, null);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, 0);
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, 1);
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1, f);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(v__$1, f, start);
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    return null;
  } else {
    if (self__.cnt < 32) {
      return cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1(self__.tail);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$3(coll__$1, 0, 0) : cljs.core.chunked_seq.call(null, coll__$1, 0, 0);
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, self__.cnt - 1);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  } else {
    if (1 === self__.cnt) {
      return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
    } else {
      if (1 < self__.cnt - cljs.core.tail_off(coll__$1)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var new_tail = cljs.core.array_for(coll__$1, self__.cnt - 2);
          var nr = cljs.core.pop_tail(coll__$1, self__.shift, self__.root);
          var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
          var cnt_1 = self__.cnt - 1;
          if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
            return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget(new_root, 0), new_tail, null);
          } else {
            return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null);
          }
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._assoc(coll__$1, n, val);
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(meta__$1, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICloneable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_for(coll__$1, n)[n & 31];
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, n);
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.__GT_PersistentVector = function __GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash);
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], 0);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : cljs.core.aclone(xs);
  if (l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null);
  } else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
    while (true) {
      if (i < l) {
        var G__23531 = i + 1;
        var G__23532 = cljs.core.conj_BANG_(out, xs__$1[i]);
        i = G__23531;
        out = G__23532;
        continue;
      } else {
        return cljs.core.persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.vec = function vec(coll) {
  return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core._as_transient(cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.vector = function() {
  var vector__delegate = function(args) {
    if (args instanceof cljs.core.IndexedSeq && args.i === 0) {
      return cljs.core.PersistentVector.fromArray.cljs$core$IFn$_invoke$arity$2 ? cljs.core.PersistentVector.fromArray.cljs$core$IFn$_invoke$arity$2(args.arr, true) : cljs.core.PersistentVector.fromArray.call(null, args.arr, true);
    } else {
      return cljs.core.vec(args);
    }
  };
  var vector = function(var_args) {
    var args = null;
    if (arguments.length > 0) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return vector__delegate.call(this, args);
  };
  vector.cljs$lang$maxFixedArity = 0;
  vector.cljs$lang$applyTo = function(arglist__23533) {
    var args = cljs.core.seq(arglist__23533);
    return vector__delegate(args);
  };
  vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
  return vector;
}();
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32243948;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core/ChunkedSeq");
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3819__auto__ = self__.__hash;
  if (!(h__3819__auto__ == null)) {
    return h__3819__auto__;
  } else {
    var h__3819__auto____$1 = cljs.core.hash_coll(coll__$1);
    self__.__hash = h__3819__auto____$1;
    return h__3819__auto____$1;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(self__.vec, self__.node, self__.i, self__.off + 1) : cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off + 1);
    if (s == null) {
      return null;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_next(coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(self__.vec, self__.i + self__.off, cljs.core.count(self__.vec)) : cljs.core.subvec.call(null, self__.vec, self__.i + self__.off, cljs.core.count(self__.vec)), f);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(self__.vec, self__.i + self__.off, cljs.core.count(self__.vec)) : cljs.core.subvec.call(null, self__.vec, self__.i + self__.off, cljs.core.count(self__.vec)), f, start);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.node[self__.off];
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(self__.vec, self__.node, self__.i, self__.off + 1) : cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off + 1);
    if (s == null) {
      return cljs.core.List.EMPTY;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_rest(coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var l = self__.node.length;
  var s = self__.i + l < cljs.core._count(self__.vec) ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$3(self__.vec, self__.i + l, 0) : cljs.core.chunked_seq.call(null, self__.vec, self__.i + l, 0) : null;
  if (s == null) {
    return null;
  } else {
    return s;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(self__.vec, self__.node, self__.i, self__.off, m) : cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off, m);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node, self__.off);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var l = self__.node.length;
  var s = self__.i + l < cljs.core._count(self__.vec) ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$3(self__.vec, self__.i + l, 0) : cljs.core.chunked_seq.call(null, self__.vec, self__.i + l, 0) : null;
  if (s == null) {
    return cljs.core.List.EMPTY;
  } else {
    return s;
  }
};
cljs.core.__GT_ChunkedSeq = function __GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash);
};
cljs.core.chunked_seq = function() {
  var chunked_seq = null;
  var chunked_seq__3 = function(vec, i, off) {
    return new cljs.core.ChunkedSeq(vec, cljs.core.array_for(vec, i), i, off, null, null);
  };
  var chunked_seq__4 = function(vec, node, i, off) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, null, null);
  };
  var chunked_seq__5 = function(vec, node, i, off, meta) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null);
  };
  chunked_seq = function(vec, node, i, off, meta) {
    switch(arguments.length) {
      case 3:
        return chunked_seq__3.call(this, vec, node, i);
      case 4:
        return chunked_seq__4.call(this, vec, node, i, off);
      case 5:
        return chunked_seq__5.call(this, vec, node, i, off, meta);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
  chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
  chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
  return chunked_seq;
}();
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32400159;
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core/Subvec");
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3819__auto__ = self__.__hash;
  if (!(h__3819__auto__ == null)) {
    return h__3819__auto__;
  } else {
    var h__3819__auto____$1 = cljs.core.hash_coll(coll__$1);
    self__.__hash = h__3819__auto____$1;
    return h__3819__auto____$1;
  }
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var coll__$1 = this;
  var v_pos = self__.start + key;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v, v_pos, val), self__.start, function() {
    var x__3715__auto__ = self__.end;
    var y__3716__auto__ = v_pos + 1;
    return x__3715__auto__ > y__3716__auto__ ? x__3715__auto__ : y__3716__auto__;
  }(), null) : cljs.core.build_subvec.call(null, self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v, v_pos, val), self__.start, function() {
    var x__3715__auto__ = self__.end;
    var y__3716__auto__ = v_pos + 1;
    return x__3715__auto__ > y__3716__auto__ ? x__3715__auto__ : y__3716__auto__;
  }(), null);
};
cljs.core.Subvec.prototype.call = function() {
  var G__23535 = null;
  var G__23535__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__23535__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__23535 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__23535__2.call(this, self__, k);
      case 3:
        return G__23535__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__23535;
}();
cljs.core.Subvec.prototype.apply = function(self__, args23534) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args23534)));
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(self__.meta, cljs.core._assoc_n(self__.v, self__.end, o), self__.start, self__.end + 1, null) : cljs.core.build_subvec.call(null, self__.meta, cljs.core._assoc_n(self__.v, self__.end, o), self__.start, self__.end + 1, null);
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1, f);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1, f, start__$1);
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var subvec_seq = function subvec_seq(i) {
    if (i === self__.end) {
      return null;
    } else {
      return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, i), new cljs.core.LazySeq(null, function() {
        return subvec_seq(i + 1);
      }, null, null));
    }
  };
  return subvec_seq(self__.start);
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.end - self__.start;
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.end - 1);
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  } else {
    return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(self__.meta, self__.v, self__.start, self__.end - 1, null) : cljs.core.build_subvec.call(null, self__.meta, self__.v, self__.start, self__.end - 1, null);
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._assoc(coll__$1, n, val);
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(meta__$1, self__.v, self__.start, self__.end, self__.__hash) : cljs.core.build_subvec.call(null, meta__$1, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICloneable$ = true;
cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Subvec(self__.meta, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return cljs.core.vector_index_out_of_bounds(n, self__.end - self__.start);
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.start + n);
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return not_found;
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v, self__.start + n, not_found);
  }
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.__GT_Subvec = function __GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash);
};
cljs.core.build_subvec = function build_subvec(meta, v, start, end, __hash) {
  while (true) {
    if (v instanceof cljs.core.Subvec) {
      var G__23536 = meta;
      var G__23537 = v.v;
      var G__23538 = v.start + start;
      var G__23539 = v.start + end;
      var G__23540 = __hash;
      meta = G__23536;
      v = G__23537;
      start = G__23538;
      end = G__23539;
      __hash = G__23540;
      continue;
    } else {
      var c = cljs.core.count(v);
      if (start < 0 || (end < 0 || (start > c || end > c))) {
        throw new Error("Index out of bounds");
      } else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash);
    }
    break;
  }
};
cljs.core.subvec = function() {
  var subvec = null;
  var subvec__2 = function(v, start) {
    return subvec.cljs$core$IFn$_invoke$arity$3(v, start, cljs.core.count(v));
  };
  var subvec__3 = function(v, start, end) {
    return cljs.core.build_subvec(null, v, start, end, null);
  };
  subvec = function(v, start, end) {
    switch(arguments.length) {
      case 2:
        return subvec__2.call(this, v, start);
      case 3:
        return subvec__3.call(this, v, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
  subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
  return subvec;
}();
cljs.core.tv_ensure_editable = function tv_ensure_editable(edit, node) {
  if (edit === node.edit) {
    return node;
  } else {
    return new cljs.core.VectorNode(edit, cljs.core.aclone(node.arr));
  }
};
cljs.core.tv_editable_root = function tv_editable_root(node) {
  return new cljs.core.VectorNode(function() {
    var obj23544 = {};
    return obj23544;
  }(), cljs.core.aclone(node.arr));
};
cljs.core.tv_editable_tail = function tv_editable_tail(tl) {
  var ret = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  cljs.core.array_copy(tl, 0, ret, 0, tl.length);
  return ret;
};
cljs.core.tv_push_tail = function tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable(tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset(ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget(ret, subidx);
    if (!(child == null)) {
      return tv_push_tail(tv, level - 5, child, tail_node);
    } else {
      return cljs.core.new_path(tv.root.edit, level - 5, tail_node);
    }
  }());
  return ret;
};
cljs.core.tv_pop_tail = function tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = tv_pop_tail(tv, level - 5, cljs.core.pv_aget(node__$1, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, new_child);
      return node__$1;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        cljs.core.pv_aset(node__$1, subidx, null);
        return node__$1;
      } else {
        return null;
      }
    }
  }
};
cljs.core.editable_array_for = function editable_array_for(tv, i) {
  if (0 <= i && i < tv.cnt) {
    if (i >= cljs.core.tail_off(tv)) {
      return tv.tail;
    } else {
      var root = tv.root;
      var node = root;
      var level = tv.shift;
      while (true) {
        if (level > 0) {
          var G__23545 = cljs.core.tv_ensure_editable(root.edit, cljs.core.pv_aget(node, i >>> level & 31));
          var G__23546 = level - 5;
          node = G__23545;
          level = G__23546;
          continue;
        } else {
          return node.arr;
        }
        break;
      }
    }
  } else {
    throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in transient vector of length "), cljs.core.str(tv.cnt)].join(""));
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition0$ = 275;
  this.cljs$lang$protocol_mask$partition1$ = 88;
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core/TransientVector");
};
cljs.core.TransientVector.prototype.call = function() {
  var G__23548 = null;
  var G__23548__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__23548__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__23548 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__23548__2.call(this, self__, k);
      case 3:
        return G__23548__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__23548;
}();
cljs.core.TransientVector.prototype.apply = function(self__, args23547) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args23547)));
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return cljs.core.array_for(coll__$1, n)[n & 31];
  } else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, n);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return self__.cnt;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (0 <= n && n < self__.cnt) {
      if (cljs.core.tail_off(tcoll__$1) <= n) {
        self__.tail[n & 31] = val;
        return tcoll__$1;
      } else {
        var new_root = function go(level, node) {
          var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit, node);
          if (level === 0) {
            cljs.core.pv_aset(node__$1, n & 31, val);
            return node__$1;
          } else {
            var subidx = n >>> level & 31;
            cljs.core.pv_aset(node__$1, subidx, go(level - 5, cljs.core.pv_aget(node__$1, subidx)));
            return node__$1;
          }
        }.call(null, self__.shift, self__.root);
        self__.root = new_root;
        return tcoll__$1;
      }
    } else {
      if (n === self__.cnt) {
        return cljs.core._conj_BANG_(tcoll__$1, val);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(self__.cnt)].join(""));
        } else {
          return null;
        }
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    } else {
      if (1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll__$1;
      } else {
        if ((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll__$1;
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var new_tail = cljs.core.editable_array_for(tcoll__$1, self__.cnt - 2);
            var new_root = function() {
              var nr = cljs.core.tv_pop_tail(tcoll__$1, self__.shift, self__.root);
              if (!(nr == null)) {
                return nr;
              } else {
                return new cljs.core.VectorNode(self__.root.edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
              }
            }();
            if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
              var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit, cljs.core.pv_aget(new_root, 0));
              self__.root = new_root__$1;
              self__.shift = self__.shift - 5;
              self__.cnt = self__.cnt - 1;
              self__.tail = new_tail;
              return tcoll__$1;
            } else {
              self__.root = new_root;
              self__.cnt = self__.cnt - 1;
              self__.tail = new_tail;
              return tcoll__$1;
            }
          } else {
            return null;
          }
        }
      }
    }
  } else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._assoc_n_BANG_(tcoll__$1, key, val);
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt - cljs.core.tail_off(tcoll__$1) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll__$1;
    } else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      new_tail[0] = o;
      self__.tail = new_tail;
      if (self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path(self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      } else {
        var new_root = cljs.core.tv_push_tail(tcoll__$1, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off(tcoll__$1);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy(self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.__GT_TransientVector = function __GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail);
};
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572;
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core/PersistentQueueSeq");
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3819__auto__ = self__.__hash;
  if (!(h__3819__auto__ == null)) {
    return h__3819__auto__;
  } else {
    var h__3819__auto____$1 = cljs.core.hash_coll(coll__$1);
    self__.__hash = h__3819__auto____$1;
    return h__3819__auto____$1;
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__4090__auto__ = cljs.core.next(self__.front);
  if (temp__4090__auto__) {
    var f1 = temp__4090__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null);
  } else {
    if (self__.rear == null) {
      return cljs.core._empty(coll__$1);
    } else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null);
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueSeq(meta__$1, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_PersistentQueueSeq = function __GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash);
};
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31858766;
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core/PersistentQueue");
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3819__auto__ = self__.__hash;
  if (!(h__3819__auto__ == null)) {
    return h__3819__auto__;
  } else {
    var h__3819__auto____$1 = cljs.core.hash_coll(coll__$1);
    self__.__hash = h__3819__auto____$1;
    return h__3819__auto____$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
      var or__3408__auto__ = self__.rear;
      if (cljs.core.truth_(or__3408__auto__)) {
        return or__3408__auto__;
      } else {
        return cljs.core.PersistentVector.EMPTY;
      }
    }(), o), null);
  } else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front, o), cljs.core.PersistentVector.EMPTY, null);
  }
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var rear__$1 = cljs.core.seq(self__.rear);
  if (cljs.core.truth_(function() {
    var or__3408__auto__ = self__.front;
    if (cljs.core.truth_(or__3408__auto__)) {
      return or__3408__auto__;
    } else {
      return rear__$1;
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq(rear__$1), null);
  } else {
    return null;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    var temp__4090__auto__ = cljs.core.next(self__.front);
    if (temp__4090__auto__) {
      var f1 = temp__4090__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null);
    } else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq(self__.rear), cljs.core.PersistentVector.EMPTY, null);
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.rest(cljs.core.seq(coll__$1));
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(meta__$1, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(self__.meta, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.PersistentQueue.EMPTY;
};
cljs.core.__GT_PersistentQueue = function __GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash);
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, 0);
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2097152;
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core/NeverEquiv");
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return false;
};
cljs.core.__GT_NeverEquiv = function __GT_NeverEquiv() {
  return new cljs.core.NeverEquiv;
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function equiv_map(x, y) {
  return cljs.core.boolean$(cljs.core.map_QMARK_(y) ? cljs.core.count(x) === cljs.core.count(y) ? cljs.core.every_QMARK_(cljs.core.identity, cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(xkv) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y, cljs.core.first(xkv), cljs.core.never_equiv), cljs.core.second(xkv));
  }, x)) : null : null);
};
cljs.core.scan_array = function scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while (true) {
    if (i < len) {
      if (k === array[i]) {
        return i;
      } else {
        var G__23549 = i + incr;
        i = G__23549;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.obj_map_compare_keys = function obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash(a);
  var b__$1 = cljs.core.hash(b);
  if (a__$1 < b__$1) {
    return-1;
  } else {
    if (a__$1 > b__$1) {
      return 1;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return 0;
      } else {
        return null;
      }
    }
  }
};
cljs.core.obj_map__GT_hash_map = function obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta(m);
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var k__$1 = ks[i];
      var G__23550 = i + 1;
      var G__23551 = cljs.core.assoc_BANG_(out, k__$1, so[k__$1]);
      i = G__23550;
      out = G__23551;
      continue;
    } else {
      return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_(out, k, v)), mm);
    }
    break;
  }
};
cljs.core.obj_clone = function obj_clone(obj, ks) {
  var new_obj = function() {
    var obj23555 = {};
    return obj23555;
  }();
  var l = ks.length;
  var i_23556 = 0;
  while (true) {
    if (i_23556 < l) {
      var k_23557 = ks[i_23556];
      new_obj[k_23557] = obj[k_23557];
      var G__23558 = i_23556 + 1;
      i_23556 = G__23558;
      continue;
    } else {
    }
    break;
  }
  return new_obj;
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core/ObjMap");
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.transient$(cljs.core.into(cljs.core.PersistentHashMap.EMPTY, coll__$1));
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3819__auto__ = self__.__hash;
  if (!(h__3819__auto__ == null)) {
    return h__3819__auto__;
  } else {
    var h__3819__auto____$1 = cljs.core.hash_imap(coll__$1);
    self__.__hash = h__3819__auto____$1;
    return h__3819__auto____$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    return self__.strobj[k];
  } else {
    return not_found;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k)) {
    if (self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD || self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD) {
      return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
    } else {
      if (!(cljs.core.scan_array(1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        new_strobj[k] = v;
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null);
      } else {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        var new_keys = cljs.core.aclone(self__.keys);
        new_strobj[k] = v;
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
      }
    }
  } else {
    return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__23561 = null;
  var G__23561__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__23561__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__23561 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__23561__2.call(this, self__, k);
      case 3:
        return G__23561__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__23561;
}();
cljs.core.ObjMap.prototype.apply = function(self__, args23560) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args23560)));
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while (true) {
    if (cljs.core.seq(keys__$1)) {
      var k = cljs.core.first(keys__$1);
      var init__$2 = f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(init__$1, k, self__.strobj[k]) : f.call(null, init__$1, k, self__.strobj[k]);
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__23562 = cljs.core.rest(keys__$1);
        var G__23563 = init__$2;
        keys__$1 = G__23562;
        init__$1 = G__23563;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.keys.length > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__23559_SHARP_) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__23559_SHARP_, self__.strobj[p1__23559_SHARP_]], null);
    }, self__.keys.sort(cljs.core.obj_map_compare_keys));
  } else {
    return null;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.keys.length;
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ObjMap(meta__$1, self__.keys, self__.strobj, self__.update_count, self__.__hash);
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.ObjMap.EMPTY, self__.meta);
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    var new_keys = cljs.core.aclone(self__.keys);
    var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array(1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
  } else {
    return coll__$1;
  }
};
cljs.core.__GT_ObjMap = function __GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash);
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], function() {
  var obj23565 = {};
  return obj23565;
}(), 0, 0);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null);
};
cljs.core.array_map_index_of_nil_QMARK_ = function array_map_index_of_nil_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (arr[i] == null) {
        return i;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__23566 = i + 2;
          i = G__23566;
          continue;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_keyword_QMARK_ = function array_map_index_of_keyword_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.fqn;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Keyword && kstr === k_SINGLEQUOTE_.fqn;
      }()) {
        return i;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__23567 = i + 2;
          i = G__23567;
          continue;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_symbol_QMARK_ = function array_map_index_of_symbol_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Symbol && kstr === k_SINGLEQUOTE_.str;
      }()) {
        return i;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__23568 = i + 2;
          i = G__23568;
          continue;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_identical_QMARK_ = function array_map_index_of_identical_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (k === arr[i]) {
        return i;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__23569 = i + 2;
          i = G__23569;
          continue;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_equiv_QMARK_ = function array_map_index_of_equiv_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, arr[i])) {
        return i;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__23570 = i + 2;
          i = G__23570;
          continue;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.array_map_index_of = function array_map_index_of(m, k) {
  var arr = m.arr;
  if (k instanceof cljs.core.Keyword) {
    return cljs.core.array_map_index_of_keyword_QMARK_(arr, m, k);
  } else {
    if (goog.isString(k) || typeof k === "number") {
      return cljs.core.array_map_index_of_identical_QMARK_(arr, m, k);
    } else {
      if (k instanceof cljs.core.Symbol) {
        return cljs.core.array_map_index_of_symbol_QMARK_(arr, m, k);
      } else {
        if (k == null) {
          return cljs.core.array_map_index_of_nil_QMARK_(arr, m, k);
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            return cljs.core.array_map_index_of_equiv_QMARK_(arr, m, k);
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.core.array_map_extend_kv = function array_map_extend_kv(m, k, v) {
  var arr = m.arr;
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_23571 = 0;
  while (true) {
    if (i_23571 < l) {
      narr[i_23571] = arr[i_23571];
      var G__23572 = i_23571 + 1;
      i_23571 = G__23572;
      continue;
    } else {
    }
    break;
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr;
};
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core/PersistentArrayMapSeq");
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll(coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return(self__.arr.length - self__.i) / 2;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.__GT_PersistentArrayMapSeq = function __GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
};
cljs.core.persistent_array_map_seq = function persistent_array_map_seq(arr, i, _meta) {
  if (i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core/PersistentArrayMap");
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientArrayMap(function() {
    var obj23575 = {};
    return obj23575;
  }(), self__.arr.length, cljs.core.aclone(self__.arr));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3819__auto__ = self__.__hash;
  if (!(h__3819__auto__ == null)) {
    return h__3819__auto__;
  } else {
    var h__3819__auto____$1 = cljs.core.hash_imap(coll__$1);
    self__.__hash = h__3819__auto____$1;
    return h__3819__auto____$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    return not_found;
  } else {
    return self__.arr[idx + 1];
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    if (self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv(coll__$1, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null);
    } else {
      return cljs.core._with_meta(cljs.core._assoc(cljs.core.into(cljs.core.PersistentHashMap.EMPTY, coll__$1), k, v), self__.meta);
    }
  } else {
    if (v === self__.arr[idx + 1]) {
      return coll__$1;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var arr__$1 = function() {
          var G__23576 = cljs.core.aclone(self__.arr);
          G__23576[idx + 1] = v;
          return G__23576;
        }();
        return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null);
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(cljs.core.array_map_index_of(coll__$1, k) === -1);
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__23577 = null;
  var G__23577__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__23577__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__23577 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__23577__2.call(this, self__, k);
      case 3:
        return G__23577__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__23577;
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args23573) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args23573)));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(init__$1, self__.arr[i], self__.arr[i + 1]) : f.call(null, init__$1, self__.arr[i], self__.arr[i + 1]);
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__23578 = i + 2;
        var G__23579 = init__$2;
        i = G__23578;
        init__$1 = G__23579;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.persistent_array_map_seq(self__.arr, 0, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMap(meta__$1, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY, self__.meta);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if (new_len === 0) {
      return cljs.core._empty(coll__$1);
    } else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while (true) {
        if (s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null);
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, self__.arr[s])) {
            var G__23580 = s + 2;
            var G__23581 = d;
            s = G__23580;
            d = G__23581;
            continue;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              new_arr[d] = self__.arr[s];
              new_arr[d + 1] = self__.arr[s + 1];
              var G__23582 = s + 2;
              var G__23583 = d + 2;
              s = G__23582;
              d = G__23583;
              continue;
            } else {
              return null;
            }
          }
        }
        break;
      }
    }
  } else {
    return coll__$1;
  }
};
cljs.core.__GT_PersistentArrayMap = function __GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash);
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], null);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone, no_check) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  if (no_check) {
    var cnt = arr__$1.length / 2;
    return new cljs.core.PersistentArrayMap(null, cnt, arr__$1, null);
  } else {
    var len = arr__$1.length;
    var i = 0;
    var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__23584 = i + 2;
        var G__23585 = cljs.core._assoc_BANG_(ret, arr__$1[i], arr__$1[i + 1]);
        i = G__23584;
        ret = G__23585;
        continue;
      } else {
        return cljs.core._persistent_BANG_(ret);
      }
      break;
    }
  }
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core/TransientArrayMap");
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__23586_23588 = self__.arr;
      G__23586_23588.pop();
      G__23586_23588.pop();
      self__.len = self__.len - 2;
    } else {
    }
    return tcoll__$1;
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx === -1) {
      if (self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll__$1;
      } else {
        return cljs.core.assoc_BANG_(cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(self__.len, self__.arr) : cljs.core.array__GT_transient_hash_map.call(null, self__.len, self__.arr), key, val);
      }
    } else {
      if (val === self__.arr[idx + 1]) {
        return tcoll__$1;
      } else {
        self__.arr[idx + 1] = val;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    if (function() {
      var G__23587 = o;
      if (G__23587) {
        var bit__4052__auto__ = G__23587.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4052__auto__ || G__23587.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__23587.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__23587);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__23587);
      }
    }()) {
      return cljs.core._assoc_BANG_(tcoll__$1, cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(o) : cljs.core.key.call(null, o), cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(o) : cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq(o);
      var tcoll__$2 = tcoll__$1;
      while (true) {
        var temp__4090__auto__ = cljs.core.first(es);
        if (cljs.core.truth_(temp__4090__auto__)) {
          var e = temp__4090__auto__;
          var G__23589 = cljs.core.next(es);
          var G__23590 = cljs.core._assoc_BANG_(tcoll__$2, cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.key.call(null, e), cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.val.call(null, e));
          es = G__23589;
          tcoll__$2 = G__23590;
          continue;
        } else {
          return tcoll__$2;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot(self__.len, 2), self__.arr, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1, k, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, k);
    if (idx === -1) {
      return not_found;
    } else {
      return self__.arr[idx + 1];
    }
  } else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    return cljs.core.quot(self__.len, 2);
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.__GT_TransientArrayMap = function __GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr);
};
cljs.core.array__GT_transient_hash_map = function array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while (true) {
    if (i < len) {
      var G__23591 = cljs.core.assoc_BANG_(out, arr[i], arr[i + 1]);
      var G__23592 = i + 2;
      out = G__23591;
      i = G__23592;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.Box = function(val) {
  this.val = val;
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__3973__auto__, writer__3974__auto__, opts__3975__auto__) {
  return cljs.core._write(writer__3974__auto__, "cljs.core/Box");
};
cljs.core.__GT_Box = function __GT_Box(val) {
  return new cljs.core.Box(val);
};
cljs.core.key_test = function key_test(key, other) {
  if (key === other) {
    return true;
  } else {
    if (cljs.core.keyword_identical_QMARK_(key, other)) {
      return true;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key, other);
      } else {
        return null;
      }
    }
  }
};
cljs.core.mask = function mask(hash, shift) {
  return hash >>> shift & 31;
};
cljs.core.clone_and_set = function() {
  var clone_and_set = null;
  var clone_and_set__3 = function(arr, i, a) {
    var G__23595 = cljs.core.aclone(arr);
    G__23595[i] = a;
    return G__23595;
  };
  var clone_and_set__5 = function(arr, i, a, j, b) {
    var G__23596 = cljs.core.aclone(arr);
    G__23596[i] = a;
    G__23596[j] = b;
    return G__23596;
  };
  clone_and_set = function(arr, i, a, j, b) {
    switch(arguments.length) {
      case 3:
        return clone_and_set__3.call(this, arr, i, a);
      case 5:
        return clone_and_set__5.call(this, arr, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
  clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
  return clone_and_set;
}();
cljs.core.remove_pair = function remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy(arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy(arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr;
};
cljs.core.bitmap_indexed_node_index = function bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count(bitmap & bit - 1);
};
cljs.core.bitpos = function bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31);
};
cljs.core.edit_and_set = function() {
  var edit_and_set = null;
  var edit_and_set__4 = function(inode, edit, i, a) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    return editable;
  };
  var edit_and_set__6 = function(inode, edit, i, a, j, b) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    editable.arr[j] = b;
    return editable;
  };
  edit_and_set = function(inode, edit, i, a, j, b) {
    switch(arguments.length) {
      case 4:
        return edit_and_set__4.call(this, inode, edit, i, a);
      case 6:
        return edit_and_set__6.call(this, inode, edit, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
  edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
  return edit_and_set;
}();
cljs.core.inode_kv_reduce = function inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if (!(k == null)) {
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(init__$1, k, arr[i + 1]) : f.call(null, init__$1, k, arr[i + 1]);
        } else {
          var node = arr[i + 1];
          if (!(node == null)) {
            return node.kv_reduce(f, init__$1);
          } else {
            return init__$1;
          }
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__23597 = i + 2;
        var G__23598 = init__$2;
        i = G__23597;
        init__$1 = G__23598;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr;
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core/BitmapIndexedNode");
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if (self__.bitmap === bit) {
    return null;
  } else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy(earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable;
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward(earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable;
    } else {
      if (n >= 16) {
        var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_23599 = 0;
        var j_23600 = 0;
        while (true) {
          if (i_23599 < 32) {
            if ((self__.bitmap >>> i_23599 & 1) === 0) {
              var G__23601 = i_23599 + 1;
              var G__23602 = j_23600;
              i_23599 = G__23601;
              j_23600 = G__23602;
              continue;
            } else {
              nodes[i_23599] = !(self__.arr[j_23600] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash(self__.arr[j_23600]), self__.arr[j_23600], self__.arr[j_23600 + 1], added_leaf_QMARK_) : self__.arr[j_23600 + 1];
              var G__23603 = i_23599 + 1;
              var G__23604 = j_23600 + 2;
              i_23599 = G__23603;
              j_23600 = G__23604;
              continue;
            }
          } else {
          }
          break;
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var new_arr = new Array(2 * (n + 4));
          cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
          new_arr[2 * idx] = key;
          new_arr[2 * idx + 1] = val;
          cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
          added_leaf_QMARK_.val = true;
          var editable = inode.ensure_editable(edit__$1);
          editable.arr = new_arr;
          editable.bitmap = editable.bitmap | bit;
          return editable;
        } else {
          return null;
        }
      }
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, val);
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          added_leaf_QMARK_.val = true;
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(edit__$1, shift + 5, key_or_nil, val_or_node, hash, key, val) : cljs.core.create_node.call(null, edit__$1, shift + 5, key_or_nil, val_or_node, hash, key, val));
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(self__.arr) : cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return inode.edit_and_remove_pair(edit__$1, bit, idx);
            } else {
              return null;
            }
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        removed_leaf_QMARK_[0] = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return inode;
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var n = cljs.core.bit_count(self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr);
  }
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil, val_or_node], null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return not_found;
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
            } else {
              return null;
            }
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return inode;
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (n >= 16) {
      var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_23605 = 0;
      var j_23606 = 0;
      while (true) {
        if (i_23605 < 32) {
          if ((self__.bitmap >>> i_23605 & 1) === 0) {
            var G__23607 = i_23605 + 1;
            var G__23608 = j_23606;
            i_23605 = G__23607;
            j_23606 = G__23608;
            continue;
          } else {
            nodes[i_23605] = !(self__.arr[j_23606] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash(self__.arr[j_23606]), self__.arr[j_23606], self__.arr[j_23606 + 1], added_leaf_QMARK_) : self__.arr[j_23606 + 1];
            var G__23609 = i_23605 + 1;
            var G__23610 = j_23606 + 2;
            i_23605 = G__23609;
            j_23606 = G__23610;
            continue;
          }
        } else {
        }
        break;
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes);
    } else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr);
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, val));
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          added_leaf_QMARK_.val = true;
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(shift + 5, key_or_nil, val_or_node, hash, key, val) : cljs.core.create_node.call(null, shift + 5, key_or_nil, val_or_node, hash, key, val)));
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return val_or_node;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return not_found;
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.__GT_BitmapIndexedNode = function __GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr);
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, []);
cljs.core.pack_array_node = function pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = 2 * (array_node.cnt - 1);
  var new_arr = new Array(len);
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while (true) {
    if (i < len) {
      if (!(i === idx) && !(arr[i] == null)) {
        new_arr[j] = arr[i];
        var G__23611 = i + 1;
        var G__23612 = j + 2;
        var G__23613 = bitmap | 1 << i;
        i = G__23611;
        j = G__23612;
        bitmap = G__23613;
        continue;
      } else {
        var G__23614 = i + 1;
        var G__23615 = j;
        var G__23616 = bitmap;
        i = G__23614;
        j = G__23615;
        bitmap = G__23616;
        continue;
      }
    } else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr);
    }
    break;
  }
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core/ArrayNode");
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable;
  } else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(self__.arr) : cljs.core.create_array_node_seq.call(null, self__.arr);
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return inode;
  } else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, edit__$1, idx);
        } else {
          var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable;
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    return new cljs.core.ArrayNode(e, self__.cnt, cljs.core.aclone(self__.arr));
  }
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var node = self__.arr[i];
      if (!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if (cljs.core.reduced_QMARK_(init__$2)) {
          return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
        } else {
          var G__23617 = i + 1;
          var G__23618 = init__$2;
          i = G__23617;
          init__$1 = G__23618;
          continue;
        }
      } else {
        var G__23619 = i + 1;
        var G__23620 = init__$1;
        i = G__23619;
        init__$1 = G__23620;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, null, idx);
        } else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
        } else {
          return null;
        }
      }
    }
  } else {
    return inode;
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)));
  } else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
    }
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.__GT_ArrayNode = function __GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr);
};
cljs.core.hash_collision_node_find_index = function hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while (true) {
    if (i < lim) {
      if (cljs.core.key_test(key, arr[i])) {
        return i;
      } else {
        var G__23621 = i + 2;
        i = G__23621;
        continue;
      }
    } else {
      return-1;
    }
    break;
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core/HashCollisionNode");
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      if (self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable;
      } else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr);
      }
    } else {
      if (self__.arr[idx + 1] === val) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx + 1, val);
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(self__.arr) : cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    removed_leaf_QMARK_[0] = true;
    if (self__.cnt === 1) {
      return null;
    } else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable;
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr);
  }
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[idx], self__.arr[idx + 1]], null);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found;
      } else {
        return null;
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    if (self__.cnt === 1) {
      return null;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair(self__.arr, cljs.core.quot(idx, 2)));
      } else {
        return null;
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      var len = 2 * self__.cnt;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr);
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[idx], val)) {
        return inode;
      } else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx + 1, val));
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return self__.arr[idx + 1];
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found;
      } else {
        return null;
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode;
  } else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array);
  }
};
cljs.core.__GT_HashCollisionNode = function __GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr);
};
cljs.core.create_node = function() {
  var create_node = null;
  var create_node__6 = function(shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash(key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  var create_node__7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash(key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  create_node = function(edit, shift, key1, val1, key2hash, key2, val2) {
    switch(arguments.length) {
      case 6:
        return create_node__6.call(this, edit, shift, key1, val1, key2hash, key2);
      case 7:
        return create_node__7.call(this, edit, shift, key1, val1, key2hash, key2, val2);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
  create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
  return create_node;
}();
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core/NodeSeq");
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3819__auto__ = self__.__hash;
  if (!(h__3819__auto__ == null)) {
    return h__3819__auto__;
  } else {
    var h__3819__auto____$1 = cljs.core.hash_coll(coll__$1);
    self__.__hash = h__3819__auto____$1;
    return h__3819__auto____$1;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.nodes[self__.i], self__.nodes[self__.i + 1]], null);
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(self__.nodes, self__.i + 2, null) : cljs.core.create_inode_seq.call(null, self__.nodes, self__.i + 2, null);
  } else {
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(self__.nodes, self__.i, cljs.core.next(self__.s)) : cljs.core.create_inode_seq.call(null, self__.nodes, self__.i, cljs.core.next(self__.s));
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_NodeSeq = function __GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.create_inode_seq = function() {
  var create_inode_seq = null;
  var create_inode_seq__1 = function(nodes) {
    return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes, 0, null);
  };
  var create_inode_seq__3 = function(nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          if (!(nodes[j] == null)) {
            return new cljs.core.NodeSeq(null, nodes, j, null, null);
          } else {
            var temp__4090__auto__ = nodes[j + 1];
            if (cljs.core.truth_(temp__4090__auto__)) {
              var node = temp__4090__auto__;
              var temp__4090__auto____$1 = node.inode_seq();
              if (cljs.core.truth_(temp__4090__auto____$1)) {
                var node_seq = temp__4090__auto____$1;
                return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null);
              } else {
                var G__23622 = j + 2;
                j = G__23622;
                continue;
              }
            } else {
              var G__23623 = j + 2;
              j = G__23623;
              continue;
            }
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.NodeSeq(null, nodes, i, s, null);
    }
  };
  create_inode_seq = function(nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_inode_seq__1.call(this, nodes);
      case 3:
        return create_inode_seq__3.call(this, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
  create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
  return create_inode_seq;
}();
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core/ArrayNodeSeq");
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3819__auto__ = self__.__hash;
  if (!(h__3819__auto__ == null)) {
    return h__3819__auto__;
  } else {
    var h__3819__auto____$1 = cljs.core.hash_coll(coll__$1);
    self__.__hash = h__3819__auto____$1;
    return h__3819__auto____$1;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.s);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null, self__.nodes, self__.i, cljs.core.next(self__.s)) : cljs.core.create_array_node_seq.call(null, null, self__.nodes, self__.i, cljs.core.next(self__.s));
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_ArrayNodeSeq = function __GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.create_array_node_seq = function() {
  var create_array_node_seq = null;
  var create_array_node_seq__1 = function(nodes) {
    return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null, nodes, 0, null);
  };
  var create_array_node_seq__4 = function(meta, nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          var temp__4090__auto__ = nodes[j];
          if (cljs.core.truth_(temp__4090__auto__)) {
            var nj = temp__4090__auto__;
            var temp__4090__auto____$1 = nj.inode_seq();
            if (cljs.core.truth_(temp__4090__auto____$1)) {
              var ns = temp__4090__auto____$1;
              return new cljs.core.ArrayNodeSeq(meta, nodes, j + 1, ns, null);
            } else {
              var G__23624 = j + 1;
              j = G__23624;
              continue;
            }
          } else {
            var G__23625 = j + 1;
            j = G__23625;
            continue;
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null);
    }
  };
  create_array_node_seq = function(meta, nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_array_node_seq__1.call(this, meta);
      case 4:
        return create_array_node_seq__4.call(this, meta, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
  create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
  return create_array_node_seq;
}();
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core/PersistentHashMap");
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashMap(function() {
    var obj23628 = {};
    return obj23628;
  }(), self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3819__auto__ = self__.__hash;
  if (!(h__3819__auto__ == null)) {
    return h__3819__auto__;
  } else {
    var h__3819__auto____$1 = cljs.core.hash_imap(coll__$1);
    self__.__hash = h__3819__auto____$1;
    return h__3819__auto____$1;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_ && v === self__.nil_val) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null);
    }
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
    if (new_root === self__.root) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    return self__.has_nil_QMARK_;
  } else {
    if (self__.root == null) {
      return false;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return!(self__.root.inode_lookup(0, cljs.core.hash(k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel);
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__23629 = null;
  var G__23629__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__23629__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__23629 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__23629__2.call(this, self__, k);
      case 3:
        return G__23629__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__23629;
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args23626) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args23626)));
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var init__$1 = self__.has_nil_QMARK_ ? f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(init, null, self__.nil_val) : f.call(null, init, null, self__.nil_val) : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$1) : cljs.core.deref.call(null, init__$1);
  } else {
    if (!(self__.root == null)) {
      return self__.root.kv_reduce(f, init__$1);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return init__$1;
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if (self__.has_nil_QMARK_) {
      return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, self__.nil_val], null), s);
    } else {
      return s;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashMap(meta__$1, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashMap(self__.meta, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY, self__.meta);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null);
    } else {
      return coll__$1;
    }
  } else {
    if (self__.root == null) {
      return coll__$1;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var new_root = self__.root.inode_without(0, cljs.core.hash(k), k);
        if (new_root === self__.root) {
          return coll__$1;
        } else {
          return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
        }
      } else {
        return null;
      }
    }
  }
};
cljs.core.__GT_PersistentHashMap = function __GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash);
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, 0);
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__23630 = i + 1;
      var G__23631 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null, ks[i], vs[i]);
      i = G__23630;
      out = G__23631;
      continue;
    } else {
      return cljs.core.persistent_BANG_(out);
    }
    break;
  }
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core/TransientHashMap");
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.without_BANG_(key);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.assoc_BANG_(key, val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.conj_BANG_(val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.persistent_BANG_();
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return null;
    }
  } else {
    if (self__.root == null) {
      return null;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.edit) {
    return self__.count;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (function() {
      var G__23632 = o;
      if (G__23632) {
        var bit__4052__auto__ = G__23632.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4052__auto__ || G__23632.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__23632.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__23632);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__23632);
      }
    }()) {
      return tcoll.assoc_BANG_(cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(o) : cljs.core.key.call(null, o), cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(o) : cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq(o);
      var tcoll__$1 = tcoll;
      while (true) {
        var temp__4090__auto__ = cljs.core.first(es);
        if (cljs.core.truth_(temp__4090__auto__)) {
          var e = temp__4090__auto__;
          var G__23633 = cljs.core.next(es);
          var G__23634 = tcoll__$1.assoc_BANG_(cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.key.call(null, e), cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.val.call(null, e));
          es = G__23633;
          tcoll__$1 = G__23634;
          continue;
        } else {
          return tcoll__$1;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.nil_val === v) {
      } else {
        self__.nil_val = v;
      }
      if (self__.has_nil_QMARK_) {
      } else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true;
      }
      return tcoll;
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
      if (node === self__.root) {
      } else {
        self__.root = node;
      }
      if (added_leaf_QMARK_.val) {
        self__.count = self__.count + 1;
      } else {
      }
      return tcoll;
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll;
      } else {
        return tcoll;
      }
    } else {
      if (self__.root == null) {
        return tcoll;
      } else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash(k), k, removed_leaf_QMARK_);
        if (node === self__.root) {
        } else {
          self__.root = node;
        }
        if (cljs.core.truth_(removed_leaf_QMARK_[0])) {
          self__.count = self__.count - 1;
        } else {
        }
        return tcoll;
      }
    }
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.__GT_TransientHashMap = function __GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val);
};
cljs.core.tree_map_seq_push = function tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while (true) {
    if (!(t == null)) {
      var G__23635 = ascending_QMARK_ ? t.left : t.right;
      var G__23636 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1, t);
      t = G__23635;
      stack__$1 = G__23636;
      continue;
    } else {
      return stack__$1;
    }
    break;
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374862;
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core/PersistentTreeMapSeq");
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3819__auto__ = self__.__hash;
  if (!(h__3819__auto__ == null)) {
    return h__3819__auto__;
  } else {
    var h__3819__auto____$1 = cljs.core.hash_coll(coll__$1);
    self__.__hash = h__3819__auto____$1;
    return h__3819__auto____$1;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt < 0) {
    return cljs.core.count(cljs.core.next(coll__$1)) + 1;
  } else {
    return self__.cnt;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.peek(self__.stack);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first(self__.stack);
  var next_stack = cljs.core.tree_map_seq_push(self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next(self__.stack), self__.ascending_QMARK_);
  if (!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMapSeq(meta__$1, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_PersistentTreeMapSeq = function __GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash);
};
cljs.core.create_tree_map_seq = function create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push(tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null);
};
cljs.core.balance_left = function balance_left(key, val, ins, right) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null);
    } else {
      if (ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return new cljs.core.BlackNode(key, val, ins, right, null);
        } else {
          return null;
        }
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, ins, right, null);
  }
};
cljs.core.balance_right = function balance_right(key, val, left, ins) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null);
    } else {
      if (ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return new cljs.core.BlackNode(key, val, left, ins, null);
        } else {
          return null;
        }
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, left, ins, null);
  }
};
cljs.core.balance_left_del = function balance_left_del(key, val, del, right) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null);
  } else {
    if (right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right(key, val, del, right.redden());
    } else {
      if (right instanceof cljs.core.RedNode && right.left instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right(right.key, right.val, right.left.right, right.right.redden()), null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          throw new Error("red-black tree invariant violation");
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.balance_right_del = function balance_right_del(key, val, left, del) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null);
  } else {
    if (left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left(key, val, left.redden(), del);
    } else {
      if (left instanceof cljs.core.RedNode && left.right instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left(left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          throw new Error("red-black tree invariant violation");
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? tree_map_kv_reduce(node.left, f, init) : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$1) : cljs.core.deref.call(null, init__$1);
  } else {
    var init__$2 = f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(init__$1, node.key, node.val) : f.call(null, init__$1, node.key, node.val);
    if (cljs.core.reduced_QMARK_(init__$2)) {
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
    } else {
      var init__$3 = !(node.right == null) ? tree_map_kv_reduce(node.right, f, init__$2) : init__$2;
      if (cljs.core.reduced_QMARK_(init__$3)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$3) : cljs.core.deref.call(null, init__$3);
      } else {
        return init__$3;
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core/BlackNode");
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3819__auto__ = self__.__hash;
  if (!(h__3819__auto__ == null)) {
    return h__3819__auto__;
  } else {
    var h__3819__auto____$1 = cljs.core.hash_coll(coll__$1);
    self__.__hash = h__3819__auto____$1;
    return h__3819__auto____$1;
  }
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, null);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.BlackNode.prototype.call = function() {
  var G__23638 = null;
  var G__23638__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__23638__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__23638 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__23638__2.call(this, self__, k);
      case 3:
        return G__23638__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__23638;
}();
cljs.core.BlackNode.prototype.apply = function(self__, args23637) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args23637)));
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node);
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del(self__.key, self__.val, self__.left, del);
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del(self__.key, self__.val, del, self__.right);
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node);
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node;
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return null;
      } else {
        return null;
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found;
      } else {
        return null;
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.__GT_BlackNode = function __GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash);
};
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core/RedNode");
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3819__auto__ = self__.__hash;
  if (!(h__3819__auto__ == null)) {
    return h__3819__auto__;
  } else {
    var h__3819__auto____$1 = cljs.core.hash_coll(coll__$1);
    self__.__hash = h__3819__auto____$1;
    return h__3819__auto____$1;
  }
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.RedNode.prototype.call = function() {
  var G__23640 = null;
  var G__23640__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__23640__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__23640 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__23640__2.call(this, self__, k);
      case 3:
        return G__23640__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__23640;
}();
cljs.core.RedNode.prototype.apply = function(self__, args23639) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args23639)));
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null);
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null);
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null);
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null);
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null);
  } else {
    if (self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
      } else {
        return null;
      }
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null);
  } else {
    if (self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
      } else {
        return null;
      }
    }
  }
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return null;
      } else {
        return null;
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found;
      } else {
        return null;
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.__GT_RedNode = function __GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash);
};
cljs.core.tree_map_add = function tree_map_add(comp, tree, k, v, found) {
  if (tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null);
  } else {
    var c = comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(k, tree.key) : comp.call(null, k, tree.key);
    if (c === 0) {
      found[0] = tree;
      return null;
    } else {
      if (c < 0) {
        var ins = tree_map_add(comp, tree.left, k, v, found);
        if (!(ins == null)) {
          return tree.add_left(ins);
        } else {
          return null;
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var ins = tree_map_add(comp, tree.right, k, v, found);
          if (!(ins == null)) {
            return tree.add_right(ins);
          } else {
            return null;
          }
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_append = function tree_map_append(left, right) {
  if (left == null) {
    return right;
  } else {
    if (right == null) {
      return left;
    } else {
      if (left instanceof cljs.core.RedNode) {
        if (right instanceof cljs.core.RedNode) {
          var app = tree_map_append(left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.RedNode(left.key, left.val, left.left, app.left, null), new cljs.core.RedNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app, right.right, null), null);
          }
        } else {
          return new cljs.core.RedNode(left.key, left.val, left.left, tree_map_append(left.right, right), null);
        }
      } else {
        if (right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, tree_map_append(left, right.left), right.right, null);
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var app = tree_map_append(left.right, right.left);
            if (app instanceof cljs.core.RedNode) {
              return new cljs.core.RedNode(app.key, app.val, new cljs.core.BlackNode(left.key, left.val, left.left, app.left, null), new cljs.core.BlackNode(right.key, right.val, app.right, right.right, null), null);
            } else {
              return cljs.core.balance_left_del(left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app, right.right, null));
            }
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function tree_map_remove(comp, tree, k, found) {
  if (!(tree == null)) {
    var c = comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(k, tree.key) : comp.call(null, k, tree.key);
    if (c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append(tree.left, tree.right);
    } else {
      if (c < 0) {
        var del = tree_map_remove(comp, tree.left, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del(tree.key, tree.val, del, tree.right);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null);
          }
        } else {
          return null;
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var del = tree_map_remove(comp, tree.right, k, found);
          if (!(del == null) || !(found[0] == null)) {
            if (tree.right instanceof cljs.core.BlackNode) {
              return cljs.core.balance_right_del(tree.key, tree.val, tree.left, del);
            } else {
              return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null);
            }
          } else {
            return null;
          }
        } else {
          return null;
        }
      }
    }
  } else {
    return null;
  }
};
cljs.core.tree_map_replace = function tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(k, tk) : comp.call(null, k, tk);
  if (c === 0) {
    return tree.replace(tk, v, tree.left, tree.right);
  } else {
    if (c < 0) {
      return tree.replace(tk, tree.val, tree_map_replace(comp, tree.left, k, v), tree.right);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return tree.replace(tk, tree.val, tree.left, tree_map_replace(comp, tree.right, k, v));
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 418776847;
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core/PersistentTreeMap");
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3819__auto__ = self__.__hash;
  if (!(h__3819__auto__ == null)) {
    return h__3819__auto__;
  } else {
    var h__3819__auto____$1 = cljs.core.hash_imap(coll__$1);
    self__.__hash = h__3819__auto____$1;
    return h__3819__auto____$1;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = coll__$1.entry_at(k);
  if (!(n == null)) {
    return n.val;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_add(self__.comp, self__.tree, k, v, found);
  if (t == null) {
    var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v, found_node.val)) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace(self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(coll__$1.entry_at(k) == null);
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__23642 = null;
  var G__23642__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__23642__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__23642 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__23642__2.call(this, self__, k);
      case 3:
        return G__23642__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__23642;
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args23641) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args23641)));
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.tree == null)) {
    return cljs.core.tree_map_kv_reduce(self__.tree, f, init);
  } else {
    return init;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, false, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while (true) {
    if (!(t == null)) {
      var c = self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(k, t.key) : self__.comp.call(null, k, t.key);
      if (c === 0) {
        return t;
      } else {
        if (c < 0) {
          var G__23643 = t.left;
          t = G__23643;
          continue;
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var G__23644 = t.right;
            t = G__23644;
            continue;
          } else {
            return null;
          }
        }
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, ascending_QMARK_, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while (true) {
      if (!(t == null)) {
        var c = self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(k, t.key) : self__.comp.call(null, k, t.key);
        if (c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t), ascending_QMARK_, -1, null);
        } else {
          if (cljs.core.truth_(ascending_QMARK_)) {
            if (c < 0) {
              var G__23645 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__23646 = t.left;
              stack = G__23645;
              t = G__23646;
              continue;
            } else {
              var G__23647 = stack;
              var G__23648 = t.right;
              stack = G__23647;
              t = G__23648;
              continue;
            }
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              if (c > 0) {
                var G__23649 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
                var G__23650 = t.right;
                stack = G__23649;
                t = G__23650;
                continue;
              } else {
                var G__23651 = stack;
                var G__23652 = t.left;
                stack = G__23651;
                t = G__23652;
                continue;
              }
            } else {
              return null;
            }
          }
        }
      } else {
        if (stack == null) {
          return null;
        } else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null);
        }
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(entry) : cljs.core.key.call(null, entry);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.comp;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, true, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, meta__$1, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, self__.meta, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentTreeMap.EMPTY, self__.meta);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_remove(self__.comp, self__.tree, k, found);
  if (t == null) {
    if (cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0) == null) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null);
  }
};
cljs.core.__GT_PersistentTreeMap = function __GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash);
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, 0);
cljs.core.hash_map = function() {
  var hash_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq(keyvals);
    var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
    while (true) {
      if (in$) {
        var G__23653 = cljs.core.nnext(in$);
        var G__23654 = cljs.core.assoc_BANG_(out, cljs.core.first(in$), cljs.core.second(in$));
        in$ = G__23653;
        out = G__23654;
        continue;
      } else {
        return cljs.core.persistent_BANG_(out);
      }
      break;
    }
  };
  var hash_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return hash_map__delegate.call(this, keyvals);
  };
  hash_map.cljs$lang$maxFixedArity = 0;
  hash_map.cljs$lang$applyTo = function(arglist__23655) {
    var keyvals = cljs.core.seq(arglist__23655);
    return hash_map__delegate(keyvals);
  };
  hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
  return hash_map;
}();
cljs.core.array_map = function() {
  var array_map__delegate = function(keyvals) {
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot(cljs.core.count(keyvals), 2), cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array, keyvals), null);
  };
  var array_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return array_map__delegate.call(this, keyvals);
  };
  array_map.cljs$lang$maxFixedArity = 0;
  array_map.cljs$lang$applyTo = function(arglist__23656) {
    var keyvals = cljs.core.seq(arglist__23656);
    return array_map__delegate(keyvals);
  };
  array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
  return array_map;
}();
cljs.core.obj_map = function() {
  var obj_map__delegate = function(keyvals) {
    var ks = [];
    var obj = function() {
      var obj23660 = {};
      return obj23660;
    }();
    var kvs = cljs.core.seq(keyvals);
    while (true) {
      if (kvs) {
        ks.push(cljs.core.first(kvs));
        obj[cljs.core.first(kvs)] = cljs.core.second(kvs);
        var G__23661 = cljs.core.nnext(kvs);
        kvs = G__23661;
        continue;
      } else {
        return cljs.core.ObjMap.fromObject.cljs$core$IFn$_invoke$arity$2 ? cljs.core.ObjMap.fromObject.cljs$core$IFn$_invoke$arity$2(ks, obj) : cljs.core.ObjMap.fromObject.call(null, ks, obj);
      }
      break;
    }
  };
  var obj_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return obj_map__delegate.call(this, keyvals);
  };
  obj_map.cljs$lang$maxFixedArity = 0;
  obj_map.cljs$lang$applyTo = function(arglist__23662) {
    var keyvals = cljs.core.seq(arglist__23662);
    return obj_map__delegate(keyvals);
  };
  obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
  return obj_map;
}();
cljs.core.sorted_map = function() {
  var sorted_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq(keyvals);
    var out = cljs.core.PersistentTreeMap.EMPTY;
    while (true) {
      if (in$) {
        var G__23663 = cljs.core.nnext(in$);
        var G__23664 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
        in$ = G__23663;
        out = G__23664;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var sorted_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return sorted_map__delegate.call(this, keyvals);
  };
  sorted_map.cljs$lang$maxFixedArity = 0;
  sorted_map.cljs$lang$applyTo = function(arglist__23665) {
    var keyvals = cljs.core.seq(arglist__23665);
    return sorted_map__delegate(keyvals);
  };
  sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
  return sorted_map;
}();
cljs.core.sorted_map_by = function() {
  var sorted_map_by__delegate = function(comparator, keyvals) {
    var in$ = cljs.core.seq(keyvals);
    var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator), null, 0, null, 0);
    while (true) {
      if (in$) {
        var G__23666 = cljs.core.nnext(in$);
        var G__23667 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
        in$ = G__23666;
        out = G__23667;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var sorted_map_by = function(comparator, var_args) {
    var keyvals = null;
    if (arguments.length > 1) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sorted_map_by__delegate.call(this, comparator, keyvals);
  };
  sorted_map_by.cljs$lang$maxFixedArity = 1;
  sorted_map_by.cljs$lang$applyTo = function(arglist__23668) {
    var comparator = cljs.core.first(arglist__23668);
    var keyvals = cljs.core.rest(arglist__23668);
    return sorted_map_by__delegate(comparator, keyvals);
  };
  sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
  return sorted_map_by;
}();
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core/KeySeq");
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll(coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__23669 = self__.mseq;
    if (G__23669) {
      var bit__4052__auto__ = G__23669.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4052__auto__ || G__23669.cljs$core$INext$) {
        return true;
      } else {
        if (!G__23669.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__23669);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__23669);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.KeySeq(nseq, self__._meta);
  }
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_key$arity$1(null);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__23670 = self__.mseq;
    if (G__23670) {
      var bit__4052__auto__ = G__23670.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4052__auto__ || G__23670.cljs$core$INext$) {
        return true;
      } else {
        if (!G__23670.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__23670);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__23670);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.KeySeq(self__.mseq, new_meta);
};
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.__GT_KeySeq = function __GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta);
};
cljs.core.keys = function keys(hash_map) {
  var temp__4092__auto__ = cljs.core.seq(hash_map);
  if (temp__4092__auto__) {
    var mseq = temp__4092__auto__;
    return new cljs.core.KeySeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.key = function key(map_entry) {
  return cljs.core._key(map_entry);
};
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core/ValSeq");
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll(coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__23671 = self__.mseq;
    if (G__23671) {
      var bit__4052__auto__ = G__23671.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4052__auto__ || G__23671.cljs$core$INext$) {
        return true;
      } else {
        if (!G__23671.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__23671);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__23671);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.ValSeq(nseq, self__._meta);
  }
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_val$arity$1(null);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__23672 = self__.mseq;
    if (G__23672) {
      var bit__4052__auto__ = G__23672.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4052__auto__ || G__23672.cljs$core$INext$) {
        return true;
      } else {
        if (!G__23672.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__23672);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__23672);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ValSeq(self__.mseq, new_meta);
};
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.__GT_ValSeq = function __GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta);
};
cljs.core.vals = function vals(hash_map) {
  var temp__4092__auto__ = cljs.core.seq(hash_map);
  if (temp__4092__auto__) {
    var mseq = temp__4092__auto__;
    return new cljs.core.ValSeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.val = function val(map_entry) {
  return cljs.core._val(map_entry);
};
cljs.core.merge = function() {
  var merge__delegate = function(maps) {
    if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(function(p1__23673_SHARP_, p2__23674_SHARP_) {
        return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
          var or__3408__auto__ = p1__23673_SHARP_;
          if (cljs.core.truth_(or__3408__auto__)) {
            return or__3408__auto__;
          } else {
            return cljs.core.PersistentArrayMap.EMPTY;
          }
        }(), p2__23674_SHARP_);
      }, maps);
    } else {
      return null;
    }
  };
  var merge = function(var_args) {
    var maps = null;
    if (arguments.length > 0) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return merge__delegate.call(this, maps);
  };
  merge.cljs$lang$maxFixedArity = 0;
  merge.cljs$lang$applyTo = function(arglist__23675) {
    var maps = cljs.core.seq(arglist__23675);
    return merge__delegate(maps);
  };
  merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
  return merge;
}();
cljs.core.merge_with = function() {
  var merge_with__delegate = function(f, maps) {
    if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
      var merge_entry = function(m, e) {
        var k = cljs.core.first(e);
        var v = cljs.core.second(e);
        if (cljs.core.contains_QMARK_(m, k)) {
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), v) : f.call(null, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), v));
        } else {
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
        }
      };
      var merge2 = function(merge_entry) {
        return function(m1, m2) {
          return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry, function() {
            var or__3408__auto__ = m1;
            if (cljs.core.truth_(or__3408__auto__)) {
              return or__3408__auto__;
            } else {
              return cljs.core.PersistentArrayMap.EMPTY;
            }
          }(), cljs.core.seq(m2));
        };
      }(merge_entry);
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2, maps);
    } else {
      return null;
    }
  };
  var merge_with = function(f, var_args) {
    var maps = null;
    if (arguments.length > 1) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return merge_with__delegate.call(this, f, maps);
  };
  merge_with.cljs$lang$maxFixedArity = 1;
  merge_with.cljs$lang$applyTo = function(arglist__23676) {
    var f = cljs.core.first(arglist__23676);
    var maps = cljs.core.rest(arglist__23676);
    return merge_with__delegate(f, maps);
  };
  merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
  return merge_with;
}();
cljs.core.select_keys = function select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq(keyseq);
  while (true) {
    if (keys) {
      var key = cljs.core.first(keys);
      var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map, key, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", 4155500789));
      var G__23677 = cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", 4155500789)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, key, entry) : ret;
      var G__23678 = cljs.core.next(keys);
      ret = G__23677;
      keys = G__23678;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 15077647;
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core/PersistentHashSet");
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3819__auto__ = self__.__hash;
  if (!(h__3819__auto__ == null)) {
    return h__3819__auto__;
  } else {
    var h__3819__auto____$1 = cljs.core.hash_iset(coll__$1);
    self__.__hash = h__3819__auto____$1;
    return h__3819__auto____$1;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, v, null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._contains_key_QMARK_(self__.hash_map, v)) {
    return v;
  } else {
    return not_found;
  }
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__23681 = null;
  var G__23681__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__23681__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__23681 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__23681__2.call(this, self__, k);
      case 3:
        return G__23681__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__23681;
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args23680) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args23680)));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map, o, null), null);
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc(self__.hash_map, v), null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._count(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_(other) && (cljs.core.count(coll__$1) === cljs.core.count(other) && cljs.core.every_QMARK_(function(p1__23679_SHARP_) {
    return cljs.core.contains_QMARK_(coll__$1, p1__23679_SHARP_);
  }, other));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(meta__$1, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY, self__.meta);
};
cljs.core.__GT_PersistentHashSet = function __GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash);
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, 0);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if (len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : cljs.core.aclone(items);
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__23682 = i + 1;
        var G__23683 = cljs.core._assoc_BANG_(out, items[i], null);
        i = G__23682;
        out = G__23683;
        continue;
      } else {
        return new cljs.core.PersistentHashSet(null, cljs.core._persistent_BANG_(out), null);
      }
      break;
    }
  } else {
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < len) {
        var G__23684 = i + 1;
        var G__23685 = cljs.core._conj_BANG_(out, items[i]);
        i = G__23684;
        out = G__23685;
        continue;
      } else {
        return cljs.core._persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 136;
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core/TransientHashSet");
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__23687 = null;
  var G__23687__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null;
    } else {
      return k;
    }
  };
  var G__23687__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found;
    } else {
      return k;
    }
  };
  G__23687 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__23687__2.call(this, self__, k);
      case 3:
        return G__23687__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__23687;
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args23686) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args23686)));
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return null;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1, v, null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return v;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core.count(self__.transient_map);
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.dissoc_BANG_(self__.transient_map, v);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.assoc_BANG_(self__.transient_map, o, null);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_(self__.transient_map), null);
};
cljs.core.__GT_TransientHashSet = function __GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map);
};
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 417730831;
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core/PersistentTreeSet");
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3819__auto__ = self__.__hash;
  if (!(h__3819__auto__ == null)) {
    return h__3819__auto__;
  } else {
    var h__3819__auto____$1 = cljs.core.hash_iset(coll__$1);
    self__.__hash = h__3819__auto____$1;
    return h__3819__auto____$1;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, v, null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = self__.tree_map.entry_at(v);
  if (!(n == null)) {
    return n.key;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__23690 = null;
  var G__23690__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__23690__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__23690 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__23690__2.call(this, self__, k);
      case 3:
        return G__23690__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__23690;
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args23689) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args23689)));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map, o, null), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.count(self__.tree_map) > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core.rseq(self__.tree_map));
  } else {
    return null;
  }
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq(self__.tree_map, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq_from(self__.tree_map, k, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return entry;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._comparator(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map, v), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.count(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_(other) && (cljs.core.count(coll__$1) === cljs.core.count(other) && cljs.core.every_QMARK_(function(p1__23688_SHARP_) {
    return cljs.core.contains_QMARK_(coll__$1, p1__23688_SHARP_);
  }, other));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(meta__$1, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentTreeSet.EMPTY, self__.meta);
};
cljs.core.__GT_PersistentTreeSet = function __GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash);
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, 0);
cljs.core.set_from_indexed_seq = function set_from_indexed_seq(iseq) {
  var arr = iseq.arr;
  var ret = function() {
    var a__4244__auto__ = arr;
    var i = 0;
    var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < a__4244__auto__.length) {
        var G__23691 = i + 1;
        var G__23692 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, arr[i]);
        i = G__23691;
        res = G__23692;
        continue;
      } else {
        return res;
      }
      break;
    }
  }();
  return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
};
cljs.core.set = function set(coll) {
  var in$ = cljs.core.seq(coll);
  if (in$ == null) {
    return cljs.core.PersistentHashSet.EMPTY;
  } else {
    if (in$ instanceof cljs.core.IndexedSeq && in$.i === 0) {
      return cljs.core.set_from_indexed_seq(in$);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var in$__$1 = in$;
        var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
        while (true) {
          if (!(in$__$1 == null)) {
            var G__23693 = in$__$1.cljs$core$INext$_next$arity$1(null);
            var G__23694 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, in$__$1.cljs$core$ISeq$_first$arity$1(null));
            in$__$1 = G__23693;
            out = G__23694;
            continue;
          } else {
            return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
          }
          break;
        }
      } else {
        return null;
      }
    }
  }
};
cljs.core.hash_set = function() {
  var hash_set = null;
  var hash_set__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY;
  };
  var hash_set__1 = function() {
    var G__23695__delegate = function(keys) {
      return cljs.core.set(keys);
    };
    var G__23695 = function(var_args) {
      var keys = null;
      if (arguments.length > 0) {
        keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__23695__delegate.call(this, keys);
    };
    G__23695.cljs$lang$maxFixedArity = 0;
    G__23695.cljs$lang$applyTo = function(arglist__23696) {
      var keys = cljs.core.seq(arglist__23696);
      return G__23695__delegate(keys);
    };
    G__23695.cljs$core$IFn$_invoke$arity$variadic = G__23695__delegate;
    return G__23695;
  }();
  hash_set = function(var_args) {
    var keys = var_args;
    switch(arguments.length) {
      case 0:
        return hash_set__0.call(this);
      default:
        return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(arguments, 0));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  hash_set.cljs$lang$maxFixedArity = 0;
  hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
  hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
  hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
  return hash_set;
}();
cljs.core.sorted_set = function() {
  var sorted_set__delegate = function(keys) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys);
  };
  var sorted_set = function(var_args) {
    var keys = null;
    if (arguments.length > 0) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return sorted_set__delegate.call(this, keys);
  };
  sorted_set.cljs$lang$maxFixedArity = 0;
  sorted_set.cljs$lang$applyTo = function(arglist__23697) {
    var keys = cljs.core.seq(arglist__23697);
    return sorted_set__delegate(keys);
  };
  sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
  return sorted_set;
}();
cljs.core.sorted_set_by = function() {
  var sorted_set_by__delegate = function(comparator, keys) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by(comparator), 0), keys);
  };
  var sorted_set_by = function(comparator, var_args) {
    var keys = null;
    if (arguments.length > 1) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sorted_set_by__delegate.call(this, comparator, keys);
  };
  sorted_set_by.cljs$lang$maxFixedArity = 1;
  sorted_set_by.cljs$lang$applyTo = function(arglist__23698) {
    var comparator = cljs.core.first(arglist__23698);
    var keys = cljs.core.rest(arglist__23698);
    return sorted_set_by__delegate(comparator, keys);
  };
  sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
  return sorted_set_by;
}();
cljs.core.replace = function replace(smap, coll) {
  if (cljs.core.vector_QMARK_(coll)) {
    var n = cljs.core.count(coll);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, i) {
      var temp__4090__auto__ = cljs.core.find(smap, cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v, i));
      if (cljs.core.truth_(temp__4090__auto__)) {
        var e = temp__4090__auto__;
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v, i, cljs.core.second(e));
      } else {
        return v;
      }
    }, coll, cljs.core.take(n, cljs.core.iterate(cljs.core.inc, 0)));
  } else {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__23699_SHARP_) {
      var temp__4090__auto__ = cljs.core.find(smap, p1__23699_SHARP_);
      if (cljs.core.truth_(temp__4090__auto__)) {
        var e = temp__4090__auto__;
        return cljs.core.second(e);
      } else {
        return p1__23699_SHARP_;
      }
    }, coll);
  }
};
cljs.core.distinct = function distinct(coll) {
  var step = function step(xs, seen) {
    return new cljs.core.LazySeq(null, function() {
      return function(p__23706, seen__$1) {
        while (true) {
          var vec__23707 = p__23706;
          var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23707, 0, null);
          var xs__$1 = vec__23707;
          var temp__4092__auto__ = cljs.core.seq(xs__$1);
          if (temp__4092__auto__) {
            var s = temp__4092__auto__;
            if (cljs.core.contains_QMARK_(seen__$1, f)) {
              var G__23708 = cljs.core.rest(s);
              var G__23709 = seen__$1;
              p__23706 = G__23708;
              seen__$1 = G__23709;
              continue;
            } else {
              return cljs.core.cons(f, step(cljs.core.rest(s), cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1, f)));
            }
          } else {
            return null;
          }
          break;
        }
      }.call(null, xs, seen);
    }, null, null);
  };
  return step(coll, cljs.core.PersistentHashSet.EMPTY);
};
cljs.core.butlast = function butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while (true) {
    if (cljs.core.next(s__$1)) {
      var G__23710 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret, cljs.core.first(s__$1));
      var G__23711 = cljs.core.next(s__$1);
      ret = G__23710;
      s__$1 = G__23711;
      continue;
    } else {
      return cljs.core.seq(ret);
    }
    break;
  }
};
cljs.core.name = function name(x) {
  if (function() {
    var G__23713 = x;
    if (G__23713) {
      var bit__4045__auto__ = G__23713.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4045__auto__ || G__23713.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(null);
  } else {
    if (typeof x === "string") {
      return x;
    } else {
      throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
    }
  }
};
cljs.core.zipmap = function zipmap(keys, vals) {
  var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq(keys);
  var vs = cljs.core.seq(vals);
  while (true) {
    if (ks && vs) {
      var G__23714 = cljs.core.assoc_BANG_(map, cljs.core.first(ks), cljs.core.first(vs));
      var G__23715 = cljs.core.next(ks);
      var G__23716 = cljs.core.next(vs);
      map = G__23714;
      ks = G__23715;
      vs = G__23716;
      continue;
    } else {
      return cljs.core.persistent_BANG_(map);
    }
    break;
  }
};
cljs.core.max_key = function() {
  var max_key = null;
  var max_key__2 = function(k, x) {
    return x;
  };
  var max_key__3 = function(k, x, y) {
    if ((k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(x) : k.call(null, x)) > (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(y) : k.call(null, y))) {
      return x;
    } else {
      return y;
    }
  };
  var max_key__4 = function() {
    var G__23719__delegate = function(k, x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__23717_SHARP_, p2__23718_SHARP_) {
        return max_key.cljs$core$IFn$_invoke$arity$3(k, p1__23717_SHARP_, p2__23718_SHARP_);
      }, max_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
    };
    var G__23719 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__23719__delegate.call(this, k, x, y, more);
    };
    G__23719.cljs$lang$maxFixedArity = 3;
    G__23719.cljs$lang$applyTo = function(arglist__23720) {
      var k = cljs.core.first(arglist__23720);
      arglist__23720 = cljs.core.next(arglist__23720);
      var x = cljs.core.first(arglist__23720);
      arglist__23720 = cljs.core.next(arglist__23720);
      var y = cljs.core.first(arglist__23720);
      var more = cljs.core.rest(arglist__23720);
      return G__23719__delegate(k, x, y, more);
    };
    G__23719.cljs$core$IFn$_invoke$arity$variadic = G__23719__delegate;
    return G__23719;
  }();
  max_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return max_key__2.call(this, k, x);
      case 3:
        return max_key__3.call(this, k, x, y);
      default:
        return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max_key.cljs$lang$maxFixedArity = 3;
  max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
  max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
  max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
  max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return max_key;
}();
cljs.core.min_key = function() {
  var min_key = null;
  var min_key__2 = function(k, x) {
    return x;
  };
  var min_key__3 = function(k, x, y) {
    if ((k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(x) : k.call(null, x)) < (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(y) : k.call(null, y))) {
      return x;
    } else {
      return y;
    }
  };
  var min_key__4 = function() {
    var G__23723__delegate = function(k, x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__23721_SHARP_, p2__23722_SHARP_) {
        return min_key.cljs$core$IFn$_invoke$arity$3(k, p1__23721_SHARP_, p2__23722_SHARP_);
      }, min_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
    };
    var G__23723 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__23723__delegate.call(this, k, x, y, more);
    };
    G__23723.cljs$lang$maxFixedArity = 3;
    G__23723.cljs$lang$applyTo = function(arglist__23724) {
      var k = cljs.core.first(arglist__23724);
      arglist__23724 = cljs.core.next(arglist__23724);
      var x = cljs.core.first(arglist__23724);
      arglist__23724 = cljs.core.next(arglist__23724);
      var y = cljs.core.first(arglist__23724);
      var more = cljs.core.rest(arglist__23724);
      return G__23723__delegate(k, x, y, more);
    };
    G__23723.cljs$core$IFn$_invoke$arity$variadic = G__23723__delegate;
    return G__23723;
  }();
  min_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return min_key__2.call(this, k, x);
      case 3:
        return min_key__3.call(this, k, x, y);
      default:
        return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min_key.cljs$lang$maxFixedArity = 3;
  min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
  min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
  min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
  min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return min_key;
}();
cljs.core.partition_all = function() {
  var partition_all = null;
  var partition_all__2 = function(n, coll) {
    return partition_all.cljs$core$IFn$_invoke$arity$3(n, n, coll);
  };
  var partition_all__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq(coll);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        return cljs.core.cons(cljs.core.take(n, s), partition_all.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop(step, s)));
      } else {
        return null;
      }
    }, null, null);
  };
  partition_all = function(n, step, coll) {
    switch(arguments.length) {
      case 2:
        return partition_all__2.call(this, n, step);
      case 3:
        return partition_all__3.call(this, n, step, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
  partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
  return partition_all;
}();
cljs.core.take_while = function take_while(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq(coll);
    if (temp__4092__auto__) {
      var s = temp__4092__auto__;
      if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(cljs.core.first(s)) : pred.call(null, cljs.core.first(s)))) {
        return cljs.core.cons(cljs.core.first(s), take_while(pred, cljs.core.rest(s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.mk_bound_fn = function mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp = cljs.core._comparator(sc);
    return test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(cljs.core._entry_key(sc, e), key) : comp.call(null, cljs.core._entry_key(sc, e), key), 0) : test.call(null, comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(cljs.core._entry_key(sc, e), key) : comp.call(null, cljs.core._entry_key(sc, e), key), 0);
  };
};
cljs.core.subseq = function() {
  var subseq = null;
  var subseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn(sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_], true).call(null, test))) {
      var temp__4092__auto__ = cljs.core._sorted_seq_from(sc, key, true);
      if (cljs.core.truth_(temp__4092__auto__)) {
        var vec__23727 = temp__4092__auto__;
        var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23727, 0, null);
        var s = vec__23727;
        if (cljs.core.truth_(include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(e) : include.call(null, e))) {
          return s;
        } else {
          return cljs.core.next(s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while(include, cljs.core._sorted_seq(sc, true));
    }
  };
  var subseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4092__auto__ = cljs.core._sorted_seq_from(sc, start_key, true);
    if (cljs.core.truth_(temp__4092__auto__)) {
      var vec__23728 = temp__4092__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23728, 0, null);
      var s = vec__23728;
      return cljs.core.take_while(cljs.core.mk_bound_fn(sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn(sc, start_test, start_key).call(null, e)) ? s : cljs.core.next(s));
    } else {
      return null;
    }
  };
  subseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return subseq__3.call(this, sc, start_test, start_key);
      case 5:
        return subseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
  subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
  return subseq;
}();
cljs.core.rsubseq = function() {
  var rsubseq = null;
  var rsubseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn(sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_], true).call(null, test))) {
      var temp__4092__auto__ = cljs.core._sorted_seq_from(sc, key, false);
      if (cljs.core.truth_(temp__4092__auto__)) {
        var vec__23731 = temp__4092__auto__;
        var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23731, 0, null);
        var s = vec__23731;
        if (cljs.core.truth_(include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(e) : include.call(null, e))) {
          return s;
        } else {
          return cljs.core.next(s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while(include, cljs.core._sorted_seq(sc, false));
    }
  };
  var rsubseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4092__auto__ = cljs.core._sorted_seq_from(sc, end_key, false);
    if (cljs.core.truth_(temp__4092__auto__)) {
      var vec__23732 = temp__4092__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23732, 0, null);
      var s = vec__23732;
      return cljs.core.take_while(cljs.core.mk_bound_fn(sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn(sc, end_test, end_key).call(null, e)) ? s : cljs.core.next(s));
    } else {
      return null;
    }
  };
  rsubseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return rsubseq__3.call(this, sc, start_test, start_key);
      case 5:
        return rsubseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
  rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
  return rsubseq;
}();
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32375006;
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core/Range");
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var h__3819__auto__ = self__.__hash;
  if (!(h__3819__auto__ == null)) {
    return h__3819__auto__;
  } else {
    var h__3819__auto____$1 = cljs.core.hash_coll(rng__$1);
    self__.__hash = h__3819__auto____$1;
    return h__3819__auto____$1;
  }
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start + self__.step < self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  } else {
    if (self__.start + self__.step > self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.cons(o, rng__$1);
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1, f);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, s) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(rng__$1, f, s);
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start < self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  } else {
    if (self__.start > self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core.not(cljs.core._seq(rng__$1))) {
    return 0;
  } else {
    return Math.ceil((self__.end - self__.start) / self__.step);
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core._seq(rng__$1) == null) {
    return null;
  } else {
    return self__.start;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (!(cljs.core._seq(rng__$1) == null)) {
    return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.equiv_sequential(rng__$1, other);
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta__$1) {
  var self__ = this;
  var rng__$1 = this;
  return new cljs.core.Range(meta__$1, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$ICloneable$ = true;
cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Range(self__.meta, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.meta;
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count(rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count(rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      return not_found;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_Range = function __GT_Range(meta, start, end, step, __hash) {
  return new cljs.core.Range(meta, start, end, step, __hash);
};
cljs.core.range = function() {
  var range = null;
  var range__0 = function() {
    return range.cljs$core$IFn$_invoke$arity$3(0, Number.MAX_VALUE, 1);
  };
  var range__1 = function(end) {
    return range.cljs$core$IFn$_invoke$arity$3(0, end, 1);
  };
  var range__2 = function(start, end) {
    return range.cljs$core$IFn$_invoke$arity$3(start, end, 1);
  };
  var range__3 = function(start, end, step) {
    return new cljs.core.Range(null, start, end, step, null);
  };
  range = function(start, end, step) {
    switch(arguments.length) {
      case 0:
        return range__0.call(this);
      case 1:
        return range__1.call(this, start);
      case 2:
        return range__2.call(this, start, end);
      case 3:
        return range__3.call(this, start, end, step);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  range.cljs$core$IFn$_invoke$arity$0 = range__0;
  range.cljs$core$IFn$_invoke$arity$1 = range__1;
  range.cljs$core$IFn$_invoke$arity$2 = range__2;
  range.cljs$core$IFn$_invoke$arity$3 = range__3;
  return range;
}();
cljs.core.take_nth = function take_nth(n, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq(coll);
    if (temp__4092__auto__) {
      var s = temp__4092__auto__;
      return cljs.core.cons(cljs.core.first(s), take_nth(n, cljs.core.drop(n, s)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.split_with = function split_with(pred, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while(pred, coll), cljs.core.drop_while(pred, coll)], null);
};
cljs.core.partition_by = function partition_by(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq(coll);
    if (temp__4092__auto__) {
      var s = temp__4092__auto__;
      var fst = cljs.core.first(s);
      var fv = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(fst) : f.call(null, fst);
      var run = cljs.core.cons(fst, cljs.core.take_while(function(fst, fv) {
        return function(p1__23733_SHARP_) {
          return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv, f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(p1__23733_SHARP_) : f.call(null, p1__23733_SHARP_));
        };
      }(fst, fv), cljs.core.next(s)));
      return cljs.core.cons(run, partition_by(f, cljs.core.seq(cljs.core.drop(cljs.core.count(run), s))));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.frequencies = function frequencies(coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(counts, x) {
    return cljs.core.assoc_BANG_(counts, x, cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts, x, 0) + 1);
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.reductions = function() {
  var reductions = null;
  var reductions__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4090__auto__ = cljs.core.seq(coll);
      if (temp__4090__auto__) {
        var s = temp__4090__auto__;
        return reductions.cljs$core$IFn$_invoke$arity$3(f, cljs.core.first(s), cljs.core.rest(s));
      } else {
        return cljs.core._conj(cljs.core.List.EMPTY, f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
      }
    }, null, null);
  };
  var reductions__3 = function(f, init, coll) {
    return cljs.core.cons(init, new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq(coll);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        return reductions.cljs$core$IFn$_invoke$arity$3(f, f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(init, cljs.core.first(s)) : f.call(null, init, cljs.core.first(s)), cljs.core.rest(s));
      } else {
        return null;
      }
    }, null, null));
  };
  reductions = function(f, init, coll) {
    switch(arguments.length) {
      case 2:
        return reductions__2.call(this, f, init);
      case 3:
        return reductions__3.call(this, f, init, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
  reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
  return reductions;
}();
cljs.core.juxt = function() {
  var juxt = null;
  var juxt__1 = function(f) {
    return function() {
      var G__23744 = null;
      var G__23744__0 = function() {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null)], null);
      };
      var G__23744__1 = function(x) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x)], null);
      };
      var G__23744__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y)], null);
      };
      var G__23744__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(x, y, z) : f.call(null, x, y, z)], null);
      };
      var G__23744__4 = function() {
        var G__23745__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args)], null);
        };
        var G__23745 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__23745__delegate.call(this, x, y, z, args);
        };
        G__23745.cljs$lang$maxFixedArity = 3;
        G__23745.cljs$lang$applyTo = function(arglist__23746) {
          var x = cljs.core.first(arglist__23746);
          arglist__23746 = cljs.core.next(arglist__23746);
          var y = cljs.core.first(arglist__23746);
          arglist__23746 = cljs.core.next(arglist__23746);
          var z = cljs.core.first(arglist__23746);
          var args = cljs.core.rest(arglist__23746);
          return G__23745__delegate(x, y, z, args);
        };
        G__23745.cljs$core$IFn$_invoke$arity$variadic = G__23745__delegate;
        return G__23745;
      }();
      G__23744 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__23744__0.call(this);
          case 1:
            return G__23744__1.call(this, x);
          case 2:
            return G__23744__2.call(this, x, y);
          case 3:
            return G__23744__3.call(this, x, y, z);
          default:
            return G__23744__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__23744.cljs$lang$maxFixedArity = 3;
      G__23744.cljs$lang$applyTo = G__23744__4.cljs$lang$applyTo;
      return G__23744;
    }();
  };
  var juxt__2 = function(f, g) {
    return function() {
      var G__23747 = null;
      var G__23747__0 = function() {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null)], null);
      };
      var G__23747__1 = function(x) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x), g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null, x)], null);
      };
      var G__23747__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y), g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(x, y) : g.call(null, x, y)], null);
      };
      var G__23747__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(x, y, z) : f.call(null, x, y, z), g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(x, y, z) : g.call(null, x, y, z)], null);
      };
      var G__23747__4 = function() {
        var G__23748__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args)], null);
        };
        var G__23748 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__23748__delegate.call(this, x, y, z, args);
        };
        G__23748.cljs$lang$maxFixedArity = 3;
        G__23748.cljs$lang$applyTo = function(arglist__23749) {
          var x = cljs.core.first(arglist__23749);
          arglist__23749 = cljs.core.next(arglist__23749);
          var y = cljs.core.first(arglist__23749);
          arglist__23749 = cljs.core.next(arglist__23749);
          var z = cljs.core.first(arglist__23749);
          var args = cljs.core.rest(arglist__23749);
          return G__23748__delegate(x, y, z, args);
        };
        G__23748.cljs$core$IFn$_invoke$arity$variadic = G__23748__delegate;
        return G__23748;
      }();
      G__23747 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__23747__0.call(this);
          case 1:
            return G__23747__1.call(this, x);
          case 2:
            return G__23747__2.call(this, x, y);
          case 3:
            return G__23747__3.call(this, x, y, z);
          default:
            return G__23747__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__23747.cljs$lang$maxFixedArity = 3;
      G__23747.cljs$lang$applyTo = G__23747__4.cljs$lang$applyTo;
      return G__23747;
    }();
  };
  var juxt__3 = function(f, g, h) {
    return function() {
      var G__23750 = null;
      var G__23750__0 = function() {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null), h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null)], null);
      };
      var G__23750__1 = function(x) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x), g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null, x), h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(x) : h.call(null, x)], null);
      };
      var G__23750__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y), g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(x, y) : g.call(null, x, y), h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(x, y) : h.call(null, x, y)], null);
      };
      var G__23750__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(x, y, z) : f.call(null, x, y, z), g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(x, y, z) : g.call(null, x, y, z), h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(x, y, z) : h.call(null, x, y, z)], null);
      };
      var G__23750__4 = function() {
        var G__23751__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args)], null);
        };
        var G__23751 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__23751__delegate.call(this, x, y, z, args);
        };
        G__23751.cljs$lang$maxFixedArity = 3;
        G__23751.cljs$lang$applyTo = function(arglist__23752) {
          var x = cljs.core.first(arglist__23752);
          arglist__23752 = cljs.core.next(arglist__23752);
          var y = cljs.core.first(arglist__23752);
          arglist__23752 = cljs.core.next(arglist__23752);
          var z = cljs.core.first(arglist__23752);
          var args = cljs.core.rest(arglist__23752);
          return G__23751__delegate(x, y, z, args);
        };
        G__23751.cljs$core$IFn$_invoke$arity$variadic = G__23751__delegate;
        return G__23751;
      }();
      G__23750 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__23750__0.call(this);
          case 1:
            return G__23750__1.call(this, x);
          case 2:
            return G__23750__2.call(this, x, y);
          case 3:
            return G__23750__3.call(this, x, y, z);
          default:
            return G__23750__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__23750.cljs$lang$maxFixedArity = 3;
      G__23750.cljs$lang$applyTo = G__23750__4.cljs$lang$applyTo;
      return G__23750;
    }();
  };
  var juxt__4 = function() {
    var G__23753__delegate = function(f, g, h, fs) {
      var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f, g, h, fs);
      return function() {
        var G__23754 = null;
        var G__23754__0 = function() {
          return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__23734_SHARP_, p2__23735_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__23734_SHARP_, p2__23735_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__23735_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__23735_SHARP_.call(null));
          }, cljs.core.PersistentVector.EMPTY, fs__$1);
        };
        var G__23754__1 = function(x) {
          return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__23736_SHARP_, p2__23737_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__23736_SHARP_, p2__23737_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__23737_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p2__23737_SHARP_.call(null, x));
          }, cljs.core.PersistentVector.EMPTY, fs__$1);
        };
        var G__23754__2 = function(x, y) {
          return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__23738_SHARP_, p2__23739_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__23738_SHARP_, p2__23739_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__23739_SHARP_.cljs$core$IFn$_invoke$arity$2(x, y) : p2__23739_SHARP_.call(null, x, y));
          }, cljs.core.PersistentVector.EMPTY, fs__$1);
        };
        var G__23754__3 = function(x, y, z) {
          return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__23740_SHARP_, p2__23741_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__23740_SHARP_, p2__23741_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__23741_SHARP_.cljs$core$IFn$_invoke$arity$3(x, y, z) : p2__23741_SHARP_.call(null, x, y, z));
          }, cljs.core.PersistentVector.EMPTY, fs__$1);
        };
        var G__23754__4 = function() {
          var G__23755__delegate = function(x, y, z, args) {
            return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__23742_SHARP_, p2__23743_SHARP_) {
              return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__23742_SHARP_, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__23743_SHARP_, x, y, z, args));
            }, cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__23755 = function(x, y, z, var_args) {
            var args = null;
            if (arguments.length > 3) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
            }
            return G__23755__delegate.call(this, x, y, z, args);
          };
          G__23755.cljs$lang$maxFixedArity = 3;
          G__23755.cljs$lang$applyTo = function(arglist__23756) {
            var x = cljs.core.first(arglist__23756);
            arglist__23756 = cljs.core.next(arglist__23756);
            var y = cljs.core.first(arglist__23756);
            arglist__23756 = cljs.core.next(arglist__23756);
            var z = cljs.core.first(arglist__23756);
            var args = cljs.core.rest(arglist__23756);
            return G__23755__delegate(x, y, z, args);
          };
          G__23755.cljs$core$IFn$_invoke$arity$variadic = G__23755__delegate;
          return G__23755;
        }();
        G__23754 = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return G__23754__0.call(this);
            case 1:
              return G__23754__1.call(this, x);
            case 2:
              return G__23754__2.call(this, x, y);
            case 3:
              return G__23754__3.call(this, x, y, z);
            default:
              return G__23754__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__23754.cljs$lang$maxFixedArity = 3;
        G__23754.cljs$lang$applyTo = G__23754__4.cljs$lang$applyTo;
        return G__23754;
      }();
    };
    var G__23753 = function(f, g, h, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__23753__delegate.call(this, f, g, h, fs);
    };
    G__23753.cljs$lang$maxFixedArity = 3;
    G__23753.cljs$lang$applyTo = function(arglist__23757) {
      var f = cljs.core.first(arglist__23757);
      arglist__23757 = cljs.core.next(arglist__23757);
      var g = cljs.core.first(arglist__23757);
      arglist__23757 = cljs.core.next(arglist__23757);
      var h = cljs.core.first(arglist__23757);
      var fs = cljs.core.rest(arglist__23757);
      return G__23753__delegate(f, g, h, fs);
    };
    G__23753.cljs$core$IFn$_invoke$arity$variadic = G__23753__delegate;
    return G__23753;
  }();
  juxt = function(f, g, h, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 1:
        return juxt__1.call(this, f);
      case 2:
        return juxt__2.call(this, f, g);
      case 3:
        return juxt__3.call(this, f, g, h);
      default:
        return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f, g, h, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  juxt.cljs$lang$maxFixedArity = 3;
  juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
  juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
  juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
  juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
  juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
  return juxt;
}();
cljs.core.dorun = function() {
  var dorun = null;
  var dorun__1 = function(coll) {
    while (true) {
      if (cljs.core.seq(coll)) {
        var G__23758 = cljs.core.next(coll);
        coll = G__23758;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  var dorun__2 = function(n, coll) {
    while (true) {
      if (cljs.core.seq(coll) && n > 0) {
        var G__23759 = n - 1;
        var G__23760 = cljs.core.next(coll);
        n = G__23759;
        coll = G__23760;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  dorun = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return dorun__1.call(this, n);
      case 2:
        return dorun__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
  dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
  return dorun;
}();
cljs.core.doall = function() {
  var doall = null;
  var doall__1 = function(coll) {
    cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);
    return coll;
  };
  var doall__2 = function(n, coll) {
    cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n, coll);
    return coll;
  };
  doall = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return doall__1.call(this, n);
      case 2:
        return doall__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
  doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
  return doall;
}();
cljs.core.regexp_QMARK_ = function regexp_QMARK_(o) {
  return o instanceof RegExp;
};
cljs.core.re_matches = function re_matches(re, s) {
  var matches = re.exec(s);
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches), s)) {
    if (cljs.core.count(matches) === 1) {
      return cljs.core.first(matches);
    } else {
      return cljs.core.vec(matches);
    }
  } else {
    return null;
  }
};
cljs.core.re_find = function re_find(re, s) {
  var matches = re.exec(s);
  if (matches == null) {
    return null;
  } else {
    if (cljs.core.count(matches) === 1) {
      return cljs.core.first(matches);
    } else {
      return cljs.core.vec(matches);
    }
  }
};
cljs.core.re_seq = function re_seq(re, s) {
  var match_data = cljs.core.re_find(re, s);
  var match_idx = s.search(re);
  var match_str = cljs.core.coll_QMARK_(match_data) ? cljs.core.first(match_data) : match_data;
  var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, match_idx + cljs.core.count(match_str));
  if (cljs.core.truth_(match_data)) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(match_data, cljs.core.seq(post_match) ? re_seq(re, post_match) : null);
    }, null, null);
  } else {
    return null;
  }
};
cljs.core.re_pattern = function re_pattern(s) {
  var vec__23762 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/, s);
  var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23762, 0, null);
  var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23762, 1, null);
  var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23762, 2, null);
  return new RegExp(pattern, flags);
};
cljs.core.pr_sequential_writer = function pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  var _STAR_print_level_STAR_23764 = cljs.core._STAR_print_level_STAR_;
  try {
    cljs.core._STAR_print_level_STAR_ = cljs.core._STAR_print_level_STAR_ == null ? null : cljs.core._STAR_print_level_STAR_ - 1;
    if (!(cljs.core._STAR_print_level_STAR_ == null) && cljs.core._STAR_print_level_STAR_ < 0) {
      return cljs.core._write(writer, "#");
    } else {
      cljs.core._write(writer, begin);
      if (cljs.core.seq(coll)) {
        print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(cljs.core.first(coll), writer, opts) : print_one.call(null, cljs.core.first(coll), writer, opts);
      } else {
      }
      var coll_23765__$1 = cljs.core.next(coll);
      var n_23766 = (new cljs.core.Keyword(null, "print-length", "print-length", 3960797560)).cljs$core$IFn$_invoke$arity$1(opts);
      while (true) {
        if (coll_23765__$1 && (n_23766 == null || !(n_23766 === 0))) {
          cljs.core._write(writer, sep);
          print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(cljs.core.first(coll_23765__$1), writer, opts) : print_one.call(null, cljs.core.first(coll_23765__$1), writer, opts);
          var G__23767 = cljs.core.next(coll_23765__$1);
          var G__23768 = n_23766 - 1;
          coll_23765__$1 = G__23767;
          n_23766 = G__23768;
          continue;
        } else {
        }
        break;
      }
      if (cljs.core.truth_((new cljs.core.Keyword(null, "print-length", "print-length", 3960797560)).cljs$core$IFn$_invoke$arity$1(opts))) {
        cljs.core._write(writer, sep);
        print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3("...", writer, opts) : print_one.call(null, "...", writer, opts);
      } else {
      }
      return cljs.core._write(writer, end);
    }
  } finally {
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_23764;
  }
};
cljs.core.write_all = function() {
  var write_all__delegate = function(writer, ss) {
    var seq__23773 = cljs.core.seq(ss);
    var chunk__23774 = null;
    var count__23775 = 0;
    var i__23776 = 0;
    while (true) {
      if (i__23776 < count__23775) {
        var s = chunk__23774.cljs$core$IIndexed$_nth$arity$2(null, i__23776);
        cljs.core._write(writer, s);
        var G__23777 = seq__23773;
        var G__23778 = chunk__23774;
        var G__23779 = count__23775;
        var G__23780 = i__23776 + 1;
        seq__23773 = G__23777;
        chunk__23774 = G__23778;
        count__23775 = G__23779;
        i__23776 = G__23780;
        continue;
      } else {
        var temp__4092__auto__ = cljs.core.seq(seq__23773);
        if (temp__4092__auto__) {
          var seq__23773__$1 = temp__4092__auto__;
          if (cljs.core.chunked_seq_QMARK_(seq__23773__$1)) {
            var c__4150__auto__ = cljs.core.chunk_first(seq__23773__$1);
            var G__23781 = cljs.core.chunk_rest(seq__23773__$1);
            var G__23782 = c__4150__auto__;
            var G__23783 = cljs.core.count(c__4150__auto__);
            var G__23784 = 0;
            seq__23773 = G__23781;
            chunk__23774 = G__23782;
            count__23775 = G__23783;
            i__23776 = G__23784;
            continue;
          } else {
            var s = cljs.core.first(seq__23773__$1);
            cljs.core._write(writer, s);
            var G__23785 = cljs.core.next(seq__23773__$1);
            var G__23786 = null;
            var G__23787 = 0;
            var G__23788 = 0;
            seq__23773 = G__23785;
            chunk__23774 = G__23786;
            count__23775 = G__23787;
            i__23776 = G__23788;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  };
  var write_all = function(writer, var_args) {
    var ss = null;
    if (arguments.length > 1) {
      ss = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return write_all__delegate.call(this, writer, ss);
  };
  write_all.cljs$lang$maxFixedArity = 1;
  write_all.cljs$lang$applyTo = function(arglist__23789) {
    var writer = cljs.core.first(arglist__23789);
    var ss = cljs.core.rest(arglist__23789);
    return write_all__delegate(writer, ss);
  };
  write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
  return write_all;
}();
cljs.core.string_print = function string_print(x) {
  cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null;
};
cljs.core.flush = function flush() {
  return null;
};
cljs.core.char_escapes = function() {
  var obj23791 = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
  return obj23791;
}();
cljs.core.quote_string = function quote_string(s) {
  return[cljs.core.str('"'), cljs.core.str(s.replace(RegExp('[\\\\"\b\f\n\r\t]', "g"), function(match) {
    return cljs.core.char_escapes[match];
  })), cljs.core.str('"')].join("");
};
cljs.core.pr_writer = function pr_writer(obj, writer, opts) {
  if (obj == null) {
    return cljs.core._write(writer, "nil");
  } else {
    if (void 0 === obj) {
      return cljs.core._write(writer, "#\x3cundefined\x3e");
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        if (cljs.core.truth_(function() {
          var and__3396__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "meta", "meta", 1017252215));
          if (cljs.core.truth_(and__3396__auto__)) {
            var and__3396__auto____$1 = function() {
              var G__23797 = obj;
              if (G__23797) {
                var bit__4052__auto__ = G__23797.cljs$lang$protocol_mask$partition0$ & 131072;
                if (bit__4052__auto__ || G__23797.cljs$core$IMeta$) {
                  return true;
                } else {
                  if (!G__23797.cljs$lang$protocol_mask$partition0$) {
                    return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__23797);
                  } else {
                    return false;
                  }
                }
              } else {
                return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__23797);
              }
            }();
            if (and__3396__auto____$1) {
              return cljs.core.meta(obj);
            } else {
              return and__3396__auto____$1;
            }
          } else {
            return and__3396__auto__;
          }
        }())) {
          cljs.core._write(writer, "^");
          pr_writer(cljs.core.meta(obj), writer, opts);
          cljs.core._write(writer, " ");
        } else {
        }
        if (obj == null) {
          return cljs.core._write(writer, "nil");
        } else {
          if (obj.cljs$lang$type) {
            return obj.cljs$lang$ctorPrWriter(obj, writer, opts);
          } else {
            if (function() {
              var G__23798 = obj;
              if (G__23798) {
                var bit__4045__auto__ = G__23798.cljs$lang$protocol_mask$partition0$ & 2147483648;
                if (bit__4045__auto__ || G__23798.cljs$core$IPrintWithWriter$) {
                  return true;
                } else {
                  return false;
                }
              } else {
                return false;
              }
            }()) {
              return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, opts);
            } else {
              if (cljs.core.type(obj) === Boolean || typeof obj === "number") {
                return cljs.core._write(writer, [cljs.core.str(obj)].join(""));
              } else {
                if (cljs.core.object_QMARK_(obj)) {
                  cljs.core._write(writer, "#js ");
                  return cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(k) {
                    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k), obj[k]], null);
                  }, cljs.core.js_keys(obj)), pr_writer, writer, opts) : cljs.core.print_map.call(null, cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(k) {
                    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k), obj[k]], null);
                  }, cljs.core.js_keys(obj)), pr_writer, writer, opts);
                } else {
                  if (obj instanceof Array) {
                    return cljs.core.pr_sequential_writer(writer, pr_writer, "#js [", " ", "]", opts, obj);
                  } else {
                    if (goog.isString(obj)) {
                      if (cljs.core.truth_((new cljs.core.Keyword(null, "readably", "readably", 4441712502)).cljs$core$IFn$_invoke$arity$1(opts))) {
                        return cljs.core._write(writer, cljs.core.quote_string(obj));
                      } else {
                        return cljs.core._write(writer, obj);
                      }
                    } else {
                      if (cljs.core.fn_QMARK_(obj)) {
                        return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#\x3c", [cljs.core.str(obj)].join(""), "\x3e"], 0));
                      } else {
                        if (obj instanceof Date) {
                          var normalize = function(n, len) {
                            var ns = [cljs.core.str(n)].join("");
                            while (true) {
                              if (cljs.core.count(ns) < len) {
                                var G__23800 = [cljs.core.str("0"), cljs.core.str(ns)].join("");
                                ns = G__23800;
                                continue;
                              } else {
                                return ns;
                              }
                              break;
                            }
                          };
                          return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(['#inst "', [cljs.core.str(obj.getUTCFullYear())].join(""), "-", normalize(obj.getUTCMonth() + 1, 2), "-", normalize(obj.getUTCDate(), 2), "T", normalize(obj.getUTCHours(), 2), ":", normalize(obj.getUTCMinutes(), 2), ":", normalize(obj.getUTCSeconds(), 2), ".", normalize(obj.getUTCMilliseconds(), 3), "-", '00:00"'], 0));
                        } else {
                          if (cljs.core.regexp_QMARK_(obj)) {
                            return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(['#"', obj.source, '"'], 0));
                          } else {
                            if (function() {
                              var G__23799 = obj;
                              if (G__23799) {
                                var bit__4052__auto__ = G__23799.cljs$lang$protocol_mask$partition0$ & 2147483648;
                                if (bit__4052__auto__ || G__23799.cljs$core$IPrintWithWriter$) {
                                  return true;
                                } else {
                                  if (!G__23799.cljs$lang$protocol_mask$partition0$) {
                                    return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter, G__23799);
                                  } else {
                                    return false;
                                  }
                                }
                              } else {
                                return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter, G__23799);
                              }
                            }()) {
                              return cljs.core._pr_writer(obj, writer, opts);
                            } else {
                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#\x3c", [cljs.core.str(obj)].join(""), "\x3e"], 0));
                              } else {
                                return null;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      } else {
        return null;
      }
    }
  }
};
cljs.core.pr_seq_writer = function pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer(cljs.core.first(objs), writer, opts);
  var seq__23805 = cljs.core.seq(cljs.core.next(objs));
  var chunk__23806 = null;
  var count__23807 = 0;
  var i__23808 = 0;
  while (true) {
    if (i__23808 < count__23807) {
      var obj = chunk__23806.cljs$core$IIndexed$_nth$arity$2(null, i__23808);
      cljs.core._write(writer, " ");
      cljs.core.pr_writer(obj, writer, opts);
      var G__23809 = seq__23805;
      var G__23810 = chunk__23806;
      var G__23811 = count__23807;
      var G__23812 = i__23808 + 1;
      seq__23805 = G__23809;
      chunk__23806 = G__23810;
      count__23807 = G__23811;
      i__23808 = G__23812;
      continue;
    } else {
      var temp__4092__auto__ = cljs.core.seq(seq__23805);
      if (temp__4092__auto__) {
        var seq__23805__$1 = temp__4092__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__23805__$1)) {
          var c__4150__auto__ = cljs.core.chunk_first(seq__23805__$1);
          var G__23813 = cljs.core.chunk_rest(seq__23805__$1);
          var G__23814 = c__4150__auto__;
          var G__23815 = cljs.core.count(c__4150__auto__);
          var G__23816 = 0;
          seq__23805 = G__23813;
          chunk__23806 = G__23814;
          count__23807 = G__23815;
          i__23808 = G__23816;
          continue;
        } else {
          var obj = cljs.core.first(seq__23805__$1);
          cljs.core._write(writer, " ");
          cljs.core.pr_writer(obj, writer, opts);
          var G__23817 = cljs.core.next(seq__23805__$1);
          var G__23818 = null;
          var G__23819 = 0;
          var G__23820 = 0;
          seq__23805 = G__23817;
          chunk__23806 = G__23818;
          count__23807 = G__23819;
          i__23808 = G__23820;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.pr_sb_with_opts = function pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer(objs, writer, opts);
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return sb;
};
cljs.core.pr_str_with_opts = function pr_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "";
  } else {
    return[cljs.core.str(cljs.core.pr_sb_with_opts(objs, opts))].join("");
  }
};
cljs.core.prn_str_with_opts = function prn_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "\n";
  } else {
    var sb = cljs.core.pr_sb_with_opts(objs, opts);
    sb.append("\n");
    return[cljs.core.str(sb)].join("");
  }
};
cljs.core.pr_with_opts = function pr_with_opts(objs, opts) {
  return cljs.core.string_print(cljs.core.pr_str_with_opts(objs, opts));
};
cljs.core.newline = function newline(opts) {
  cljs.core.string_print("\n");
  if (cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", 4338025857)))) {
    return cljs.core.flush();
  } else {
    return null;
  }
};
cljs.core.pr_str = function() {
  var pr_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts(objs, cljs.core.pr_opts());
  };
  var pr_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return pr_str__delegate.call(this, objs);
  };
  pr_str.cljs$lang$maxFixedArity = 0;
  pr_str.cljs$lang$applyTo = function(arglist__23821) {
    var objs = cljs.core.seq(arglist__23821);
    return pr_str__delegate(objs);
  };
  pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
  return pr_str;
}();
cljs.core.prn_str = function() {
  var prn_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts(objs, cljs.core.pr_opts());
  };
  var prn_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return prn_str__delegate.call(this, objs);
  };
  prn_str.cljs$lang$maxFixedArity = 0;
  prn_str.cljs$lang$applyTo = function(arglist__23822) {
    var objs = cljs.core.seq(arglist__23822);
    return prn_str__delegate(objs);
  };
  prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
  return prn_str;
}();
cljs.core.pr = function() {
  var pr__delegate = function(objs) {
    return cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
  };
  var pr = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return pr__delegate.call(this, objs);
  };
  pr.cljs$lang$maxFixedArity = 0;
  pr.cljs$lang$applyTo = function(arglist__23823) {
    var objs = cljs.core.seq(arglist__23823);
    return pr__delegate(objs);
  };
  pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
  return pr;
}();
cljs.core.print = function() {
  var cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false));
  };
  var cljs_core_print = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return cljs_core_print__delegate.call(this, objs);
  };
  cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs_core_print.cljs$lang$applyTo = function(arglist__23824) {
    var objs = cljs.core.seq(arglist__23824);
    return cljs_core_print__delegate(objs);
  };
  cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
  return cljs_core_print;
}();
cljs.core.print_str = function() {
  var print_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false));
  };
  var print_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return print_str__delegate.call(this, objs);
  };
  print_str.cljs$lang$maxFixedArity = 0;
  print_str.cljs$lang$applyTo = function(arglist__23825) {
    var objs = cljs.core.seq(arglist__23825);
    return print_str__delegate(objs);
  };
  print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
  return print_str;
}();
cljs.core.println = function() {
  var println__delegate = function(objs) {
    cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false));
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline(cljs.core.pr_opts());
    } else {
      return null;
    }
  };
  var println = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return println__delegate.call(this, objs);
  };
  println.cljs$lang$maxFixedArity = 0;
  println.cljs$lang$applyTo = function(arglist__23826) {
    var objs = cljs.core.seq(arglist__23826);
    return println__delegate(objs);
  };
  println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
  return println;
}();
cljs.core.println_str = function() {
  var println_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false));
  };
  var println_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return println_str__delegate.call(this, objs);
  };
  println_str.cljs$lang$maxFixedArity = 0;
  println_str.cljs$lang$applyTo = function(arglist__23827) {
    var objs = cljs.core.seq(arglist__23827);
    return println_str__delegate(objs);
  };
  println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
  return println_str;
}();
cljs.core.prn = function() {
  var prn__delegate = function(objs) {
    cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline(cljs.core.pr_opts());
    } else {
      return null;
    }
  };
  var prn = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return prn__delegate.call(this, objs);
  };
  prn.cljs$lang$maxFixedArity = 0;
  prn.cljs$lang$applyTo = function(arglist__23828) {
    var objs = cljs.core.seq(arglist__23828);
    return prn__delegate(objs);
  };
  prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
  return prn;
}();
cljs.core.print_map = function print_map(m, print_one, writer, opts) {
  return cljs.core.pr_sequential_writer(writer, function(e, w, opts__$1) {
    print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(cljs.core.key(e), w, opts__$1) : print_one.call(null, cljs.core.key(e), w, opts__$1);
    cljs.core._write(w, " ");
    return print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(cljs.core.val(e), w, opts__$1) : print_one.call(null, cljs.core.val(e), w, opts__$1);
  }, "{", ", ", "}", opts, cljs.core.seq(m));
};
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq(coll__$1));
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core._write(writer, "()");
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
};
cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;
cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_symbols(x__$1, y);
};
cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;
cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_symbols(x__$1, y);
};
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition0$ = 2153938944;
  this.cljs$lang$protocol_mask$partition1$ = 2;
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core/Atom");
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  var seq__23829 = cljs.core.seq(self__.watches);
  var chunk__23830 = null;
  var count__23831 = 0;
  var i__23832 = 0;
  while (true) {
    if (i__23832 < count__23831) {
      var vec__23833 = chunk__23830.cljs$core$IIndexed$_nth$arity$2(null, i__23832);
      var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23833, 0, null);
      var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23833, 1, null);
      f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(key, this$__$1, oldval, newval) : f.call(null, key, this$__$1, oldval, newval);
      var G__23835 = seq__23829;
      var G__23836 = chunk__23830;
      var G__23837 = count__23831;
      var G__23838 = i__23832 + 1;
      seq__23829 = G__23835;
      chunk__23830 = G__23836;
      count__23831 = G__23837;
      i__23832 = G__23838;
      continue;
    } else {
      var temp__4092__auto__ = cljs.core.seq(seq__23829);
      if (temp__4092__auto__) {
        var seq__23829__$1 = temp__4092__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__23829__$1)) {
          var c__4150__auto__ = cljs.core.chunk_first(seq__23829__$1);
          var G__23839 = cljs.core.chunk_rest(seq__23829__$1);
          var G__23840 = c__4150__auto__;
          var G__23841 = cljs.core.count(c__4150__auto__);
          var G__23842 = 0;
          seq__23829 = G__23839;
          chunk__23830 = G__23840;
          count__23831 = G__23841;
          i__23832 = G__23842;
          continue;
        } else {
          var vec__23834 = cljs.core.first(seq__23829__$1);
          var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23834, 0, null);
          var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23834, 1, null);
          f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(key, this$__$1, oldval, newval) : f.call(null, key, this$__$1, oldval, newval);
          var G__23843 = cljs.core.next(seq__23829__$1);
          var G__23844 = null;
          var G__23845 = 0;
          var G__23846 = 0;
          seq__23829 = G__23843;
          chunk__23830 = G__23844;
          count__23831 = G__23845;
          i__23832 = G__23846;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches, key, f);
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches, key);
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var self__ = this;
  var a__$1 = this;
  cljs.core._write(writer, "#\x3cAtom: ");
  cljs.core.pr_writer(self__.state, writer, opts);
  return cljs.core._write(writer, "\x3e");
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
cljs.core.__GT_Atom = function __GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches);
};
cljs.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new cljs.core.Atom(x, null, null, null);
  };
  var atom__2 = function() {
    var G__23850__delegate = function(x, p__23847) {
      var map__23849 = p__23847;
      var map__23849__$1 = cljs.core.seq_QMARK_(map__23849) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__23849) : map__23849;
      var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23849__$1, new cljs.core.Keyword(null, "validator", "validator", 4199087812));
      var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23849__$1, new cljs.core.Keyword(null, "meta", "meta", 1017252215));
      return new cljs.core.Atom(x, meta, validator, null);
    };
    var G__23850 = function(x, var_args) {
      var p__23847 = null;
      if (arguments.length > 1) {
        p__23847 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__23850__delegate.call(this, x, p__23847);
    };
    G__23850.cljs$lang$maxFixedArity = 1;
    G__23850.cljs$lang$applyTo = function(arglist__23851) {
      var x = cljs.core.first(arglist__23851);
      var p__23847 = cljs.core.rest(arglist__23851);
      return G__23850__delegate(x, p__23847);
    };
    G__23850.cljs$core$IFn$_invoke$arity$variadic = G__23850__delegate;
    return G__23850;
  }();
  atom = function(x, var_args) {
    var p__23847 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
  atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
  return atom;
}();
cljs.core.reset_BANG_ = function reset_BANG_(a, new_value) {
  var validate_23852 = a.validator;
  if (validate_23852 == null) {
  } else {
    if (cljs.core.truth_(validate_23852.cljs$core$IFn$_invoke$arity$1 ? validate_23852.cljs$core$IFn$_invoke$arity$1(new_value) : validate_23852.call(null, new_value))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "validate", "validate", 1233162959, null), new cljs.core.Symbol(null, "new-value", "new-value", 972165309, null))], 0)))].join(""));
    }
  }
  var old_value_23853 = a.state;
  a.state = new_value;
  if (a.watches == null) {
  } else {
    cljs.core._notify_watches(a, old_value_23853, new_value);
  }
  return new_value;
};
cljs.core.swap_BANG_ = function() {
  var swap_BANG_ = null;
  var swap_BANG___2 = function(a, f) {
    return cljs.core.reset_BANG_(a, f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(a.state) : f.call(null, a.state));
  };
  var swap_BANG___3 = function(a, f, x) {
    return cljs.core.reset_BANG_(a, f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(a.state, x) : f.call(null, a.state, x));
  };
  var swap_BANG___4 = function(a, f, x, y) {
    return cljs.core.reset_BANG_(a, f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(a.state, x, y) : f.call(null, a.state, x, y));
  };
  var swap_BANG___5 = function(a, f, x, y, z) {
    return cljs.core.reset_BANG_(a, f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(a.state, x, y, z) : f.call(null, a.state, x, y, z));
  };
  var swap_BANG___6 = function() {
    var G__23854__delegate = function(a, f, x, y, z, more) {
      return cljs.core.reset_BANG_(a, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, a.state, x, y, z, cljs.core.array_seq([more], 0)));
    };
    var G__23854 = function(a, f, x, y, z, var_args) {
      var more = null;
      if (arguments.length > 5) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0);
      }
      return G__23854__delegate.call(this, a, f, x, y, z, more);
    };
    G__23854.cljs$lang$maxFixedArity = 5;
    G__23854.cljs$lang$applyTo = function(arglist__23855) {
      var a = cljs.core.first(arglist__23855);
      arglist__23855 = cljs.core.next(arglist__23855);
      var f = cljs.core.first(arglist__23855);
      arglist__23855 = cljs.core.next(arglist__23855);
      var x = cljs.core.first(arglist__23855);
      arglist__23855 = cljs.core.next(arglist__23855);
      var y = cljs.core.first(arglist__23855);
      arglist__23855 = cljs.core.next(arglist__23855);
      var z = cljs.core.first(arglist__23855);
      var more = cljs.core.rest(arglist__23855);
      return G__23854__delegate(a, f, x, y, z, more);
    };
    G__23854.cljs$core$IFn$_invoke$arity$variadic = G__23854__delegate;
    return G__23854;
  }();
  swap_BANG_ = function(a, f, x, y, z, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return swap_BANG___2.call(this, a, f);
      case 3:
        return swap_BANG___3.call(this, a, f, x);
      case 4:
        return swap_BANG___4.call(this, a, f, x, y);
      case 5:
        return swap_BANG___5.call(this, a, f, x, y, z);
      default:
        return swap_BANG___6.cljs$core$IFn$_invoke$arity$variadic(a, f, x, y, z, cljs.core.array_seq(arguments, 5));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  swap_BANG_.cljs$lang$maxFixedArity = 5;
  swap_BANG_.cljs$lang$applyTo = swap_BANG___6.cljs$lang$applyTo;
  swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
  swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
  swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
  swap_BANG_.cljs$core$IFn$_invoke$arity$5 = swap_BANG___5;
  swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___6.cljs$core$IFn$_invoke$arity$variadic;
  return swap_BANG_;
}();
cljs.core.compare_and_set_BANG_ = function compare_and_set_BANG_(a, oldval, newval) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.state, oldval)) {
    cljs.core.reset_BANG_(a, newval);
    return true;
  } else {
    return false;
  }
};
cljs.core.deref = function deref(o) {
  return cljs.core._deref(o);
};
cljs.core.set_validator_BANG_ = function set_validator_BANG_(iref, val) {
  return iref.validator = val;
};
cljs.core.get_validator = function get_validator(iref) {
  return iref.validator;
};
cljs.core.alter_meta_BANG_ = function() {
  var alter_meta_BANG___delegate = function(iref, f, args) {
    return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, iref.meta, args);
  };
  var alter_meta_BANG_ = function(iref, f, var_args) {
    var args = null;
    if (arguments.length > 2) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return alter_meta_BANG___delegate.call(this, iref, f, args);
  };
  alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
  alter_meta_BANG_.cljs$lang$applyTo = function(arglist__23856) {
    var iref = cljs.core.first(arglist__23856);
    arglist__23856 = cljs.core.next(arglist__23856);
    var f = cljs.core.first(arglist__23856);
    var args = cljs.core.rest(arglist__23856);
    return alter_meta_BANG___delegate(iref, f, args);
  };
  alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
  return alter_meta_BANG_;
}();
cljs.core.reset_meta_BANG_ = function reset_meta_BANG_(iref, m) {
  return iref.meta = m;
};
cljs.core.add_watch = function add_watch(iref, key, f) {
  return cljs.core._add_watch(iref, key, f);
};
cljs.core.remove_watch = function remove_watch(iref, key) {
  return cljs.core._remove_watch(iref, key);
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function() {
  var gensym = null;
  var gensym__0 = function() {
    return gensym.cljs$core$IFn$_invoke$arity$1("G__");
  };
  var gensym__1 = function(prefix_string) {
    if (cljs.core.gensym_counter == null) {
      cljs.core.gensym_counter = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(0);
    } else {
    }
    return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter, cljs.core.inc))].join(""));
  };
  gensym = function(prefix_string) {
    switch(arguments.length) {
      case 0:
        return gensym__0.call(this);
      case 1:
        return gensym__1.call(this, prefix_string);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
  gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
  return gensym;
}();
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(state, f) {
  this.state = state;
  this.f = f;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core/Delay");
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var self__ = this;
  var d__$1 = this;
  return(new cljs.core.Keyword(null, "done", "done", 1016993524)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(self__.state));
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return(new cljs.core.Keyword(null, "value", "value", 1125876963)).cljs$core$IFn$_invoke$arity$1(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.state, function(p__23857) {
    var map__23858 = p__23857;
    var map__23858__$1 = cljs.core.seq_QMARK_(map__23858) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__23858) : map__23858;
    var curr_state = map__23858__$1;
    var done = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23858__$1, new cljs.core.Keyword(null, "done", "done", 1016993524));
    if (cljs.core.truth_(done)) {
      return curr_state;
    } else {
      return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "done", "done", 1016993524), true, new cljs.core.Keyword(null, "value", "value", 1125876963), self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null)], null);
    }
  }));
};
cljs.core.__GT_Delay = function __GT_Delay(state, f) {
  return new cljs.core.Delay(state, f);
};
cljs.core.delay_QMARK_ = function delay_QMARK_(x) {
  return x instanceof cljs.core.Delay;
};
cljs.core.force = function force(x) {
  if (cljs.core.delay_QMARK_(x)) {
    return cljs.core.deref(x);
  } else {
    return x;
  }
};
cljs.core.realized_QMARK_ = function realized_QMARK_(d) {
  return cljs.core._realized_QMARK_(d);
};
cljs.core.IEncodeJS = function() {
  var obj23860 = {};
  return obj23860;
}();
cljs.core._clj__GT_js = function _clj__GT_js(x) {
  if (function() {
    var and__3396__auto__ = x;
    if (and__3396__auto__) {
      return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
  } else {
    var x__4029__auto__ = x == null ? null : x;
    return function() {
      var or__3408__auto__ = cljs.core._clj__GT_js[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._clj__GT_js["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEncodeJS.-clj-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._key__GT_js = function _key__GT_js(x) {
  if (function() {
    var and__3396__auto__ = x;
    if (and__3396__auto__) {
      return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
  } else {
    var x__4029__auto__ = x == null ? null : x;
    return function() {
      var or__3408__auto__ = cljs.core._key__GT_js[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._key__GT_js["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEncodeJS.-key-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.key__GT_js = function key__GT_js(k) {
  if (function() {
    var G__23862 = k;
    if (G__23862) {
      var bit__4052__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3408__auto__ = bit__4052__auto__;
        if (cljs.core.truth_(or__3408__auto__)) {
          return or__3408__auto__;
        } else {
          return G__23862.cljs$core$IEncodeJS$;
        }
      }())) {
        return true;
      } else {
        if (!G__23862.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__23862);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__23862);
    }
  }()) {
    return cljs.core._clj__GT_js(k);
  } else {
    if (typeof k === "string" || (typeof k === "number" || (k instanceof cljs.core.Keyword || k instanceof cljs.core.Symbol))) {
      return cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(k) : cljs.core.clj__GT_js.call(null, k);
    } else {
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
    }
  }
};
cljs.core.clj__GT_js = function clj__GT_js(x) {
  if (x == null) {
    return null;
  } else {
    if (function() {
      var G__23876 = x;
      if (G__23876) {
        var bit__4052__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3408__auto__ = bit__4052__auto__;
          if (cljs.core.truth_(or__3408__auto__)) {
            return or__3408__auto__;
          } else {
            return G__23876.cljs$core$IEncodeJS$;
          }
        }())) {
          return true;
        } else {
          if (!G__23876.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__23876);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__23876);
      }
    }()) {
      return cljs.core._clj__GT_js(x);
    } else {
      if (x instanceof cljs.core.Keyword) {
        return cljs.core.name(x);
      } else {
        if (x instanceof cljs.core.Symbol) {
          return[cljs.core.str(x)].join("");
        } else {
          if (cljs.core.map_QMARK_(x)) {
            var m = function() {
              var obj23878 = {};
              return obj23878;
            }();
            var seq__23879_23889 = cljs.core.seq(x);
            var chunk__23880_23890 = null;
            var count__23881_23891 = 0;
            var i__23882_23892 = 0;
            while (true) {
              if (i__23882_23892 < count__23881_23891) {
                var vec__23883_23893 = chunk__23880_23890.cljs$core$IIndexed$_nth$arity$2(null, i__23882_23892);
                var k_23894 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23883_23893, 0, null);
                var v_23895 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23883_23893, 1, null);
                m[cljs.core.key__GT_js(k_23894)] = clj__GT_js(v_23895);
                var G__23896 = seq__23879_23889;
                var G__23897 = chunk__23880_23890;
                var G__23898 = count__23881_23891;
                var G__23899 = i__23882_23892 + 1;
                seq__23879_23889 = G__23896;
                chunk__23880_23890 = G__23897;
                count__23881_23891 = G__23898;
                i__23882_23892 = G__23899;
                continue;
              } else {
                var temp__4092__auto___23900 = cljs.core.seq(seq__23879_23889);
                if (temp__4092__auto___23900) {
                  var seq__23879_23901__$1 = temp__4092__auto___23900;
                  if (cljs.core.chunked_seq_QMARK_(seq__23879_23901__$1)) {
                    var c__4150__auto___23902 = cljs.core.chunk_first(seq__23879_23901__$1);
                    var G__23903 = cljs.core.chunk_rest(seq__23879_23901__$1);
                    var G__23904 = c__4150__auto___23902;
                    var G__23905 = cljs.core.count(c__4150__auto___23902);
                    var G__23906 = 0;
                    seq__23879_23889 = G__23903;
                    chunk__23880_23890 = G__23904;
                    count__23881_23891 = G__23905;
                    i__23882_23892 = G__23906;
                    continue;
                  } else {
                    var vec__23884_23907 = cljs.core.first(seq__23879_23901__$1);
                    var k_23908 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23884_23907, 0, null);
                    var v_23909 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23884_23907, 1, null);
                    m[cljs.core.key__GT_js(k_23908)] = clj__GT_js(v_23909);
                    var G__23910 = cljs.core.next(seq__23879_23901__$1);
                    var G__23911 = null;
                    var G__23912 = 0;
                    var G__23913 = 0;
                    seq__23879_23889 = G__23910;
                    chunk__23880_23890 = G__23911;
                    count__23881_23891 = G__23912;
                    i__23882_23892 = G__23913;
                    continue;
                  }
                } else {
                }
              }
              break;
            }
            return m;
          } else {
            if (cljs.core.coll_QMARK_(x)) {
              var arr = [];
              var seq__23885_23914 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js, x));
              var chunk__23886_23915 = null;
              var count__23887_23916 = 0;
              var i__23888_23917 = 0;
              while (true) {
                if (i__23888_23917 < count__23887_23916) {
                  var x_23918__$1 = chunk__23886_23915.cljs$core$IIndexed$_nth$arity$2(null, i__23888_23917);
                  arr.push(x_23918__$1);
                  var G__23919 = seq__23885_23914;
                  var G__23920 = chunk__23886_23915;
                  var G__23921 = count__23887_23916;
                  var G__23922 = i__23888_23917 + 1;
                  seq__23885_23914 = G__23919;
                  chunk__23886_23915 = G__23920;
                  count__23887_23916 = G__23921;
                  i__23888_23917 = G__23922;
                  continue;
                } else {
                  var temp__4092__auto___23923 = cljs.core.seq(seq__23885_23914);
                  if (temp__4092__auto___23923) {
                    var seq__23885_23924__$1 = temp__4092__auto___23923;
                    if (cljs.core.chunked_seq_QMARK_(seq__23885_23924__$1)) {
                      var c__4150__auto___23925 = cljs.core.chunk_first(seq__23885_23924__$1);
                      var G__23926 = cljs.core.chunk_rest(seq__23885_23924__$1);
                      var G__23927 = c__4150__auto___23925;
                      var G__23928 = cljs.core.count(c__4150__auto___23925);
                      var G__23929 = 0;
                      seq__23885_23914 = G__23926;
                      chunk__23886_23915 = G__23927;
                      count__23887_23916 = G__23928;
                      i__23888_23917 = G__23929;
                      continue;
                    } else {
                      var x_23930__$1 = cljs.core.first(seq__23885_23924__$1);
                      arr.push(x_23930__$1);
                      var G__23931 = cljs.core.next(seq__23885_23924__$1);
                      var G__23932 = null;
                      var G__23933 = 0;
                      var G__23934 = 0;
                      seq__23885_23914 = G__23931;
                      chunk__23886_23915 = G__23932;
                      count__23887_23916 = G__23933;
                      i__23888_23917 = G__23934;
                      continue;
                    }
                  } else {
                  }
                }
                break;
              }
              return arr;
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return x;
              } else {
                return null;
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.IEncodeClojure = function() {
  var obj23936 = {};
  return obj23936;
}();
cljs.core._js__GT_clj = function _js__GT_clj(x, options) {
  if (function() {
    var and__3396__auto__ = x;
    if (and__3396__auto__) {
      return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options);
  } else {
    var x__4029__auto__ = x == null ? null : x;
    return function() {
      var or__3408__auto__ = cljs.core._js__GT_clj[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._js__GT_clj["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEncodeClojure.-js-\x3eclj", x);
        }
      }
    }().call(null, x, options);
  }
};
cljs.core.js__GT_clj = function() {
  var js__GT_clj = null;
  var js__GT_clj__1 = function(x) {
    return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 4191781672), false], null)], 0));
  };
  var js__GT_clj__2 = function() {
    var G__23957__delegate = function(x, opts) {
      if (function() {
        var G__23947 = x;
        if (G__23947) {
          var bit__4052__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__3408__auto__ = bit__4052__auto__;
            if (cljs.core.truth_(or__3408__auto__)) {
              return or__3408__auto__;
            } else {
              return G__23947.cljs$core$IEncodeClojure$;
            }
          }())) {
            return true;
          } else {
            if (!G__23947.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, G__23947);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, G__23947);
        }
      }()) {
        return cljs.core._js__GT_clj(x, cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map, opts));
      } else {
        if (cljs.core.seq(opts)) {
          var map__23948 = opts;
          var map__23948__$1 = cljs.core.seq_QMARK_(map__23948) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__23948) : map__23948;
          var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23948__$1, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 4191781672));
          var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
          var f = function(map__23948, map__23948__$1, keywordize_keys, keyfn) {
            return function thisfn(x__$1) {
              if (cljs.core.seq_QMARK_(x__$1)) {
                return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn, x__$1));
              } else {
                if (cljs.core.coll_QMARK_(x__$1)) {
                  return cljs.core.into(cljs.core.empty(x__$1), cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn, x__$1));
                } else {
                  if (x__$1 instanceof Array) {
                    return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn, x__$1));
                  } else {
                    if (cljs.core.type(x__$1) === Object) {
                      return cljs.core.into(cljs.core.PersistentArrayMap.EMPTY, function() {
                        var iter__4119__auto__ = function(map__23948, map__23948__$1, keywordize_keys, keyfn) {
                          return function iter__23953(s__23954) {
                            return new cljs.core.LazySeq(null, function(map__23948, map__23948__$1, keywordize_keys, keyfn) {
                              return function() {
                                var s__23954__$1 = s__23954;
                                while (true) {
                                  var temp__4092__auto__ = cljs.core.seq(s__23954__$1);
                                  if (temp__4092__auto__) {
                                    var s__23954__$2 = temp__4092__auto__;
                                    if (cljs.core.chunked_seq_QMARK_(s__23954__$2)) {
                                      var c__4117__auto__ = cljs.core.chunk_first(s__23954__$2);
                                      var size__4118__auto__ = cljs.core.count(c__4117__auto__);
                                      var b__23956 = cljs.core.chunk_buffer(size__4118__auto__);
                                      if (function() {
                                        var i__23955 = 0;
                                        while (true) {
                                          if (i__23955 < size__4118__auto__) {
                                            var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4117__auto__, i__23955);
                                            cljs.core.chunk_append(b__23956, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(k) : keyfn.call(null, k), thisfn(x__$1[k])], null));
                                            var G__23958 = i__23955 + 1;
                                            i__23955 = G__23958;
                                            continue;
                                          } else {
                                            return true;
                                          }
                                          break;
                                        }
                                      }()) {
                                        return cljs.core.chunk_cons(cljs.core.chunk(b__23956), iter__23953(cljs.core.chunk_rest(s__23954__$2)));
                                      } else {
                                        return cljs.core.chunk_cons(cljs.core.chunk(b__23956), null);
                                      }
                                    } else {
                                      var k = cljs.core.first(s__23954__$2);
                                      return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(k) : keyfn.call(null, k), thisfn(x__$1[k])], null), iter__23953(cljs.core.rest(s__23954__$2)));
                                    }
                                  } else {
                                    return null;
                                  }
                                  break;
                                }
                              };
                            }(map__23948, map__23948__$1, keywordize_keys, keyfn), null, null);
                          };
                        }(map__23948, map__23948__$1, keywordize_keys, keyfn);
                        return iter__4119__auto__(cljs.core.js_keys(x__$1));
                      }());
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        return x__$1;
                      } else {
                        return null;
                      }
                    }
                  }
                }
              }
            };
          }(map__23948, map__23948__$1, keywordize_keys, keyfn);
          return f(x);
        } else {
          return null;
        }
      }
    };
    var G__23957 = function(x, var_args) {
      var opts = null;
      if (arguments.length > 1) {
        opts = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__23957__delegate.call(this, x, opts);
    };
    G__23957.cljs$lang$maxFixedArity = 1;
    G__23957.cljs$lang$applyTo = function(arglist__23959) {
      var x = cljs.core.first(arglist__23959);
      var opts = cljs.core.rest(arglist__23959);
      return G__23957__delegate(x, opts);
    };
    G__23957.cljs$core$IFn$_invoke$arity$variadic = G__23957__delegate;
    return G__23957;
  }();
  js__GT_clj = function(x, var_args) {
    var opts = var_args;
    switch(arguments.length) {
      case 1:
        return js__GT_clj__1.call(this, x);
      default:
        return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js__GT_clj.cljs$lang$maxFixedArity = 1;
  js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
  js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
  js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
  return js__GT_clj;
}();
cljs.core.memoize = function memoize(f) {
  var mem = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);
  return function() {
    var G__23960__delegate = function(args) {
      var temp__4090__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(mem), args);
      if (cljs.core.truth_(temp__4090__auto__)) {
        var v = temp__4090__auto__;
        return v;
      } else {
        var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
        cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem, cljs.core.assoc, args, ret);
        return ret;
      }
    };
    var G__23960 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__23960__delegate.call(this, args);
    };
    G__23960.cljs$lang$maxFixedArity = 0;
    G__23960.cljs$lang$applyTo = function(arglist__23961) {
      var args = cljs.core.seq(arglist__23961);
      return G__23960__delegate(args);
    };
    G__23960.cljs$core$IFn$_invoke$arity$variadic = G__23960__delegate;
    return G__23960;
  }();
};
cljs.core.trampoline = function() {
  var trampoline = null;
  var trampoline__1 = function(f) {
    while (true) {
      var ret = f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      if (cljs.core.fn_QMARK_(ret)) {
        var G__23962 = ret;
        f = G__23962;
        continue;
      } else {
        return ret;
      }
      break;
    }
  };
  var trampoline__2 = function() {
    var G__23963__delegate = function(f, args) {
      return trampoline.cljs$core$IFn$_invoke$arity$1(function() {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
      });
    };
    var G__23963 = function(f, var_args) {
      var args = null;
      if (arguments.length > 1) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__23963__delegate.call(this, f, args);
    };
    G__23963.cljs$lang$maxFixedArity = 1;
    G__23963.cljs$lang$applyTo = function(arglist__23964) {
      var f = cljs.core.first(arglist__23964);
      var args = cljs.core.rest(arglist__23964);
      return G__23963__delegate(f, args);
    };
    G__23963.cljs$core$IFn$_invoke$arity$variadic = G__23963__delegate;
    return G__23963;
  }();
  trampoline = function(f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return trampoline__1.call(this, f);
      default:
        return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  trampoline.cljs$lang$maxFixedArity = 1;
  trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
  trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
  trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
  return trampoline;
}();
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return rand.cljs$core$IFn$_invoke$arity$1(1);
  };
  var rand__1 = function(n) {
    return(Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null)) * n;
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand;
}();
cljs.core.rand_int = function rand_int(n) {
  return Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1((Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null)) * n) : Math.floor.call(null, (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null)) * n);
};
cljs.core.rand_nth = function rand_nth(coll) {
  return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll, cljs.core.rand_int(cljs.core.count(coll)));
};
cljs.core.group_by = function group_by(f, coll) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(ret, x) {
    var k = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x);
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.PersistentVector.EMPTY), x));
  }, cljs.core.PersistentArrayMap.EMPTY, coll);
};
cljs.core.make_hierarchy = function make_hierarchy() {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", 4515496059), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "descendants", "descendants", 768214664), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442), cljs.core.PersistentArrayMap.EMPTY], null);
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function get_global_hierarchy() {
  if (cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.make_hierarchy());
  } else {
  }
  return cljs.core._global_hierarchy;
};
cljs.core.swap_global_hierarchy_BANG_ = function() {
  var swap_global_hierarchy_BANG___delegate = function(f, args) {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_, cljs.core.get_global_hierarchy(), f, args);
  };
  var swap_global_hierarchy_BANG_ = function(f, var_args) {
    var args = null;
    if (arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return swap_global_hierarchy_BANG___delegate.call(this, f, args);
  };
  swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
  swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(arglist__23965) {
    var f = cljs.core.first(arglist__23965);
    var args = cljs.core.rest(arglist__23965);
    return swap_global_hierarchy_BANG___delegate(f, args);
  };
  swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
  return swap_global_hierarchy_BANG_;
}();
cljs.core.isa_QMARK_ = function() {
  var isa_QMARK_ = null;
  var isa_QMARK___2 = function(child, parent) {
    return isa_QMARK_.cljs$core$IFn$_invoke$arity$3(cljs.core.deref(cljs.core.get_global_hierarchy()), child, parent);
  };
  var isa_QMARK___3 = function(h, child, parent) {
    var or__3408__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child, parent);
    if (or__3408__auto__) {
      return or__3408__auto__;
    } else {
      var or__3408__auto____$1 = cljs.core.contains_QMARK_((new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).cljs$core$IFn$_invoke$arity$1(h).call(null, child), parent);
      if (or__3408__auto____$1) {
        return or__3408__auto____$1;
      } else {
        var and__3396__auto__ = cljs.core.vector_QMARK_(parent);
        if (and__3396__auto__) {
          var and__3396__auto____$1 = cljs.core.vector_QMARK_(child);
          if (and__3396__auto____$1) {
            var and__3396__auto____$2 = cljs.core.count(parent) === cljs.core.count(child);
            if (and__3396__auto____$2) {
              var ret = true;
              var i = 0;
              while (true) {
                if (!ret || i === cljs.core.count(parent)) {
                  return ret;
                } else {
                  var G__23966 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h, child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(i) : child.call(null, i), parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(i) : parent.call(null, i));
                  var G__23967 = i + 1;
                  ret = G__23966;
                  i = G__23967;
                  continue;
                }
                break;
              }
            } else {
              return and__3396__auto____$2;
            }
          } else {
            return and__3396__auto____$1;
          }
        } else {
          return and__3396__auto__;
        }
      }
    }
  };
  isa_QMARK_ = function(h, child, parent) {
    switch(arguments.length) {
      case 2:
        return isa_QMARK___2.call(this, h, child);
      case 3:
        return isa_QMARK___3.call(this, h, child, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
  isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
  return isa_QMARK_;
}();
cljs.core.parents = function() {
  var parents = null;
  var parents__1 = function(tag) {
    return parents.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.core.get_global_hierarchy()), tag);
  };
  var parents__2 = function(h, tag) {
    return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "parents", "parents", 4515496059)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  parents = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, h);
      case 2:
        return parents__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
  parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
  return parents;
}();
cljs.core.ancestors = function() {
  var ancestors = null;
  var ancestors__1 = function(tag) {
    return ancestors.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.core.get_global_hierarchy()), tag);
  };
  var ancestors__2 = function(h, tag) {
    return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  ancestors = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return ancestors__1.call(this, h);
      case 2:
        return ancestors__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
  ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
  return ancestors;
}();
cljs.core.descendants = function() {
  var descendants = null;
  var descendants__1 = function(tag) {
    return descendants.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.core.get_global_hierarchy()), tag);
  };
  var descendants__2 = function(h, tag) {
    return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "descendants", "descendants", 768214664)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  descendants = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return descendants__1.call(this, h);
      case 2:
        return descendants__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
  descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
  return descendants;
}();
cljs.core.derive = function() {
  var derive = null;
  var derive__2 = function(tag, parent) {
    if (cljs.core.truth_(cljs.core.namespace(parent))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "namespace", "namespace", -388313324, null), new cljs.core.Symbol(null, "parent", "parent", 1659011683, null))], 0)))].join(""));
    }
    cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive, cljs.core.array_seq([tag, parent], 0));
    return null;
  };
  var derive__3 = function(h, tag, parent) {
    if (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag, parent)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "not\x3d", "not\x3d", -1637144189, null), new cljs.core.Symbol(null, "tag", "tag", -1640416941, null), new cljs.core.Symbol(null, "parent", "parent", 1659011683, null))], 0)))].join(""));
    }
    var tp = (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).cljs$core$IFn$_invoke$arity$1(h);
    var td = (new cljs.core.Keyword(null, "descendants", "descendants", 768214664)).cljs$core$IFn$_invoke$arity$1(h);
    var ta = (new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).cljs$core$IFn$_invoke$arity$1(h);
    var tf = function(tp, td, ta) {
      return function(m, source, sources, target, targets) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(tp, td, ta) {
          return function(ret, k) {
            return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons(target, targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(target) : targets.call(null, target))));
          };
        }(tp, td, ta), m, cljs.core.cons(source, sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(source) : sources.call(null, source)));
      };
    }(tp, td, ta);
    var or__3408__auto__ = cljs.core.contains_QMARK_(tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(tag) : tp.call(null, tag), parent) ? null : function() {
      if (cljs.core.contains_QMARK_(ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(tag) : ta.call(null, tag), parent)) {
        throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
      } else {
      }
      if (cljs.core.contains_QMARK_(ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(parent) : ta.call(null, parent), tag)) {
        throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
      } else {
      }
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", 4515496059), cljs.core.assoc.cljs$core$IFn$_invoke$arity$3((new cljs.core.Keyword(null, "parents", "parents", 4515496059)).cljs$core$IFn$_invoke$arity$1(h), tag, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442), tf((new cljs.core.Keyword(null, 
      "ancestors", "ancestors", 889955442)).cljs$core$IFn$_invoke$arity$1(h), tag, td, parent, ta), new cljs.core.Keyword(null, "descendants", "descendants", 768214664), tf((new cljs.core.Keyword(null, "descendants", "descendants", 768214664)).cljs$core$IFn$_invoke$arity$1(h), parent, ta, tag, td)], null);
    }();
    if (cljs.core.truth_(or__3408__auto__)) {
      return or__3408__auto__;
    } else {
      return h;
    }
  };
  derive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return derive__2.call(this, h, tag);
      case 3:
        return derive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
  derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
  return derive;
}();
cljs.core.underive = function() {
  var underive = null;
  var underive__2 = function(tag, parent) {
    cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive, cljs.core.array_seq([tag, parent], 0));
    return null;
  };
  var underive__3 = function(h, tag, parent) {
    var parentMap = (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).cljs$core$IFn$_invoke$arity$1(h);
    var childsParents = cljs.core.truth_(parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(tag) : parentMap.call(null, tag)) ? cljs.core.disj.cljs$core$IFn$_invoke$arity$2(parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(tag) : parentMap.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
    var newParents = cljs.core.truth_(cljs.core.not_empty(childsParents)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap, tag, childsParents) : cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap, tag);
    var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(parentMap, childsParents, newParents) {
      return function(p1__23968_SHARP_) {
        return cljs.core.cons(cljs.core.first(p1__23968_SHARP_), cljs.core.interpose(cljs.core.first(p1__23968_SHARP_), cljs.core.second(p1__23968_SHARP_)));
      };
    }(parentMap, childsParents, newParents), cljs.core.seq(newParents)));
    if (cljs.core.contains_QMARK_(parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(tag) : parentMap.call(null, tag), parent)) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__23969_SHARP_, p2__23970_SHARP_) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive, p1__23969_SHARP_, p2__23970_SHARP_);
      }, cljs.core.make_hierarchy(), cljs.core.partition.cljs$core$IFn$_invoke$arity$2(2, deriv_seq));
    } else {
      return h;
    }
  };
  underive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return underive__2.call(this, h, tag);
      case 3:
        return underive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
  underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
  return underive;
}();
cljs.core.reset_cache = function reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache, function(_) {
    return cljs.core.deref(method_table);
  });
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy, function(_) {
    return cljs.core.deref(hierarchy);
  });
};
cljs.core.prefers_STAR_ = function prefers_STAR_(x, y, prefer_table) {
  var xprefs = cljs.core.deref(prefer_table).call(null, x);
  var or__3408__auto__ = cljs.core.truth_(function() {
    var and__3396__auto__ = xprefs;
    if (cljs.core.truth_(and__3396__auto__)) {
      return xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(y) : xprefs.call(null, y);
    } else {
      return and__3396__auto__;
    }
  }()) ? true : null;
  if (cljs.core.truth_(or__3408__auto__)) {
    return or__3408__auto__;
  } else {
    var or__3408__auto____$1 = function() {
      var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
      while (true) {
        if (cljs.core.count(ps) > 0) {
          if (cljs.core.truth_(prefers_STAR_(x, cljs.core.first(ps), prefer_table))) {
          } else {
          }
          var G__23971 = cljs.core.rest(ps);
          ps = G__23971;
          continue;
        } else {
          return null;
        }
        break;
      }
    }();
    if (cljs.core.truth_(or__3408__auto____$1)) {
      return or__3408__auto____$1;
    } else {
      var or__3408__auto____$2 = function() {
        var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
        while (true) {
          if (cljs.core.count(ps) > 0) {
            if (cljs.core.truth_(prefers_STAR_(cljs.core.first(ps), y, prefer_table))) {
            } else {
            }
            var G__23972 = cljs.core.rest(ps);
            ps = G__23972;
            continue;
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(or__3408__auto____$2)) {
        return or__3408__auto____$2;
      } else {
        return false;
      }
    }
  }
};
cljs.core.dominates = function dominates(x, y, prefer_table) {
  var or__3408__auto__ = cljs.core.prefers_STAR_(x, y, prefer_table);
  if (cljs.core.truth_(or__3408__auto__)) {
    return or__3408__auto__;
  } else {
    return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x, y);
  }
};
cljs.core.find_and_cache_best_method = function find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(be, p__23975) {
    var vec__23976 = p__23975;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23976, 0, null);
    var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23976, 1, null);
    var e = vec__23976;
    if (cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(cljs.core.deref(hierarchy), dispatch_val, k)) {
      var be2 = cljs.core.truth_(function() {
        var or__3408__auto__ = be == null;
        if (or__3408__auto__) {
          return or__3408__auto__;
        } else {
          return cljs.core.dominates(k, cljs.core.first(be), prefer_table);
        }
      }()) ? e : be;
      if (cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2), k, prefer_table))) {
      } else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -\x3e "), cljs.core.str(k), cljs.core.str(" and "), cljs.core.str(cljs.core.first(be2)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2;
    } else {
      return be;
    }
  }, null, cljs.core.deref(method_table));
  if (cljs.core.truth_(best_entry)) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cached_hierarchy), cljs.core.deref(hierarchy))) {
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache, cljs.core.assoc, dispatch_val, cljs.core.second(best_entry));
      return cljs.core.second(best_entry);
    } else {
      cljs.core.reset_cache(method_cache, method_table, cached_hierarchy, hierarchy);
      return find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
    }
  } else {
    return null;
  }
};
cljs.core.IMultiFn = function() {
  var obj23978 = {};
  return obj23978;
}();
cljs.core._reset = function _reset(mf) {
  if (function() {
    var and__3396__auto__ = mf;
    if (and__3396__auto__) {
      return mf.cljs$core$IMultiFn$_reset$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
  } else {
    var x__4029__auto__ = mf == null ? null : mf;
    return function() {
      var or__3408__auto__ = cljs.core._reset[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._reset["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._add_method = function _add_method(mf, dispatch_val, method) {
  if (function() {
    var and__3396__auto__ = mf;
    if (and__3396__auto__) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method);
  } else {
    var x__4029__auto__ = mf == null ? null : mf;
    return function() {
      var or__3408__auto__ = cljs.core._add_method[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._add_method["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method);
  }
};
cljs.core._remove_method = function _remove_method(mf, dispatch_val) {
  if (function() {
    var and__3396__auto__ = mf;
    if (and__3396__auto__) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val);
  } else {
    var x__4029__auto__ = mf == null ? null : mf;
    return function() {
      var or__3408__auto__ = cljs.core._remove_method[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._remove_method["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._prefer_method = function _prefer_method(mf, dispatch_val, dispatch_val_y) {
  if (function() {
    var and__3396__auto__ = mf;
    if (and__3396__auto__) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y);
  } else {
    var x__4029__auto__ = mf == null ? null : mf;
    return function() {
      var or__3408__auto__ = cljs.core._prefer_method[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._prefer_method["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y);
  }
};
cljs.core._get_method = function _get_method(mf, dispatch_val) {
  if (function() {
    var and__3396__auto__ = mf;
    if (and__3396__auto__) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val);
  } else {
    var x__4029__auto__ = mf == null ? null : mf;
    return function() {
      var or__3408__auto__ = cljs.core._get_method[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._get_method["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._methods = function _methods(mf) {
  if (function() {
    var and__3396__auto__ = mf;
    if (and__3396__auto__) {
      return mf.cljs$core$IMultiFn$_methods$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
  } else {
    var x__4029__auto__ = mf == null ? null : mf;
    return function() {
      var or__3408__auto__ = cljs.core._methods[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._methods["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._prefers = function _prefers(mf) {
  if (function() {
    var and__3396__auto__ = mf;
    if (and__3396__auto__) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
  } else {
    var x__4029__auto__ = mf == null ? null : mf;
    return function() {
      var or__3408__auto__ = cljs.core._prefers[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._prefers["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._dispatch = function _dispatch(mf, args) {
  if (function() {
    var and__3396__auto__ = mf;
    if (and__3396__auto__) {
      return mf.cljs$core$IMultiFn$_dispatch$arity$2;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_dispatch$arity$2(mf, args);
  } else {
    var x__4029__auto__ = mf == null ? null : mf;
    return function() {
      var or__3408__auto__ = cljs.core._dispatch[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._dispatch["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-dispatch", mf);
        }
      }
    }().call(null, mf, args);
  }
};
cljs.core.do_dispatch = function do_dispatch(mf, name, dispatch_fn, args) {
  var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(dispatch_fn, args);
  var target_fn = cljs.core._get_method(mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val)].join(""));
  }
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(target_fn, args);
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194304;
  this.cljs$lang$protocol_mask$partition1$ = 256;
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core/MultiFn");
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table, function(mf__$2) {
    return cljs.core.PersistentArrayMap.EMPTY;
  });
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache, function(mf__$2) {
    return cljs.core.PersistentArrayMap.EMPTY;
  });
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$2) {
    return cljs.core.PersistentArrayMap.EMPTY;
  });
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy, function(mf__$2) {
    return null;
  });
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(self__.cached_hierarchy), cljs.core.deref(self__.hierarchy))) {
  } else {
    cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  }
  var temp__4090__auto__ = cljs.core.deref(self__.method_cache).call(null, dispatch_val);
  if (cljs.core.truth_(temp__4090__auto__)) {
    var target_fn = temp__4090__auto__;
    return target_fn;
  } else {
    var temp__4090__auto____$1 = cljs.core.find_and_cache_best_method(self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy);
    if (cljs.core.truth_(temp__4090__auto____$1)) {
      var target_fn = temp__4090__auto____$1;
      return target_fn;
    } else {
      return cljs.core.deref(self__.method_table).call(null, self__.default_dispatch_val);
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(self__.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  } else {
  }
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(old) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y));
  });
  return cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref(self__.method_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref(self__.prefer_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch$arity$2 = function(mf, args) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.do_dispatch(mf__$1, self__.name, self__.dispatch_fn, args);
};
cljs.core.__GT_MultiFn = function __GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
};
cljs.core.MultiFn.prototype.call = function() {
  var G__23979__delegate = function(_, args) {
    var self = this;
    return cljs.core._dispatch(self, args);
  };
  var G__23979 = function(_, var_args) {
    var args = null;
    if (arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return G__23979__delegate.call(this, _, args);
  };
  G__23979.cljs$lang$maxFixedArity = 1;
  G__23979.cljs$lang$applyTo = function(arglist__23980) {
    var _ = cljs.core.first(arglist__23980);
    var args = cljs.core.rest(arglist__23980);
    return G__23979__delegate(_, args);
  };
  G__23979.cljs$core$IFn$_invoke$arity$variadic = G__23979__delegate;
  return G__23979;
}();
cljs.core.MultiFn.prototype.apply = function(_, args) {
  var self = this;
  return cljs.core._dispatch(self, args);
};
cljs.core.remove_all_methods = function remove_all_methods(multifn) {
  return cljs.core._reset(multifn);
};
cljs.core.remove_method = function remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method(multifn, dispatch_val);
};
cljs.core.prefer_method = function prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method(multifn, dispatch_val_x, dispatch_val_y);
};
cljs.core.methods$ = function methods$(multifn) {
  return cljs.core._methods(multifn);
};
cljs.core.get_method = function get_method(multifn, dispatch_val) {
  return cljs.core._get_method(multifn, dispatch_val);
};
cljs.core.prefers = function prefers(multifn) {
  return cljs.core._prefers(multifn);
};
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104;
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core/UUID");
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.string.hashCode(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0)));
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  var ___$2 = this;
  return cljs.core._write(writer, [cljs.core.str('#uuid "'), cljs.core.str(self__.uuid), cljs.core.str('"')].join(""));
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return other instanceof cljs.core.UUID && self__.uuid === other.uuid;
};
cljs.core.UUID.prototype.cljs$core$ICloneable$ = true;
cljs.core.UUID.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.UUID(self__.uuid);
};
cljs.core.__GT_UUID = function __GT_UUID(uuid) {
  return new cljs.core.UUID(uuid);
};
cljs.core.ExceptionInfo = function(message, data, cause) {
  this.message = message;
  this.data = data;
  this.cause = cause;
};
cljs.core.ExceptionInfo.cljs$lang$type = true;
cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";
cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = function(this__3973__auto__, writer__3974__auto__, opts__3975__auto__) {
  return cljs.core._write(writer__3974__auto__, "cljs.core/ExceptionInfo");
};
cljs.core.__GT_ExceptionInfo = function __GT_ExceptionInfo(message, data, cause) {
  return new cljs.core.ExceptionInfo(message, data, cause);
};
cljs.core.ExceptionInfo.prototype = new Error;
cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;
cljs.core.ex_info = function() {
  var ex_info = null;
  var ex_info__2 = function(msg, map) {
    return new cljs.core.ExceptionInfo(msg, map, null);
  };
  var ex_info__3 = function(msg, map, cause) {
    return new cljs.core.ExceptionInfo(msg, map, cause);
  };
  ex_info = function(msg, map, cause) {
    switch(arguments.length) {
      case 2:
        return ex_info__2.call(this, msg, map);
      case 3:
        return ex_info__3.call(this, msg, map, cause);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
  ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
  return ex_info;
}();
cljs.core.ex_data = function ex_data(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.data;
  } else {
    return null;
  }
};
cljs.core.ex_message = function ex_message(ex) {
  if (ex instanceof Error) {
    return ex.message;
  } else {
    return null;
  }
};
cljs.core.ex_cause = function ex_cause(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause;
  } else {
    return null;
  }
};
cljs.core.comparator = function comparator(pred) {
  return function(x, y) {
    if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(x, y) : pred.call(null, x, y))) {
      return-1;
    } else {
      if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(y, x) : pred.call(null, y, x))) {
        return 1;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return 0;
        } else {
          return null;
        }
      }
    }
  };
};
cljs.core.special_symbol_QMARK_ = function special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null, "deftype*", "deftype*", -978581244, null), null, new cljs.core.Symbol(null, "new", "new", -1640422567, null), null, new cljs.core.Symbol(null, "quote", "quote", -1532577739, null), null, new cljs.core.Symbol(null, "\x26", "\x26", -1640531489, null), null, new cljs.core.Symbol(null, "set!", "set!", -1637004872, null), null, new cljs.core.Symbol(null, "recur", 
  "recur", -1532142362, null), null, new cljs.core.Symbol(null, ".", ".", -1640531481, null), null, new cljs.core.Symbol(null, "ns", "ns", -1640528002, null), null, new cljs.core.Symbol(null, "do", "do", -1640528316, null), null, new cljs.core.Symbol(null, "fn*", "fn*", -1640430053, null), null, new cljs.core.Symbol(null, "throw", "throw", -1530191713, null), null, new cljs.core.Symbol(null, "letfn*", "letfn*", 1548249632, null), null, new cljs.core.Symbol(null, "js*", "js*", -1640426054, null), 
  null, new cljs.core.Symbol(null, "defrecord*", "defrecord*", 774272013, null), null, new cljs.core.Symbol(null, "let*", "let*", -1637213400, null), null, new cljs.core.Symbol(null, "loop*", "loop*", -1537374273, null), null, new cljs.core.Symbol(null, "try", "try", -1640416396, null), null, new cljs.core.Symbol(null, "if", "if", -1640528170, null), null, new cljs.core.Symbol(null, "def", "def", -1640432194, null), null], null), null), x);
};
goog.provide("cljs.core.async.impl.protocols");
goog.require("cljs.core");
cljs.core.async.impl.protocols.MAX_QUEUE_SIZE = 1024;
cljs.core.async.impl.protocols.ReadPort = function() {
  var obj26560 = {};
  return obj26560;
}();
cljs.core.async.impl.protocols.take_BANG_ = function take_BANG_(port, fn1_handler) {
  if (function() {
    var and__3396__auto__ = port;
    if (and__3396__auto__) {
      return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2(port, fn1_handler);
  } else {
    var x__4029__auto__ = port == null ? null : port;
    return function() {
      var or__3408__auto__ = cljs.core.async.impl.protocols.take_BANG_[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core.async.impl.protocols.take_BANG_["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ReadPort.take!", port);
        }
      }
    }().call(null, port, fn1_handler);
  }
};
cljs.core.async.impl.protocols.WritePort = function() {
  var obj26562 = {};
  return obj26562;
}();
cljs.core.async.impl.protocols.put_BANG_ = function put_BANG_(port, val, fn0_handler) {
  if (function() {
    var and__3396__auto__ = port;
    if (and__3396__auto__) {
      return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3(port, val, fn0_handler);
  } else {
    var x__4029__auto__ = port == null ? null : port;
    return function() {
      var or__3408__auto__ = cljs.core.async.impl.protocols.put_BANG_[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core.async.impl.protocols.put_BANG_["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("WritePort.put!", port);
        }
      }
    }().call(null, port, val, fn0_handler);
  }
};
cljs.core.async.impl.protocols.Channel = function() {
  var obj26564 = {};
  return obj26564;
}();
cljs.core.async.impl.protocols.close_BANG_ = function close_BANG_(chan) {
  if (function() {
    var and__3396__auto__ = chan;
    if (and__3396__auto__) {
      return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1(chan);
  } else {
    var x__4029__auto__ = chan == null ? null : chan;
    return function() {
      var or__3408__auto__ = cljs.core.async.impl.protocols.close_BANG_[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core.async.impl.protocols.close_BANG_["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("Channel.close!", chan);
        }
      }
    }().call(null, chan);
  }
};
cljs.core.async.impl.protocols.Handler = function() {
  var obj26566 = {};
  return obj26566;
}();
cljs.core.async.impl.protocols.active_QMARK_ = function active_QMARK_(h) {
  if (function() {
    var and__3396__auto__ = h;
    if (and__3396__auto__) {
      return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1(h);
  } else {
    var x__4029__auto__ = h == null ? null : h;
    return function() {
      var or__3408__auto__ = cljs.core.async.impl.protocols.active_QMARK_[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core.async.impl.protocols.active_QMARK_["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("Handler.active?", h);
        }
      }
    }().call(null, h);
  }
};
cljs.core.async.impl.protocols.commit = function commit(h) {
  if (function() {
    var and__3396__auto__ = h;
    if (and__3396__auto__) {
      return h.cljs$core$async$impl$protocols$Handler$commit$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return h.cljs$core$async$impl$protocols$Handler$commit$arity$1(h);
  } else {
    var x__4029__auto__ = h == null ? null : h;
    return function() {
      var or__3408__auto__ = cljs.core.async.impl.protocols.commit[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core.async.impl.protocols.commit["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("Handler.commit", h);
        }
      }
    }().call(null, h);
  }
};
cljs.core.async.impl.protocols.Buffer = function() {
  var obj26568 = {};
  return obj26568;
}();
cljs.core.async.impl.protocols.full_QMARK_ = function full_QMARK_(b) {
  if (function() {
    var and__3396__auto__ = b;
    if (and__3396__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1(b);
  } else {
    var x__4029__auto__ = b == null ? null : b;
    return function() {
      var or__3408__auto__ = cljs.core.async.impl.protocols.full_QMARK_[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core.async.impl.protocols.full_QMARK_["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("Buffer.full?", b);
        }
      }
    }().call(null, b);
  }
};
cljs.core.async.impl.protocols.remove_BANG_ = function remove_BANG_(b) {
  if (function() {
    var and__3396__auto__ = b;
    if (and__3396__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1(b);
  } else {
    var x__4029__auto__ = b == null ? null : b;
    return function() {
      var or__3408__auto__ = cljs.core.async.impl.protocols.remove_BANG_[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core.async.impl.protocols.remove_BANG_["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("Buffer.remove!", b);
        }
      }
    }().call(null, b);
  }
};
cljs.core.async.impl.protocols.add_BANG_ = function add_BANG_(b, itm) {
  if (function() {
    var and__3396__auto__ = b;
    if (and__3396__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2(b, itm);
  } else {
    var x__4029__auto__ = b == null ? null : b;
    return function() {
      var or__3408__auto__ = cljs.core.async.impl.protocols.add_BANG_[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core.async.impl.protocols.add_BANG_["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("Buffer.add!", b);
        }
      }
    }().call(null, b, itm);
  }
};
cljs.core.async.impl.protocols.UnblockingBuffer = function() {
  var obj26570 = {};
  return obj26570;
}();
goog.provide("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.ioc_helpers.FN_IDX = 0;
cljs.core.async.impl.ioc_helpers.STATE_IDX = 1;
cljs.core.async.impl.ioc_helpers.VALUE_IDX = 2;
cljs.core.async.impl.ioc_helpers.BINDINGS_IDX = 3;
cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES = 4;
cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION = 5;
cljs.core.async.impl.ioc_helpers.USER_START_IDX = 6;
cljs.core.async.impl.ioc_helpers.aset_object = function aset_object(arr, idx, o) {
  return arr[idx][o];
};
cljs.core.async.impl.ioc_helpers.aget_object = function aget_object(arr, idx) {
  return arr[idx];
};
cljs.core.async.impl.ioc_helpers.finished_QMARK_ = function finished_QMARK_(state_array) {
  return cljs.core.keyword_identical_QMARK_(state_array[cljs.core.async.impl.ioc_helpers.STATE_IDX], new cljs.core.Keyword(null, "finished", "finished", 4635210724));
};
cljs.core.async.impl.ioc_helpers.fn_handler = function fn_handler(f) {
  if (typeof cljs.core.async.impl.ioc_helpers.t26588 !== "undefined") {
  } else {
    cljs.core.async.impl.ioc_helpers.t26588 = function(f, fn_handler, meta26589) {
      this.f = f;
      this.fn_handler = fn_handler;
      this.meta26589 = meta26589;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.impl.ioc_helpers.t26588.cljs$lang$type = true;
    cljs.core.async.impl.ioc_helpers.t26588.cljs$lang$ctorStr = "cljs.core.async.impl.ioc-helpers/t26588";
    cljs.core.async.impl.ioc_helpers.t26588.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write(writer__3971__auto__, "cljs.core.async.impl.ioc-helpers/t26588");
    };
    cljs.core.async.impl.ioc_helpers.t26588.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.impl.ioc_helpers.t26588.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.impl.ioc_helpers.t26588.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f;
    };
    cljs.core.async.impl.ioc_helpers.t26588.prototype.cljs$core$IMeta$_meta$arity$1 = function(_26590) {
      var self__ = this;
      var _26590__$1 = this;
      return self__.meta26589;
    };
    cljs.core.async.impl.ioc_helpers.t26588.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_26590, meta26589__$1) {
      var self__ = this;
      var _26590__$1 = this;
      return new cljs.core.async.impl.ioc_helpers.t26588(self__.f, self__.fn_handler, meta26589__$1);
    };
    cljs.core.async.impl.ioc_helpers.__GT_t26588 = function __GT_t26588(f__$1, fn_handler__$1, meta26589) {
      return new cljs.core.async.impl.ioc_helpers.t26588(f__$1, fn_handler__$1, meta26589);
    };
  }
  return new cljs.core.async.impl.ioc_helpers.t26588(f, fn_handler, null);
};
cljs.core.async.impl.ioc_helpers.run_state_machine = function run_state_machine(state) {
  return cljs.core.async.impl.ioc_helpers.aget_object(state, cljs.core.async.impl.ioc_helpers.FN_IDX).call(null, state);
};
cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped = function run_state_machine_wrapped(state) {
  try {
    return cljs.core.async.impl.ioc_helpers.run_state_machine(state);
  } catch (e26592) {
    if (e26592 instanceof Object) {
      var ex = e26592;
      cljs.core.async.impl.ioc_helpers.aget_object(state, cljs.core.async.impl.ioc_helpers.USER_START_IDX).cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1(null);
      throw ex;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw e26592;
      } else {
        return null;
      }
    }
  }
};
cljs.core.async.impl.ioc_helpers.take_BANG_ = function take_BANG_(state, blk, c) {
  var temp__4090__auto__ = c.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2(null, cljs.core.async.impl.ioc_helpers.fn_handler(function(x) {
    var statearr_26595_26597 = state;
    statearr_26595_26597[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = x;
    statearr_26595_26597[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state);
  }));
  if (cljs.core.truth_(temp__4090__auto__)) {
    var cb = temp__4090__auto__;
    var statearr_26596_26598 = state;
    statearr_26596_26598[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref(cb);
    statearr_26596_26598[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
  } else {
    return null;
  }
};
cljs.core.async.impl.ioc_helpers.put_BANG_ = function put_BANG_(state, blk, c, val) {
  var temp__4090__auto__ = c.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3(null, val, cljs.core.async.impl.ioc_helpers.fn_handler(function() {
    var statearr_26601_26603 = state;
    statearr_26601_26603[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = null;
    statearr_26601_26603[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state);
  }));
  if (cljs.core.truth_(temp__4090__auto__)) {
    var cb = temp__4090__auto__;
    var statearr_26602_26604 = state;
    statearr_26602_26604[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref(cb);
    statearr_26602_26604[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
  } else {
    return null;
  }
};
cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_ = function() {
  var ioc_alts_BANG___delegate = function(state, cont_block, ports, p__26605) {
    var map__26610 = p__26605;
    var map__26610__$1 = cljs.core.seq_QMARK_(map__26610) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__26610) : map__26610;
    var opts = map__26610__$1;
    var statearr_26611_26614 = state;
    statearr_26611_26614[cljs.core.async.impl.ioc_helpers.STATE_IDX] = cont_block;
    var temp__4092__auto__ = cljs.core.async.do_alts(function(val) {
      var statearr_26612_26615 = state;
      statearr_26612_26615[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = val;
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state);
    }, ports, opts);
    if (cljs.core.truth_(temp__4092__auto__)) {
      var cb = temp__4092__auto__;
      var statearr_26613_26616 = state;
      statearr_26613_26616[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref(cb);
      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
    } else {
      return null;
    }
  };
  var ioc_alts_BANG_ = function(state, cont_block, ports, var_args) {
    var p__26605 = null;
    if (arguments.length > 3) {
      p__26605 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
    }
    return ioc_alts_BANG___delegate.call(this, state, cont_block, ports, p__26605);
  };
  ioc_alts_BANG_.cljs$lang$maxFixedArity = 3;
  ioc_alts_BANG_.cljs$lang$applyTo = function(arglist__26617) {
    var state = cljs.core.first(arglist__26617);
    arglist__26617 = cljs.core.next(arglist__26617);
    var cont_block = cljs.core.first(arglist__26617);
    arglist__26617 = cljs.core.next(arglist__26617);
    var ports = cljs.core.first(arglist__26617);
    var p__26605 = cljs.core.rest(arglist__26617);
    return ioc_alts_BANG___delegate(state, cont_block, ports, p__26605);
  };
  ioc_alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = ioc_alts_BANG___delegate;
  return ioc_alts_BANG_;
}();
cljs.core.async.impl.ioc_helpers.return_chan = function return_chan(state, value) {
  var c = state[cljs.core.async.impl.ioc_helpers.USER_START_IDX];
  if (value == null) {
  } else {
    c.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3(null, value, cljs.core.async.impl.ioc_helpers.fn_handler(function() {
      return null;
    }));
  }
  c.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1(null);
  return c;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame = function(catch_block, catch_exception, finally_block, continue_block, prev, __meta, __extmap) {
  this.catch_block = catch_block;
  this.catch_exception = catch_exception;
  this.finally_block = finally_block;
  this.continue_block = continue_block;
  this.prev = prev;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  if (arguments.length > 5) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IHash$_hash$arity$1 = function(this__3983__auto__) {
  var self__ = this;
  var this__3983__auto____$1 = this;
  var h__3819__auto__ = self__.__hash;
  if (!(h__3819__auto__ == null)) {
    return h__3819__auto__;
  } else {
    var h__3819__auto____$1 = cljs.core.hash_imap(this__3983__auto____$1);
    self__.__hash = h__3819__auto____$1;
    return h__3819__auto____$1;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__3988__auto__, k__3989__auto__) {
  var self__ = this;
  var this__3988__auto____$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(this__3988__auto____$1, k__3989__auto__, null);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__3990__auto__, k26619, else__3991__auto__) {
  var self__ = this;
  var this__3990__auto____$1 = this;
  if (cljs.core.keyword_identical_QMARK_(k26619, new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893))) {
    return self__.catch_block;
  } else {
    if (cljs.core.keyword_identical_QMARK_(k26619, new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687))) {
      return self__.catch_exception;
    } else {
      if (cljs.core.keyword_identical_QMARK_(k26619, new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429))) {
        return self__.finally_block;
      } else {
        if (cljs.core.keyword_identical_QMARK_(k26619, new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097))) {
          return self__.continue_block;
        } else {
          if (cljs.core.keyword_identical_QMARK_(k26619, new cljs.core.Keyword(null, "prev", "prev", 1017353637))) {
            return self__.prev;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.__extmap, k26619, else__3991__auto__);
            } else {
              return null;
            }
          }
        }
      }
    }
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__3995__auto__, k__3996__auto__, G__26618) {
  var self__ = this;
  var this__3995__auto____$1 = this;
  var pred__26621 = cljs.core.keyword_identical_QMARK_;
  var expr__26622 = k__3996__auto__;
  if (cljs.core.truth_(pred__26621.cljs$core$IFn$_invoke$arity$2 ? pred__26621.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893), expr__26622) : pred__26621.call(null, new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893), expr__26622))) {
    return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(G__26618, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__26621.cljs$core$IFn$_invoke$arity$2 ? pred__26621.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687), expr__26622) : pred__26621.call(null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687), expr__26622))) {
      return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, G__26618, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__26621.cljs$core$IFn$_invoke$arity$2 ? pred__26621.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429), expr__26622) : pred__26621.call(null, new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429), expr__26622))) {
        return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, G__26618, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__26621.cljs$core$IFn$_invoke$arity$2 ? pred__26621.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097), expr__26622) : pred__26621.call(null, new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097), expr__26622))) {
          return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, G__26618, self__.prev, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__26621.cljs$core$IFn$_invoke$arity$2 ? pred__26621.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null, "prev", "prev", 1017353637), expr__26622) : pred__26621.call(null, new cljs.core.Keyword(null, "prev", "prev", 1017353637), expr__26622))) {
            return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, G__26618, self__.__meta, self__.__extmap, null);
          } else {
            return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.__extmap, k__3996__auto__, G__26618), null);
          }
        }
      }
    }
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4002__auto__, writer__4003__auto__, opts__4004__auto__) {
  var self__ = this;
  var this__4002__auto____$1 = this;
  var pr_pair__4005__auto__ = function(keyval__4006__auto__) {
    return cljs.core.pr_sequential_writer(writer__4003__auto__, cljs.core.pr_writer, "", " ", "", opts__4004__auto__, keyval__4006__auto__);
  };
  return cljs.core.pr_sequential_writer(writer__4003__auto__, pr_pair__4005__auto__, "#cljs.core.async.impl.ioc-helpers.ExceptionFrame{", ", ", "}", opts__4004__auto__, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893), self__.catch_block], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687), self__.catch_exception], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429), self__.finally_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097), 
  self__.continue_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prev", "prev", 1017353637), self__.prev], null)], null), self__.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__3993__auto__, entry__3994__auto__) {
  var self__ = this;
  var this__3993__auto____$1 = this;
  if (cljs.core.vector_QMARK_(entry__3994__auto__)) {
    return cljs.core._assoc(this__3993__auto____$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry__3994__auto__, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry__3994__auto__, 1));
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, this__3993__auto____$1, entry__3994__auto__);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4000__auto__) {
  var self__ = this;
  var this__4000__auto____$1 = this;
  return cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893), self__.catch_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687), self__.catch_exception], 
  null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429), self__.finally_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097), self__.continue_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prev", 
  "prev", 1017353637), self__.prev], null)], null), self__.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICounted$_count$arity$1 = function(this__3992__auto__) {
  var self__ = this;
  var this__3992__auto____$1 = this;
  return 5 + cljs.core.count(self__.__extmap);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__3984__auto__, other__3985__auto__) {
  var self__ = this;
  var this__3984__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3396__auto__ = other__3985__auto__;
    if (cljs.core.truth_(and__3396__auto__)) {
      return this__3984__auto____$1.constructor === other__3985__auto__.constructor && cljs.core.equiv_map(this__3984__auto____$1, other__3985__auto__);
    } else {
      return and__3396__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__3987__auto__, G__26618) {
  var self__ = this;
  var this__3987__auto____$1 = this;
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, G__26618, self__.__extmap, self__.__hash);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__3986__auto__) {
  var self__ = this;
  var this__3986__auto____$1 = this;
  return self__.__meta;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__3997__auto__, k__3998__auto__) {
  var self__ = this;
  var this__3997__auto____$1 = this;
  if (cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429), null, new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893), null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687), null, new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097), null, new cljs.core.Keyword(null, "prev", "prev", 1017353637), null], 
  null), null), k__3998__auto__)) {
    return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core.with_meta(cljs.core.into(cljs.core.PersistentArrayMap.EMPTY, this__3997__auto____$1), self__.__meta), k__3998__auto__);
  } else {
    return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, cljs.core.not_empty(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.__extmap, k__3998__auto__)), null);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$type = true;
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$ctorPrSeq = function(this__4022__auto__) {
  return cljs.core._conj(cljs.core.List.EMPTY, "cljs.core.async.impl.ioc-helpers/ExceptionFrame");
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$ctorPrWriter = function(this__4022__auto__, writer__4023__auto__) {
  return cljs.core._write(writer__4023__auto__, "cljs.core.async.impl.ioc-helpers/ExceptionFrame");
};
cljs.core.async.impl.ioc_helpers.__GT_ExceptionFrame = function __GT_ExceptionFrame(catch_block, catch_exception, finally_block, continue_block, prev) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(catch_block, catch_exception, finally_block, continue_block, prev);
};
cljs.core.async.impl.ioc_helpers.map__GT_ExceptionFrame = function map__GT_ExceptionFrame(G__26620) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame((new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893)).cljs$core$IFn$_invoke$arity$1(G__26620), (new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687)).cljs$core$IFn$_invoke$arity$1(G__26620), (new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429)).cljs$core$IFn$_invoke$arity$1(G__26620), (new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097)).cljs$core$IFn$_invoke$arity$1(G__26620), 
  (new cljs.core.Keyword(null, "prev", "prev", 1017353637)).cljs$core$IFn$_invoke$arity$1(G__26620), null, cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__26620, new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893), cljs.core.array_seq([new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687), new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429), new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097), new cljs.core.Keyword(null, 
  "prev", "prev", 1017353637)], 0)));
};
cljs.core.async.impl.ioc_helpers.add_exception_frame = function add_exception_frame(state, catch_block, catch_exception, finally_block, continue_block) {
  var statearr_26625 = state;
  statearr_26625[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.async.impl.ioc_helpers.__GT_ExceptionFrame(catch_block, catch_exception, finally_block, continue_block, cljs.core.async.impl.ioc_helpers.aget_object(state, cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES));
  return statearr_26625;
};
cljs.core.async.impl.ioc_helpers.process_exception = function process_exception(state) {
  while (true) {
    var exception_frame = cljs.core.async.impl.ioc_helpers.aget_object(state, cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES);
    var catch_block = (new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893)).cljs$core$IFn$_invoke$arity$1(exception_frame);
    var catch_exception = (new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687)).cljs$core$IFn$_invoke$arity$1(exception_frame);
    var exception = cljs.core.async.impl.ioc_helpers.aget_object(state, cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION);
    if (cljs.core.truth_(function() {
      var and__3396__auto__ = exception;
      if (cljs.core.truth_(and__3396__auto__)) {
        return cljs.core.not(exception_frame);
      } else {
        return and__3396__auto__;
      }
    }())) {
      throw exception;
    } else {
      if (cljs.core.truth_(function() {
        var and__3396__auto__ = exception;
        if (cljs.core.truth_(and__3396__auto__)) {
          var and__3396__auto____$1 = catch_block;
          if (cljs.core.truth_(and__3396__auto____$1)) {
            return exception instanceof catch_exception;
          } else {
            return and__3396__auto____$1;
          }
        } else {
          return and__3396__auto__;
        }
      }())) {
        var statearr_26631 = state;
        statearr_26631[cljs.core.async.impl.ioc_helpers.STATE_IDX] = catch_block;
        statearr_26631[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = exception;
        statearr_26631[cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION] = null;
        statearr_26631[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(exception_frame, new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893), null, cljs.core.array_seq([new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687), null], 0));
        return statearr_26631;
      } else {
        if (cljs.core.truth_(function() {
          var and__3396__auto__ = exception;
          if (cljs.core.truth_(and__3396__auto__)) {
            return cljs.core.not(catch_block) && cljs.core.not((new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429)).cljs$core$IFn$_invoke$arity$1(exception_frame));
          } else {
            return and__3396__auto__;
          }
        }())) {
          var statearr_26632_26636 = state;
          statearr_26632_26636[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = (new cljs.core.Keyword(null, "prev", "prev", 1017353637)).cljs$core$IFn$_invoke$arity$1(exception_frame);
          var G__26637 = state;
          state = G__26637;
          continue;
        } else {
          if (cljs.core.truth_(function() {
            var and__3396__auto__ = exception;
            if (cljs.core.truth_(and__3396__auto__)) {
              var and__3396__auto____$1 = cljs.core.not(catch_block);
              if (and__3396__auto____$1) {
                return(new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              } else {
                return and__3396__auto____$1;
              }
            } else {
              return and__3396__auto__;
            }
          }())) {
            var statearr_26633 = state;
            statearr_26633[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429)).cljs$core$IFn$_invoke$arity$1(exception_frame);
            statearr_26633[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(exception_frame, new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429), null);
            return statearr_26633;
          } else {
            if (cljs.core.truth_(function() {
              var and__3396__auto__ = cljs.core.not(exception);
              if (and__3396__auto__) {
                return(new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              } else {
                return and__3396__auto__;
              }
            }())) {
              var statearr_26634 = state;
              statearr_26634[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              statearr_26634[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(exception_frame, new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429), null);
              return statearr_26634;
            } else {
              if (cljs.core.not(exception) && cljs.core.not((new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429)).cljs$core$IFn$_invoke$arity$1(exception_frame))) {
                var statearr_26635 = state;
                statearr_26635[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097)).cljs$core$IFn$_invoke$arity$1(exception_frame);
                statearr_26635[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = (new cljs.core.Keyword(null, "prev", "prev", 1017353637)).cljs$core$IFn$_invoke$arity$1(exception_frame);
                return statearr_26635;
              } else {
                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                  if (false) {
                    return null;
                  } else {
                    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("No matching clause"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([false], 0)))].join(""));
                  }
                } else {
                  return null;
                }
              }
            }
          }
        }
      }
    }
    break;
  }
};
goog.provide("cljs.core.async.impl.buffers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.buffers.acopy = function acopy(src, src_start, dest, dest_start, len) {
  var cnt = 0;
  while (true) {
    if (cnt < len) {
      dest[dest_start + cnt] = src[src_start + cnt];
      var G__26582 = cnt + 1;
      cnt = G__26582;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.async.impl.buffers.RingBuffer = function(head, tail, length, arr) {
  this.head = head;
  this.tail = tail;
  this.length = length;
  this.arr = arr;
};
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/RingBuffer";
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core.async.impl.buffers/RingBuffer");
};
cljs.core.async.impl.buffers.RingBuffer.prototype.pop = function() {
  var self__ = this;
  var _ = this;
  if (self__.length === 0) {
    return null;
  } else {
    var x = self__.arr[self__.tail];
    self__.arr[self__.tail] = null;
    self__.tail = (self__.tail + 1) % self__.arr.length;
    self__.length = self__.length - 1;
    return x;
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unshift = function(x) {
  var self__ = this;
  var _ = this;
  self__.arr[self__.head] = x;
  self__.head = (self__.head + 1) % self__.arr.length;
  self__.length = self__.length + 1;
  return null;
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unbounded_unshift = function(x) {
  var self__ = this;
  var this$ = this;
  if (self__.length + 1 === self__.arr.length) {
    this$.resize();
  } else {
  }
  return this$.unshift(x);
};
cljs.core.async.impl.buffers.RingBuffer.prototype.resize = function() {
  var self__ = this;
  var _ = this;
  var new_arr_size = self__.arr.length * 2;
  var new_arr = new Array(new_arr_size);
  if (self__.tail < self__.head) {
    cljs.core.async.impl.buffers.acopy(self__.arr, self__.tail, new_arr, 0, self__.length);
    self__.tail = 0;
    self__.head = self__.length;
    return self__.arr = new_arr;
  } else {
    if (self__.tail > self__.head) {
      cljs.core.async.impl.buffers.acopy(self__.arr, self__.tail, new_arr, 0, self__.arr.length - self__.tail);
      cljs.core.async.impl.buffers.acopy(self__.arr, 0, new_arr, self__.arr.length - self__.tail, self__.head);
      self__.tail = 0;
      self__.head = self__.length;
      return self__.arr = new_arr;
    } else {
      if (self__.tail === self__.head) {
        self__.tail = 0;
        self__.head = 0;
        return self__.arr = new_arr;
      } else {
        return null;
      }
    }
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.cleanup = function(keep_QMARK_) {
  var self__ = this;
  var this$ = this;
  var n__4250__auto__ = self__.length;
  var x = 0;
  while (true) {
    if (x < n__4250__auto__) {
      var v_26583 = this$.pop();
      if (keep_QMARK_.cljs$core$IFn$_invoke$arity$1 ? keep_QMARK_.cljs$core$IFn$_invoke$arity$1(v_26583) : keep_QMARK_.call(null, v_26583)) {
        this$.unshift(v_26583);
      } else {
      }
      var G__26584 = x + 1;
      x = G__26584;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.async.impl.buffers.__GT_RingBuffer = function __GT_RingBuffer(head, tail, length, arr) {
  return new cljs.core.async.impl.buffers.RingBuffer(head, tail, length, arr);
};
cljs.core.async.impl.buffers.ring_buffer = function ring_buffer(n) {
  if (n > 0) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't create a ring buffer of size 0"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "\x3e", "\x3e", -1640531465, null), new cljs.core.Symbol(null, "n", "n", -1640531417, null), 0)], 0)))].join(""));
  }
  return new cljs.core.async.impl.buffers.RingBuffer(0, 0, 0, new Array(n));
};
cljs.core.async.impl.buffers.FixedBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/FixedBuffer";
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core.async.impl.buffers/FixedBuffer");
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length === self__.n;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (cljs.core.not(cljs.core.async.impl.protocols.full_QMARK_(this$__$1))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't add to a full buffer"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "not", "not", -1640422260, null), cljs.core.list(new cljs.core.Symbol("impl", "full?", "impl/full?", -1337857039, null), new cljs.core.Symbol(null, "this", "this", -1636972457, null)))], 0)))].join(""));
  }
  return self__.buf.unshift(itm);
};
cljs.core.async.impl.buffers.__GT_FixedBuffer = function __GT_FixedBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(buf, n);
};
cljs.core.async.impl.buffers.fixed_buffer = function fixed_buffer(n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(cljs.core.async.impl.buffers.ring_buffer(n), n);
};
cljs.core.async.impl.buffers.DroppingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/DroppingBuffer";
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core.async.impl.buffers/DroppingBuffer");
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.buf.length === self__.n) {
    return null;
  } else {
    return self__.buf.unshift(itm);
  }
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = true;
cljs.core.async.impl.buffers.__GT_DroppingBuffer = function __GT_DroppingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(buf, n);
};
cljs.core.async.impl.buffers.dropping_buffer = function dropping_buffer(n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(cljs.core.async.impl.buffers.ring_buffer(n), n);
};
cljs.core.async.impl.buffers.SlidingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/SlidingBuffer";
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core.async.impl.buffers/SlidingBuffer");
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.buf.length === self__.n) {
    cljs.core.async.impl.protocols.remove_BANG_(this$__$1);
  } else {
  }
  return self__.buf.unshift(itm);
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = true;
cljs.core.async.impl.buffers.__GT_SlidingBuffer = function __GT_SlidingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(buf, n);
};
cljs.core.async.impl.buffers.sliding_buffer = function sliding_buffer(n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(cljs.core.async.impl.buffers.ring_buffer(n), n);
};
goog.provide("cljs.core.async.impl.dispatch");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.buffers");
cljs.core.async.impl.dispatch.message_channel = null;
cljs.core.async.impl.dispatch.tasks = cljs.core.async.impl.buffers.ring_buffer(32);
cljs.core.async.impl.dispatch.running_QMARK_ = false;
cljs.core.async.impl.dispatch.queued_QMARK_ = false;
cljs.core.async.impl.dispatch.TASK_BATCH_SIZE = 1024;
cljs.core.async.impl.dispatch.process_messages = function process_messages() {
  cljs.core.async.impl.dispatch.running_QMARK_ = true;
  cljs.core.async.impl.dispatch.queued_QMARK_ = false;
  var count_26571 = 0;
  while (true) {
    var m_26572 = cljs.core.async.impl.dispatch.tasks.pop();
    if (m_26572 == null) {
    } else {
      m_26572.cljs$core$IFn$_invoke$arity$0 ? m_26572.cljs$core$IFn$_invoke$arity$0() : m_26572.call(null);
      if (count_26571 < cljs.core.async.impl.dispatch.TASK_BATCH_SIZE) {
        var G__26573 = count_26571 + 1;
        count_26571 = G__26573;
        continue;
      } else {
      }
    }
    break;
  }
  cljs.core.async.impl.dispatch.running_QMARK_ = false;
  if (cljs.core.async.impl.dispatch.tasks.length > 0) {
    return cljs.core.async.impl.dispatch.queue_dispatcher.cljs$core$IFn$_invoke$arity$0 ? cljs.core.async.impl.dispatch.queue_dispatcher.cljs$core$IFn$_invoke$arity$0() : cljs.core.async.impl.dispatch.queue_dispatcher.call(null);
  } else {
    return null;
  }
};
if (typeof MessageChannel !== "undefined") {
  cljs.core.async.impl.dispatch.message_channel = new MessageChannel;
  cljs.core.async.impl.dispatch.message_channel.port1.onmessage = function(msg) {
    return cljs.core.async.impl.dispatch.process_messages();
  };
} else {
}
cljs.core.async.impl.dispatch.queue_dispatcher = function queue_dispatcher() {
  if (cljs.core.truth_(function() {
    var and__3396__auto__ = cljs.core.async.impl.dispatch.queued_QMARK_;
    if (and__3396__auto__) {
      return cljs.core.async.impl.dispatch.running_QMARK_;
    } else {
      return and__3396__auto__;
    }
  }())) {
    return null;
  } else {
    cljs.core.async.impl.dispatch.queued_QMARK_ = true;
    if (typeof MessageChannel !== "undefined") {
      return cljs.core.async.impl.dispatch.message_channel.port2.postMessage(0);
    } else {
      if (typeof setImmediate !== "undefined") {
        return setImmediate(cljs.core.async.impl.dispatch.process_messages);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return setTimeout(cljs.core.async.impl.dispatch.process_messages, 0);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.async.impl.dispatch.run = function run(f) {
  cljs.core.async.impl.dispatch.tasks.unbounded_unshift(f);
  return cljs.core.async.impl.dispatch.queue_dispatcher();
};
cljs.core.async.impl.dispatch.queue_delay = function queue_delay(f, delay) {
  return setTimeout(f, delay);
};
goog.provide("cljs.core.async.impl.channels");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.channels.box = function box(val) {
  if (typeof cljs.core.async.impl.channels.t26577 !== "undefined") {
  } else {
    cljs.core.async.impl.channels.t26577 = function(val, box, meta26578) {
      this.val = val;
      this.box = box;
      this.meta26578 = meta26578;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 425984;
    };
    cljs.core.async.impl.channels.t26577.cljs$lang$type = true;
    cljs.core.async.impl.channels.t26577.cljs$lang$ctorStr = "cljs.core.async.impl.channels/t26577";
    cljs.core.async.impl.channels.t26577.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write(writer__3971__auto__, "cljs.core.async.impl.channels/t26577");
    };
    cljs.core.async.impl.channels.t26577.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.val;
    };
    cljs.core.async.impl.channels.t26577.prototype.cljs$core$IMeta$_meta$arity$1 = function(_26579) {
      var self__ = this;
      var _26579__$1 = this;
      return self__.meta26578;
    };
    cljs.core.async.impl.channels.t26577.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_26579, meta26578__$1) {
      var self__ = this;
      var _26579__$1 = this;
      return new cljs.core.async.impl.channels.t26577(self__.val, self__.box, meta26578__$1);
    };
    cljs.core.async.impl.channels.__GT_t26577 = function __GT_t26577(val__$1, box__$1, meta26578) {
      return new cljs.core.async.impl.channels.t26577(val__$1, box__$1, meta26578);
    };
  }
  return new cljs.core.async.impl.channels.t26577(val, box, null);
};
cljs.core.async.impl.channels.PutBox = function(handler, val) {
  this.handler = handler;
  this.val = val;
};
cljs.core.async.impl.channels.PutBox.cljs$lang$type = true;
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorStr = "cljs.core.async.impl.channels/PutBox";
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorPrWriter = function(this__3973__auto__, writer__3974__auto__, opts__3975__auto__) {
  return cljs.core._write(writer__3974__auto__, "cljs.core.async.impl.channels/PutBox");
};
cljs.core.async.impl.channels.__GT_PutBox = function __GT_PutBox(handler, val) {
  return new cljs.core.async.impl.channels.PutBox(handler, val);
};
cljs.core.async.impl.channels.put_active_QMARK_ = function put_active_QMARK_(box) {
  return cljs.core.async.impl.protocols.active_QMARK_(box.handler);
};
cljs.core.async.impl.channels.MAX_DIRTY = 64;
cljs.core.async.impl.channels.ManyToManyChannel = function(takes, dirty_takes, puts, dirty_puts, buf, closed) {
  this.takes = takes;
  this.dirty_takes = dirty_takes;
  this.puts = puts;
  this.dirty_puts = dirty_puts;
  this.buf = buf;
  this.closed = closed;
};
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$type = true;
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorStr = "cljs.core.async.impl.channels/ManyToManyChannel";
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core.async.impl.channels/ManyToManyChannel");
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.closed) {
    return null;
  } else {
    self__.closed = true;
    while (true) {
      var taker_26580 = self__.takes.pop();
      if (taker_26580 == null) {
      } else {
        if (taker_26580.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1(null)) {
          var take_cb_26581 = taker_26580.cljs$core$async$impl$protocols$Handler$commit$arity$1(null);
          cljs.core.async.impl.dispatch.run(function(take_cb_26581, taker_26580) {
            return function() {
              return take_cb_26581.cljs$core$IFn$_invoke$arity$1 ? take_cb_26581.cljs$core$IFn$_invoke$arity$1(null) : take_cb_26581.call(null, null);
            };
          }(take_cb_26581, taker_26580));
        } else {
        }
        continue;
      }
      break;
    }
    return null;
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(this$, handler) {
  var self__ = this;
  var this$__$1 = this;
  if (!handler.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1(null)) {
    return null;
  } else {
    if (!(self__.buf == null) && cljs.core.count(self__.buf) > 0) {
      var _ = handler.cljs$core$async$impl$protocols$Handler$commit$arity$1(null);
      return cljs.core.async.impl.channels.box(self__.buf.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1(null));
    } else {
      while (true) {
        var putter = self__.puts.pop();
        if (!(putter == null)) {
          var put_handler = putter.handler;
          var val = putter.val;
          if (put_handler.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1(null)) {
            var put_cb = put_handler.cljs$core$async$impl$protocols$Handler$commit$arity$1(null);
            var _ = handler.cljs$core$async$impl$protocols$Handler$commit$arity$1(null);
            cljs.core.async.impl.dispatch.run(put_cb);
            return cljs.core.async.impl.channels.box(val);
          } else {
            continue;
          }
        } else {
          if (self__.closed) {
            var _ = handler.cljs$core$async$impl$protocols$Handler$commit$arity$1(null);
            return cljs.core.async.impl.channels.box(null);
          } else {
            if (self__.dirty_takes > cljs.core.async.impl.channels.MAX_DIRTY) {
              self__.dirty_takes = 0;
              self__.takes.cleanup(cljs.core.async.impl.protocols.active_QMARK_);
            } else {
              self__.dirty_takes = self__.dirty_takes + 1;
            }
            if (self__.takes.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
            } else {
              throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("No more than "), cljs.core.str(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE), cljs.core.str(" pending takes are allowed on a single channel.")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", -1640531467, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", 
              1395928862, null), new cljs.core.Symbol(null, "takes", "takes", -1530407291, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", -1989946393, null))], 0)))].join(""));
            }
            self__.takes.unbounded_unshift(handler);
            return null;
          }
        }
        break;
      }
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(this$, val, handler) {
  var self__ = this;
  var this$__$1 = this;
  if (!(val == null)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't put nil in on a channel"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "not", "not", -1640422260, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", -1637150201, null), new cljs.core.Symbol(null, "val", "val", -1640415014, null)))], 0)))].join(""));
  }
  var closed__$1 = self__.closed;
  if (closed__$1 || !handler.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1(null)) {
    return cljs.core.async.impl.channels.box(null);
  } else {
    while (true) {
      var taker = self__.takes.pop();
      if (!(taker == null)) {
        if (taker.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1(null)) {
          var take_cb = taker.cljs$core$async$impl$protocols$Handler$commit$arity$1(null);
          var _ = handler.cljs$core$async$impl$protocols$Handler$commit$arity$1(null);
          cljs.core.async.impl.dispatch.run(function(take_cb, _, taker) {
            return function() {
              return take_cb.cljs$core$IFn$_invoke$arity$1 ? take_cb.cljs$core$IFn$_invoke$arity$1(val) : take_cb.call(null, val);
            };
          }(take_cb, _, taker));
          return cljs.core.async.impl.channels.box(null);
        } else {
          continue;
        }
      } else {
        if (!(self__.buf == null || self__.buf.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1(null))) {
          var _ = handler.cljs$core$async$impl$protocols$Handler$commit$arity$1(null);
          self__.buf.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2(null, val);
          return cljs.core.async.impl.channels.box(null);
        } else {
          if (self__.dirty_puts > cljs.core.async.impl.channels.MAX_DIRTY) {
            self__.dirty_puts = 0;
            self__.puts.cleanup(cljs.core.async.impl.channels.put_active_QMARK_);
          } else {
            self__.dirty_puts = self__.dirty_puts + 1;
          }
          if (self__.puts.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
          } else {
            throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("No more than "), cljs.core.str(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE), cljs.core.str(" pending puts are allowed on a single channel."), cljs.core.str(" Consider using a windowed buffer.")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", -1640531467, null), cljs.core.list(new cljs.core.Symbol(null, 
            ".-length", ".-length", 1395928862, null), new cljs.core.Symbol(null, "puts", "puts", -1637078787, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", -1989946393, null))], 0)))].join(""));
          }
          self__.puts.unbounded_unshift(new cljs.core.async.impl.channels.PutBox(handler, val));
          return null;
        }
      }
      break;
    }
  }
};
cljs.core.async.impl.channels.__GT_ManyToManyChannel = function __GT_ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed);
};
cljs.core.async.impl.channels.chan = function chan(buf) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(cljs.core.async.impl.buffers.ring_buffer(32), 0, cljs.core.async.impl.buffers.ring_buffer(32), 0, buf, null);
};
goog.provide("cljs.core.async.impl.timers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.timers.MAX_LEVEL = 15;
cljs.core.async.impl.timers.P = 1 / 2;
cljs.core.async.impl.timers.random_level = function() {
  var random_level = null;
  var random_level__0 = function() {
    return random_level.cljs$core$IFn$_invoke$arity$1(0);
  };
  var random_level__1 = function(level) {
    while (true) {
      if (Math.random() < cljs.core.async.impl.timers.P && level < cljs.core.async.impl.timers.MAX_LEVEL) {
        var G__26535 = level + 1;
        level = G__26535;
        continue;
      } else {
        return level;
      }
      break;
    }
  };
  random_level = function(level) {
    switch(arguments.length) {
      case 0:
        return random_level__0.call(this);
      case 1:
        return random_level__1.call(this, level);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  random_level.cljs$core$IFn$_invoke$arity$0 = random_level__0;
  random_level.cljs$core$IFn$_invoke$arity$1 = random_level__1;
  return random_level;
}();
cljs.core.async.impl.timers.SkipListNode = function(key, val, forward) {
  this.key = key;
  this.val = val;
  this.forward = forward;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
};
cljs.core.async.impl.timers.SkipListNode.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipListNode";
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core.async.impl.timers/SkipListNode");
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.async.impl.timers.__GT_SkipListNode = function __GT_SkipListNode(key, val, forward) {
  return new cljs.core.async.impl.timers.SkipListNode(key, val, forward);
};
cljs.core.async.impl.timers.skip_list_node = function() {
  var skip_list_node = null;
  var skip_list_node__1 = function(level) {
    return skip_list_node.cljs$core$IFn$_invoke$arity$3(null, null, level);
  };
  var skip_list_node__3 = function(k, v, level) {
    var arr = new Array(level + 1);
    var i_26536 = 0;
    while (true) {
      if (i_26536 < arr.length) {
        arr[i_26536] = null;
        var G__26537 = i_26536 + 1;
        i_26536 = G__26537;
        continue;
      } else {
      }
      break;
    }
    return new cljs.core.async.impl.timers.SkipListNode(k, v, arr);
  };
  skip_list_node = function(k, v, level) {
    switch(arguments.length) {
      case 1:
        return skip_list_node__1.call(this, k);
      case 3:
        return skip_list_node__3.call(this, k, v, level);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  skip_list_node.cljs$core$IFn$_invoke$arity$1 = skip_list_node__1;
  skip_list_node.cljs$core$IFn$_invoke$arity$3 = skip_list_node__3;
  return skip_list_node;
}();
cljs.core.async.impl.timers.least_greater_node = function() {
  var least_greater_node = null;
  var least_greater_node__3 = function(x, k, level) {
    return least_greater_node.cljs$core$IFn$_invoke$arity$4(x, k, level, null);
  };
  var least_greater_node__4 = function(x, k, level, update) {
    while (true) {
      if (!(level < 0)) {
        var x__$1 = function() {
          var x__$1 = x;
          while (true) {
            var temp__4090__auto__ = x__$1.forward[level];
            if (cljs.core.truth_(temp__4090__auto__)) {
              var x_SINGLEQUOTE_ = temp__4090__auto__;
              if (x_SINGLEQUOTE_.key < k) {
                var G__26538 = x_SINGLEQUOTE_;
                x__$1 = G__26538;
                continue;
              } else {
                return x__$1;
              }
            } else {
              return x__$1;
            }
            break;
          }
        }();
        if (update == null) {
        } else {
          update[level] = x__$1;
        }
        var G__26539 = x__$1;
        var G__26540 = k;
        var G__26541 = level - 1;
        var G__26542 = update;
        x = G__26539;
        k = G__26540;
        level = G__26541;
        update = G__26542;
        continue;
      } else {
        return x;
      }
      break;
    }
  };
  least_greater_node = function(x, k, level, update) {
    switch(arguments.length) {
      case 3:
        return least_greater_node__3.call(this, x, k, level);
      case 4:
        return least_greater_node__4.call(this, x, k, level, update);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  least_greater_node.cljs$core$IFn$_invoke$arity$3 = least_greater_node__3;
  least_greater_node.cljs$core$IFn$_invoke$arity$4 = least_greater_node__4;
  return least_greater_node;
}();
cljs.core.async.impl.timers.SkipList = function(header, level) {
  this.header = header;
  this.level = level;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
};
cljs.core.async.impl.timers.SkipList.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipList";
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core.async.impl.timers/SkipList");
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  var pr_pair = function(keyval) {
    return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "", " ", "", opts, keyval);
  };
  return cljs.core.pr_sequential_writer(writer, pr_pair, "{", ", ", "}", opts, coll__$1);
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var iter = function iter(node) {
    return new cljs.core.LazySeq(null, function() {
      if (node == null) {
        return null;
      } else {
        return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [node.key, node.val], null), iter(node.forward[0]));
      }
    }, null, null);
  };
  return iter(self__.header.forward[0]);
};
cljs.core.async.impl.timers.SkipList.prototype.put = function(k, v) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.cljs$core$IFn$_invoke$arity$4(self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if (!(x__$1 == null) && x__$1.key === k) {
    return x__$1.val = v;
  } else {
    var new_level = cljs.core.async.impl.timers.random_level.cljs$core$IFn$_invoke$arity$0();
    if (new_level > self__.level) {
      var i_26543 = self__.level + 1;
      while (true) {
        if (i_26543 <= new_level + 1) {
          update[i_26543] = self__.header;
          var G__26544 = i_26543 + 1;
          i_26543 = G__26544;
          continue;
        } else {
        }
        break;
      }
      self__.level = new_level;
    } else {
    }
    var x__$2 = cljs.core.async.impl.timers.skip_list_node.cljs$core$IFn$_invoke$arity$3(k, v, new Array(new_level));
    var i = 0;
    while (true) {
      if (i <= self__.level) {
        var links = update[i].forward;
        x__$2.forward[i] = links[i];
        return links[i] = x__$2;
      } else {
        return null;
      }
      break;
    }
  }
};
cljs.core.async.impl.timers.SkipList.prototype.remove = function(k) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.cljs$core$IFn$_invoke$arity$4(self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if (!(x__$1 == null) && x__$1.key === k) {
    var i_26545 = 0;
    while (true) {
      if (i_26545 <= self__.level) {
        var links_26546 = update[i_26545].forward;
        if (links_26546[i_26545] === x__$1) {
          links_26546[i_26545] = x__$1.forward[i_26545];
          var G__26547 = i_26545 + 1;
          i_26545 = G__26547;
          continue;
        } else {
          var G__26548 = i_26545 + 1;
          i_26545 = G__26548;
          continue;
        }
      } else {
      }
      break;
    }
    while (true) {
      if (self__.level > 0 && self__.header.forward[self__.level] == null) {
        self__.level = self__.level - 1;
        continue;
      } else {
        return null;
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.ceilingEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while (true) {
    if (!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while (true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if (x_SINGLEQUOTE_ == null) {
            return null;
          } else {
            if (x_SINGLEQUOTE_.key >= k) {
              return x_SINGLEQUOTE_;
            } else {
              var G__26549 = x_SINGLEQUOTE_;
              x__$1 = G__26549;
              continue;
            }
          }
          break;
        }
      }();
      if (!(nx == null)) {
        var G__26550 = nx;
        var G__26551 = level__$1 - 1;
        x = G__26550;
        level__$1 = G__26551;
        continue;
      } else {
        var G__26552 = x;
        var G__26553 = level__$1 - 1;
        x = G__26552;
        level__$1 = G__26553;
        continue;
      }
    } else {
      if (x === self__.header) {
        return null;
      } else {
        return x;
      }
    }
    break;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.floorEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while (true) {
    if (!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while (true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if (!(x_SINGLEQUOTE_ == null)) {
            if (x_SINGLEQUOTE_.key > k) {
              return x__$1;
            } else {
              var G__26554 = x_SINGLEQUOTE_;
              x__$1 = G__26554;
              continue;
            }
          } else {
            if (level__$1 === 0) {
              return x__$1;
            } else {
              return null;
            }
          }
          break;
        }
      }();
      if (cljs.core.truth_(nx)) {
        var G__26555 = nx;
        var G__26556 = level__$1 - 1;
        x = G__26555;
        level__$1 = G__26556;
        continue;
      } else {
        var G__26557 = x;
        var G__26558 = level__$1 - 1;
        x = G__26557;
        level__$1 = G__26558;
        continue;
      }
    } else {
      if (x === self__.header) {
        return null;
      } else {
        return x;
      }
    }
    break;
  }
};
cljs.core.async.impl.timers.__GT_SkipList = function __GT_SkipList(header, level) {
  return new cljs.core.async.impl.timers.SkipList(header, level);
};
cljs.core.async.impl.timers.skip_list = function skip_list() {
  return new cljs.core.async.impl.timers.SkipList(cljs.core.async.impl.timers.skip_list_node.cljs$core$IFn$_invoke$arity$1(0), 0);
};
cljs.core.async.impl.timers.timeouts_map = cljs.core.async.impl.timers.skip_list();
cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS = 10;
cljs.core.async.impl.timers.timeout = function timeout(msecs) {
  var timeout__$1 = (new Date).valueOf() + msecs;
  var me = cljs.core.async.impl.timers.timeouts_map.ceilingEntry(timeout__$1);
  var or__3408__auto__ = cljs.core.truth_(function() {
    var and__3396__auto__ = me;
    if (cljs.core.truth_(and__3396__auto__)) {
      return me.key < timeout__$1 + cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS;
    } else {
      return and__3396__auto__;
    }
  }()) ? me.val : null;
  if (cljs.core.truth_(or__3408__auto__)) {
    return or__3408__auto__;
  } else {
    var timeout_channel = cljs.core.async.impl.channels.chan(null);
    cljs.core.async.impl.timers.timeouts_map.put(timeout__$1, timeout_channel);
    cljs.core.async.impl.dispatch.queue_delay(function() {
      cljs.core.async.impl.timers.timeouts_map.remove(timeout__$1);
      return timeout_channel.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1(null);
    }, msecs);
    return timeout_channel;
  }
};
goog.provide("cljs.core.async");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.timers");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.timers");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.ioc_helpers");
cljs.core.async.fn_handler = function fn_handler(f) {
  if (typeof cljs.core.async.t23984 !== "undefined") {
  } else {
    cljs.core.async.t23984 = function(f, fn_handler, meta23985) {
      this.f = f;
      this.fn_handler = fn_handler;
      this.meta23985 = meta23985;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t23984.cljs$lang$type = true;
    cljs.core.async.t23984.cljs$lang$ctorStr = "cljs.core.async/t23984";
    cljs.core.async.t23984.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write(writer__3971__auto__, "cljs.core.async/t23984");
    };
    cljs.core.async.t23984.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t23984.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.t23984.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f;
    };
    cljs.core.async.t23984.prototype.cljs$core$IMeta$_meta$arity$1 = function(_23986) {
      var self__ = this;
      var _23986__$1 = this;
      return self__.meta23985;
    };
    cljs.core.async.t23984.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_23986, meta23985__$1) {
      var self__ = this;
      var _23986__$1 = this;
      return new cljs.core.async.t23984(self__.f, self__.fn_handler, meta23985__$1);
    };
    cljs.core.async.__GT_t23984 = function __GT_t23984(f__$1, fn_handler__$1, meta23985) {
      return new cljs.core.async.t23984(f__$1, fn_handler__$1, meta23985);
    };
  }
  return new cljs.core.async.t23984(f, fn_handler, null);
};
cljs.core.async.buffer = function buffer(n) {
  return cljs.core.async.impl.buffers.fixed_buffer(n);
};
cljs.core.async.dropping_buffer = function dropping_buffer(n) {
  return cljs.core.async.impl.buffers.dropping_buffer(n);
};
cljs.core.async.sliding_buffer = function sliding_buffer(n) {
  return cljs.core.async.impl.buffers.sliding_buffer(n);
};
cljs.core.async.unblocking_buffer_QMARK_ = function unblocking_buffer_QMARK_(buff) {
  var G__23988 = buff;
  if (G__23988) {
    var bit__4052__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__3408__auto__ = bit__4052__auto__;
      if (cljs.core.truth_(or__3408__auto__)) {
        return or__3408__auto__;
      } else {
        return G__23988.cljs$core$async$impl$protocols$UnblockingBuffer$;
      }
    }())) {
      return true;
    } else {
      if (!G__23988.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.async.impl.protocols.UnblockingBuffer, G__23988);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.async.impl.protocols.UnblockingBuffer, G__23988);
  }
};
cljs.core.async.chan = function() {
  var chan = null;
  var chan__0 = function() {
    return chan.cljs$core$IFn$_invoke$arity$1(null);
  };
  var chan__1 = function(buf_or_n) {
    var buf_or_n__$1 = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(buf_or_n, 0) ? null : buf_or_n;
    return cljs.core.async.impl.channels.chan(typeof buf_or_n__$1 === "number" ? cljs.core.async.buffer(buf_or_n__$1) : buf_or_n__$1);
  };
  chan = function(buf_or_n) {
    switch(arguments.length) {
      case 0:
        return chan__0.call(this);
      case 1:
        return chan__1.call(this, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chan.cljs$core$IFn$_invoke$arity$0 = chan__0;
  chan.cljs$core$IFn$_invoke$arity$1 = chan__1;
  return chan;
}();
cljs.core.async.timeout = function timeout(msecs) {
  return cljs.core.async.impl.timers.timeout(msecs);
};
cljs.core.async._LT__BANG_ = function _LT__BANG_(port) {
  if (null) {
    return null;
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("\x3c! used not in (go ...) block"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([null], 0)))].join(""));
  }
};
cljs.core.async.take_BANG_ = function() {
  var take_BANG_ = null;
  var take_BANG___2 = function(port, fn1) {
    return take_BANG_.cljs$core$IFn$_invoke$arity$3(port, fn1, true);
  };
  var take_BANG___3 = function(port, fn1, on_caller_QMARK_) {
    var ret = cljs.core.async.impl.protocols.take_BANG_(port, cljs.core.async.fn_handler(fn1));
    if (cljs.core.truth_(ret)) {
      var val_23989 = cljs.core.deref(ret);
      if (cljs.core.truth_(on_caller_QMARK_)) {
        fn1.cljs$core$IFn$_invoke$arity$1 ? fn1.cljs$core$IFn$_invoke$arity$1(val_23989) : fn1.call(null, val_23989);
      } else {
        cljs.core.async.impl.dispatch.run(function() {
          return fn1.cljs$core$IFn$_invoke$arity$1 ? fn1.cljs$core$IFn$_invoke$arity$1(val_23989) : fn1.call(null, val_23989);
        });
      }
    } else {
    }
    return null;
  };
  take_BANG_ = function(port, fn1, on_caller_QMARK_) {
    switch(arguments.length) {
      case 2:
        return take_BANG___2.call(this, port, fn1);
      case 3:
        return take_BANG___3.call(this, port, fn1, on_caller_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_BANG_.cljs$core$IFn$_invoke$arity$2 = take_BANG___2;
  take_BANG_.cljs$core$IFn$_invoke$arity$3 = take_BANG___3;
  return take_BANG_;
}();
cljs.core.async.nop = function nop() {
  return null;
};
cljs.core.async._GT__BANG_ = function _GT__BANG_(port, val) {
  if (null) {
    return null;
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("\x3e! used not in (go ...) block"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([null], 0)))].join(""));
  }
};
cljs.core.async.put_BANG_ = function() {
  var put_BANG_ = null;
  var put_BANG___2 = function(port, val) {
    return put_BANG_.cljs$core$IFn$_invoke$arity$3(port, val, cljs.core.async.nop);
  };
  var put_BANG___3 = function(port, val, fn0) {
    return put_BANG_.cljs$core$IFn$_invoke$arity$4(port, val, fn0, true);
  };
  var put_BANG___4 = function(port, val, fn0, on_caller_QMARK_) {
    var ret = cljs.core.async.impl.protocols.put_BANG_(port, val, cljs.core.async.fn_handler(fn0));
    if (cljs.core.truth_(function() {
      var and__3396__auto__ = ret;
      if (cljs.core.truth_(and__3396__auto__)) {
        return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(fn0, cljs.core.async.nop);
      } else {
        return and__3396__auto__;
      }
    }())) {
      if (cljs.core.truth_(on_caller_QMARK_)) {
        fn0.cljs$core$IFn$_invoke$arity$0 ? fn0.cljs$core$IFn$_invoke$arity$0() : fn0.call(null);
      } else {
        cljs.core.async.impl.dispatch.run(fn0);
      }
    } else {
    }
    return null;
  };
  put_BANG_ = function(port, val, fn0, on_caller_QMARK_) {
    switch(arguments.length) {
      case 2:
        return put_BANG___2.call(this, port, val);
      case 3:
        return put_BANG___3.call(this, port, val, fn0);
      case 4:
        return put_BANG___4.call(this, port, val, fn0, on_caller_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  put_BANG_.cljs$core$IFn$_invoke$arity$2 = put_BANG___2;
  put_BANG_.cljs$core$IFn$_invoke$arity$3 = put_BANG___3;
  put_BANG_.cljs$core$IFn$_invoke$arity$4 = put_BANG___4;
  return put_BANG_;
}();
cljs.core.async.close_BANG_ = function close_BANG_(port) {
  return cljs.core.async.impl.protocols.close_BANG_(port);
};
cljs.core.async.random_array = function random_array(n) {
  var a = new Array(n);
  var n__4250__auto___23990 = n;
  var x_23991 = 0;
  while (true) {
    if (x_23991 < n__4250__auto___23990) {
      a[x_23991] = 0;
      var G__23992 = x_23991 + 1;
      x_23991 = G__23992;
      continue;
    } else {
    }
    break;
  }
  var i = 1;
  while (true) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(i, n)) {
      return a;
    } else {
      var j = cljs.core.rand_int(i);
      a[i] = a[j];
      a[j] = i;
      var G__23993 = i + 1;
      i = G__23993;
      continue;
    }
    break;
  }
};
cljs.core.async.alt_flag = function alt_flag() {
  var flag = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(true);
  if (typeof cljs.core.async.t23997 !== "undefined") {
  } else {
    cljs.core.async.t23997 = function(flag, alt_flag, meta23998) {
      this.flag = flag;
      this.alt_flag = alt_flag;
      this.meta23998 = meta23998;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t23997.cljs$lang$type = true;
    cljs.core.async.t23997.cljs$lang$ctorStr = "cljs.core.async/t23997";
    cljs.core.async.t23997.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write(writer__3971__auto__, "cljs.core.async/t23997");
    };
    cljs.core.async.t23997.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t23997.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.deref(self__.flag);
    };
    cljs.core.async.t23997.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      cljs.core.reset_BANG_(self__.flag, null);
      return true;
    };
    cljs.core.async.t23997.prototype.cljs$core$IMeta$_meta$arity$1 = function(_23999) {
      var self__ = this;
      var _23999__$1 = this;
      return self__.meta23998;
    };
    cljs.core.async.t23997.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_23999, meta23998__$1) {
      var self__ = this;
      var _23999__$1 = this;
      return new cljs.core.async.t23997(self__.flag, self__.alt_flag, meta23998__$1);
    };
    cljs.core.async.__GT_t23997 = function __GT_t23997(flag__$1, alt_flag__$1, meta23998) {
      return new cljs.core.async.t23997(flag__$1, alt_flag__$1, meta23998);
    };
  }
  return new cljs.core.async.t23997(flag, alt_flag, null);
};
cljs.core.async.alt_handler = function alt_handler(flag, cb) {
  if (typeof cljs.core.async.t24003 !== "undefined") {
  } else {
    cljs.core.async.t24003 = function(cb, flag, alt_handler, meta24004) {
      this.cb = cb;
      this.flag = flag;
      this.alt_handler = alt_handler;
      this.meta24004 = meta24004;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t24003.cljs$lang$type = true;
    cljs.core.async.t24003.cljs$lang$ctorStr = "cljs.core.async/t24003";
    cljs.core.async.t24003.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write(writer__3971__auto__, "cljs.core.async/t24003");
    };
    cljs.core.async.t24003.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t24003.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.active_QMARK_(self__.flag);
    };
    cljs.core.async.t24003.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      cljs.core.async.impl.protocols.commit(self__.flag);
      return self__.cb;
    };
    cljs.core.async.t24003.prototype.cljs$core$IMeta$_meta$arity$1 = function(_24005) {
      var self__ = this;
      var _24005__$1 = this;
      return self__.meta24004;
    };
    cljs.core.async.t24003.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_24005, meta24004__$1) {
      var self__ = this;
      var _24005__$1 = this;
      return new cljs.core.async.t24003(self__.cb, self__.flag, self__.alt_handler, meta24004__$1);
    };
    cljs.core.async.__GT_t24003 = function __GT_t24003(cb__$1, flag__$1, alt_handler__$1, meta24004) {
      return new cljs.core.async.t24003(cb__$1, flag__$1, alt_handler__$1, meta24004);
    };
  }
  return new cljs.core.async.t24003(cb, flag, alt_handler, null);
};
cljs.core.async.do_alts = function do_alts(fret, ports, opts) {
  var flag = cljs.core.async.alt_flag();
  var n = cljs.core.count(ports);
  var idxs = cljs.core.async.random_array(n);
  var priority = (new cljs.core.Keyword(null, "priority", "priority", 4143410454)).cljs$core$IFn$_invoke$arity$1(opts);
  var ret = function() {
    var i = 0;
    while (true) {
      if (i < n) {
        var idx = cljs.core.truth_(priority) ? i : idxs[i];
        var port = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ports, idx);
        var wport = cljs.core.vector_QMARK_(port) ? port.cljs$core$IFn$_invoke$arity$1 ? port.cljs$core$IFn$_invoke$arity$1(0) : port.call(null, 0) : null;
        var vbox = cljs.core.truth_(wport) ? function() {
          var val = port.cljs$core$IFn$_invoke$arity$1 ? port.cljs$core$IFn$_invoke$arity$1(1) : port.call(null, 1);
          return cljs.core.async.impl.protocols.put_BANG_(wport, val, cljs.core.async.alt_handler(flag, function(i, val, idx, port, wport, flag, n, idxs, priority) {
            return function() {
              return fret.cljs$core$IFn$_invoke$arity$1 ? fret.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, wport], null)) : fret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, wport], null));
            };
          }(i, val, idx, port, wport, flag, n, idxs, priority)));
        }() : cljs.core.async.impl.protocols.take_BANG_(port, cljs.core.async.alt_handler(flag, function(i, idx, port, wport, flag, n, idxs, priority) {
          return function(p1__24006_SHARP_) {
            return fret.cljs$core$IFn$_invoke$arity$1 ? fret.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__24006_SHARP_, port], null)) : fret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__24006_SHARP_, port], null));
          };
        }(i, idx, port, wport, flag, n, idxs, priority)));
        if (cljs.core.truth_(vbox)) {
          return cljs.core.async.impl.channels.box(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.deref(vbox), function() {
            var or__3408__auto__ = wport;
            if (cljs.core.truth_(or__3408__auto__)) {
              return or__3408__auto__;
            } else {
              return port;
            }
          }()], null));
        } else {
          var G__24007 = i + 1;
          i = G__24007;
          continue;
        }
      } else {
        return null;
      }
      break;
    }
  }();
  var or__3408__auto__ = ret;
  if (cljs.core.truth_(or__3408__auto__)) {
    return or__3408__auto__;
  } else {
    if (cljs.core.contains_QMARK_(opts, new cljs.core.Keyword(null, "default", "default", 2558708147))) {
      var temp__4092__auto__ = function() {
        var and__3396__auto__ = flag.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1(null);
        if (cljs.core.truth_(and__3396__auto__)) {
          return flag.cljs$core$async$impl$protocols$Handler$commit$arity$1(null);
        } else {
          return and__3396__auto__;
        }
      }();
      if (cljs.core.truth_(temp__4092__auto__)) {
        var got = temp__4092__auto__;
        return cljs.core.async.impl.channels.box(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "default", "default", 2558708147)).cljs$core$IFn$_invoke$arity$1(opts), new cljs.core.Keyword(null, "default", "default", 2558708147)], null));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }
};
cljs.core.async.alts_BANG_ = function() {
  var alts_BANG___delegate = function(ports, p__24008) {
    var map__24010 = p__24008;
    var map__24010__$1 = cljs.core.seq_QMARK_(map__24010) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__24010) : map__24010;
    var opts = map__24010__$1;
    if (null) {
      return null;
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("alts! used not in (go ...) block"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([null], 0)))].join(""));
    }
  };
  var alts_BANG_ = function(ports, var_args) {
    var p__24008 = null;
    if (arguments.length > 1) {
      p__24008 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return alts_BANG___delegate.call(this, ports, p__24008);
  };
  alts_BANG_.cljs$lang$maxFixedArity = 1;
  alts_BANG_.cljs$lang$applyTo = function(arglist__24011) {
    var ports = cljs.core.first(arglist__24011);
    var p__24008 = cljs.core.rest(arglist__24011);
    return alts_BANG___delegate(ports, p__24008);
  };
  alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = alts_BANG___delegate;
  return alts_BANG_;
}();
cljs.core.async.map_LT_ = function map_LT_(f, ch) {
  if (typeof cljs.core.async.t24019 !== "undefined") {
  } else {
    cljs.core.async.t24019 = function(ch, f, map_LT_, meta24020) {
      this.ch = ch;
      this.f = f;
      this.map_LT_ = map_LT_;
      this.meta24020 = meta24020;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t24019.cljs$lang$type = true;
    cljs.core.async.t24019.cljs$lang$ctorStr = "cljs.core.async/t24019";
    cljs.core.async.t24019.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write(writer__3971__auto__, "cljs.core.async/t24019");
    };
    cljs.core.async.t24019.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t24019.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn0) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_(self__.ch, val, fn0);
    };
    cljs.core.async.t24019.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t24019.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      var ret = cljs.core.async.impl.protocols.take_BANG_(self__.ch, function() {
        if (typeof cljs.core.async.t24022 !== "undefined") {
        } else {
          cljs.core.async.t24022 = function(fn1, _, meta24020, ch, f, map_LT_, meta24023) {
            this.fn1 = fn1;
            this._ = _;
            this.meta24020 = meta24020;
            this.ch = ch;
            this.f = f;
            this.map_LT_ = map_LT_;
            this.meta24023 = meta24023;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          cljs.core.async.t24022.cljs$lang$type = true;
          cljs.core.async.t24022.cljs$lang$ctorStr = "cljs.core.async/t24022";
          cljs.core.async.t24022.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
            return cljs.core._write(writer__3971__auto__, "cljs.core.async/t24022");
          };
          cljs.core.async.t24022.prototype.cljs$core$async$impl$protocols$Handler$ = true;
          cljs.core.async.t24022.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(___$3) {
            var self__ = this;
            var ___$4 = this;
            return cljs.core.async.impl.protocols.active_QMARK_(self__.fn1);
          };
          cljs.core.async.t24022.prototype.cljs$core$async$impl$protocols$Handler$lock_id$arity$1 = function(___$3) {
            var self__ = this;
            var ___$4 = this;
            return cljs.core.async.impl.protocols.lock_id.cljs$core$IFn$_invoke$arity$1 ? cljs.core.async.impl.protocols.lock_id.cljs$core$IFn$_invoke$arity$1(self__.fn1) : cljs.core.async.impl.protocols.lock_id.call(null, self__.fn1);
          };
          cljs.core.async.t24022.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(___$3) {
            var self__ = this;
            var ___$4 = this;
            var f1 = cljs.core.async.impl.protocols.commit(self__.fn1);
            return function(f1, ___$4) {
              return function(p1__24012_SHARP_) {
                return f1.cljs$core$IFn$_invoke$arity$1 ? f1.cljs$core$IFn$_invoke$arity$1(p1__24012_SHARP_ == null ? null : self__.f.cljs$core$IFn$_invoke$arity$1 ? self__.f.cljs$core$IFn$_invoke$arity$1(p1__24012_SHARP_) : self__.f.call(null, p1__24012_SHARP_)) : f1.call(null, p1__24012_SHARP_ == null ? null : self__.f.cljs$core$IFn$_invoke$arity$1 ? self__.f.cljs$core$IFn$_invoke$arity$1(p1__24012_SHARP_) : self__.f.call(null, p1__24012_SHARP_));
              };
            }(f1, ___$4);
          };
          cljs.core.async.t24022.prototype.cljs$core$IMeta$_meta$arity$1 = function(_24024) {
            var self__ = this;
            var _24024__$1 = this;
            return self__.meta24023;
          };
          cljs.core.async.t24022.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_24024, meta24023__$1) {
            var self__ = this;
            var _24024__$1 = this;
            return new cljs.core.async.t24022(self__.fn1, self__._, self__.meta24020, self__.ch, self__.f, self__.map_LT_, meta24023__$1);
          };
          cljs.core.async.__GT_t24022 = function __GT_t24022(fn1__$1, ___$2, meta24020__$1, ch__$2, f__$2, map_LT___$2, meta24023) {
            return new cljs.core.async.t24022(fn1__$1, ___$2, meta24020__$1, ch__$2, f__$2, map_LT___$2, meta24023);
          };
        }
        return new cljs.core.async.t24022(fn1, ___$1, self__.meta24020, self__.ch, self__.f, self__.map_LT_, null);
      }());
      if (cljs.core.truth_(function() {
        var and__3396__auto__ = ret;
        if (cljs.core.truth_(and__3396__auto__)) {
          return!(cljs.core.deref(ret) == null);
        } else {
          return and__3396__auto__;
        }
      }())) {
        return cljs.core.async.impl.channels.box(self__.f.cljs$core$IFn$_invoke$arity$1 ? self__.f.cljs$core$IFn$_invoke$arity$1(cljs.core.deref(ret)) : self__.f.call(null, cljs.core.deref(ret)));
      } else {
        return ret;
      }
    };
    cljs.core.async.t24019.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t24019.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_(self__.ch);
    };
    cljs.core.async.t24019.prototype.cljs$core$IMeta$_meta$arity$1 = function(_24021) {
      var self__ = this;
      var _24021__$1 = this;
      return self__.meta24020;
    };
    cljs.core.async.t24019.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_24021, meta24020__$1) {
      var self__ = this;
      var _24021__$1 = this;
      return new cljs.core.async.t24019(self__.ch, self__.f, self__.map_LT_, meta24020__$1);
    };
    cljs.core.async.__GT_t24019 = function __GT_t24019(ch__$1, f__$1, map_LT___$1, meta24020) {
      return new cljs.core.async.t24019(ch__$1, f__$1, map_LT___$1, meta24020);
    };
  }
  return new cljs.core.async.t24019(ch, f, map_LT_, null);
};
cljs.core.async.map_GT_ = function map_GT_(f, ch) {
  if (typeof cljs.core.async.t24028 !== "undefined") {
  } else {
    cljs.core.async.t24028 = function(ch, f, map_GT_, meta24029) {
      this.ch = ch;
      this.f = f;
      this.map_GT_ = map_GT_;
      this.meta24029 = meta24029;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t24028.cljs$lang$type = true;
    cljs.core.async.t24028.cljs$lang$ctorStr = "cljs.core.async/t24028";
    cljs.core.async.t24028.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write(writer__3971__auto__, "cljs.core.async/t24028");
    };
    cljs.core.async.t24028.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t24028.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn0) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_(self__.ch, self__.f.cljs$core$IFn$_invoke$arity$1 ? self__.f.cljs$core$IFn$_invoke$arity$1(val) : self__.f.call(null, val), fn0);
    };
    cljs.core.async.t24028.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t24028.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_(self__.ch, fn1);
    };
    cljs.core.async.t24028.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t24028.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_(self__.ch);
    };
    cljs.core.async.t24028.prototype.cljs$core$IMeta$_meta$arity$1 = function(_24030) {
      var self__ = this;
      var _24030__$1 = this;
      return self__.meta24029;
    };
    cljs.core.async.t24028.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_24030, meta24029__$1) {
      var self__ = this;
      var _24030__$1 = this;
      return new cljs.core.async.t24028(self__.ch, self__.f, self__.map_GT_, meta24029__$1);
    };
    cljs.core.async.__GT_t24028 = function __GT_t24028(ch__$1, f__$1, map_GT___$1, meta24029) {
      return new cljs.core.async.t24028(ch__$1, f__$1, map_GT___$1, meta24029);
    };
  }
  return new cljs.core.async.t24028(ch, f, map_GT_, null);
};
cljs.core.async.filter_GT_ = function filter_GT_(p, ch) {
  if (typeof cljs.core.async.t24034 !== "undefined") {
  } else {
    cljs.core.async.t24034 = function(ch, p, filter_GT_, meta24035) {
      this.ch = ch;
      this.p = p;
      this.filter_GT_ = filter_GT_;
      this.meta24035 = meta24035;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t24034.cljs$lang$type = true;
    cljs.core.async.t24034.cljs$lang$ctorStr = "cljs.core.async/t24034";
    cljs.core.async.t24034.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write(writer__3971__auto__, "cljs.core.async/t24034");
    };
    cljs.core.async.t24034.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t24034.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn0) {
      var self__ = this;
      var ___$1 = this;
      if (cljs.core.truth_(self__.p.cljs$core$IFn$_invoke$arity$1 ? self__.p.cljs$core$IFn$_invoke$arity$1(val) : self__.p.call(null, val))) {
        return cljs.core.async.impl.protocols.put_BANG_(self__.ch, val, fn0);
      } else {
        return cljs.core.async.impl.channels.box(null);
      }
    };
    cljs.core.async.t24034.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t24034.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_(self__.ch, fn1);
    };
    cljs.core.async.t24034.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t24034.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_(self__.ch);
    };
    cljs.core.async.t24034.prototype.cljs$core$IMeta$_meta$arity$1 = function(_24036) {
      var self__ = this;
      var _24036__$1 = this;
      return self__.meta24035;
    };
    cljs.core.async.t24034.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_24036, meta24035__$1) {
      var self__ = this;
      var _24036__$1 = this;
      return new cljs.core.async.t24034(self__.ch, self__.p, self__.filter_GT_, meta24035__$1);
    };
    cljs.core.async.__GT_t24034 = function __GT_t24034(ch__$1, p__$1, filter_GT___$1, meta24035) {
      return new cljs.core.async.t24034(ch__$1, p__$1, filter_GT___$1, meta24035);
    };
  }
  return new cljs.core.async.t24034(ch, p, filter_GT_, null);
};
cljs.core.async.remove_GT_ = function remove_GT_(p, ch) {
  return cljs.core.async.filter_GT_(cljs.core.complement(p), ch);
};
cljs.core.async.filter_LT_ = function() {
  var filter_LT_ = null;
  var filter_LT___2 = function(p, ch) {
    return filter_LT_.cljs$core$IFn$_invoke$arity$3(p, ch, null);
  };
  var filter_LT___3 = function(p, ch, buf_or_n) {
    var out = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(buf_or_n);
    var c__5952__auto___24119 = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(1);
    cljs.core.async.impl.dispatch.run(function() {
      var f__5953__auto__ = function() {
        var switch__5937__auto__ = function(state_24098) {
          var state_val_24099 = state_24098[1];
          if (state_val_24099 === 1) {
            var state_24098__$1 = state_24098;
            var statearr_24100_24120 = state_24098__$1;
            statearr_24100_24120[2] = null;
            statearr_24100_24120[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_24099 === 2) {
              var state_24098__$1 = state_24098;
              return cljs.core.async.impl.ioc_helpers.take_BANG_(state_24098__$1, 4, ch);
            } else {
              if (state_val_24099 === 3) {
                var inst_24096 = state_24098[2];
                var state_24098__$1 = state_24098;
                return cljs.core.async.impl.ioc_helpers.return_chan(state_24098__$1, inst_24096);
              } else {
                if (state_val_24099 === 4) {
                  var inst_24080 = state_24098[7];
                  var inst_24080__$1 = state_24098[2];
                  var inst_24081 = inst_24080__$1 == null;
                  var state_24098__$1 = function() {
                    var statearr_24101 = state_24098;
                    statearr_24101[7] = inst_24080__$1;
                    return statearr_24101;
                  }();
                  if (cljs.core.truth_(inst_24081)) {
                    var statearr_24102_24121 = state_24098__$1;
                    statearr_24102_24121[1] = 5;
                  } else {
                    var statearr_24103_24122 = state_24098__$1;
                    statearr_24103_24122[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_24099 === 5) {
                    var inst_24083 = cljs.core.async.close_BANG_(out);
                    var state_24098__$1 = state_24098;
                    var statearr_24104_24123 = state_24098__$1;
                    statearr_24104_24123[2] = inst_24083;
                    statearr_24104_24123[1] = 7;
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_24099 === 6) {
                      var inst_24080 = state_24098[7];
                      var inst_24085 = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(inst_24080) : p.call(null, inst_24080);
                      var state_24098__$1 = state_24098;
                      if (cljs.core.truth_(inst_24085)) {
                        var statearr_24105_24124 = state_24098__$1;
                        statearr_24105_24124[1] = 8;
                      } else {
                        var statearr_24106_24125 = state_24098__$1;
                        statearr_24106_24125[1] = 9;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_24099 === 7) {
                        var inst_24094 = state_24098[2];
                        var state_24098__$1 = state_24098;
                        var statearr_24107_24126 = state_24098__$1;
                        statearr_24107_24126[2] = inst_24094;
                        statearr_24107_24126[1] = 3;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_24099 === 8) {
                          var inst_24080 = state_24098[7];
                          var state_24098__$1 = state_24098;
                          return cljs.core.async.impl.ioc_helpers.put_BANG_(state_24098__$1, 11, out, inst_24080);
                        } else {
                          if (state_val_24099 === 9) {
                            var state_24098__$1 = state_24098;
                            var statearr_24108_24127 = state_24098__$1;
                            statearr_24108_24127[2] = null;
                            statearr_24108_24127[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_24099 === 10) {
                              var inst_24091 = state_24098[2];
                              var state_24098__$1 = function() {
                                var statearr_24109 = state_24098;
                                statearr_24109[8] = inst_24091;
                                return statearr_24109;
                              }();
                              var statearr_24110_24128 = state_24098__$1;
                              statearr_24110_24128[2] = null;
                              statearr_24110_24128[1] = 2;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_24099 === 11) {
                                var inst_24088 = state_24098[2];
                                var state_24098__$1 = state_24098;
                                var statearr_24111_24129 = state_24098__$1;
                                statearr_24111_24129[2] = inst_24088;
                                statearr_24111_24129[1] = 10;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                return null;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__5937__auto__) {
          return function() {
            var state_machine__5938__auto__ = null;
            var state_machine__5938__auto____0 = function() {
              var statearr_24115 = [null, null, null, null, null, null, null, null, null];
              statearr_24115[0] = state_machine__5938__auto__;
              statearr_24115[1] = 1;
              return statearr_24115;
            };
            var state_machine__5938__auto____1 = function(state_24098) {
              while (true) {
                var ret_value__5939__auto__ = function() {
                  try {
                    while (true) {
                      var result__5940__auto__ = switch__5937__auto__(state_24098);
                      if (cljs.core.keyword_identical_QMARK_(result__5940__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__5940__auto__;
                      }
                      break;
                    }
                  } catch (e24116) {
                    if (e24116 instanceof Object) {
                      var ex__5941__auto__ = e24116;
                      var statearr_24117_24130 = state_24098;
                      statearr_24117_24130[5] = ex__5941__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception(state_24098);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e24116;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_(ret_value__5939__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__24131 = state_24098;
                  state_24098 = G__24131;
                  continue;
                } else {
                  return ret_value__5939__auto__;
                }
                break;
              }
            };
            state_machine__5938__auto__ = function(state_24098) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5938__auto____0.call(this);
                case 1:
                  return state_machine__5938__auto____1.call(this, state_24098);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5938__auto____0;
            state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5938__auto____1;
            return state_machine__5938__auto__;
          }();
        }(switch__5937__auto__);
      }();
      var state__5954__auto__ = function() {
        var statearr_24118 = f__5953__auto__.cljs$core$IFn$_invoke$arity$0 ? f__5953__auto__.cljs$core$IFn$_invoke$arity$0() : f__5953__auto__.call(null);
        statearr_24118[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5952__auto___24119;
        return statearr_24118;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__5954__auto__);
    });
    return out;
  };
  filter_LT_ = function(p, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return filter_LT___2.call(this, p, ch);
      case 3:
        return filter_LT___3.call(this, p, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  filter_LT_.cljs$core$IFn$_invoke$arity$2 = filter_LT___2;
  filter_LT_.cljs$core$IFn$_invoke$arity$3 = filter_LT___3;
  return filter_LT_;
}();
cljs.core.async.remove_LT_ = function() {
  var remove_LT_ = null;
  var remove_LT___2 = function(p, ch) {
    return remove_LT_.cljs$core$IFn$_invoke$arity$3(p, ch, null);
  };
  var remove_LT___3 = function(p, ch, buf_or_n) {
    return cljs.core.async.filter_LT_.cljs$core$IFn$_invoke$arity$3(cljs.core.complement(p), ch, buf_or_n);
  };
  remove_LT_ = function(p, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return remove_LT___2.call(this, p, ch);
      case 3:
        return remove_LT___3.call(this, p, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  remove_LT_.cljs$core$IFn$_invoke$arity$2 = remove_LT___2;
  remove_LT_.cljs$core$IFn$_invoke$arity$3 = remove_LT___3;
  return remove_LT_;
}();
cljs.core.async.mapcat_STAR_ = function mapcat_STAR_(f, in$, out) {
  var c__5952__auto__ = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(1);
  cljs.core.async.impl.dispatch.run(function() {
    var f__5953__auto__ = function() {
      var switch__5937__auto__ = function(state_24283) {
        var state_val_24284 = state_24283[1];
        if (state_val_24284 === 1) {
          var state_24283__$1 = state_24283;
          var statearr_24285_24322 = state_24283__$1;
          statearr_24285_24322[2] = null;
          statearr_24285_24322[1] = 2;
          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
        } else {
          if (state_val_24284 === 2) {
            var state_24283__$1 = state_24283;
            return cljs.core.async.impl.ioc_helpers.take_BANG_(state_24283__$1, 4, in$);
          } else {
            if (state_val_24284 === 3) {
              var inst_24281 = state_24283[2];
              var state_24283__$1 = state_24283;
              return cljs.core.async.impl.ioc_helpers.return_chan(state_24283__$1, inst_24281);
            } else {
              if (state_val_24284 === 4) {
                var inst_24229 = state_24283[7];
                var inst_24229__$1 = state_24283[2];
                var inst_24230 = inst_24229__$1 == null;
                var state_24283__$1 = function() {
                  var statearr_24286 = state_24283;
                  statearr_24286[7] = inst_24229__$1;
                  return statearr_24286;
                }();
                if (cljs.core.truth_(inst_24230)) {
                  var statearr_24287_24323 = state_24283__$1;
                  statearr_24287_24323[1] = 5;
                } else {
                  var statearr_24288_24324 = state_24283__$1;
                  statearr_24288_24324[1] = 6;
                }
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_24284 === 5) {
                  var inst_24232 = cljs.core.async.close_BANG_(out);
                  var state_24283__$1 = state_24283;
                  var statearr_24289_24325 = state_24283__$1;
                  statearr_24289_24325[2] = inst_24232;
                  statearr_24289_24325[1] = 7;
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_24284 === 6) {
                    var inst_24229 = state_24283[7];
                    var inst_24234 = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(inst_24229) : f.call(null, inst_24229);
                    var inst_24239 = cljs.core.seq(inst_24234);
                    var inst_24240 = inst_24239;
                    var inst_24241 = null;
                    var inst_24242 = 0;
                    var inst_24243 = 0;
                    var state_24283__$1 = function() {
                      var statearr_24290 = state_24283;
                      statearr_24290[8] = inst_24243;
                      statearr_24290[9] = inst_24241;
                      statearr_24290[10] = inst_24242;
                      statearr_24290[11] = inst_24240;
                      return statearr_24290;
                    }();
                    var statearr_24291_24326 = state_24283__$1;
                    statearr_24291_24326[2] = null;
                    statearr_24291_24326[1] = 8;
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_24284 === 7) {
                      var inst_24279 = state_24283[2];
                      var state_24283__$1 = state_24283;
                      var statearr_24292_24327 = state_24283__$1;
                      statearr_24292_24327[2] = inst_24279;
                      statearr_24292_24327[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_24284 === 8) {
                        var inst_24243 = state_24283[8];
                        var inst_24242 = state_24283[10];
                        var inst_24245 = inst_24243 < inst_24242;
                        var inst_24246 = inst_24245;
                        var state_24283__$1 = state_24283;
                        if (cljs.core.truth_(inst_24246)) {
                          var statearr_24293_24328 = state_24283__$1;
                          statearr_24293_24328[1] = 10;
                        } else {
                          var statearr_24294_24329 = state_24283__$1;
                          statearr_24294_24329[1] = 11;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_24284 === 9) {
                          var inst_24276 = state_24283[2];
                          var state_24283__$1 = function() {
                            var statearr_24295 = state_24283;
                            statearr_24295[12] = inst_24276;
                            return statearr_24295;
                          }();
                          var statearr_24296_24330 = state_24283__$1;
                          statearr_24296_24330[2] = null;
                          statearr_24296_24330[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_24284 === 10) {
                            var inst_24243 = state_24283[8];
                            var inst_24241 = state_24283[9];
                            var inst_24248 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(inst_24241, inst_24243);
                            var state_24283__$1 = state_24283;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_(state_24283__$1, 13, out, inst_24248);
                          } else {
                            if (state_val_24284 === 11) {
                              var inst_24240 = state_24283[11];
                              var inst_24254 = state_24283[13];
                              var inst_24254__$1 = cljs.core.seq(inst_24240);
                              var state_24283__$1 = function() {
                                var statearr_24300 = state_24283;
                                statearr_24300[13] = inst_24254__$1;
                                return statearr_24300;
                              }();
                              if (inst_24254__$1) {
                                var statearr_24301_24331 = state_24283__$1;
                                statearr_24301_24331[1] = 14;
                              } else {
                                var statearr_24302_24332 = state_24283__$1;
                                statearr_24302_24332[1] = 15;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_24284 === 12) {
                                var inst_24274 = state_24283[2];
                                var state_24283__$1 = state_24283;
                                var statearr_24303_24333 = state_24283__$1;
                                statearr_24303_24333[2] = inst_24274;
                                statearr_24303_24333[1] = 9;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_24284 === 13) {
                                  var inst_24243 = state_24283[8];
                                  var inst_24241 = state_24283[9];
                                  var inst_24242 = state_24283[10];
                                  var inst_24240 = state_24283[11];
                                  var inst_24250 = state_24283[2];
                                  var inst_24251 = inst_24243 + 1;
                                  var tmp24297 = inst_24241;
                                  var tmp24298 = inst_24242;
                                  var tmp24299 = inst_24240;
                                  var inst_24240__$1 = tmp24299;
                                  var inst_24241__$1 = tmp24297;
                                  var inst_24242__$1 = tmp24298;
                                  var inst_24243__$1 = inst_24251;
                                  var state_24283__$1 = function() {
                                    var statearr_24304 = state_24283;
                                    statearr_24304[8] = inst_24243__$1;
                                    statearr_24304[9] = inst_24241__$1;
                                    statearr_24304[10] = inst_24242__$1;
                                    statearr_24304[11] = inst_24240__$1;
                                    statearr_24304[14] = inst_24250;
                                    return statearr_24304;
                                  }();
                                  var statearr_24305_24334 = state_24283__$1;
                                  statearr_24305_24334[2] = null;
                                  statearr_24305_24334[1] = 8;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_24284 === 14) {
                                    var inst_24254 = state_24283[13];
                                    var inst_24256 = cljs.core.chunked_seq_QMARK_(inst_24254);
                                    var state_24283__$1 = state_24283;
                                    if (inst_24256) {
                                      var statearr_24306_24335 = state_24283__$1;
                                      statearr_24306_24335[1] = 17;
                                    } else {
                                      var statearr_24307_24336 = state_24283__$1;
                                      statearr_24307_24336[1] = 18;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    if (state_val_24284 === 15) {
                                      var state_24283__$1 = state_24283;
                                      var statearr_24308_24337 = state_24283__$1;
                                      statearr_24308_24337[2] = null;
                                      statearr_24308_24337[1] = 16;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                    } else {
                                      if (state_val_24284 === 16) {
                                        var inst_24272 = state_24283[2];
                                        var state_24283__$1 = state_24283;
                                        var statearr_24309_24338 = state_24283__$1;
                                        statearr_24309_24338[2] = inst_24272;
                                        statearr_24309_24338[1] = 12;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                      } else {
                                        if (state_val_24284 === 17) {
                                          var inst_24254 = state_24283[13];
                                          var inst_24258 = cljs.core.chunk_first(inst_24254);
                                          var inst_24259 = cljs.core.chunk_rest(inst_24254);
                                          var inst_24260 = cljs.core.count(inst_24258);
                                          var inst_24240 = inst_24259;
                                          var inst_24241 = inst_24258;
                                          var inst_24242 = inst_24260;
                                          var inst_24243 = 0;
                                          var state_24283__$1 = function() {
                                            var statearr_24310 = state_24283;
                                            statearr_24310[8] = inst_24243;
                                            statearr_24310[9] = inst_24241;
                                            statearr_24310[10] = inst_24242;
                                            statearr_24310[11] = inst_24240;
                                            return statearr_24310;
                                          }();
                                          var statearr_24311_24339 = state_24283__$1;
                                          statearr_24311_24339[2] = null;
                                          statearr_24311_24339[1] = 8;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                        } else {
                                          if (state_val_24284 === 18) {
                                            var inst_24254 = state_24283[13];
                                            var inst_24263 = cljs.core.first(inst_24254);
                                            var state_24283__$1 = state_24283;
                                            return cljs.core.async.impl.ioc_helpers.put_BANG_(state_24283__$1, 20, out, inst_24263);
                                          } else {
                                            if (state_val_24284 === 19) {
                                              var inst_24269 = state_24283[2];
                                              var state_24283__$1 = state_24283;
                                              var statearr_24312_24340 = state_24283__$1;
                                              statearr_24312_24340[2] = inst_24269;
                                              statearr_24312_24340[1] = 16;
                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                            } else {
                                              if (state_val_24284 === 20) {
                                                var inst_24254 = state_24283[13];
                                                var inst_24265 = state_24283[2];
                                                var inst_24266 = cljs.core.next(inst_24254);
                                                var inst_24240 = inst_24266;
                                                var inst_24241 = null;
                                                var inst_24242 = 0;
                                                var inst_24243 = 0;
                                                var state_24283__$1 = function() {
                                                  var statearr_24313 = state_24283;
                                                  statearr_24313[8] = inst_24243;
                                                  statearr_24313[9] = inst_24241;
                                                  statearr_24313[10] = inst_24242;
                                                  statearr_24313[11] = inst_24240;
                                                  statearr_24313[15] = inst_24265;
                                                  return statearr_24313;
                                                }();
                                                var statearr_24314_24341 = state_24283__$1;
                                                statearr_24314_24341[2] = null;
                                                statearr_24314_24341[1] = 8;
                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                              } else {
                                                return null;
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__5937__auto__) {
        return function() {
          var state_machine__5938__auto__ = null;
          var state_machine__5938__auto____0 = function() {
            var statearr_24318 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
            statearr_24318[0] = state_machine__5938__auto__;
            statearr_24318[1] = 1;
            return statearr_24318;
          };
          var state_machine__5938__auto____1 = function(state_24283) {
            while (true) {
              var ret_value__5939__auto__ = function() {
                try {
                  while (true) {
                    var result__5940__auto__ = switch__5937__auto__(state_24283);
                    if (cljs.core.keyword_identical_QMARK_(result__5940__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                      continue;
                    } else {
                      return result__5940__auto__;
                    }
                    break;
                  }
                } catch (e24319) {
                  if (e24319 instanceof Object) {
                    var ex__5941__auto__ = e24319;
                    var statearr_24320_24342 = state_24283;
                    statearr_24320_24342[5] = ex__5941__auto__;
                    cljs.core.async.impl.ioc_helpers.process_exception(state_24283);
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw e24319;
                    } else {
                      return null;
                    }
                  }
                }
              }();
              if (cljs.core.keyword_identical_QMARK_(ret_value__5939__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                var G__24343 = state_24283;
                state_24283 = G__24343;
                continue;
              } else {
                return ret_value__5939__auto__;
              }
              break;
            }
          };
          state_machine__5938__auto__ = function(state_24283) {
            switch(arguments.length) {
              case 0:
                return state_machine__5938__auto____0.call(this);
              case 1:
                return state_machine__5938__auto____1.call(this, state_24283);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5938__auto____0;
          state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5938__auto____1;
          return state_machine__5938__auto__;
        }();
      }(switch__5937__auto__);
    }();
    var state__5954__auto__ = function() {
      var statearr_24321 = f__5953__auto__.cljs$core$IFn$_invoke$arity$0 ? f__5953__auto__.cljs$core$IFn$_invoke$arity$0() : f__5953__auto__.call(null);
      statearr_24321[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5952__auto__;
      return statearr_24321;
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__5954__auto__);
  });
  return c__5952__auto__;
};
cljs.core.async.mapcat_LT_ = function() {
  var mapcat_LT_ = null;
  var mapcat_LT___2 = function(f, in$) {
    return mapcat_LT_.cljs$core$IFn$_invoke$arity$3(f, in$, null);
  };
  var mapcat_LT___3 = function(f, in$, buf_or_n) {
    var out = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(buf_or_n);
    cljs.core.async.mapcat_STAR_(f, in$, out);
    return out;
  };
  mapcat_LT_ = function(f, in$, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return mapcat_LT___2.call(this, f, in$);
      case 3:
        return mapcat_LT___3.call(this, f, in$, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat_LT_.cljs$core$IFn$_invoke$arity$2 = mapcat_LT___2;
  mapcat_LT_.cljs$core$IFn$_invoke$arity$3 = mapcat_LT___3;
  return mapcat_LT_;
}();
cljs.core.async.mapcat_GT_ = function() {
  var mapcat_GT_ = null;
  var mapcat_GT___2 = function(f, out) {
    return mapcat_GT_.cljs$core$IFn$_invoke$arity$3(f, out, null);
  };
  var mapcat_GT___3 = function(f, out, buf_or_n) {
    var in$ = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(buf_or_n);
    cljs.core.async.mapcat_STAR_(f, in$, out);
    return in$;
  };
  mapcat_GT_ = function(f, out, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return mapcat_GT___2.call(this, f, out);
      case 3:
        return mapcat_GT___3.call(this, f, out, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat_GT_.cljs$core$IFn$_invoke$arity$2 = mapcat_GT___2;
  mapcat_GT_.cljs$core$IFn$_invoke$arity$3 = mapcat_GT___3;
  return mapcat_GT_;
}();
cljs.core.async.pipe = function() {
  var pipe = null;
  var pipe__2 = function(from, to) {
    return pipe.cljs$core$IFn$_invoke$arity$3(from, to, true);
  };
  var pipe__3 = function(from, to, close_QMARK_) {
    var c__5952__auto___24424 = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(1);
    cljs.core.async.impl.dispatch.run(function() {
      var f__5953__auto__ = function() {
        var switch__5937__auto__ = function(state_24403) {
          var state_val_24404 = state_24403[1];
          if (state_val_24404 === 1) {
            var state_24403__$1 = state_24403;
            var statearr_24405_24425 = state_24403__$1;
            statearr_24405_24425[2] = null;
            statearr_24405_24425[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_24404 === 2) {
              var state_24403__$1 = state_24403;
              return cljs.core.async.impl.ioc_helpers.take_BANG_(state_24403__$1, 4, from);
            } else {
              if (state_val_24404 === 3) {
                var inst_24401 = state_24403[2];
                var state_24403__$1 = state_24403;
                return cljs.core.async.impl.ioc_helpers.return_chan(state_24403__$1, inst_24401);
              } else {
                if (state_val_24404 === 4) {
                  var inst_24386 = state_24403[7];
                  var inst_24386__$1 = state_24403[2];
                  var inst_24387 = inst_24386__$1 == null;
                  var state_24403__$1 = function() {
                    var statearr_24406 = state_24403;
                    statearr_24406[7] = inst_24386__$1;
                    return statearr_24406;
                  }();
                  if (cljs.core.truth_(inst_24387)) {
                    var statearr_24407_24426 = state_24403__$1;
                    statearr_24407_24426[1] = 5;
                  } else {
                    var statearr_24408_24427 = state_24403__$1;
                    statearr_24408_24427[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_24404 === 5) {
                    var state_24403__$1 = state_24403;
                    if (cljs.core.truth_(close_QMARK_)) {
                      var statearr_24409_24428 = state_24403__$1;
                      statearr_24409_24428[1] = 8;
                    } else {
                      var statearr_24410_24429 = state_24403__$1;
                      statearr_24410_24429[1] = 9;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_24404 === 6) {
                      var inst_24386 = state_24403[7];
                      var state_24403__$1 = state_24403;
                      return cljs.core.async.impl.ioc_helpers.put_BANG_(state_24403__$1, 11, to, inst_24386);
                    } else {
                      if (state_val_24404 === 7) {
                        var inst_24399 = state_24403[2];
                        var state_24403__$1 = state_24403;
                        var statearr_24411_24430 = state_24403__$1;
                        statearr_24411_24430[2] = inst_24399;
                        statearr_24411_24430[1] = 3;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_24404 === 8) {
                          var inst_24390 = cljs.core.async.close_BANG_(to);
                          var state_24403__$1 = state_24403;
                          var statearr_24412_24431 = state_24403__$1;
                          statearr_24412_24431[2] = inst_24390;
                          statearr_24412_24431[1] = 10;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_24404 === 9) {
                            var state_24403__$1 = state_24403;
                            var statearr_24413_24432 = state_24403__$1;
                            statearr_24413_24432[2] = null;
                            statearr_24413_24432[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_24404 === 10) {
                              var inst_24393 = state_24403[2];
                              var state_24403__$1 = state_24403;
                              var statearr_24414_24433 = state_24403__$1;
                              statearr_24414_24433[2] = inst_24393;
                              statearr_24414_24433[1] = 7;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_24404 === 11) {
                                var inst_24396 = state_24403[2];
                                var state_24403__$1 = function() {
                                  var statearr_24415 = state_24403;
                                  statearr_24415[8] = inst_24396;
                                  return statearr_24415;
                                }();
                                var statearr_24416_24434 = state_24403__$1;
                                statearr_24416_24434[2] = null;
                                statearr_24416_24434[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                return null;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__5937__auto__) {
          return function() {
            var state_machine__5938__auto__ = null;
            var state_machine__5938__auto____0 = function() {
              var statearr_24420 = [null, null, null, null, null, null, null, null, null];
              statearr_24420[0] = state_machine__5938__auto__;
              statearr_24420[1] = 1;
              return statearr_24420;
            };
            var state_machine__5938__auto____1 = function(state_24403) {
              while (true) {
                var ret_value__5939__auto__ = function() {
                  try {
                    while (true) {
                      var result__5940__auto__ = switch__5937__auto__(state_24403);
                      if (cljs.core.keyword_identical_QMARK_(result__5940__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__5940__auto__;
                      }
                      break;
                    }
                  } catch (e24421) {
                    if (e24421 instanceof Object) {
                      var ex__5941__auto__ = e24421;
                      var statearr_24422_24435 = state_24403;
                      statearr_24422_24435[5] = ex__5941__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception(state_24403);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e24421;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_(ret_value__5939__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__24436 = state_24403;
                  state_24403 = G__24436;
                  continue;
                } else {
                  return ret_value__5939__auto__;
                }
                break;
              }
            };
            state_machine__5938__auto__ = function(state_24403) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5938__auto____0.call(this);
                case 1:
                  return state_machine__5938__auto____1.call(this, state_24403);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5938__auto____0;
            state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5938__auto____1;
            return state_machine__5938__auto__;
          }();
        }(switch__5937__auto__);
      }();
      var state__5954__auto__ = function() {
        var statearr_24423 = f__5953__auto__.cljs$core$IFn$_invoke$arity$0 ? f__5953__auto__.cljs$core$IFn$_invoke$arity$0() : f__5953__auto__.call(null);
        statearr_24423[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5952__auto___24424;
        return statearr_24423;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__5954__auto__);
    });
    return to;
  };
  pipe = function(from, to, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return pipe__2.call(this, from, to);
      case 3:
        return pipe__3.call(this, from, to, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pipe.cljs$core$IFn$_invoke$arity$2 = pipe__2;
  pipe.cljs$core$IFn$_invoke$arity$3 = pipe__3;
  return pipe;
}();
cljs.core.async.split = function() {
  var split = null;
  var split__2 = function(p, ch) {
    return split.cljs$core$IFn$_invoke$arity$4(p, ch, null, null);
  };
  var split__4 = function(p, ch, t_buf_or_n, f_buf_or_n) {
    var tc = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(t_buf_or_n);
    var fc = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(f_buf_or_n);
    var c__5952__auto___24523 = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(1);
    cljs.core.async.impl.dispatch.run(function() {
      var f__5953__auto__ = function() {
        var switch__5937__auto__ = function(state_24501) {
          var state_val_24502 = state_24501[1];
          if (state_val_24502 === 1) {
            var state_24501__$1 = state_24501;
            var statearr_24503_24524 = state_24501__$1;
            statearr_24503_24524[2] = null;
            statearr_24503_24524[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_24502 === 2) {
              var state_24501__$1 = state_24501;
              return cljs.core.async.impl.ioc_helpers.take_BANG_(state_24501__$1, 4, ch);
            } else {
              if (state_val_24502 === 3) {
                var inst_24499 = state_24501[2];
                var state_24501__$1 = state_24501;
                return cljs.core.async.impl.ioc_helpers.return_chan(state_24501__$1, inst_24499);
              } else {
                if (state_val_24502 === 4) {
                  var inst_24482 = state_24501[7];
                  var inst_24482__$1 = state_24501[2];
                  var inst_24483 = inst_24482__$1 == null;
                  var state_24501__$1 = function() {
                    var statearr_24504 = state_24501;
                    statearr_24504[7] = inst_24482__$1;
                    return statearr_24504;
                  }();
                  if (cljs.core.truth_(inst_24483)) {
                    var statearr_24505_24525 = state_24501__$1;
                    statearr_24505_24525[1] = 5;
                  } else {
                    var statearr_24506_24526 = state_24501__$1;
                    statearr_24506_24526[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_24502 === 5) {
                    var inst_24485 = cljs.core.async.close_BANG_(tc);
                    var inst_24486 = cljs.core.async.close_BANG_(fc);
                    var state_24501__$1 = function() {
                      var statearr_24507 = state_24501;
                      statearr_24507[8] = inst_24485;
                      return statearr_24507;
                    }();
                    var statearr_24508_24527 = state_24501__$1;
                    statearr_24508_24527[2] = inst_24486;
                    statearr_24508_24527[1] = 7;
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_24502 === 6) {
                      var inst_24482 = state_24501[7];
                      var inst_24488 = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(inst_24482) : p.call(null, inst_24482);
                      var state_24501__$1 = state_24501;
                      if (cljs.core.truth_(inst_24488)) {
                        var statearr_24509_24528 = state_24501__$1;
                        statearr_24509_24528[1] = 9;
                      } else {
                        var statearr_24510_24529 = state_24501__$1;
                        statearr_24510_24529[1] = 10;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_24502 === 7) {
                        var inst_24497 = state_24501[2];
                        var state_24501__$1 = state_24501;
                        var statearr_24511_24530 = state_24501__$1;
                        statearr_24511_24530[2] = inst_24497;
                        statearr_24511_24530[1] = 3;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_24502 === 8) {
                          var inst_24494 = state_24501[2];
                          var state_24501__$1 = function() {
                            var statearr_24512 = state_24501;
                            statearr_24512[9] = inst_24494;
                            return statearr_24512;
                          }();
                          var statearr_24513_24531 = state_24501__$1;
                          statearr_24513_24531[2] = null;
                          statearr_24513_24531[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_24502 === 9) {
                            var state_24501__$1 = state_24501;
                            var statearr_24514_24532 = state_24501__$1;
                            statearr_24514_24532[2] = tc;
                            statearr_24514_24532[1] = 11;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_24502 === 10) {
                              var state_24501__$1 = state_24501;
                              var statearr_24515_24533 = state_24501__$1;
                              statearr_24515_24533[2] = fc;
                              statearr_24515_24533[1] = 11;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_24502 === 11) {
                                var inst_24482 = state_24501[7];
                                var inst_24492 = state_24501[2];
                                var state_24501__$1 = state_24501;
                                return cljs.core.async.impl.ioc_helpers.put_BANG_(state_24501__$1, 8, inst_24492, inst_24482);
                              } else {
                                return null;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__5937__auto__) {
          return function() {
            var state_machine__5938__auto__ = null;
            var state_machine__5938__auto____0 = function() {
              var statearr_24519 = [null, null, null, null, null, null, null, null, null, null];
              statearr_24519[0] = state_machine__5938__auto__;
              statearr_24519[1] = 1;
              return statearr_24519;
            };
            var state_machine__5938__auto____1 = function(state_24501) {
              while (true) {
                var ret_value__5939__auto__ = function() {
                  try {
                    while (true) {
                      var result__5940__auto__ = switch__5937__auto__(state_24501);
                      if (cljs.core.keyword_identical_QMARK_(result__5940__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__5940__auto__;
                      }
                      break;
                    }
                  } catch (e24520) {
                    if (e24520 instanceof Object) {
                      var ex__5941__auto__ = e24520;
                      var statearr_24521_24534 = state_24501;
                      statearr_24521_24534[5] = ex__5941__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception(state_24501);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e24520;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_(ret_value__5939__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__24535 = state_24501;
                  state_24501 = G__24535;
                  continue;
                } else {
                  return ret_value__5939__auto__;
                }
                break;
              }
            };
            state_machine__5938__auto__ = function(state_24501) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5938__auto____0.call(this);
                case 1:
                  return state_machine__5938__auto____1.call(this, state_24501);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5938__auto____0;
            state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5938__auto____1;
            return state_machine__5938__auto__;
          }();
        }(switch__5937__auto__);
      }();
      var state__5954__auto__ = function() {
        var statearr_24522 = f__5953__auto__.cljs$core$IFn$_invoke$arity$0 ? f__5953__auto__.cljs$core$IFn$_invoke$arity$0() : f__5953__auto__.call(null);
        statearr_24522[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5952__auto___24523;
        return statearr_24522;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__5954__auto__);
    });
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tc, fc], null);
  };
  split = function(p, ch, t_buf_or_n, f_buf_or_n) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, p, ch);
      case 4:
        return split__4.call(this, p, ch, t_buf_or_n, f_buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  split.cljs$core$IFn$_invoke$arity$2 = split__2;
  split.cljs$core$IFn$_invoke$arity$4 = split__4;
  return split;
}();
cljs.core.async.reduce = function reduce(f, init, ch) {
  var c__5952__auto__ = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(1);
  cljs.core.async.impl.dispatch.run(function() {
    var f__5953__auto__ = function() {
      var switch__5937__auto__ = function(state_24582) {
        var state_val_24583 = state_24582[1];
        if (state_val_24583 === 7) {
          var inst_24578 = state_24582[2];
          var state_24582__$1 = state_24582;
          var statearr_24584_24600 = state_24582__$1;
          statearr_24584_24600[2] = inst_24578;
          statearr_24584_24600[1] = 3;
          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
        } else {
          if (state_val_24583 === 6) {
            var inst_24568 = state_24582[7];
            var inst_24571 = state_24582[8];
            var inst_24575 = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(inst_24568, inst_24571) : f.call(null, inst_24568, inst_24571);
            var inst_24568__$1 = inst_24575;
            var state_24582__$1 = function() {
              var statearr_24585 = state_24582;
              statearr_24585[7] = inst_24568__$1;
              return statearr_24585;
            }();
            var statearr_24586_24601 = state_24582__$1;
            statearr_24586_24601[2] = null;
            statearr_24586_24601[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_24583 === 5) {
              var inst_24568 = state_24582[7];
              var state_24582__$1 = state_24582;
              var statearr_24587_24602 = state_24582__$1;
              statearr_24587_24602[2] = inst_24568;
              statearr_24587_24602[1] = 7;
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
            } else {
              if (state_val_24583 === 4) {
                var inst_24571 = state_24582[8];
                var inst_24571__$1 = state_24582[2];
                var inst_24572 = inst_24571__$1 == null;
                var state_24582__$1 = function() {
                  var statearr_24588 = state_24582;
                  statearr_24588[8] = inst_24571__$1;
                  return statearr_24588;
                }();
                if (cljs.core.truth_(inst_24572)) {
                  var statearr_24589_24603 = state_24582__$1;
                  statearr_24589_24603[1] = 5;
                } else {
                  var statearr_24590_24604 = state_24582__$1;
                  statearr_24590_24604[1] = 6;
                }
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_24583 === 3) {
                  var inst_24580 = state_24582[2];
                  var state_24582__$1 = state_24582;
                  return cljs.core.async.impl.ioc_helpers.return_chan(state_24582__$1, inst_24580);
                } else {
                  if (state_val_24583 === 2) {
                    var state_24582__$1 = state_24582;
                    return cljs.core.async.impl.ioc_helpers.take_BANG_(state_24582__$1, 4, ch);
                  } else {
                    if (state_val_24583 === 1) {
                      var inst_24568 = init;
                      var state_24582__$1 = function() {
                        var statearr_24591 = state_24582;
                        statearr_24591[7] = inst_24568;
                        return statearr_24591;
                      }();
                      var statearr_24592_24605 = state_24582__$1;
                      statearr_24592_24605[2] = null;
                      statearr_24592_24605[1] = 2;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      return null;
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__5937__auto__) {
        return function() {
          var state_machine__5938__auto__ = null;
          var state_machine__5938__auto____0 = function() {
            var statearr_24596 = [null, null, null, null, null, null, null, null, null];
            statearr_24596[0] = state_machine__5938__auto__;
            statearr_24596[1] = 1;
            return statearr_24596;
          };
          var state_machine__5938__auto____1 = function(state_24582) {
            while (true) {
              var ret_value__5939__auto__ = function() {
                try {
                  while (true) {
                    var result__5940__auto__ = switch__5937__auto__(state_24582);
                    if (cljs.core.keyword_identical_QMARK_(result__5940__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                      continue;
                    } else {
                      return result__5940__auto__;
                    }
                    break;
                  }
                } catch (e24597) {
                  if (e24597 instanceof Object) {
                    var ex__5941__auto__ = e24597;
                    var statearr_24598_24606 = state_24582;
                    statearr_24598_24606[5] = ex__5941__auto__;
                    cljs.core.async.impl.ioc_helpers.process_exception(state_24582);
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw e24597;
                    } else {
                      return null;
                    }
                  }
                }
              }();
              if (cljs.core.keyword_identical_QMARK_(ret_value__5939__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                var G__24607 = state_24582;
                state_24582 = G__24607;
                continue;
              } else {
                return ret_value__5939__auto__;
              }
              break;
            }
          };
          state_machine__5938__auto__ = function(state_24582) {
            switch(arguments.length) {
              case 0:
                return state_machine__5938__auto____0.call(this);
              case 1:
                return state_machine__5938__auto____1.call(this, state_24582);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5938__auto____0;
          state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5938__auto____1;
          return state_machine__5938__auto__;
        }();
      }(switch__5937__auto__);
    }();
    var state__5954__auto__ = function() {
      var statearr_24599 = f__5953__auto__.cljs$core$IFn$_invoke$arity$0 ? f__5953__auto__.cljs$core$IFn$_invoke$arity$0() : f__5953__auto__.call(null);
      statearr_24599[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5952__auto__;
      return statearr_24599;
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__5954__auto__);
  });
  return c__5952__auto__;
};
cljs.core.async.onto_chan = function() {
  var onto_chan = null;
  var onto_chan__2 = function(ch, coll) {
    return onto_chan.cljs$core$IFn$_invoke$arity$3(ch, coll, true);
  };
  var onto_chan__3 = function(ch, coll, close_QMARK_) {
    var c__5952__auto__ = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(1);
    cljs.core.async.impl.dispatch.run(function() {
      var f__5953__auto__ = function() {
        var switch__5937__auto__ = function(state_24669) {
          var state_val_24670 = state_24669[1];
          if (state_val_24670 === 1) {
            var inst_24649 = cljs.core.seq(coll);
            var inst_24650 = inst_24649;
            var state_24669__$1 = function() {
              var statearr_24671 = state_24669;
              statearr_24671[7] = inst_24650;
              return statearr_24671;
            }();
            var statearr_24672_24690 = state_24669__$1;
            statearr_24672_24690[2] = null;
            statearr_24672_24690[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_24670 === 2) {
              var inst_24650 = state_24669[7];
              var state_24669__$1 = state_24669;
              if (cljs.core.truth_(inst_24650)) {
                var statearr_24673_24691 = state_24669__$1;
                statearr_24673_24691[1] = 4;
              } else {
                var statearr_24674_24692 = state_24669__$1;
                statearr_24674_24692[1] = 5;
              }
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
            } else {
              if (state_val_24670 === 3) {
                var inst_24667 = state_24669[2];
                var state_24669__$1 = state_24669;
                return cljs.core.async.impl.ioc_helpers.return_chan(state_24669__$1, inst_24667);
              } else {
                if (state_val_24670 === 4) {
                  var inst_24650 = state_24669[7];
                  var inst_24653 = cljs.core.first(inst_24650);
                  var state_24669__$1 = state_24669;
                  return cljs.core.async.impl.ioc_helpers.put_BANG_(state_24669__$1, 7, ch, inst_24653);
                } else {
                  if (state_val_24670 === 5) {
                    var state_24669__$1 = state_24669;
                    if (cljs.core.truth_(close_QMARK_)) {
                      var statearr_24675_24693 = state_24669__$1;
                      statearr_24675_24693[1] = 8;
                    } else {
                      var statearr_24676_24694 = state_24669__$1;
                      statearr_24676_24694[1] = 9;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_24670 === 6) {
                      var inst_24665 = state_24669[2];
                      var state_24669__$1 = state_24669;
                      var statearr_24677_24695 = state_24669__$1;
                      statearr_24677_24695[2] = inst_24665;
                      statearr_24677_24695[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_24670 === 7) {
                        var inst_24650 = state_24669[7];
                        var inst_24655 = state_24669[2];
                        var inst_24656 = cljs.core.next(inst_24650);
                        var inst_24650__$1 = inst_24656;
                        var state_24669__$1 = function() {
                          var statearr_24678 = state_24669;
                          statearr_24678[8] = inst_24655;
                          statearr_24678[7] = inst_24650__$1;
                          return statearr_24678;
                        }();
                        var statearr_24679_24696 = state_24669__$1;
                        statearr_24679_24696[2] = null;
                        statearr_24679_24696[1] = 2;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_24670 === 8) {
                          var inst_24660 = cljs.core.async.close_BANG_(ch);
                          var state_24669__$1 = state_24669;
                          var statearr_24680_24697 = state_24669__$1;
                          statearr_24680_24697[2] = inst_24660;
                          statearr_24680_24697[1] = 10;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_24670 === 9) {
                            var state_24669__$1 = state_24669;
                            var statearr_24681_24698 = state_24669__$1;
                            statearr_24681_24698[2] = null;
                            statearr_24681_24698[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_24670 === 10) {
                              var inst_24663 = state_24669[2];
                              var state_24669__$1 = state_24669;
                              var statearr_24682_24699 = state_24669__$1;
                              statearr_24682_24699[2] = inst_24663;
                              statearr_24682_24699[1] = 6;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              return null;
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__5937__auto__) {
          return function() {
            var state_machine__5938__auto__ = null;
            var state_machine__5938__auto____0 = function() {
              var statearr_24686 = [null, null, null, null, null, null, null, null, null];
              statearr_24686[0] = state_machine__5938__auto__;
              statearr_24686[1] = 1;
              return statearr_24686;
            };
            var state_machine__5938__auto____1 = function(state_24669) {
              while (true) {
                var ret_value__5939__auto__ = function() {
                  try {
                    while (true) {
                      var result__5940__auto__ = switch__5937__auto__(state_24669);
                      if (cljs.core.keyword_identical_QMARK_(result__5940__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__5940__auto__;
                      }
                      break;
                    }
                  } catch (e24687) {
                    if (e24687 instanceof Object) {
                      var ex__5941__auto__ = e24687;
                      var statearr_24688_24700 = state_24669;
                      statearr_24688_24700[5] = ex__5941__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception(state_24669);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e24687;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_(ret_value__5939__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__24701 = state_24669;
                  state_24669 = G__24701;
                  continue;
                } else {
                  return ret_value__5939__auto__;
                }
                break;
              }
            };
            state_machine__5938__auto__ = function(state_24669) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5938__auto____0.call(this);
                case 1:
                  return state_machine__5938__auto____1.call(this, state_24669);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5938__auto____0;
            state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5938__auto____1;
            return state_machine__5938__auto__;
          }();
        }(switch__5937__auto__);
      }();
      var state__5954__auto__ = function() {
        var statearr_24689 = f__5953__auto__.cljs$core$IFn$_invoke$arity$0 ? f__5953__auto__.cljs$core$IFn$_invoke$arity$0() : f__5953__auto__.call(null);
        statearr_24689[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5952__auto__;
        return statearr_24689;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__5954__auto__);
    });
    return c__5952__auto__;
  };
  onto_chan = function(ch, coll, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return onto_chan__2.call(this, ch, coll);
      case 3:
        return onto_chan__3.call(this, ch, coll, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  onto_chan.cljs$core$IFn$_invoke$arity$2 = onto_chan__2;
  onto_chan.cljs$core$IFn$_invoke$arity$3 = onto_chan__3;
  return onto_chan;
}();
cljs.core.async.to_chan = function to_chan(coll) {
  var ch = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(cljs.core.bounded_count(100, coll));
  cljs.core.async.onto_chan.cljs$core$IFn$_invoke$arity$2(ch, coll);
  return ch;
};
cljs.core.async.Mux = function() {
  var obj24703 = {};
  return obj24703;
}();
cljs.core.async.muxch_STAR_ = function muxch_STAR_(_) {
  if (function() {
    var and__3396__auto__ = _;
    if (and__3396__auto__) {
      return _.cljs$core$async$Mux$muxch_STAR_$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return _.cljs$core$async$Mux$muxch_STAR_$arity$1(_);
  } else {
    var x__4029__auto__ = _ == null ? null : _;
    return function() {
      var or__3408__auto__ = cljs.core.async.muxch_STAR_[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core.async.muxch_STAR_["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("Mux.muxch*", _);
        }
      }
    }().call(null, _);
  }
};
cljs.core.async.Mult = function() {
  var obj24705 = {};
  return obj24705;
}();
cljs.core.async.tap_STAR_ = function tap_STAR_(m, ch, close_QMARK_) {
  if (function() {
    var and__3396__auto__ = m;
    if (and__3396__auto__) {
      return m.cljs$core$async$Mult$tap_STAR_$arity$3;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$tap_STAR_$arity$3(m, ch, close_QMARK_);
  } else {
    var x__4029__auto__ = m == null ? null : m;
    return function() {
      var or__3408__auto__ = cljs.core.async.tap_STAR_[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core.async.tap_STAR_["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("Mult.tap*", m);
        }
      }
    }().call(null, m, ch, close_QMARK_);
  }
};
cljs.core.async.untap_STAR_ = function untap_STAR_(m, ch) {
  if (function() {
    var and__3396__auto__ = m;
    if (and__3396__auto__) {
      return m.cljs$core$async$Mult$untap_STAR_$arity$2;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$untap_STAR_$arity$2(m, ch);
  } else {
    var x__4029__auto__ = m == null ? null : m;
    return function() {
      var or__3408__auto__ = cljs.core.async.untap_STAR_[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core.async.untap_STAR_["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("Mult.untap*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.untap_all_STAR_ = function untap_all_STAR_(m) {
  if (function() {
    var and__3396__auto__ = m;
    if (and__3396__auto__) {
      return m.cljs$core$async$Mult$untap_all_STAR_$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$untap_all_STAR_$arity$1(m);
  } else {
    var x__4029__auto__ = m == null ? null : m;
    return function() {
      var or__3408__auto__ = cljs.core.async.untap_all_STAR_[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core.async.untap_all_STAR_["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("Mult.untap-all*", m);
        }
      }
    }().call(null, m);
  }
};
cljs.core.async.mult = function mult(ch) {
  var cs = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);
  var m = function() {
    if (typeof cljs.core.async.t24929 !== "undefined") {
    } else {
      cljs.core.async.t24929 = function(cs, ch, mult, meta24930) {
        this.cs = cs;
        this.ch = ch;
        this.mult = mult;
        this.meta24930 = meta24930;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      cljs.core.async.t24929.cljs$lang$type = true;
      cljs.core.async.t24929.cljs$lang$ctorStr = "cljs.core.async/t24929";
      cljs.core.async.t24929.cljs$lang$ctorPrWriter = function(cs) {
        return function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
          return cljs.core._write(writer__3971__auto__, "cljs.core.async/t24929");
        };
      }(cs);
      cljs.core.async.t24929.prototype.cljs$core$async$Mult$ = true;
      cljs.core.async.t24929.prototype.cljs$core$async$Mult$tap_STAR_$arity$3 = function(cs) {
        return function(_, ch__$2, close_QMARK_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.cs, cljs.core.assoc, ch__$2, close_QMARK_);
          return null;
        };
      }(cs);
      cljs.core.async.t24929.prototype.cljs$core$async$Mult$untap_STAR_$arity$2 = function(cs) {
        return function(_, ch__$2) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.cs, cljs.core.dissoc, ch__$2);
          return null;
        };
      }(cs);
      cljs.core.async.t24929.prototype.cljs$core$async$Mult$untap_all_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_(self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return null;
        };
      }(cs);
      cljs.core.async.t24929.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t24929.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.ch;
        };
      }(cs);
      cljs.core.async.t24929.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs) {
        return function(_24931) {
          var self__ = this;
          var _24931__$1 = this;
          return self__.meta24930;
        };
      }(cs);
      cljs.core.async.t24929.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs) {
        return function(_24931, meta24930__$1) {
          var self__ = this;
          var _24931__$1 = this;
          return new cljs.core.async.t24929(self__.cs, self__.ch, self__.mult, meta24930__$1);
        };
      }(cs);
      cljs.core.async.__GT_t24929 = function(cs) {
        return function __GT_t24929(cs__$1, ch__$1, mult__$1, meta24930) {
          return new cljs.core.async.t24929(cs__$1, ch__$1, mult__$1, meta24930);
        };
      }(cs);
    }
    return new cljs.core.async.t24929(cs, ch, mult, null);
  }();
  var dchan = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(1);
  var dctr = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null);
  var done = function(cs, m, dchan, dctr) {
    return function() {
      if (cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(dctr, cljs.core.dec) === 0) {
        return cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2(dchan, true);
      } else {
        return null;
      }
    };
  }(cs, m, dchan, dctr);
  var c__5952__auto___25152 = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(1);
  cljs.core.async.impl.dispatch.run(function() {
    var f__5953__auto__ = function() {
      var switch__5937__auto__ = function(state_25066) {
        var state_val_25067 = state_25066[1];
        if (state_val_25067 === 32) {
          var inst_25010 = state_25066[7];
          var inst_24934 = state_25066[8];
          var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame(state_25066, 31, Object, null, 30);
          var inst_25017 = cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$3(inst_25010, inst_24934, done);
          var state_25066__$1 = state_25066;
          var statearr_25068_25153 = state_25066__$1;
          statearr_25068_25153[2] = inst_25017;
          cljs.core.async.impl.ioc_helpers.process_exception(state_25066__$1);
          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
        } else {
          if (state_val_25067 === 1) {
            var state_25066__$1 = state_25066;
            var statearr_25069_25154 = state_25066__$1;
            statearr_25069_25154[2] = null;
            statearr_25069_25154[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_25067 === 33) {
              var inst_25023 = state_25066[9];
              var inst_25025 = cljs.core.chunked_seq_QMARK_(inst_25023);
              var state_25066__$1 = state_25066;
              if (inst_25025) {
                var statearr_25070_25155 = state_25066__$1;
                statearr_25070_25155[1] = 36;
              } else {
                var statearr_25071_25156 = state_25066__$1;
                statearr_25071_25156[1] = 37;
              }
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
            } else {
              if (state_val_25067 === 2) {
                var state_25066__$1 = state_25066;
                return cljs.core.async.impl.ioc_helpers.take_BANG_(state_25066__$1, 4, ch);
              } else {
                if (state_val_25067 === 34) {
                  var state_25066__$1 = state_25066;
                  var statearr_25072_25157 = state_25066__$1;
                  statearr_25072_25157[2] = null;
                  statearr_25072_25157[1] = 35;
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_25067 === 3) {
                    var inst_25064 = state_25066[2];
                    var state_25066__$1 = state_25066;
                    return cljs.core.async.impl.ioc_helpers.return_chan(state_25066__$1, inst_25064);
                  } else {
                    if (state_val_25067 === 35) {
                      var inst_25048 = state_25066[2];
                      var state_25066__$1 = state_25066;
                      var statearr_25073_25158 = state_25066__$1;
                      statearr_25073_25158[2] = inst_25048;
                      statearr_25073_25158[1] = 29;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_25067 === 4) {
                        var inst_24934 = state_25066[8];
                        var inst_24934__$1 = state_25066[2];
                        var inst_24935 = inst_24934__$1 == null;
                        var state_25066__$1 = function() {
                          var statearr_25074 = state_25066;
                          statearr_25074[8] = inst_24934__$1;
                          return statearr_25074;
                        }();
                        if (cljs.core.truth_(inst_24935)) {
                          var statearr_25075_25159 = state_25066__$1;
                          statearr_25075_25159[1] = 5;
                        } else {
                          var statearr_25076_25160 = state_25066__$1;
                          statearr_25076_25160[1] = 6;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_25067 === 36) {
                          var inst_25023 = state_25066[9];
                          var inst_25027 = cljs.core.chunk_first(inst_25023);
                          var inst_25028 = cljs.core.chunk_rest(inst_25023);
                          var inst_25029 = cljs.core.count(inst_25027);
                          var inst_25002 = inst_25028;
                          var inst_25003 = inst_25027;
                          var inst_25004 = inst_25029;
                          var inst_25005 = 0;
                          var state_25066__$1 = function() {
                            var statearr_25077 = state_25066;
                            statearr_25077[10] = inst_25005;
                            statearr_25077[11] = inst_25004;
                            statearr_25077[12] = inst_25002;
                            statearr_25077[13] = inst_25003;
                            return statearr_25077;
                          }();
                          var statearr_25078_25161 = state_25066__$1;
                          statearr_25078_25161[2] = null;
                          statearr_25078_25161[1] = 25;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_25067 === 5) {
                            var inst_24941 = cljs.core.deref(cs);
                            var inst_24942 = cljs.core.seq(inst_24941);
                            var inst_24943 = inst_24942;
                            var inst_24944 = null;
                            var inst_24945 = 0;
                            var inst_24946 = 0;
                            var state_25066__$1 = function() {
                              var statearr_25079 = state_25066;
                              statearr_25079[14] = inst_24946;
                              statearr_25079[15] = inst_24943;
                              statearr_25079[16] = inst_24944;
                              statearr_25079[17] = inst_24945;
                              return statearr_25079;
                            }();
                            var statearr_25080_25162 = state_25066__$1;
                            statearr_25080_25162[2] = null;
                            statearr_25080_25162[1] = 8;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_25067 === 37) {
                              var inst_25023 = state_25066[9];
                              var inst_25032 = cljs.core.first(inst_25023);
                              var state_25066__$1 = function() {
                                var statearr_25081 = state_25066;
                                statearr_25081[18] = inst_25032;
                                return statearr_25081;
                              }();
                              var statearr_25082_25163 = state_25066__$1;
                              statearr_25082_25163[2] = null;
                              statearr_25082_25163[1] = 41;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_25067 === 6) {
                                var inst_24994 = state_25066[19];
                                var inst_24993 = cljs.core.deref(cs);
                                var inst_24994__$1 = cljs.core.keys(inst_24993);
                                var inst_24995 = cljs.core.count(inst_24994__$1);
                                var inst_24996 = cljs.core.reset_BANG_(dctr, inst_24995);
                                var inst_25001 = cljs.core.seq(inst_24994__$1);
                                var inst_25002 = inst_25001;
                                var inst_25003 = null;
                                var inst_25004 = 0;
                                var inst_25005 = 0;
                                var state_25066__$1 = function() {
                                  var statearr_25083 = state_25066;
                                  statearr_25083[20] = inst_24996;
                                  statearr_25083[10] = inst_25005;
                                  statearr_25083[19] = inst_24994__$1;
                                  statearr_25083[11] = inst_25004;
                                  statearr_25083[12] = inst_25002;
                                  statearr_25083[13] = inst_25003;
                                  return statearr_25083;
                                }();
                                var statearr_25084_25164 = state_25066__$1;
                                statearr_25084_25164[2] = null;
                                statearr_25084_25164[1] = 25;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_25067 === 38) {
                                  var inst_25045 = state_25066[2];
                                  var state_25066__$1 = state_25066;
                                  var statearr_25085_25165 = state_25066__$1;
                                  statearr_25085_25165[2] = inst_25045;
                                  statearr_25085_25165[1] = 35;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_25067 === 7) {
                                    var inst_25062 = state_25066[2];
                                    var state_25066__$1 = state_25066;
                                    var statearr_25086_25166 = state_25066__$1;
                                    statearr_25086_25166[2] = inst_25062;
                                    statearr_25086_25166[1] = 3;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    if (state_val_25067 === 39) {
                                      var inst_25023 = state_25066[9];
                                      var inst_25041 = state_25066[2];
                                      var inst_25042 = cljs.core.next(inst_25023);
                                      var inst_25002 = inst_25042;
                                      var inst_25003 = null;
                                      var inst_25004 = 0;
                                      var inst_25005 = 0;
                                      var state_25066__$1 = function() {
                                        var statearr_25087 = state_25066;
                                        statearr_25087[10] = inst_25005;
                                        statearr_25087[11] = inst_25004;
                                        statearr_25087[12] = inst_25002;
                                        statearr_25087[13] = inst_25003;
                                        statearr_25087[21] = inst_25041;
                                        return statearr_25087;
                                      }();
                                      var statearr_25088_25167 = state_25066__$1;
                                      statearr_25088_25167[2] = null;
                                      statearr_25088_25167[1] = 25;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                    } else {
                                      if (state_val_25067 === 8) {
                                        var inst_24946 = state_25066[14];
                                        var inst_24945 = state_25066[17];
                                        var inst_24948 = inst_24946 < inst_24945;
                                        var inst_24949 = inst_24948;
                                        var state_25066__$1 = state_25066;
                                        if (cljs.core.truth_(inst_24949)) {
                                          var statearr_25089_25168 = state_25066__$1;
                                          statearr_25089_25168[1] = 10;
                                        } else {
                                          var statearr_25090_25169 = state_25066__$1;
                                          statearr_25090_25169[1] = 11;
                                        }
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                      } else {
                                        if (state_val_25067 === 40) {
                                          var inst_25032 = state_25066[18];
                                          var inst_25033 = state_25066[2];
                                          var inst_25034 = cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(dctr, cljs.core.dec);
                                          var inst_25035 = m.cljs$core$async$Mult$untap_STAR_$arity$2(null, inst_25032);
                                          var state_25066__$1 = function() {
                                            var statearr_25091 = state_25066;
                                            statearr_25091[22] = inst_25033;
                                            statearr_25091[23] = inst_25034;
                                            return statearr_25091;
                                          }();
                                          var statearr_25092_25170 = state_25066__$1;
                                          statearr_25092_25170[2] = inst_25035;
                                          cljs.core.async.impl.ioc_helpers.process_exception(state_25066__$1);
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                        } else {
                                          if (state_val_25067 === 9) {
                                            var inst_24991 = state_25066[2];
                                            var state_25066__$1 = state_25066;
                                            var statearr_25093_25171 = state_25066__$1;
                                            statearr_25093_25171[2] = inst_24991;
                                            statearr_25093_25171[1] = 7;
                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                          } else {
                                            if (state_val_25067 === 41) {
                                              var inst_25032 = state_25066[18];
                                              var inst_24934 = state_25066[8];
                                              var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame(state_25066, 40, Object, null, 39);
                                              var inst_25039 = cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$3(inst_25032, inst_24934, done);
                                              var state_25066__$1 = state_25066;
                                              var statearr_25094_25172 = state_25066__$1;
                                              statearr_25094_25172[2] = inst_25039;
                                              cljs.core.async.impl.ioc_helpers.process_exception(state_25066__$1);
                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                            } else {
                                              if (state_val_25067 === 10) {
                                                var inst_24946 = state_25066[14];
                                                var inst_24944 = state_25066[16];
                                                var inst_24952 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(inst_24944, inst_24946);
                                                var inst_24953 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_24952, 0, null);
                                                var inst_24954 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_24952, 1, null);
                                                var state_25066__$1 = function() {
                                                  var statearr_25095 = state_25066;
                                                  statearr_25095[24] = inst_24953;
                                                  return statearr_25095;
                                                }();
                                                if (cljs.core.truth_(inst_24954)) {
                                                  var statearr_25096_25173 = state_25066__$1;
                                                  statearr_25096_25173[1] = 13;
                                                } else {
                                                  var statearr_25097_25174 = state_25066__$1;
                                                  statearr_25097_25174[1] = 14;
                                                }
                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                              } else {
                                                if (state_val_25067 === 42) {
                                                  var state_25066__$1 = state_25066;
                                                  return cljs.core.async.impl.ioc_helpers.take_BANG_(state_25066__$1, 45, dchan);
                                                } else {
                                                  if (state_val_25067 === 11) {
                                                    var inst_24963 = state_25066[25];
                                                    var inst_24943 = state_25066[15];
                                                    var inst_24963__$1 = cljs.core.seq(inst_24943);
                                                    var state_25066__$1 = function() {
                                                      var statearr_25098 = state_25066;
                                                      statearr_25098[25] = inst_24963__$1;
                                                      return statearr_25098;
                                                    }();
                                                    if (inst_24963__$1) {
                                                      var statearr_25099_25175 = state_25066__$1;
                                                      statearr_25099_25175[1] = 16;
                                                    } else {
                                                      var statearr_25100_25176 = state_25066__$1;
                                                      statearr_25100_25176[1] = 17;
                                                    }
                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                  } else {
                                                    if (state_val_25067 === 43) {
                                                      var state_25066__$1 = state_25066;
                                                      var statearr_25101_25177 = state_25066__$1;
                                                      statearr_25101_25177[2] = null;
                                                      statearr_25101_25177[1] = 44;
                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                    } else {
                                                      if (state_val_25067 === 12) {
                                                        var inst_24989 = state_25066[2];
                                                        var state_25066__$1 = state_25066;
                                                        var statearr_25102_25178 = state_25066__$1;
                                                        statearr_25102_25178[2] = inst_24989;
                                                        statearr_25102_25178[1] = 9;
                                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                      } else {
                                                        if (state_val_25067 === 44) {
                                                          var inst_25059 = state_25066[2];
                                                          var state_25066__$1 = function() {
                                                            var statearr_25103 = state_25066;
                                                            statearr_25103[26] = inst_25059;
                                                            return statearr_25103;
                                                          }();
                                                          var statearr_25104_25179 = state_25066__$1;
                                                          statearr_25104_25179[2] = null;
                                                          statearr_25104_25179[1] = 2;
                                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                        } else {
                                                          if (state_val_25067 === 13) {
                                                            var inst_24953 = state_25066[24];
                                                            var inst_24956 = cljs.core.async.close_BANG_(inst_24953);
                                                            var state_25066__$1 = state_25066;
                                                            var statearr_25105_25180 = state_25066__$1;
                                                            statearr_25105_25180[2] = inst_24956;
                                                            statearr_25105_25180[1] = 15;
                                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                          } else {
                                                            if (state_val_25067 === 45) {
                                                              var inst_25056 = state_25066[2];
                                                              var state_25066__$1 = state_25066;
                                                              var statearr_25109_25181 = state_25066__$1;
                                                              statearr_25109_25181[2] = inst_25056;
                                                              statearr_25109_25181[1] = 44;
                                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                            } else {
                                                              if (state_val_25067 === 14) {
                                                                var state_25066__$1 = state_25066;
                                                                var statearr_25110_25182 = state_25066__$1;
                                                                statearr_25110_25182[2] = null;
                                                                statearr_25110_25182[1] = 15;
                                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                              } else {
                                                                if (state_val_25067 === 15) {
                                                                  var inst_24946 = state_25066[14];
                                                                  var inst_24943 = state_25066[15];
                                                                  var inst_24944 = state_25066[16];
                                                                  var inst_24945 = state_25066[17];
                                                                  var inst_24959 = state_25066[2];
                                                                  var inst_24960 = inst_24946 + 1;
                                                                  var tmp25106 = inst_24943;
                                                                  var tmp25107 = inst_24944;
                                                                  var tmp25108 = inst_24945;
                                                                  var inst_24943__$1 = tmp25106;
                                                                  var inst_24944__$1 = tmp25107;
                                                                  var inst_24945__$1 = tmp25108;
                                                                  var inst_24946__$1 = inst_24960;
                                                                  var state_25066__$1 = function() {
                                                                    var statearr_25111 = state_25066;
                                                                    statearr_25111[14] = inst_24946__$1;
                                                                    statearr_25111[27] = inst_24959;
                                                                    statearr_25111[15] = inst_24943__$1;
                                                                    statearr_25111[16] = inst_24944__$1;
                                                                    statearr_25111[17] = inst_24945__$1;
                                                                    return statearr_25111;
                                                                  }();
                                                                  var statearr_25112_25183 = state_25066__$1;
                                                                  statearr_25112_25183[2] = null;
                                                                  statearr_25112_25183[1] = 8;
                                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                } else {
                                                                  if (state_val_25067 === 16) {
                                                                    var inst_24963 = state_25066[25];
                                                                    var inst_24965 = cljs.core.chunked_seq_QMARK_(inst_24963);
                                                                    var state_25066__$1 = state_25066;
                                                                    if (inst_24965) {
                                                                      var statearr_25113_25184 = state_25066__$1;
                                                                      statearr_25113_25184[1] = 19;
                                                                    } else {
                                                                      var statearr_25114_25185 = state_25066__$1;
                                                                      statearr_25114_25185[1] = 20;
                                                                    }
                                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                  } else {
                                                                    if (state_val_25067 === 17) {
                                                                      var state_25066__$1 = state_25066;
                                                                      var statearr_25115_25186 = state_25066__$1;
                                                                      statearr_25115_25186[2] = null;
                                                                      statearr_25115_25186[1] = 18;
                                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                    } else {
                                                                      if (state_val_25067 === 18) {
                                                                        var inst_24987 = state_25066[2];
                                                                        var state_25066__$1 = state_25066;
                                                                        var statearr_25116_25187 = state_25066__$1;
                                                                        statearr_25116_25187[2] = inst_24987;
                                                                        statearr_25116_25187[1] = 12;
                                                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                      } else {
                                                                        if (state_val_25067 === 19) {
                                                                          var inst_24963 = state_25066[25];
                                                                          var inst_24967 = cljs.core.chunk_first(inst_24963);
                                                                          var inst_24968 = cljs.core.chunk_rest(inst_24963);
                                                                          var inst_24969 = cljs.core.count(inst_24967);
                                                                          var inst_24943 = inst_24968;
                                                                          var inst_24944 = inst_24967;
                                                                          var inst_24945 = inst_24969;
                                                                          var inst_24946 = 0;
                                                                          var state_25066__$1 = function() {
                                                                            var statearr_25117 = state_25066;
                                                                            statearr_25117[14] = inst_24946;
                                                                            statearr_25117[15] = inst_24943;
                                                                            statearr_25117[16] = inst_24944;
                                                                            statearr_25117[17] = inst_24945;
                                                                            return statearr_25117;
                                                                          }();
                                                                          var statearr_25118_25188 = state_25066__$1;
                                                                          statearr_25118_25188[2] = null;
                                                                          statearr_25118_25188[1] = 8;
                                                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                        } else {
                                                                          if (state_val_25067 === 20) {
                                                                            var inst_24963 = state_25066[25];
                                                                            var inst_24973 = cljs.core.first(inst_24963);
                                                                            var inst_24974 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_24973, 0, null);
                                                                            var inst_24975 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_24973, 1, null);
                                                                            var state_25066__$1 = function() {
                                                                              var statearr_25119 = state_25066;
                                                                              statearr_25119[28] = inst_24974;
                                                                              return statearr_25119;
                                                                            }();
                                                                            if (cljs.core.truth_(inst_24975)) {
                                                                              var statearr_25120_25189 = state_25066__$1;
                                                                              statearr_25120_25189[1] = 22;
                                                                            } else {
                                                                              var statearr_25121_25190 = state_25066__$1;
                                                                              statearr_25121_25190[1] = 23;
                                                                            }
                                                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                          } else {
                                                                            if (state_val_25067 === 21) {
                                                                              var inst_24984 = state_25066[2];
                                                                              var state_25066__$1 = state_25066;
                                                                              var statearr_25122_25191 = state_25066__$1;
                                                                              statearr_25122_25191[2] = inst_24984;
                                                                              statearr_25122_25191[1] = 18;
                                                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                            } else {
                                                                              if (state_val_25067 === 22) {
                                                                                var inst_24974 = state_25066[28];
                                                                                var inst_24977 = cljs.core.async.close_BANG_(inst_24974);
                                                                                var state_25066__$1 = state_25066;
                                                                                var statearr_25123_25192 = state_25066__$1;
                                                                                statearr_25123_25192[2] = inst_24977;
                                                                                statearr_25123_25192[1] = 24;
                                                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                              } else {
                                                                                if (state_val_25067 === 23) {
                                                                                  var state_25066__$1 = state_25066;
                                                                                  var statearr_25124_25193 = state_25066__$1;
                                                                                  statearr_25124_25193[2] = null;
                                                                                  statearr_25124_25193[1] = 24;
                                                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                } else {
                                                                                  if (state_val_25067 === 24) {
                                                                                    var inst_24963 = state_25066[25];
                                                                                    var inst_24980 = state_25066[2];
                                                                                    var inst_24981 = cljs.core.next(inst_24963);
                                                                                    var inst_24943 = inst_24981;
                                                                                    var inst_24944 = null;
                                                                                    var inst_24945 = 0;
                                                                                    var inst_24946 = 0;
                                                                                    var state_25066__$1 = function() {
                                                                                      var statearr_25125 = state_25066;
                                                                                      statearr_25125[14] = inst_24946;
                                                                                      statearr_25125[29] = inst_24980;
                                                                                      statearr_25125[15] = inst_24943;
                                                                                      statearr_25125[16] = inst_24944;
                                                                                      statearr_25125[17] = inst_24945;
                                                                                      return statearr_25125;
                                                                                    }();
                                                                                    var statearr_25126_25194 = state_25066__$1;
                                                                                    statearr_25126_25194[2] = null;
                                                                                    statearr_25126_25194[1] = 8;
                                                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                  } else {
                                                                                    if (state_val_25067 === 25) {
                                                                                      var inst_25005 = state_25066[10];
                                                                                      var inst_25004 = state_25066[11];
                                                                                      var inst_25007 = inst_25005 < inst_25004;
                                                                                      var inst_25008 = inst_25007;
                                                                                      var state_25066__$1 = state_25066;
                                                                                      if (cljs.core.truth_(inst_25008)) {
                                                                                        var statearr_25127_25195 = state_25066__$1;
                                                                                        statearr_25127_25195[1] = 27;
                                                                                      } else {
                                                                                        var statearr_25128_25196 = state_25066__$1;
                                                                                        statearr_25128_25196[1] = 28;
                                                                                      }
                                                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                    } else {
                                                                                      if (state_val_25067 === 26) {
                                                                                        var inst_24994 = state_25066[19];
                                                                                        var inst_25052 = state_25066[2];
                                                                                        var inst_25053 = cljs.core.seq(inst_24994);
                                                                                        var state_25066__$1 = function() {
                                                                                          var statearr_25129 = state_25066;
                                                                                          statearr_25129[30] = inst_25052;
                                                                                          return statearr_25129;
                                                                                        }();
                                                                                        if (inst_25053) {
                                                                                          var statearr_25130_25197 = state_25066__$1;
                                                                                          statearr_25130_25197[1] = 42;
                                                                                        } else {
                                                                                          var statearr_25131_25198 = state_25066__$1;
                                                                                          statearr_25131_25198[1] = 43;
                                                                                        }
                                                                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                      } else {
                                                                                        if (state_val_25067 === 27) {
                                                                                          var inst_25005 = state_25066[10];
                                                                                          var inst_25003 = state_25066[13];
                                                                                          var inst_25010 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(inst_25003, inst_25005);
                                                                                          var state_25066__$1 = function() {
                                                                                            var statearr_25132 = state_25066;
                                                                                            statearr_25132[7] = inst_25010;
                                                                                            return statearr_25132;
                                                                                          }();
                                                                                          var statearr_25133_25199 = state_25066__$1;
                                                                                          statearr_25133_25199[2] = null;
                                                                                          statearr_25133_25199[1] = 32;
                                                                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                        } else {
                                                                                          if (state_val_25067 === 28) {
                                                                                            var inst_25023 = state_25066[9];
                                                                                            var inst_25002 = state_25066[12];
                                                                                            var inst_25023__$1 = cljs.core.seq(inst_25002);
                                                                                            var state_25066__$1 = function() {
                                                                                              var statearr_25137 = state_25066;
                                                                                              statearr_25137[9] = inst_25023__$1;
                                                                                              return statearr_25137;
                                                                                            }();
                                                                                            if (inst_25023__$1) {
                                                                                              var statearr_25138_25200 = state_25066__$1;
                                                                                              statearr_25138_25200[1] = 33;
                                                                                            } else {
                                                                                              var statearr_25139_25201 = state_25066__$1;
                                                                                              statearr_25139_25201[1] = 34;
                                                                                            }
                                                                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                          } else {
                                                                                            if (state_val_25067 === 29) {
                                                                                              var inst_25050 = state_25066[2];
                                                                                              var state_25066__$1 = state_25066;
                                                                                              var statearr_25140_25202 = state_25066__$1;
                                                                                              statearr_25140_25202[2] = inst_25050;
                                                                                              statearr_25140_25202[1] = 26;
                                                                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                            } else {
                                                                                              if (state_val_25067 === 30) {
                                                                                                var inst_25005 = state_25066[10];
                                                                                                var inst_25004 = state_25066[11];
                                                                                                var inst_25002 = state_25066[12];
                                                                                                var inst_25003 = state_25066[13];
                                                                                                var inst_25019 = state_25066[2];
                                                                                                var inst_25020 = inst_25005 + 1;
                                                                                                var tmp25134 = inst_25004;
                                                                                                var tmp25135 = inst_25002;
                                                                                                var tmp25136 = inst_25003;
                                                                                                var inst_25002__$1 = tmp25135;
                                                                                                var inst_25003__$1 = tmp25136;
                                                                                                var inst_25004__$1 = tmp25134;
                                                                                                var inst_25005__$1 = inst_25020;
                                                                                                var state_25066__$1 = function() {
                                                                                                  var statearr_25141 = state_25066;
                                                                                                  statearr_25141[31] = inst_25019;
                                                                                                  statearr_25141[10] = inst_25005__$1;
                                                                                                  statearr_25141[11] = inst_25004__$1;
                                                                                                  statearr_25141[12] = inst_25002__$1;
                                                                                                  statearr_25141[13] = inst_25003__$1;
                                                                                                  return statearr_25141;
                                                                                                }();
                                                                                                var statearr_25142_25203 = state_25066__$1;
                                                                                                statearr_25142_25203[2] = null;
                                                                                                statearr_25142_25203[1] = 25;
                                                                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                              } else {
                                                                                                if (state_val_25067 === 31) {
                                                                                                  var inst_25010 = state_25066[7];
                                                                                                  var inst_25011 = state_25066[2];
                                                                                                  var inst_25012 = cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(dctr, cljs.core.dec);
                                                                                                  var inst_25013 = m.cljs$core$async$Mult$untap_STAR_$arity$2(null, inst_25010);
                                                                                                  var state_25066__$1 = function() {
                                                                                                    var statearr_25143 = state_25066;
                                                                                                    statearr_25143[32] = inst_25011;
                                                                                                    statearr_25143[33] = inst_25012;
                                                                                                    return statearr_25143;
                                                                                                  }();
                                                                                                  var statearr_25144_25204 = state_25066__$1;
                                                                                                  statearr_25144_25204[2] = inst_25013;
                                                                                                  cljs.core.async.impl.ioc_helpers.process_exception(state_25066__$1);
                                                                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                                } else {
                                                                                                  return null;
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__5937__auto__) {
        return function() {
          var state_machine__5938__auto__ = null;
          var state_machine__5938__auto____0 = function() {
            var statearr_25148 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
            statearr_25148[0] = state_machine__5938__auto__;
            statearr_25148[1] = 1;
            return statearr_25148;
          };
          var state_machine__5938__auto____1 = function(state_25066) {
            while (true) {
              var ret_value__5939__auto__ = function() {
                try {
                  while (true) {
                    var result__5940__auto__ = switch__5937__auto__(state_25066);
                    if (cljs.core.keyword_identical_QMARK_(result__5940__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                      continue;
                    } else {
                      return result__5940__auto__;
                    }
                    break;
                  }
                } catch (e25149) {
                  if (e25149 instanceof Object) {
                    var ex__5941__auto__ = e25149;
                    var statearr_25150_25205 = state_25066;
                    statearr_25150_25205[5] = ex__5941__auto__;
                    cljs.core.async.impl.ioc_helpers.process_exception(state_25066);
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw e25149;
                    } else {
                      return null;
                    }
                  }
                }
              }();
              if (cljs.core.keyword_identical_QMARK_(ret_value__5939__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                var G__25206 = state_25066;
                state_25066 = G__25206;
                continue;
              } else {
                return ret_value__5939__auto__;
              }
              break;
            }
          };
          state_machine__5938__auto__ = function(state_25066) {
            switch(arguments.length) {
              case 0:
                return state_machine__5938__auto____0.call(this);
              case 1:
                return state_machine__5938__auto____1.call(this, state_25066);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5938__auto____0;
          state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5938__auto____1;
          return state_machine__5938__auto__;
        }();
      }(switch__5937__auto__);
    }();
    var state__5954__auto__ = function() {
      var statearr_25151 = f__5953__auto__.cljs$core$IFn$_invoke$arity$0 ? f__5953__auto__.cljs$core$IFn$_invoke$arity$0() : f__5953__auto__.call(null);
      statearr_25151[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5952__auto___25152;
      return statearr_25151;
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__5954__auto__);
  });
  return m;
};
cljs.core.async.tap = function() {
  var tap = null;
  var tap__2 = function(mult, ch) {
    return tap.cljs$core$IFn$_invoke$arity$3(mult, ch, true);
  };
  var tap__3 = function(mult, ch, close_QMARK_) {
    cljs.core.async.tap_STAR_(mult, ch, close_QMARK_);
    return ch;
  };
  tap = function(mult, ch, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return tap__2.call(this, mult, ch);
      case 3:
        return tap__3.call(this, mult, ch, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  tap.cljs$core$IFn$_invoke$arity$2 = tap__2;
  tap.cljs$core$IFn$_invoke$arity$3 = tap__3;
  return tap;
}();
cljs.core.async.untap = function untap(mult, ch) {
  return cljs.core.async.untap_STAR_(mult, ch);
};
cljs.core.async.untap_all = function untap_all(mult) {
  return cljs.core.async.untap_all_STAR_(mult);
};
cljs.core.async.Mix = function() {
  var obj25208 = {};
  return obj25208;
}();
cljs.core.async.admix_STAR_ = function admix_STAR_(m, ch) {
  if (function() {
    var and__3396__auto__ = m;
    if (and__3396__auto__) {
      return m.cljs$core$async$Mix$admix_STAR_$arity$2;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$admix_STAR_$arity$2(m, ch);
  } else {
    var x__4029__auto__ = m == null ? null : m;
    return function() {
      var or__3408__auto__ = cljs.core.async.admix_STAR_[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core.async.admix_STAR_["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("Mix.admix*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.unmix_STAR_ = function unmix_STAR_(m, ch) {
  if (function() {
    var and__3396__auto__ = m;
    if (and__3396__auto__) {
      return m.cljs$core$async$Mix$unmix_STAR_$arity$2;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$unmix_STAR_$arity$2(m, ch);
  } else {
    var x__4029__auto__ = m == null ? null : m;
    return function() {
      var or__3408__auto__ = cljs.core.async.unmix_STAR_[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core.async.unmix_STAR_["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("Mix.unmix*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.unmix_all_STAR_ = function unmix_all_STAR_(m) {
  if (function() {
    var and__3396__auto__ = m;
    if (and__3396__auto__) {
      return m.cljs$core$async$Mix$unmix_all_STAR_$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$unmix_all_STAR_$arity$1(m);
  } else {
    var x__4029__auto__ = m == null ? null : m;
    return function() {
      var or__3408__auto__ = cljs.core.async.unmix_all_STAR_[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core.async.unmix_all_STAR_["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("Mix.unmix-all*", m);
        }
      }
    }().call(null, m);
  }
};
cljs.core.async.toggle_STAR_ = function toggle_STAR_(m, state_map) {
  if (function() {
    var and__3396__auto__ = m;
    if (and__3396__auto__) {
      return m.cljs$core$async$Mix$toggle_STAR_$arity$2;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$toggle_STAR_$arity$2(m, state_map);
  } else {
    var x__4029__auto__ = m == null ? null : m;
    return function() {
      var or__3408__auto__ = cljs.core.async.toggle_STAR_[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core.async.toggle_STAR_["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("Mix.toggle*", m);
        }
      }
    }().call(null, m, state_map);
  }
};
cljs.core.async.solo_mode_STAR_ = function solo_mode_STAR_(m, mode) {
  if (function() {
    var and__3396__auto__ = m;
    if (and__3396__auto__) {
      return m.cljs$core$async$Mix$solo_mode_STAR_$arity$2;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$solo_mode_STAR_$arity$2(m, mode);
  } else {
    var x__4029__auto__ = m == null ? null : m;
    return function() {
      var or__3408__auto__ = cljs.core.async.solo_mode_STAR_[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core.async.solo_mode_STAR_["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("Mix.solo-mode*", m);
        }
      }
    }().call(null, m, mode);
  }
};
cljs.core.async.mix = function mix(out) {
  var cs = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);
  var solo_modes = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "pause", "pause", 1120344424), null, new cljs.core.Keyword(null, "mute", "mute", 1017267595), null], null), null);
  var attrs = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(solo_modes, new cljs.core.Keyword(null, "solo", "solo", 1017440337));
  var solo_mode = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null, "mute", "mute", 1017267595));
  var change = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0();
  var changed = function(cs, solo_modes, attrs, solo_mode, change) {
    return function() {
      return cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2(change, true);
    };
  }(cs, solo_modes, attrs, solo_mode, change);
  var pick = function(cs, solo_modes, attrs, solo_mode, change, changed) {
    return function(attr, chs) {
      return cljs.core.reduce_kv(function(cs, solo_modes, attrs, solo_mode, change, changed) {
        return function(ret, c, v) {
          if (cljs.core.truth_(attr.cljs$core$IFn$_invoke$arity$1 ? attr.cljs$core$IFn$_invoke$arity$1(v) : attr.call(null, v))) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret, c);
          } else {
            return ret;
          }
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed), cljs.core.PersistentHashSet.EMPTY, chs);
    };
  }(cs, solo_modes, attrs, solo_mode, change, changed);
  var calc_state = function(cs, solo_modes, attrs, solo_mode, change, changed, pick) {
    return function() {
      var chs = cljs.core.deref(cs);
      var mode = cljs.core.deref(solo_mode);
      var solos = pick(new cljs.core.Keyword(null, "solo", "solo", 1017440337), chs);
      var pauses = pick(new cljs.core.Keyword(null, "pause", "pause", 1120344424), chs);
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "solos", "solos", 1123523302), solos, new cljs.core.Keyword(null, "mutes", "mutes", 1118168300), pick(new cljs.core.Keyword(null, "mute", "mute", 1017267595), chs), new cljs.core.Keyword(null, "reads", "reads", 1122290959), cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(mode, new cljs.core.Keyword(null, "pause", "pause", 1120344424)) && !cljs.core.empty_QMARK_(solos) ? cljs.core.vec(solos) : 
      cljs.core.vec(cljs.core.remove(pauses, cljs.core.keys(chs))), change)], null);
    };
  }(cs, solo_modes, attrs, solo_mode, change, changed, pick);
  var m = function() {
    if (typeof cljs.core.async.t25318 !== "undefined") {
    } else {
      cljs.core.async.t25318 = function(pick, out, attrs, cs, calc_state, solo_modes, mix, changed, change, solo_mode, meta25319) {
        this.pick = pick;
        this.out = out;
        this.attrs = attrs;
        this.cs = cs;
        this.calc_state = calc_state;
        this.solo_modes = solo_modes;
        this.mix = mix;
        this.changed = changed;
        this.change = change;
        this.solo_mode = solo_mode;
        this.meta25319 = meta25319;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      cljs.core.async.t25318.cljs$lang$type = true;
      cljs.core.async.t25318.cljs$lang$ctorStr = "cljs.core.async/t25318";
      cljs.core.async.t25318.cljs$lang$ctorPrWriter = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
          return cljs.core._write(writer__3971__auto__, "cljs.core.async/t25318");
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t25318.prototype.cljs$core$async$Mix$ = true;
      cljs.core.async.t25318.prototype.cljs$core$async$Mix$admix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.cs, cljs.core.assoc, ch, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.cljs$core$IFn$_invoke$arity$0 ? self__.changed.cljs$core$IFn$_invoke$arity$0() : self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t25318.prototype.cljs$core$async$Mix$unmix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.cs, cljs.core.dissoc, ch);
          return self__.changed.cljs$core$IFn$_invoke$arity$0 ? self__.changed.cljs$core$IFn$_invoke$arity$0() : self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t25318.prototype.cljs$core$async$Mix$unmix_all_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_(self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.cljs$core$IFn$_invoke$arity$0 ? self__.changed.cljs$core$IFn$_invoke$arity$0() : self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t25318.prototype.cljs$core$async$Mix$toggle_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, state_map) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.cs, cljs.core.partial.cljs$core$IFn$_invoke$arity$2(cljs.core.merge_with, cljs.core.merge), state_map);
          return self__.changed.cljs$core$IFn$_invoke$arity$0 ? self__.changed.cljs$core$IFn$_invoke$arity$0() : self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t25318.prototype.cljs$core$async$Mix$solo_mode_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, mode) {
          var self__ = this;
          var ___$1 = this;
          if (cljs.core.truth_(self__.solo_modes.cljs$core$IFn$_invoke$arity$1 ? self__.solo_modes.cljs$core$IFn$_invoke$arity$1(mode) : self__.solo_modes.call(null, mode))) {
          } else {
            throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("mode must be one of: "), cljs.core.str(self__.solo_modes)].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "solo-modes", "solo-modes", -1162732933, null), new cljs.core.Symbol(null, "mode", "mode", -1637174436, null))], 0)))].join(""));
          }
          cljs.core.reset_BANG_(self__.solo_mode, mode);
          return self__.changed.cljs$core$IFn$_invoke$arity$0 ? self__.changed.cljs$core$IFn$_invoke$arity$0() : self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t25318.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t25318.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.out;
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t25318.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_25320) {
          var self__ = this;
          var _25320__$1 = this;
          return self__.meta25319;
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t25318.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_25320, meta25319__$1) {
          var self__ = this;
          var _25320__$1 = this;
          return new cljs.core.async.t25318(self__.pick, self__.out, self__.attrs, self__.cs, self__.calc_state, self__.solo_modes, self__.mix, self__.changed, self__.change, self__.solo_mode, meta25319__$1);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.__GT_t25318 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function __GT_t25318(pick__$1, out__$1, attrs__$1, cs__$1, calc_state__$1, solo_modes__$1, mix__$1, changed__$1, change__$1, solo_mode__$1, meta25319) {
          return new cljs.core.async.t25318(pick__$1, out__$1, attrs__$1, cs__$1, calc_state__$1, solo_modes__$1, mix__$1, changed__$1, change__$1, solo_mode__$1, meta25319);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
    }
    return new cljs.core.async.t25318(pick, out, attrs, cs, calc_state, solo_modes, mix, changed, change, solo_mode, null);
  }();
  var c__5952__auto___25427 = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(1);
  cljs.core.async.impl.dispatch.run(function() {
    var f__5953__auto__ = function() {
      var switch__5937__auto__ = function(state_25385) {
        var state_val_25386 = state_25385[1];
        if (state_val_25386 === 1) {
          var inst_25324 = state_25385[7];
          var inst_25324__$1 = calc_state();
          var inst_25325 = cljs.core.seq_QMARK_(inst_25324__$1);
          var state_25385__$1 = function() {
            var statearr_25387 = state_25385;
            statearr_25387[7] = inst_25324__$1;
            return statearr_25387;
          }();
          if (inst_25325) {
            var statearr_25388_25428 = state_25385__$1;
            statearr_25388_25428[1] = 2;
          } else {
            var statearr_25389_25429 = state_25385__$1;
            statearr_25389_25429[1] = 3;
          }
          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
        } else {
          if (state_val_25386 === 2) {
            var inst_25324 = state_25385[7];
            var inst_25327 = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, inst_25324);
            var state_25385__$1 = state_25385;
            var statearr_25390_25430 = state_25385__$1;
            statearr_25390_25430[2] = inst_25327;
            statearr_25390_25430[1] = 4;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_25386 === 3) {
              var inst_25324 = state_25385[7];
              var state_25385__$1 = state_25385;
              var statearr_25391_25431 = state_25385__$1;
              statearr_25391_25431[2] = inst_25324;
              statearr_25391_25431[1] = 4;
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
            } else {
              if (state_val_25386 === 4) {
                var inst_25324 = state_25385[7];
                var inst_25330 = state_25385[2];
                var inst_25331 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(inst_25330, new cljs.core.Keyword(null, "reads", "reads", 1122290959));
                var inst_25332 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(inst_25330, new cljs.core.Keyword(null, "mutes", "mutes", 1118168300));
                var inst_25333 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(inst_25330, new cljs.core.Keyword(null, "solos", "solos", 1123523302));
                var inst_25334 = inst_25324;
                var state_25385__$1 = function() {
                  var statearr_25392 = state_25385;
                  statearr_25392[8] = inst_25332;
                  statearr_25392[9] = inst_25333;
                  statearr_25392[10] = inst_25331;
                  statearr_25392[11] = inst_25334;
                  return statearr_25392;
                }();
                var statearr_25393_25432 = state_25385__$1;
                statearr_25393_25432[2] = null;
                statearr_25393_25432[1] = 5;
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_25386 === 5) {
                  var inst_25334 = state_25385[11];
                  var inst_25337 = cljs.core.seq_QMARK_(inst_25334);
                  var state_25385__$1 = state_25385;
                  if (inst_25337) {
                    var statearr_25394_25433 = state_25385__$1;
                    statearr_25394_25433[1] = 7;
                  } else {
                    var statearr_25395_25434 = state_25385__$1;
                    statearr_25395_25434[1] = 8;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_25386 === 6) {
                    var inst_25383 = state_25385[2];
                    var state_25385__$1 = state_25385;
                    return cljs.core.async.impl.ioc_helpers.return_chan(state_25385__$1, inst_25383);
                  } else {
                    if (state_val_25386 === 7) {
                      var inst_25334 = state_25385[11];
                      var inst_25339 = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, inst_25334);
                      var state_25385__$1 = state_25385;
                      var statearr_25396_25435 = state_25385__$1;
                      statearr_25396_25435[2] = inst_25339;
                      statearr_25396_25435[1] = 9;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_25386 === 8) {
                        var inst_25334 = state_25385[11];
                        var state_25385__$1 = state_25385;
                        var statearr_25397_25436 = state_25385__$1;
                        statearr_25397_25436[2] = inst_25334;
                        statearr_25397_25436[1] = 9;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_25386 === 9) {
                          var inst_25342 = state_25385[12];
                          var inst_25342__$1 = state_25385[2];
                          var inst_25343 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(inst_25342__$1, new cljs.core.Keyword(null, "reads", "reads", 1122290959));
                          var inst_25344 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(inst_25342__$1, new cljs.core.Keyword(null, "mutes", "mutes", 1118168300));
                          var inst_25345 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(inst_25342__$1, new cljs.core.Keyword(null, "solos", "solos", 1123523302));
                          var state_25385__$1 = function() {
                            var statearr_25398 = state_25385;
                            statearr_25398[13] = inst_25345;
                            statearr_25398[14] = inst_25344;
                            statearr_25398[12] = inst_25342__$1;
                            return statearr_25398;
                          }();
                          return cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_(state_25385__$1, 10, inst_25343);
                        } else {
                          if (state_val_25386 === 10) {
                            var inst_25350 = state_25385[15];
                            var inst_25349 = state_25385[16];
                            var inst_25348 = state_25385[2];
                            var inst_25349__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_25348, 0, null);
                            var inst_25350__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_25348, 1, null);
                            var inst_25351 = inst_25349__$1 == null;
                            var inst_25352 = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(inst_25350__$1, change);
                            var inst_25353 = inst_25351 || inst_25352;
                            var state_25385__$1 = function() {
                              var statearr_25399 = state_25385;
                              statearr_25399[15] = inst_25350__$1;
                              statearr_25399[16] = inst_25349__$1;
                              return statearr_25399;
                            }();
                            if (cljs.core.truth_(inst_25353)) {
                              var statearr_25400_25437 = state_25385__$1;
                              statearr_25400_25437[1] = 11;
                            } else {
                              var statearr_25401_25438 = state_25385__$1;
                              statearr_25401_25438[1] = 12;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_25386 === 11) {
                              var inst_25349 = state_25385[16];
                              var inst_25355 = inst_25349 == null;
                              var state_25385__$1 = state_25385;
                              if (cljs.core.truth_(inst_25355)) {
                                var statearr_25402_25439 = state_25385__$1;
                                statearr_25402_25439[1] = 14;
                              } else {
                                var statearr_25403_25440 = state_25385__$1;
                                statearr_25403_25440[1] = 15;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_25386 === 12) {
                                var inst_25345 = state_25385[13];
                                var inst_25350 = state_25385[15];
                                var inst_25364 = state_25385[17];
                                var inst_25364__$1 = inst_25345.cljs$core$IFn$_invoke$arity$1 ? inst_25345.cljs$core$IFn$_invoke$arity$1(inst_25350) : inst_25345.call(null, inst_25350);
                                var state_25385__$1 = function() {
                                  var statearr_25404 = state_25385;
                                  statearr_25404[17] = inst_25364__$1;
                                  return statearr_25404;
                                }();
                                if (cljs.core.truth_(inst_25364__$1)) {
                                  var statearr_25405_25441 = state_25385__$1;
                                  statearr_25405_25441[1] = 17;
                                } else {
                                  var statearr_25406_25442 = state_25385__$1;
                                  statearr_25406_25442[1] = 18;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_25386 === 13) {
                                  var inst_25381 = state_25385[2];
                                  var state_25385__$1 = state_25385;
                                  var statearr_25407_25443 = state_25385__$1;
                                  statearr_25407_25443[2] = inst_25381;
                                  statearr_25407_25443[1] = 6;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_25386 === 14) {
                                    var inst_25350 = state_25385[15];
                                    var inst_25357 = cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(cs, cljs.core.dissoc, inst_25350);
                                    var state_25385__$1 = state_25385;
                                    var statearr_25408_25444 = state_25385__$1;
                                    statearr_25408_25444[2] = inst_25357;
                                    statearr_25408_25444[1] = 16;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    if (state_val_25386 === 15) {
                                      var state_25385__$1 = state_25385;
                                      var statearr_25409_25445 = state_25385__$1;
                                      statearr_25409_25445[2] = null;
                                      statearr_25409_25445[1] = 16;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                    } else {
                                      if (state_val_25386 === 16) {
                                        var inst_25360 = state_25385[2];
                                        var inst_25361 = calc_state();
                                        var inst_25334 = inst_25361;
                                        var state_25385__$1 = function() {
                                          var statearr_25410 = state_25385;
                                          statearr_25410[11] = inst_25334;
                                          statearr_25410[18] = inst_25360;
                                          return statearr_25410;
                                        }();
                                        var statearr_25411_25446 = state_25385__$1;
                                        statearr_25411_25446[2] = null;
                                        statearr_25411_25446[1] = 5;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                      } else {
                                        if (state_val_25386 === 17) {
                                          var inst_25364 = state_25385[17];
                                          var state_25385__$1 = state_25385;
                                          var statearr_25412_25447 = state_25385__$1;
                                          statearr_25412_25447[2] = inst_25364;
                                          statearr_25412_25447[1] = 19;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                        } else {
                                          if (state_val_25386 === 18) {
                                            var inst_25345 = state_25385[13];
                                            var inst_25344 = state_25385[14];
                                            var inst_25350 = state_25385[15];
                                            var inst_25367 = cljs.core.empty_QMARK_(inst_25345);
                                            var inst_25368 = inst_25344.cljs$core$IFn$_invoke$arity$1 ? inst_25344.cljs$core$IFn$_invoke$arity$1(inst_25350) : inst_25344.call(null, inst_25350);
                                            var inst_25369 = cljs.core.not(inst_25368);
                                            var inst_25370 = inst_25367 && inst_25369;
                                            var state_25385__$1 = state_25385;
                                            var statearr_25413_25448 = state_25385__$1;
                                            statearr_25413_25448[2] = inst_25370;
                                            statearr_25413_25448[1] = 19;
                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                          } else {
                                            if (state_val_25386 === 19) {
                                              var inst_25372 = state_25385[2];
                                              var state_25385__$1 = state_25385;
                                              if (cljs.core.truth_(inst_25372)) {
                                                var statearr_25414_25449 = state_25385__$1;
                                                statearr_25414_25449[1] = 20;
                                              } else {
                                                var statearr_25415_25450 = state_25385__$1;
                                                statearr_25415_25450[1] = 21;
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                            } else {
                                              if (state_val_25386 === 20) {
                                                var inst_25349 = state_25385[16];
                                                var state_25385__$1 = state_25385;
                                                return cljs.core.async.impl.ioc_helpers.put_BANG_(state_25385__$1, 23, out, inst_25349);
                                              } else {
                                                if (state_val_25386 === 21) {
                                                  var state_25385__$1 = state_25385;
                                                  var statearr_25416_25451 = state_25385__$1;
                                                  statearr_25416_25451[2] = null;
                                                  statearr_25416_25451[1] = 22;
                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                } else {
                                                  if (state_val_25386 === 22) {
                                                    var inst_25342 = state_25385[12];
                                                    var inst_25378 = state_25385[2];
                                                    var inst_25334 = inst_25342;
                                                    var state_25385__$1 = function() {
                                                      var statearr_25417 = state_25385;
                                                      statearr_25417[11] = inst_25334;
                                                      statearr_25417[19] = inst_25378;
                                                      return statearr_25417;
                                                    }();
                                                    var statearr_25418_25452 = state_25385__$1;
                                                    statearr_25418_25452[2] = null;
                                                    statearr_25418_25452[1] = 5;
                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                  } else {
                                                    if (state_val_25386 === 23) {
                                                      var inst_25375 = state_25385[2];
                                                      var state_25385__$1 = state_25385;
                                                      var statearr_25419_25453 = state_25385__$1;
                                                      statearr_25419_25453[2] = inst_25375;
                                                      statearr_25419_25453[1] = 22;
                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                    } else {
                                                      return null;
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__5937__auto__) {
        return function() {
          var state_machine__5938__auto__ = null;
          var state_machine__5938__auto____0 = function() {
            var statearr_25423 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
            statearr_25423[0] = state_machine__5938__auto__;
            statearr_25423[1] = 1;
            return statearr_25423;
          };
          var state_machine__5938__auto____1 = function(state_25385) {
            while (true) {
              var ret_value__5939__auto__ = function() {
                try {
                  while (true) {
                    var result__5940__auto__ = switch__5937__auto__(state_25385);
                    if (cljs.core.keyword_identical_QMARK_(result__5940__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                      continue;
                    } else {
                      return result__5940__auto__;
                    }
                    break;
                  }
                } catch (e25424) {
                  if (e25424 instanceof Object) {
                    var ex__5941__auto__ = e25424;
                    var statearr_25425_25454 = state_25385;
                    statearr_25425_25454[5] = ex__5941__auto__;
                    cljs.core.async.impl.ioc_helpers.process_exception(state_25385);
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw e25424;
                    } else {
                      return null;
                    }
                  }
                }
              }();
              if (cljs.core.keyword_identical_QMARK_(ret_value__5939__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                var G__25455 = state_25385;
                state_25385 = G__25455;
                continue;
              } else {
                return ret_value__5939__auto__;
              }
              break;
            }
          };
          state_machine__5938__auto__ = function(state_25385) {
            switch(arguments.length) {
              case 0:
                return state_machine__5938__auto____0.call(this);
              case 1:
                return state_machine__5938__auto____1.call(this, state_25385);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5938__auto____0;
          state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5938__auto____1;
          return state_machine__5938__auto__;
        }();
      }(switch__5937__auto__);
    }();
    var state__5954__auto__ = function() {
      var statearr_25426 = f__5953__auto__.cljs$core$IFn$_invoke$arity$0 ? f__5953__auto__.cljs$core$IFn$_invoke$arity$0() : f__5953__auto__.call(null);
      statearr_25426[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5952__auto___25427;
      return statearr_25426;
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__5954__auto__);
  });
  return m;
};
cljs.core.async.admix = function admix(mix, ch) {
  return cljs.core.async.admix_STAR_(mix, ch);
};
cljs.core.async.unmix = function unmix(mix, ch) {
  return cljs.core.async.unmix_STAR_(mix, ch);
};
cljs.core.async.unmix_all = function unmix_all(mix) {
  return cljs.core.async.unmix_all_STAR_(mix);
};
cljs.core.async.toggle = function toggle(mix, state_map) {
  return cljs.core.async.toggle_STAR_(mix, state_map);
};
cljs.core.async.solo_mode = function solo_mode(mix, mode) {
  return cljs.core.async.solo_mode_STAR_(mix, mode);
};
cljs.core.async.Pub = function() {
  var obj25457 = {};
  return obj25457;
}();
cljs.core.async.sub_STAR_ = function sub_STAR_(p, v, ch, close_QMARK_) {
  if (function() {
    var and__3396__auto__ = p;
    if (and__3396__auto__) {
      return p.cljs$core$async$Pub$sub_STAR_$arity$4;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return p.cljs$core$async$Pub$sub_STAR_$arity$4(p, v, ch, close_QMARK_);
  } else {
    var x__4029__auto__ = p == null ? null : p;
    return function() {
      var or__3408__auto__ = cljs.core.async.sub_STAR_[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core.async.sub_STAR_["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("Pub.sub*", p);
        }
      }
    }().call(null, p, v, ch, close_QMARK_);
  }
};
cljs.core.async.unsub_STAR_ = function unsub_STAR_(p, v, ch) {
  if (function() {
    var and__3396__auto__ = p;
    if (and__3396__auto__) {
      return p.cljs$core$async$Pub$unsub_STAR_$arity$3;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return p.cljs$core$async$Pub$unsub_STAR_$arity$3(p, v, ch);
  } else {
    var x__4029__auto__ = p == null ? null : p;
    return function() {
      var or__3408__auto__ = cljs.core.async.unsub_STAR_[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core.async.unsub_STAR_["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("Pub.unsub*", p);
        }
      }
    }().call(null, p, v, ch);
  }
};
cljs.core.async.unsub_all_STAR_ = function() {
  var unsub_all_STAR_ = null;
  var unsub_all_STAR___1 = function(p) {
    if (function() {
      var and__3396__auto__ = p;
      if (and__3396__auto__) {
        return p.cljs$core$async$Pub$unsub_all_STAR_$arity$1;
      } else {
        return and__3396__auto__;
      }
    }()) {
      return p.cljs$core$async$Pub$unsub_all_STAR_$arity$1(p);
    } else {
      var x__4029__auto__ = p == null ? null : p;
      return function() {
        var or__3408__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__4029__auto__)];
        if (or__3408__auto__) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
          if (or__3408__auto____$1) {
            return or__3408__auto____$1;
          } else {
            throw cljs.core.missing_protocol("Pub.unsub-all*", p);
          }
        }
      }().call(null, p);
    }
  };
  var unsub_all_STAR___2 = function(p, v) {
    if (function() {
      var and__3396__auto__ = p;
      if (and__3396__auto__) {
        return p.cljs$core$async$Pub$unsub_all_STAR_$arity$2;
      } else {
        return and__3396__auto__;
      }
    }()) {
      return p.cljs$core$async$Pub$unsub_all_STAR_$arity$2(p, v);
    } else {
      var x__4029__auto__ = p == null ? null : p;
      return function() {
        var or__3408__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__4029__auto__)];
        if (or__3408__auto__) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
          if (or__3408__auto____$1) {
            return or__3408__auto____$1;
          } else {
            throw cljs.core.missing_protocol("Pub.unsub-all*", p);
          }
        }
      }().call(null, p, v);
    }
  };
  unsub_all_STAR_ = function(p, v) {
    switch(arguments.length) {
      case 1:
        return unsub_all_STAR___1.call(this, p);
      case 2:
        return unsub_all_STAR___2.call(this, p, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unsub_all_STAR_.cljs$core$IFn$_invoke$arity$1 = unsub_all_STAR___1;
  unsub_all_STAR_.cljs$core$IFn$_invoke$arity$2 = unsub_all_STAR___2;
  return unsub_all_STAR_;
}();
cljs.core.async.pub = function() {
  var pub = null;
  var pub__2 = function(ch, topic_fn) {
    return pub.cljs$core$IFn$_invoke$arity$3(ch, topic_fn, cljs.core.constantly(null));
  };
  var pub__3 = function(ch, topic_fn, buf_fn) {
    var mults = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);
    var ensure_mult = function(mults) {
      return function(topic) {
        var or__3408__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(mults), topic);
        if (cljs.core.truth_(or__3408__auto__)) {
          return or__3408__auto__;
        } else {
          return cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(mults, function(or__3408__auto__, mults) {
            return function(p1__25458_SHARP_) {
              if (cljs.core.truth_(p1__25458_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__25458_SHARP_.cljs$core$IFn$_invoke$arity$1(topic) : p1__25458_SHARP_.call(null, topic))) {
                return p1__25458_SHARP_;
              } else {
                return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(p1__25458_SHARP_, topic, cljs.core.async.mult(cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(buf_fn.cljs$core$IFn$_invoke$arity$1 ? buf_fn.cljs$core$IFn$_invoke$arity$1(topic) : buf_fn.call(null, topic))));
              }
            };
          }(or__3408__auto__, mults)), topic);
        }
      };
    }(mults);
    var p = function() {
      if (typeof cljs.core.async.t25583 !== "undefined") {
      } else {
        cljs.core.async.t25583 = function(ensure_mult, mults, buf_fn, topic_fn, ch, pub, meta25584) {
          this.ensure_mult = ensure_mult;
          this.mults = mults;
          this.buf_fn = buf_fn;
          this.topic_fn = topic_fn;
          this.ch = ch;
          this.pub = pub;
          this.meta25584 = meta25584;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393216;
        };
        cljs.core.async.t25583.cljs$lang$type = true;
        cljs.core.async.t25583.cljs$lang$ctorStr = "cljs.core.async/t25583";
        cljs.core.async.t25583.cljs$lang$ctorPrWriter = function(mults, ensure_mult) {
          return function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
            return cljs.core._write(writer__3971__auto__, "cljs.core.async/t25583");
          };
        }(mults, ensure_mult);
        cljs.core.async.t25583.prototype.cljs$core$async$Pub$ = true;
        cljs.core.async.t25583.prototype.cljs$core$async$Pub$sub_STAR_$arity$4 = function(mults, ensure_mult) {
          return function(p, topic, ch__$2, close_QMARK_) {
            var self__ = this;
            var p__$1 = this;
            var m = self__.ensure_mult.cljs$core$IFn$_invoke$arity$1 ? self__.ensure_mult.cljs$core$IFn$_invoke$arity$1(topic) : self__.ensure_mult.call(null, topic);
            return cljs.core.async.tap.cljs$core$IFn$_invoke$arity$3(m, ch__$2, close_QMARK_);
          };
        }(mults, ensure_mult);
        cljs.core.async.t25583.prototype.cljs$core$async$Pub$unsub_STAR_$arity$3 = function(mults, ensure_mult) {
          return function(p, topic, ch__$2) {
            var self__ = this;
            var p__$1 = this;
            var temp__4092__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(self__.mults), topic);
            if (cljs.core.truth_(temp__4092__auto__)) {
              var m = temp__4092__auto__;
              return cljs.core.async.untap(m, ch__$2);
            } else {
              return null;
            }
          };
        }(mults, ensure_mult);
        cljs.core.async.t25583.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$1 = function(mults, ensure_mult) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.reset_BANG_(self__.mults, cljs.core.PersistentArrayMap.EMPTY);
          };
        }(mults, ensure_mult);
        cljs.core.async.t25583.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$2 = function(mults, ensure_mult) {
          return function(_, topic) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.mults, cljs.core.dissoc, topic);
          };
        }(mults, ensure_mult);
        cljs.core.async.t25583.prototype.cljs$core$async$Mux$ = true;
        cljs.core.async.t25583.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(mults, ensure_mult) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.ch;
          };
        }(mults, ensure_mult);
        cljs.core.async.t25583.prototype.cljs$core$IMeta$_meta$arity$1 = function(mults, ensure_mult) {
          return function(_25585) {
            var self__ = this;
            var _25585__$1 = this;
            return self__.meta25584;
          };
        }(mults, ensure_mult);
        cljs.core.async.t25583.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(mults, ensure_mult) {
          return function(_25585, meta25584__$1) {
            var self__ = this;
            var _25585__$1 = this;
            return new cljs.core.async.t25583(self__.ensure_mult, self__.mults, self__.buf_fn, self__.topic_fn, self__.ch, self__.pub, meta25584__$1);
          };
        }(mults, ensure_mult);
        cljs.core.async.__GT_t25583 = function(mults, ensure_mult) {
          return function __GT_t25583(ensure_mult__$1, mults__$1, buf_fn__$1, topic_fn__$1, ch__$1, pub__$1, meta25584) {
            return new cljs.core.async.t25583(ensure_mult__$1, mults__$1, buf_fn__$1, topic_fn__$1, ch__$1, pub__$1, meta25584);
          };
        }(mults, ensure_mult);
      }
      return new cljs.core.async.t25583(ensure_mult, mults, buf_fn, topic_fn, ch, pub, null);
    }();
    var c__5952__auto___25707 = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(1);
    cljs.core.async.impl.dispatch.run(function() {
      var f__5953__auto__ = function() {
        var switch__5937__auto__ = function(state_25659) {
          var state_val_25660 = state_25659[1];
          if (state_val_25660 === 1) {
            var state_25659__$1 = state_25659;
            var statearr_25661_25708 = state_25659__$1;
            statearr_25661_25708[2] = null;
            statearr_25661_25708[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_25660 === 2) {
              var state_25659__$1 = state_25659;
              return cljs.core.async.impl.ioc_helpers.take_BANG_(state_25659__$1, 4, ch);
            } else {
              if (state_val_25660 === 3) {
                var inst_25657 = state_25659[2];
                var state_25659__$1 = state_25659;
                return cljs.core.async.impl.ioc_helpers.return_chan(state_25659__$1, inst_25657);
              } else {
                if (state_val_25660 === 4) {
                  var inst_25588 = state_25659[7];
                  var inst_25588__$1 = state_25659[2];
                  var inst_25589 = inst_25588__$1 == null;
                  var state_25659__$1 = function() {
                    var statearr_25662 = state_25659;
                    statearr_25662[7] = inst_25588__$1;
                    return statearr_25662;
                  }();
                  if (cljs.core.truth_(inst_25589)) {
                    var statearr_25663_25709 = state_25659__$1;
                    statearr_25663_25709[1] = 5;
                  } else {
                    var statearr_25664_25710 = state_25659__$1;
                    statearr_25664_25710[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_25660 === 5) {
                    var inst_25595 = cljs.core.deref(mults);
                    var inst_25596 = cljs.core.vals(inst_25595);
                    var inst_25597 = cljs.core.seq(inst_25596);
                    var inst_25598 = inst_25597;
                    var inst_25599 = null;
                    var inst_25600 = 0;
                    var inst_25601 = 0;
                    var state_25659__$1 = function() {
                      var statearr_25665 = state_25659;
                      statearr_25665[8] = inst_25601;
                      statearr_25665[9] = inst_25600;
                      statearr_25665[10] = inst_25599;
                      statearr_25665[11] = inst_25598;
                      return statearr_25665;
                    }();
                    var statearr_25666_25711 = state_25659__$1;
                    statearr_25666_25711[2] = null;
                    statearr_25666_25711[1] = 8;
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_25660 === 6) {
                      var inst_25588 = state_25659[7];
                      var inst_25636 = state_25659[12];
                      var inst_25638 = state_25659[13];
                      var inst_25636__$1 = topic_fn.cljs$core$IFn$_invoke$arity$1 ? topic_fn.cljs$core$IFn$_invoke$arity$1(inst_25588) : topic_fn.call(null, inst_25588);
                      var inst_25637 = cljs.core.deref(mults);
                      var inst_25638__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(inst_25637, inst_25636__$1);
                      var state_25659__$1 = function() {
                        var statearr_25667 = state_25659;
                        statearr_25667[12] = inst_25636__$1;
                        statearr_25667[13] = inst_25638__$1;
                        return statearr_25667;
                      }();
                      if (cljs.core.truth_(inst_25638__$1)) {
                        var statearr_25668_25712 = state_25659__$1;
                        statearr_25668_25712[1] = 19;
                      } else {
                        var statearr_25669_25713 = state_25659__$1;
                        statearr_25669_25713[1] = 20;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_25660 === 7) {
                        var inst_25655 = state_25659[2];
                        var state_25659__$1 = state_25659;
                        var statearr_25670_25714 = state_25659__$1;
                        statearr_25670_25714[2] = inst_25655;
                        statearr_25670_25714[1] = 3;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_25660 === 8) {
                          var inst_25601 = state_25659[8];
                          var inst_25600 = state_25659[9];
                          var inst_25603 = inst_25601 < inst_25600;
                          var inst_25604 = inst_25603;
                          var state_25659__$1 = state_25659;
                          if (cljs.core.truth_(inst_25604)) {
                            var statearr_25674_25715 = state_25659__$1;
                            statearr_25674_25715[1] = 10;
                          } else {
                            var statearr_25675_25716 = state_25659__$1;
                            statearr_25675_25716[1] = 11;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_25660 === 9) {
                            var inst_25634 = state_25659[2];
                            var state_25659__$1 = state_25659;
                            var statearr_25676_25717 = state_25659__$1;
                            statearr_25676_25717[2] = inst_25634;
                            statearr_25676_25717[1] = 7;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_25660 === 10) {
                              var inst_25601 = state_25659[8];
                              var inst_25600 = state_25659[9];
                              var inst_25599 = state_25659[10];
                              var inst_25598 = state_25659[11];
                              var inst_25606 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(inst_25599, inst_25601);
                              var inst_25607 = cljs.core.async.muxch_STAR_(inst_25606);
                              var inst_25608 = cljs.core.async.close_BANG_(inst_25607);
                              var inst_25609 = inst_25601 + 1;
                              var tmp25671 = inst_25600;
                              var tmp25672 = inst_25599;
                              var tmp25673 = inst_25598;
                              var inst_25598__$1 = tmp25673;
                              var inst_25599__$1 = tmp25672;
                              var inst_25600__$1 = tmp25671;
                              var inst_25601__$1 = inst_25609;
                              var state_25659__$1 = function() {
                                var statearr_25677 = state_25659;
                                statearr_25677[14] = inst_25608;
                                statearr_25677[8] = inst_25601__$1;
                                statearr_25677[9] = inst_25600__$1;
                                statearr_25677[10] = inst_25599__$1;
                                statearr_25677[11] = inst_25598__$1;
                                return statearr_25677;
                              }();
                              var statearr_25678_25718 = state_25659__$1;
                              statearr_25678_25718[2] = null;
                              statearr_25678_25718[1] = 8;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_25660 === 11) {
                                var inst_25612 = state_25659[15];
                                var inst_25598 = state_25659[11];
                                var inst_25612__$1 = cljs.core.seq(inst_25598);
                                var state_25659__$1 = function() {
                                  var statearr_25679 = state_25659;
                                  statearr_25679[15] = inst_25612__$1;
                                  return statearr_25679;
                                }();
                                if (inst_25612__$1) {
                                  var statearr_25680_25719 = state_25659__$1;
                                  statearr_25680_25719[1] = 13;
                                } else {
                                  var statearr_25681_25720 = state_25659__$1;
                                  statearr_25681_25720[1] = 14;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_25660 === 12) {
                                  var inst_25632 = state_25659[2];
                                  var state_25659__$1 = state_25659;
                                  var statearr_25682_25721 = state_25659__$1;
                                  statearr_25682_25721[2] = inst_25632;
                                  statearr_25682_25721[1] = 9;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_25660 === 13) {
                                    var inst_25612 = state_25659[15];
                                    var inst_25614 = cljs.core.chunked_seq_QMARK_(inst_25612);
                                    var state_25659__$1 = state_25659;
                                    if (inst_25614) {
                                      var statearr_25683_25722 = state_25659__$1;
                                      statearr_25683_25722[1] = 16;
                                    } else {
                                      var statearr_25684_25723 = state_25659__$1;
                                      statearr_25684_25723[1] = 17;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    if (state_val_25660 === 14) {
                                      var state_25659__$1 = state_25659;
                                      var statearr_25685_25724 = state_25659__$1;
                                      statearr_25685_25724[2] = null;
                                      statearr_25685_25724[1] = 15;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                    } else {
                                      if (state_val_25660 === 15) {
                                        var inst_25630 = state_25659[2];
                                        var state_25659__$1 = state_25659;
                                        var statearr_25686_25725 = state_25659__$1;
                                        statearr_25686_25725[2] = inst_25630;
                                        statearr_25686_25725[1] = 12;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                      } else {
                                        if (state_val_25660 === 16) {
                                          var inst_25612 = state_25659[15];
                                          var inst_25616 = cljs.core.chunk_first(inst_25612);
                                          var inst_25617 = cljs.core.chunk_rest(inst_25612);
                                          var inst_25618 = cljs.core.count(inst_25616);
                                          var inst_25598 = inst_25617;
                                          var inst_25599 = inst_25616;
                                          var inst_25600 = inst_25618;
                                          var inst_25601 = 0;
                                          var state_25659__$1 = function() {
                                            var statearr_25687 = state_25659;
                                            statearr_25687[8] = inst_25601;
                                            statearr_25687[9] = inst_25600;
                                            statearr_25687[10] = inst_25599;
                                            statearr_25687[11] = inst_25598;
                                            return statearr_25687;
                                          }();
                                          var statearr_25688_25726 = state_25659__$1;
                                          statearr_25688_25726[2] = null;
                                          statearr_25688_25726[1] = 8;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                        } else {
                                          if (state_val_25660 === 17) {
                                            var inst_25612 = state_25659[15];
                                            var inst_25621 = cljs.core.first(inst_25612);
                                            var inst_25622 = cljs.core.async.muxch_STAR_(inst_25621);
                                            var inst_25623 = cljs.core.async.close_BANG_(inst_25622);
                                            var inst_25624 = cljs.core.next(inst_25612);
                                            var inst_25598 = inst_25624;
                                            var inst_25599 = null;
                                            var inst_25600 = 0;
                                            var inst_25601 = 0;
                                            var state_25659__$1 = function() {
                                              var statearr_25689 = state_25659;
                                              statearr_25689[16] = inst_25623;
                                              statearr_25689[8] = inst_25601;
                                              statearr_25689[9] = inst_25600;
                                              statearr_25689[10] = inst_25599;
                                              statearr_25689[11] = inst_25598;
                                              return statearr_25689;
                                            }();
                                            var statearr_25690_25727 = state_25659__$1;
                                            statearr_25690_25727[2] = null;
                                            statearr_25690_25727[1] = 8;
                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                          } else {
                                            if (state_val_25660 === 18) {
                                              var inst_25627 = state_25659[2];
                                              var state_25659__$1 = state_25659;
                                              var statearr_25691_25728 = state_25659__$1;
                                              statearr_25691_25728[2] = inst_25627;
                                              statearr_25691_25728[1] = 15;
                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                            } else {
                                              if (state_val_25660 === 19) {
                                                var state_25659__$1 = state_25659;
                                                var statearr_25692_25729 = state_25659__$1;
                                                statearr_25692_25729[2] = null;
                                                statearr_25692_25729[1] = 24;
                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                              } else {
                                                if (state_val_25660 === 20) {
                                                  var state_25659__$1 = state_25659;
                                                  var statearr_25693_25730 = state_25659__$1;
                                                  statearr_25693_25730[2] = null;
                                                  statearr_25693_25730[1] = 21;
                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                } else {
                                                  if (state_val_25660 === 21) {
                                                    var inst_25652 = state_25659[2];
                                                    var state_25659__$1 = function() {
                                                      var statearr_25694 = state_25659;
                                                      statearr_25694[17] = inst_25652;
                                                      return statearr_25694;
                                                    }();
                                                    var statearr_25695_25731 = state_25659__$1;
                                                    statearr_25695_25731[2] = null;
                                                    statearr_25695_25731[1] = 2;
                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                  } else {
                                                    if (state_val_25660 === 22) {
                                                      var inst_25649 = state_25659[2];
                                                      var state_25659__$1 = state_25659;
                                                      var statearr_25696_25732 = state_25659__$1;
                                                      statearr_25696_25732[2] = inst_25649;
                                                      statearr_25696_25732[1] = 21;
                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                    } else {
                                                      if (state_val_25660 === 23) {
                                                        var inst_25636 = state_25659[12];
                                                        var inst_25640 = state_25659[2];
                                                        var inst_25641 = cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(mults, cljs.core.dissoc, inst_25636);
                                                        var state_25659__$1 = function() {
                                                          var statearr_25697 = state_25659;
                                                          statearr_25697[18] = inst_25640;
                                                          return statearr_25697;
                                                        }();
                                                        var statearr_25698_25733 = state_25659__$1;
                                                        statearr_25698_25733[2] = inst_25641;
                                                        cljs.core.async.impl.ioc_helpers.process_exception(state_25659__$1);
                                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                      } else {
                                                        if (state_val_25660 === 24) {
                                                          var inst_25588 = state_25659[7];
                                                          var inst_25638 = state_25659[13];
                                                          var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame(state_25659, 23, Object, null, 22);
                                                          var inst_25645 = cljs.core.async.muxch_STAR_(inst_25638);
                                                          var state_25659__$1 = state_25659;
                                                          return cljs.core.async.impl.ioc_helpers.put_BANG_(state_25659__$1, 25, inst_25645, inst_25588);
                                                        } else {
                                                          if (state_val_25660 === 25) {
                                                            var inst_25647 = state_25659[2];
                                                            var state_25659__$1 = state_25659;
                                                            var statearr_25699_25734 = state_25659__$1;
                                                            statearr_25699_25734[2] = inst_25647;
                                                            cljs.core.async.impl.ioc_helpers.process_exception(state_25659__$1);
                                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                          } else {
                                                            return null;
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__5937__auto__) {
          return function() {
            var state_machine__5938__auto__ = null;
            var state_machine__5938__auto____0 = function() {
              var statearr_25703 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_25703[0] = state_machine__5938__auto__;
              statearr_25703[1] = 1;
              return statearr_25703;
            };
            var state_machine__5938__auto____1 = function(state_25659) {
              while (true) {
                var ret_value__5939__auto__ = function() {
                  try {
                    while (true) {
                      var result__5940__auto__ = switch__5937__auto__(state_25659);
                      if (cljs.core.keyword_identical_QMARK_(result__5940__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__5940__auto__;
                      }
                      break;
                    }
                  } catch (e25704) {
                    if (e25704 instanceof Object) {
                      var ex__5941__auto__ = e25704;
                      var statearr_25705_25735 = state_25659;
                      statearr_25705_25735[5] = ex__5941__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception(state_25659);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e25704;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_(ret_value__5939__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__25736 = state_25659;
                  state_25659 = G__25736;
                  continue;
                } else {
                  return ret_value__5939__auto__;
                }
                break;
              }
            };
            state_machine__5938__auto__ = function(state_25659) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5938__auto____0.call(this);
                case 1:
                  return state_machine__5938__auto____1.call(this, state_25659);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5938__auto____0;
            state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5938__auto____1;
            return state_machine__5938__auto__;
          }();
        }(switch__5937__auto__);
      }();
      var state__5954__auto__ = function() {
        var statearr_25706 = f__5953__auto__.cljs$core$IFn$_invoke$arity$0 ? f__5953__auto__.cljs$core$IFn$_invoke$arity$0() : f__5953__auto__.call(null);
        statearr_25706[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5952__auto___25707;
        return statearr_25706;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__5954__auto__);
    });
    return p;
  };
  pub = function(ch, topic_fn, buf_fn) {
    switch(arguments.length) {
      case 2:
        return pub__2.call(this, ch, topic_fn);
      case 3:
        return pub__3.call(this, ch, topic_fn, buf_fn);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pub.cljs$core$IFn$_invoke$arity$2 = pub__2;
  pub.cljs$core$IFn$_invoke$arity$3 = pub__3;
  return pub;
}();
cljs.core.async.sub = function() {
  var sub = null;
  var sub__3 = function(p, topic, ch) {
    return sub.cljs$core$IFn$_invoke$arity$4(p, topic, ch, true);
  };
  var sub__4 = function(p, topic, ch, close_QMARK_) {
    return cljs.core.async.sub_STAR_(p, topic, ch, close_QMARK_);
  };
  sub = function(p, topic, ch, close_QMARK_) {
    switch(arguments.length) {
      case 3:
        return sub__3.call(this, p, topic, ch);
      case 4:
        return sub__4.call(this, p, topic, ch, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sub.cljs$core$IFn$_invoke$arity$3 = sub__3;
  sub.cljs$core$IFn$_invoke$arity$4 = sub__4;
  return sub;
}();
cljs.core.async.unsub = function unsub(p, topic, ch) {
  return cljs.core.async.unsub_STAR_(p, topic, ch);
};
cljs.core.async.unsub_all = function() {
  var unsub_all = null;
  var unsub_all__1 = function(p) {
    return cljs.core.async.unsub_all_STAR_.cljs$core$IFn$_invoke$arity$1(p);
  };
  var unsub_all__2 = function(p, topic) {
    return cljs.core.async.unsub_all_STAR_.cljs$core$IFn$_invoke$arity$2(p, topic);
  };
  unsub_all = function(p, topic) {
    switch(arguments.length) {
      case 1:
        return unsub_all__1.call(this, p);
      case 2:
        return unsub_all__2.call(this, p, topic);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unsub_all.cljs$core$IFn$_invoke$arity$1 = unsub_all__1;
  unsub_all.cljs$core$IFn$_invoke$arity$2 = unsub_all__2;
  return unsub_all;
}();
cljs.core.async.map = function() {
  var map = null;
  var map__2 = function(f, chs) {
    return map.cljs$core$IFn$_invoke$arity$3(f, chs, null);
  };
  var map__3 = function(f, chs, buf_or_n) {
    var chs__$1 = cljs.core.vec(chs);
    var out = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(buf_or_n);
    var cnt = cljs.core.count(chs__$1);
    var rets = cljs.core.object_array.cljs$core$IFn$_invoke$arity$1(cnt);
    var dchan = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(1);
    var dctr = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null);
    var done = cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(function(chs__$1, out, cnt, rets, dchan, dctr) {
      return function(i) {
        return function(chs__$1, out, cnt, rets, dchan, dctr) {
          return function(ret) {
            rets[i] = ret;
            if (cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(dctr, cljs.core.dec) === 0) {
              return cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2(dchan, rets.slice(0));
            } else {
              return null;
            }
          };
        }(chs__$1, out, cnt, rets, dchan, dctr);
      };
    }(chs__$1, out, cnt, rets, dchan, dctr), cljs.core.range.cljs$core$IFn$_invoke$arity$1(cnt));
    var c__5952__auto___25873 = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(1);
    cljs.core.async.impl.dispatch.run(function() {
      var f__5953__auto__ = function() {
        var switch__5937__auto__ = function(state_25843) {
          var state_val_25844 = state_25843[1];
          if (state_val_25844 === 1) {
            var state_25843__$1 = state_25843;
            var statearr_25845_25874 = state_25843__$1;
            statearr_25845_25874[2] = null;
            statearr_25845_25874[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_25844 === 2) {
              var inst_25806 = cljs.core.reset_BANG_(dctr, cnt);
              var inst_25807 = 0;
              var state_25843__$1 = function() {
                var statearr_25846 = state_25843;
                statearr_25846[7] = inst_25807;
                statearr_25846[8] = inst_25806;
                return statearr_25846;
              }();
              var statearr_25847_25875 = state_25843__$1;
              statearr_25847_25875[2] = null;
              statearr_25847_25875[1] = 4;
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
            } else {
              if (state_val_25844 === 3) {
                var inst_25841 = state_25843[2];
                var state_25843__$1 = state_25843;
                return cljs.core.async.impl.ioc_helpers.return_chan(state_25843__$1, inst_25841);
              } else {
                if (state_val_25844 === 4) {
                  var inst_25807 = state_25843[7];
                  var inst_25809 = inst_25807 < cnt;
                  var state_25843__$1 = state_25843;
                  if (cljs.core.truth_(inst_25809)) {
                    var statearr_25848_25876 = state_25843__$1;
                    statearr_25848_25876[1] = 6;
                  } else {
                    var statearr_25849_25877 = state_25843__$1;
                    statearr_25849_25877[1] = 7;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_25844 === 5) {
                    var inst_25827 = state_25843[2];
                    var state_25843__$1 = function() {
                      var statearr_25850 = state_25843;
                      statearr_25850[9] = inst_25827;
                      return statearr_25850;
                    }();
                    return cljs.core.async.impl.ioc_helpers.take_BANG_(state_25843__$1, 12, dchan);
                  } else {
                    if (state_val_25844 === 6) {
                      var state_25843__$1 = state_25843;
                      var statearr_25851_25878 = state_25843__$1;
                      statearr_25851_25878[2] = null;
                      statearr_25851_25878[1] = 11;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_25844 === 7) {
                        var state_25843__$1 = state_25843;
                        var statearr_25852_25879 = state_25843__$1;
                        statearr_25852_25879[2] = null;
                        statearr_25852_25879[1] = 8;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_25844 === 8) {
                          var inst_25825 = state_25843[2];
                          var state_25843__$1 = state_25843;
                          var statearr_25853_25880 = state_25843__$1;
                          statearr_25853_25880[2] = inst_25825;
                          statearr_25853_25880[1] = 5;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_25844 === 9) {
                            var inst_25807 = state_25843[7];
                            var inst_25820 = state_25843[2];
                            var inst_25821 = inst_25807 + 1;
                            var inst_25807__$1 = inst_25821;
                            var state_25843__$1 = function() {
                              var statearr_25854 = state_25843;
                              statearr_25854[10] = inst_25820;
                              statearr_25854[7] = inst_25807__$1;
                              return statearr_25854;
                            }();
                            var statearr_25855_25881 = state_25843__$1;
                            statearr_25855_25881[2] = null;
                            statearr_25855_25881[1] = 4;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_25844 === 10) {
                              var inst_25811 = state_25843[2];
                              var inst_25812 = cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(dctr, cljs.core.dec);
                              var state_25843__$1 = function() {
                                var statearr_25856 = state_25843;
                                statearr_25856[11] = inst_25811;
                                return statearr_25856;
                              }();
                              var statearr_25857_25882 = state_25843__$1;
                              statearr_25857_25882[2] = inst_25812;
                              cljs.core.async.impl.ioc_helpers.process_exception(state_25843__$1);
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_25844 === 11) {
                                var inst_25807 = state_25843[7];
                                var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame(state_25843, 10, Object, null, 9);
                                var inst_25816 = chs__$1.cljs$core$IFn$_invoke$arity$1 ? chs__$1.cljs$core$IFn$_invoke$arity$1(inst_25807) : chs__$1.call(null, inst_25807);
                                var inst_25817 = done.cljs$core$IFn$_invoke$arity$1 ? done.cljs$core$IFn$_invoke$arity$1(inst_25807) : done.call(null, inst_25807);
                                var inst_25818 = cljs.core.async.take_BANG_.cljs$core$IFn$_invoke$arity$2(inst_25816, inst_25817);
                                var state_25843__$1 = state_25843;
                                var statearr_25858_25883 = state_25843__$1;
                                statearr_25858_25883[2] = inst_25818;
                                cljs.core.async.impl.ioc_helpers.process_exception(state_25843__$1);
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_25844 === 12) {
                                  var inst_25829 = state_25843[12];
                                  var inst_25829__$1 = state_25843[2];
                                  var inst_25830 = cljs.core.some(cljs.core.nil_QMARK_, inst_25829__$1);
                                  var state_25843__$1 = function() {
                                    var statearr_25859 = state_25843;
                                    statearr_25859[12] = inst_25829__$1;
                                    return statearr_25859;
                                  }();
                                  if (cljs.core.truth_(inst_25830)) {
                                    var statearr_25860_25884 = state_25843__$1;
                                    statearr_25860_25884[1] = 13;
                                  } else {
                                    var statearr_25861_25885 = state_25843__$1;
                                    statearr_25861_25885[1] = 14;
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_25844 === 13) {
                                    var inst_25832 = cljs.core.async.close_BANG_(out);
                                    var state_25843__$1 = state_25843;
                                    var statearr_25862_25886 = state_25843__$1;
                                    statearr_25862_25886[2] = inst_25832;
                                    statearr_25862_25886[1] = 15;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    if (state_val_25844 === 14) {
                                      var inst_25829 = state_25843[12];
                                      var inst_25834 = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, inst_25829);
                                      var state_25843__$1 = state_25843;
                                      return cljs.core.async.impl.ioc_helpers.put_BANG_(state_25843__$1, 16, out, inst_25834);
                                    } else {
                                      if (state_val_25844 === 15) {
                                        var inst_25839 = state_25843[2];
                                        var state_25843__$1 = state_25843;
                                        var statearr_25863_25887 = state_25843__$1;
                                        statearr_25863_25887[2] = inst_25839;
                                        statearr_25863_25887[1] = 3;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                      } else {
                                        if (state_val_25844 === 16) {
                                          var inst_25836 = state_25843[2];
                                          var state_25843__$1 = function() {
                                            var statearr_25864 = state_25843;
                                            statearr_25864[13] = inst_25836;
                                            return statearr_25864;
                                          }();
                                          var statearr_25865_25888 = state_25843__$1;
                                          statearr_25865_25888[2] = null;
                                          statearr_25865_25888[1] = 2;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__5937__auto__) {
          return function() {
            var state_machine__5938__auto__ = null;
            var state_machine__5938__auto____0 = function() {
              var statearr_25869 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_25869[0] = state_machine__5938__auto__;
              statearr_25869[1] = 1;
              return statearr_25869;
            };
            var state_machine__5938__auto____1 = function(state_25843) {
              while (true) {
                var ret_value__5939__auto__ = function() {
                  try {
                    while (true) {
                      var result__5940__auto__ = switch__5937__auto__(state_25843);
                      if (cljs.core.keyword_identical_QMARK_(result__5940__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__5940__auto__;
                      }
                      break;
                    }
                  } catch (e25870) {
                    if (e25870 instanceof Object) {
                      var ex__5941__auto__ = e25870;
                      var statearr_25871_25889 = state_25843;
                      statearr_25871_25889[5] = ex__5941__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception(state_25843);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e25870;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_(ret_value__5939__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__25890 = state_25843;
                  state_25843 = G__25890;
                  continue;
                } else {
                  return ret_value__5939__auto__;
                }
                break;
              }
            };
            state_machine__5938__auto__ = function(state_25843) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5938__auto____0.call(this);
                case 1:
                  return state_machine__5938__auto____1.call(this, state_25843);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5938__auto____0;
            state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5938__auto____1;
            return state_machine__5938__auto__;
          }();
        }(switch__5937__auto__);
      }();
      var state__5954__auto__ = function() {
        var statearr_25872 = f__5953__auto__.cljs$core$IFn$_invoke$arity$0 ? f__5953__auto__.cljs$core$IFn$_invoke$arity$0() : f__5953__auto__.call(null);
        statearr_25872[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5952__auto___25873;
        return statearr_25872;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__5954__auto__);
    });
    return out;
  };
  map = function(f, chs, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, chs);
      case 3:
        return map__3.call(this, f, chs, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  return map;
}();
cljs.core.async.merge = function() {
  var merge = null;
  var merge__1 = function(chs) {
    return merge.cljs$core$IFn$_invoke$arity$2(chs, null);
  };
  var merge__2 = function(chs, buf_or_n) {
    var out = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(buf_or_n);
    var c__5952__auto___25998 = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(1);
    cljs.core.async.impl.dispatch.run(function() {
      var f__5953__auto__ = function() {
        var switch__5937__auto__ = function(state_25974) {
          var state_val_25975 = state_25974[1];
          if (state_val_25975 === 1) {
            var inst_25945 = cljs.core.vec(chs);
            var inst_25946 = inst_25945;
            var state_25974__$1 = function() {
              var statearr_25976 = state_25974;
              statearr_25976[7] = inst_25946;
              return statearr_25976;
            }();
            var statearr_25977_25999 = state_25974__$1;
            statearr_25977_25999[2] = null;
            statearr_25977_25999[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_25975 === 2) {
              var inst_25946 = state_25974[7];
              var inst_25948 = cljs.core.count(inst_25946);
              var inst_25949 = inst_25948 > 0;
              var state_25974__$1 = state_25974;
              if (cljs.core.truth_(inst_25949)) {
                var statearr_25978_26000 = state_25974__$1;
                statearr_25978_26000[1] = 4;
              } else {
                var statearr_25979_26001 = state_25974__$1;
                statearr_25979_26001[1] = 5;
              }
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
            } else {
              if (state_val_25975 === 3) {
                var inst_25972 = state_25974[2];
                var state_25974__$1 = state_25974;
                return cljs.core.async.impl.ioc_helpers.return_chan(state_25974__$1, inst_25972);
              } else {
                if (state_val_25975 === 4) {
                  var inst_25946 = state_25974[7];
                  var state_25974__$1 = state_25974;
                  return cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_(state_25974__$1, 7, inst_25946);
                } else {
                  if (state_val_25975 === 5) {
                    var inst_25968 = cljs.core.async.close_BANG_(out);
                    var state_25974__$1 = state_25974;
                    var statearr_25980_26002 = state_25974__$1;
                    statearr_25980_26002[2] = inst_25968;
                    statearr_25980_26002[1] = 6;
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_25975 === 6) {
                      var inst_25970 = state_25974[2];
                      var state_25974__$1 = state_25974;
                      var statearr_25981_26003 = state_25974__$1;
                      statearr_25981_26003[2] = inst_25970;
                      statearr_25981_26003[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_25975 === 7) {
                        var inst_25954 = state_25974[8];
                        var inst_25953 = state_25974[9];
                        var inst_25953__$1 = state_25974[2];
                        var inst_25954__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_25953__$1, 0, null);
                        var inst_25955 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_25953__$1, 1, null);
                        var inst_25956 = inst_25954__$1 == null;
                        var state_25974__$1 = function() {
                          var statearr_25982 = state_25974;
                          statearr_25982[8] = inst_25954__$1;
                          statearr_25982[10] = inst_25955;
                          statearr_25982[9] = inst_25953__$1;
                          return statearr_25982;
                        }();
                        if (cljs.core.truth_(inst_25956)) {
                          var statearr_25983_26004 = state_25974__$1;
                          statearr_25983_26004[1] = 8;
                        } else {
                          var statearr_25984_26005 = state_25974__$1;
                          statearr_25984_26005[1] = 9;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_25975 === 8) {
                          var inst_25954 = state_25974[8];
                          var inst_25955 = state_25974[10];
                          var inst_25953 = state_25974[9];
                          var inst_25946 = state_25974[7];
                          var inst_25958 = function() {
                            var c = inst_25955;
                            var v = inst_25954;
                            var vec__25951 = inst_25953;
                            var cs = inst_25946;
                            return function(c, v, vec__25951, cs, inst_25954, inst_25955, inst_25953, inst_25946, state_val_25975) {
                              return function(p1__25891_SHARP_) {
                                return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(c, p1__25891_SHARP_);
                              };
                            }(c, v, vec__25951, cs, inst_25954, inst_25955, inst_25953, inst_25946, state_val_25975);
                          }();
                          var inst_25959 = cljs.core.filterv(inst_25958, inst_25946);
                          var inst_25946__$1 = inst_25959;
                          var state_25974__$1 = function() {
                            var statearr_25985 = state_25974;
                            statearr_25985[7] = inst_25946__$1;
                            return statearr_25985;
                          }();
                          var statearr_25986_26006 = state_25974__$1;
                          statearr_25986_26006[2] = null;
                          statearr_25986_26006[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_25975 === 9) {
                            var inst_25954 = state_25974[8];
                            var state_25974__$1 = state_25974;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_(state_25974__$1, 11, out, inst_25954);
                          } else {
                            if (state_val_25975 === 10) {
                              var inst_25966 = state_25974[2];
                              var state_25974__$1 = state_25974;
                              var statearr_25988_26007 = state_25974__$1;
                              statearr_25988_26007[2] = inst_25966;
                              statearr_25988_26007[1] = 6;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_25975 === 11) {
                                var inst_25946 = state_25974[7];
                                var inst_25963 = state_25974[2];
                                var tmp25987 = inst_25946;
                                var inst_25946__$1 = tmp25987;
                                var state_25974__$1 = function() {
                                  var statearr_25989 = state_25974;
                                  statearr_25989[11] = inst_25963;
                                  statearr_25989[7] = inst_25946__$1;
                                  return statearr_25989;
                                }();
                                var statearr_25990_26008 = state_25974__$1;
                                statearr_25990_26008[2] = null;
                                statearr_25990_26008[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                return null;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__5937__auto__) {
          return function() {
            var state_machine__5938__auto__ = null;
            var state_machine__5938__auto____0 = function() {
              var statearr_25994 = [null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_25994[0] = state_machine__5938__auto__;
              statearr_25994[1] = 1;
              return statearr_25994;
            };
            var state_machine__5938__auto____1 = function(state_25974) {
              while (true) {
                var ret_value__5939__auto__ = function() {
                  try {
                    while (true) {
                      var result__5940__auto__ = switch__5937__auto__(state_25974);
                      if (cljs.core.keyword_identical_QMARK_(result__5940__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__5940__auto__;
                      }
                      break;
                    }
                  } catch (e25995) {
                    if (e25995 instanceof Object) {
                      var ex__5941__auto__ = e25995;
                      var statearr_25996_26009 = state_25974;
                      statearr_25996_26009[5] = ex__5941__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception(state_25974);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e25995;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_(ret_value__5939__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__26010 = state_25974;
                  state_25974 = G__26010;
                  continue;
                } else {
                  return ret_value__5939__auto__;
                }
                break;
              }
            };
            state_machine__5938__auto__ = function(state_25974) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5938__auto____0.call(this);
                case 1:
                  return state_machine__5938__auto____1.call(this, state_25974);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5938__auto____0;
            state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5938__auto____1;
            return state_machine__5938__auto__;
          }();
        }(switch__5937__auto__);
      }();
      var state__5954__auto__ = function() {
        var statearr_25997 = f__5953__auto__.cljs$core$IFn$_invoke$arity$0 ? f__5953__auto__.cljs$core$IFn$_invoke$arity$0() : f__5953__auto__.call(null);
        statearr_25997[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5952__auto___25998;
        return statearr_25997;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__5954__auto__);
    });
    return out;
  };
  merge = function(chs, buf_or_n) {
    switch(arguments.length) {
      case 1:
        return merge__1.call(this, chs);
      case 2:
        return merge__2.call(this, chs, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  merge.cljs$core$IFn$_invoke$arity$1 = merge__1;
  merge.cljs$core$IFn$_invoke$arity$2 = merge__2;
  return merge;
}();
cljs.core.async.into = function into(coll, ch) {
  return cljs.core.async.reduce(cljs.core.conj, coll, ch);
};
cljs.core.async.take = function() {
  var take = null;
  var take__2 = function(n, ch) {
    return take.cljs$core$IFn$_invoke$arity$3(n, ch, null);
  };
  var take__3 = function(n, ch, buf_or_n) {
    var out = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(buf_or_n);
    var c__5952__auto___26103 = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(1);
    cljs.core.async.impl.dispatch.run(function() {
      var f__5953__auto__ = function() {
        var switch__5937__auto__ = function(state_26080) {
          var state_val_26081 = state_26080[1];
          if (state_val_26081 === 1) {
            var inst_26057 = 0;
            var state_26080__$1 = function() {
              var statearr_26082 = state_26080;
              statearr_26082[7] = inst_26057;
              return statearr_26082;
            }();
            var statearr_26083_26104 = state_26080__$1;
            statearr_26083_26104[2] = null;
            statearr_26083_26104[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_26081 === 2) {
              var inst_26057 = state_26080[7];
              var inst_26059 = inst_26057 < n;
              var state_26080__$1 = state_26080;
              if (cljs.core.truth_(inst_26059)) {
                var statearr_26084_26105 = state_26080__$1;
                statearr_26084_26105[1] = 4;
              } else {
                var statearr_26085_26106 = state_26080__$1;
                statearr_26085_26106[1] = 5;
              }
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
            } else {
              if (state_val_26081 === 3) {
                var inst_26077 = state_26080[2];
                var inst_26078 = cljs.core.async.close_BANG_(out);
                var state_26080__$1 = function() {
                  var statearr_26086 = state_26080;
                  statearr_26086[8] = inst_26077;
                  return statearr_26086;
                }();
                return cljs.core.async.impl.ioc_helpers.return_chan(state_26080__$1, inst_26078);
              } else {
                if (state_val_26081 === 4) {
                  var state_26080__$1 = state_26080;
                  return cljs.core.async.impl.ioc_helpers.take_BANG_(state_26080__$1, 7, ch);
                } else {
                  if (state_val_26081 === 5) {
                    var state_26080__$1 = state_26080;
                    var statearr_26087_26107 = state_26080__$1;
                    statearr_26087_26107[2] = null;
                    statearr_26087_26107[1] = 6;
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_26081 === 6) {
                      var inst_26075 = state_26080[2];
                      var state_26080__$1 = state_26080;
                      var statearr_26088_26108 = state_26080__$1;
                      statearr_26088_26108[2] = inst_26075;
                      statearr_26088_26108[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_26081 === 7) {
                        var inst_26062 = state_26080[9];
                        var inst_26062__$1 = state_26080[2];
                        var inst_26063 = inst_26062__$1 == null;
                        var inst_26064 = cljs.core.not(inst_26063);
                        var state_26080__$1 = function() {
                          var statearr_26089 = state_26080;
                          statearr_26089[9] = inst_26062__$1;
                          return statearr_26089;
                        }();
                        if (inst_26064) {
                          var statearr_26090_26109 = state_26080__$1;
                          statearr_26090_26109[1] = 8;
                        } else {
                          var statearr_26091_26110 = state_26080__$1;
                          statearr_26091_26110[1] = 9;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_26081 === 8) {
                          var inst_26062 = state_26080[9];
                          var state_26080__$1 = state_26080;
                          return cljs.core.async.impl.ioc_helpers.put_BANG_(state_26080__$1, 11, out, inst_26062);
                        } else {
                          if (state_val_26081 === 9) {
                            var state_26080__$1 = state_26080;
                            var statearr_26092_26111 = state_26080__$1;
                            statearr_26092_26111[2] = null;
                            statearr_26092_26111[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_26081 === 10) {
                              var inst_26072 = state_26080[2];
                              var state_26080__$1 = state_26080;
                              var statearr_26093_26112 = state_26080__$1;
                              statearr_26093_26112[2] = inst_26072;
                              statearr_26093_26112[1] = 6;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_26081 === 11) {
                                var inst_26057 = state_26080[7];
                                var inst_26067 = state_26080[2];
                                var inst_26068 = inst_26057 + 1;
                                var inst_26057__$1 = inst_26068;
                                var state_26080__$1 = function() {
                                  var statearr_26094 = state_26080;
                                  statearr_26094[10] = inst_26067;
                                  statearr_26094[7] = inst_26057__$1;
                                  return statearr_26094;
                                }();
                                var statearr_26095_26113 = state_26080__$1;
                                statearr_26095_26113[2] = null;
                                statearr_26095_26113[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                return null;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__5937__auto__) {
          return function() {
            var state_machine__5938__auto__ = null;
            var state_machine__5938__auto____0 = function() {
              var statearr_26099 = [null, null, null, null, null, null, null, null, null, null, null];
              statearr_26099[0] = state_machine__5938__auto__;
              statearr_26099[1] = 1;
              return statearr_26099;
            };
            var state_machine__5938__auto____1 = function(state_26080) {
              while (true) {
                var ret_value__5939__auto__ = function() {
                  try {
                    while (true) {
                      var result__5940__auto__ = switch__5937__auto__(state_26080);
                      if (cljs.core.keyword_identical_QMARK_(result__5940__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__5940__auto__;
                      }
                      break;
                    }
                  } catch (e26100) {
                    if (e26100 instanceof Object) {
                      var ex__5941__auto__ = e26100;
                      var statearr_26101_26114 = state_26080;
                      statearr_26101_26114[5] = ex__5941__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception(state_26080);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e26100;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_(ret_value__5939__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__26115 = state_26080;
                  state_26080 = G__26115;
                  continue;
                } else {
                  return ret_value__5939__auto__;
                }
                break;
              }
            };
            state_machine__5938__auto__ = function(state_26080) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5938__auto____0.call(this);
                case 1:
                  return state_machine__5938__auto____1.call(this, state_26080);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5938__auto____0;
            state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5938__auto____1;
            return state_machine__5938__auto__;
          }();
        }(switch__5937__auto__);
      }();
      var state__5954__auto__ = function() {
        var statearr_26102 = f__5953__auto__.cljs$core$IFn$_invoke$arity$0 ? f__5953__auto__.cljs$core$IFn$_invoke$arity$0() : f__5953__auto__.call(null);
        statearr_26102[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5952__auto___26103;
        return statearr_26102;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__5954__auto__);
    });
    return out;
  };
  take = function(n, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return take__2.call(this, n, ch);
      case 3:
        return take__3.call(this, n, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take.cljs$core$IFn$_invoke$arity$2 = take__2;
  take.cljs$core$IFn$_invoke$arity$3 = take__3;
  return take;
}();
cljs.core.async.unique = function() {
  var unique = null;
  var unique__1 = function(ch) {
    return unique.cljs$core$IFn$_invoke$arity$2(ch, null);
  };
  var unique__2 = function(ch, buf_or_n) {
    var out = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(buf_or_n);
    var c__5952__auto___26212 = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(1);
    cljs.core.async.impl.dispatch.run(function() {
      var f__5953__auto__ = function() {
        var switch__5937__auto__ = function(state_26187) {
          var state_val_26188 = state_26187[1];
          if (state_val_26188 === 1) {
            var inst_26164 = null;
            var state_26187__$1 = function() {
              var statearr_26189 = state_26187;
              statearr_26189[7] = inst_26164;
              return statearr_26189;
            }();
            var statearr_26190_26213 = state_26187__$1;
            statearr_26190_26213[2] = null;
            statearr_26190_26213[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_26188 === 2) {
              var state_26187__$1 = state_26187;
              return cljs.core.async.impl.ioc_helpers.take_BANG_(state_26187__$1, 4, ch);
            } else {
              if (state_val_26188 === 3) {
                var inst_26184 = state_26187[2];
                var inst_26185 = cljs.core.async.close_BANG_(out);
                var state_26187__$1 = function() {
                  var statearr_26191 = state_26187;
                  statearr_26191[8] = inst_26184;
                  return statearr_26191;
                }();
                return cljs.core.async.impl.ioc_helpers.return_chan(state_26187__$1, inst_26185);
              } else {
                if (state_val_26188 === 4) {
                  var inst_26167 = state_26187[9];
                  var inst_26167__$1 = state_26187[2];
                  var inst_26168 = inst_26167__$1 == null;
                  var inst_26169 = cljs.core.not(inst_26168);
                  var state_26187__$1 = function() {
                    var statearr_26192 = state_26187;
                    statearr_26192[9] = inst_26167__$1;
                    return statearr_26192;
                  }();
                  if (inst_26169) {
                    var statearr_26193_26214 = state_26187__$1;
                    statearr_26193_26214[1] = 5;
                  } else {
                    var statearr_26194_26215 = state_26187__$1;
                    statearr_26194_26215[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_26188 === 5) {
                    var inst_26167 = state_26187[9];
                    var inst_26164 = state_26187[7];
                    var inst_26171 = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(inst_26167, inst_26164);
                    var state_26187__$1 = state_26187;
                    if (inst_26171) {
                      var statearr_26195_26216 = state_26187__$1;
                      statearr_26195_26216[1] = 8;
                    } else {
                      var statearr_26196_26217 = state_26187__$1;
                      statearr_26196_26217[1] = 9;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_26188 === 6) {
                      var state_26187__$1 = state_26187;
                      var statearr_26198_26218 = state_26187__$1;
                      statearr_26198_26218[2] = null;
                      statearr_26198_26218[1] = 7;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_26188 === 7) {
                        var inst_26182 = state_26187[2];
                        var state_26187__$1 = state_26187;
                        var statearr_26199_26219 = state_26187__$1;
                        statearr_26199_26219[2] = inst_26182;
                        statearr_26199_26219[1] = 3;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_26188 === 8) {
                          var inst_26164 = state_26187[7];
                          var tmp26197 = inst_26164;
                          var inst_26164__$1 = tmp26197;
                          var state_26187__$1 = function() {
                            var statearr_26200 = state_26187;
                            statearr_26200[7] = inst_26164__$1;
                            return statearr_26200;
                          }();
                          var statearr_26201_26220 = state_26187__$1;
                          statearr_26201_26220[2] = null;
                          statearr_26201_26220[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_26188 === 9) {
                            var inst_26167 = state_26187[9];
                            var state_26187__$1 = state_26187;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_(state_26187__$1, 11, out, inst_26167);
                          } else {
                            if (state_val_26188 === 10) {
                              var inst_26179 = state_26187[2];
                              var state_26187__$1 = state_26187;
                              var statearr_26202_26221 = state_26187__$1;
                              statearr_26202_26221[2] = inst_26179;
                              statearr_26202_26221[1] = 7;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_26188 === 11) {
                                var inst_26167 = state_26187[9];
                                var inst_26176 = state_26187[2];
                                var inst_26164 = inst_26167;
                                var state_26187__$1 = function() {
                                  var statearr_26203 = state_26187;
                                  statearr_26203[7] = inst_26164;
                                  statearr_26203[10] = inst_26176;
                                  return statearr_26203;
                                }();
                                var statearr_26204_26222 = state_26187__$1;
                                statearr_26204_26222[2] = null;
                                statearr_26204_26222[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                return null;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__5937__auto__) {
          return function() {
            var state_machine__5938__auto__ = null;
            var state_machine__5938__auto____0 = function() {
              var statearr_26208 = [null, null, null, null, null, null, null, null, null, null, null];
              statearr_26208[0] = state_machine__5938__auto__;
              statearr_26208[1] = 1;
              return statearr_26208;
            };
            var state_machine__5938__auto____1 = function(state_26187) {
              while (true) {
                var ret_value__5939__auto__ = function() {
                  try {
                    while (true) {
                      var result__5940__auto__ = switch__5937__auto__(state_26187);
                      if (cljs.core.keyword_identical_QMARK_(result__5940__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__5940__auto__;
                      }
                      break;
                    }
                  } catch (e26209) {
                    if (e26209 instanceof Object) {
                      var ex__5941__auto__ = e26209;
                      var statearr_26210_26223 = state_26187;
                      statearr_26210_26223[5] = ex__5941__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception(state_26187);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e26209;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_(ret_value__5939__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__26224 = state_26187;
                  state_26187 = G__26224;
                  continue;
                } else {
                  return ret_value__5939__auto__;
                }
                break;
              }
            };
            state_machine__5938__auto__ = function(state_26187) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5938__auto____0.call(this);
                case 1:
                  return state_machine__5938__auto____1.call(this, state_26187);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5938__auto____0;
            state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5938__auto____1;
            return state_machine__5938__auto__;
          }();
        }(switch__5937__auto__);
      }();
      var state__5954__auto__ = function() {
        var statearr_26211 = f__5953__auto__.cljs$core$IFn$_invoke$arity$0 ? f__5953__auto__.cljs$core$IFn$_invoke$arity$0() : f__5953__auto__.call(null);
        statearr_26211[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5952__auto___26212;
        return statearr_26211;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__5954__auto__);
    });
    return out;
  };
  unique = function(ch, buf_or_n) {
    switch(arguments.length) {
      case 1:
        return unique__1.call(this, ch);
      case 2:
        return unique__2.call(this, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unique.cljs$core$IFn$_invoke$arity$1 = unique__1;
  unique.cljs$core$IFn$_invoke$arity$2 = unique__2;
  return unique;
}();
cljs.core.async.partition = function() {
  var partition = null;
  var partition__2 = function(n, ch) {
    return partition.cljs$core$IFn$_invoke$arity$3(n, ch, null);
  };
  var partition__3 = function(n, ch, buf_or_n) {
    var out = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(buf_or_n);
    var c__5952__auto___26359 = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(1);
    cljs.core.async.impl.dispatch.run(function() {
      var f__5953__auto__ = function() {
        var switch__5937__auto__ = function(state_26329) {
          var state_val_26330 = state_26329[1];
          if (state_val_26330 === 1) {
            var inst_26292 = new Array(n);
            var inst_26293 = inst_26292;
            var inst_26294 = 0;
            var state_26329__$1 = function() {
              var statearr_26331 = state_26329;
              statearr_26331[7] = inst_26293;
              statearr_26331[8] = inst_26294;
              return statearr_26331;
            }();
            var statearr_26332_26360 = state_26329__$1;
            statearr_26332_26360[2] = null;
            statearr_26332_26360[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_26330 === 2) {
              var state_26329__$1 = state_26329;
              return cljs.core.async.impl.ioc_helpers.take_BANG_(state_26329__$1, 4, ch);
            } else {
              if (state_val_26330 === 3) {
                var inst_26327 = state_26329[2];
                var state_26329__$1 = state_26329;
                return cljs.core.async.impl.ioc_helpers.return_chan(state_26329__$1, inst_26327);
              } else {
                if (state_val_26330 === 4) {
                  var inst_26297 = state_26329[9];
                  var inst_26297__$1 = state_26329[2];
                  var inst_26298 = inst_26297__$1 == null;
                  var inst_26299 = cljs.core.not(inst_26298);
                  var state_26329__$1 = function() {
                    var statearr_26333 = state_26329;
                    statearr_26333[9] = inst_26297__$1;
                    return statearr_26333;
                  }();
                  if (inst_26299) {
                    var statearr_26334_26361 = state_26329__$1;
                    statearr_26334_26361[1] = 5;
                  } else {
                    var statearr_26335_26362 = state_26329__$1;
                    statearr_26335_26362[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_26330 === 5) {
                    var inst_26293 = state_26329[7];
                    var inst_26302 = state_26329[10];
                    var inst_26294 = state_26329[8];
                    var inst_26297 = state_26329[9];
                    var inst_26301 = inst_26293[inst_26294] = inst_26297;
                    var inst_26302__$1 = inst_26294 + 1;
                    var inst_26303 = inst_26302__$1 < n;
                    var state_26329__$1 = function() {
                      var statearr_26336 = state_26329;
                      statearr_26336[11] = inst_26301;
                      statearr_26336[10] = inst_26302__$1;
                      return statearr_26336;
                    }();
                    if (cljs.core.truth_(inst_26303)) {
                      var statearr_26337_26363 = state_26329__$1;
                      statearr_26337_26363[1] = 8;
                    } else {
                      var statearr_26338_26364 = state_26329__$1;
                      statearr_26338_26364[1] = 9;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_26330 === 6) {
                      var inst_26294 = state_26329[8];
                      var inst_26315 = inst_26294 > 0;
                      var state_26329__$1 = state_26329;
                      if (cljs.core.truth_(inst_26315)) {
                        var statearr_26340_26365 = state_26329__$1;
                        statearr_26340_26365[1] = 12;
                      } else {
                        var statearr_26341_26366 = state_26329__$1;
                        statearr_26341_26366[1] = 13;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_26330 === 7) {
                        var inst_26325 = state_26329[2];
                        var state_26329__$1 = state_26329;
                        var statearr_26342_26367 = state_26329__$1;
                        statearr_26342_26367[2] = inst_26325;
                        statearr_26342_26367[1] = 3;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_26330 === 8) {
                          var inst_26293 = state_26329[7];
                          var inst_26302 = state_26329[10];
                          var tmp26339 = inst_26293;
                          var inst_26293__$1 = tmp26339;
                          var inst_26294 = inst_26302;
                          var state_26329__$1 = function() {
                            var statearr_26343 = state_26329;
                            statearr_26343[7] = inst_26293__$1;
                            statearr_26343[8] = inst_26294;
                            return statearr_26343;
                          }();
                          var statearr_26344_26368 = state_26329__$1;
                          statearr_26344_26368[2] = null;
                          statearr_26344_26368[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_26330 === 9) {
                            var inst_26293 = state_26329[7];
                            var inst_26307 = cljs.core.vec(inst_26293);
                            var state_26329__$1 = state_26329;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_(state_26329__$1, 11, out, inst_26307);
                          } else {
                            if (state_val_26330 === 10) {
                              var inst_26313 = state_26329[2];
                              var state_26329__$1 = state_26329;
                              var statearr_26345_26369 = state_26329__$1;
                              statearr_26345_26369[2] = inst_26313;
                              statearr_26345_26369[1] = 7;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_26330 === 11) {
                                var inst_26309 = state_26329[2];
                                var inst_26310 = new Array(n);
                                var inst_26293 = inst_26310;
                                var inst_26294 = 0;
                                var state_26329__$1 = function() {
                                  var statearr_26346 = state_26329;
                                  statearr_26346[7] = inst_26293;
                                  statearr_26346[12] = inst_26309;
                                  statearr_26346[8] = inst_26294;
                                  return statearr_26346;
                                }();
                                var statearr_26347_26370 = state_26329__$1;
                                statearr_26347_26370[2] = null;
                                statearr_26347_26370[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_26330 === 12) {
                                  var inst_26293 = state_26329[7];
                                  var inst_26317 = cljs.core.vec(inst_26293);
                                  var state_26329__$1 = state_26329;
                                  return cljs.core.async.impl.ioc_helpers.put_BANG_(state_26329__$1, 15, out, inst_26317);
                                } else {
                                  if (state_val_26330 === 13) {
                                    var state_26329__$1 = state_26329;
                                    var statearr_26348_26371 = state_26329__$1;
                                    statearr_26348_26371[2] = null;
                                    statearr_26348_26371[1] = 14;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    if (state_val_26330 === 14) {
                                      var inst_26322 = state_26329[2];
                                      var inst_26323 = cljs.core.async.close_BANG_(out);
                                      var state_26329__$1 = function() {
                                        var statearr_26349 = state_26329;
                                        statearr_26349[13] = inst_26322;
                                        return statearr_26349;
                                      }();
                                      var statearr_26350_26372 = state_26329__$1;
                                      statearr_26350_26372[2] = inst_26323;
                                      statearr_26350_26372[1] = 7;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                    } else {
                                      if (state_val_26330 === 15) {
                                        var inst_26319 = state_26329[2];
                                        var state_26329__$1 = state_26329;
                                        var statearr_26351_26373 = state_26329__$1;
                                        statearr_26351_26373[2] = inst_26319;
                                        statearr_26351_26373[1] = 14;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                      } else {
                                        return null;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__5937__auto__) {
          return function() {
            var state_machine__5938__auto__ = null;
            var state_machine__5938__auto____0 = function() {
              var statearr_26355 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_26355[0] = state_machine__5938__auto__;
              statearr_26355[1] = 1;
              return statearr_26355;
            };
            var state_machine__5938__auto____1 = function(state_26329) {
              while (true) {
                var ret_value__5939__auto__ = function() {
                  try {
                    while (true) {
                      var result__5940__auto__ = switch__5937__auto__(state_26329);
                      if (cljs.core.keyword_identical_QMARK_(result__5940__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__5940__auto__;
                      }
                      break;
                    }
                  } catch (e26356) {
                    if (e26356 instanceof Object) {
                      var ex__5941__auto__ = e26356;
                      var statearr_26357_26374 = state_26329;
                      statearr_26357_26374[5] = ex__5941__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception(state_26329);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e26356;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_(ret_value__5939__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__26375 = state_26329;
                  state_26329 = G__26375;
                  continue;
                } else {
                  return ret_value__5939__auto__;
                }
                break;
              }
            };
            state_machine__5938__auto__ = function(state_26329) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5938__auto____0.call(this);
                case 1:
                  return state_machine__5938__auto____1.call(this, state_26329);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5938__auto____0;
            state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5938__auto____1;
            return state_machine__5938__auto__;
          }();
        }(switch__5937__auto__);
      }();
      var state__5954__auto__ = function() {
        var statearr_26358 = f__5953__auto__.cljs$core$IFn$_invoke$arity$0 ? f__5953__auto__.cljs$core$IFn$_invoke$arity$0() : f__5953__auto__.call(null);
        statearr_26358[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5952__auto___26359;
        return statearr_26358;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__5954__auto__);
    });
    return out;
  };
  partition = function(n, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, ch);
      case 3:
        return partition__3.call(this, n, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
  partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
  return partition;
}();
cljs.core.async.partition_by = function() {
  var partition_by = null;
  var partition_by__2 = function(f, ch) {
    return partition_by.cljs$core$IFn$_invoke$arity$3(f, ch, null);
  };
  var partition_by__3 = function(f, ch, buf_or_n) {
    var out = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(buf_or_n);
    var c__5952__auto___26518 = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(1);
    cljs.core.async.impl.dispatch.run(function() {
      var f__5953__auto__ = function() {
        var switch__5937__auto__ = function(state_26488) {
          var state_val_26489 = state_26488[1];
          if (state_val_26489 === 1) {
            var inst_26447 = [];
            var inst_26448 = inst_26447;
            var inst_26449 = new cljs.core.Keyword("cljs.core.async", "nothing", "cljs.core.async/nothing", 4382193538);
            var state_26488__$1 = function() {
              var statearr_26490 = state_26488;
              statearr_26490[7] = inst_26449;
              statearr_26490[8] = inst_26448;
              return statearr_26490;
            }();
            var statearr_26491_26519 = state_26488__$1;
            statearr_26491_26519[2] = null;
            statearr_26491_26519[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_26489 === 2) {
              var state_26488__$1 = state_26488;
              return cljs.core.async.impl.ioc_helpers.take_BANG_(state_26488__$1, 4, ch);
            } else {
              if (state_val_26489 === 3) {
                var inst_26486 = state_26488[2];
                var state_26488__$1 = state_26488;
                return cljs.core.async.impl.ioc_helpers.return_chan(state_26488__$1, inst_26486);
              } else {
                if (state_val_26489 === 4) {
                  var inst_26452 = state_26488[9];
                  var inst_26452__$1 = state_26488[2];
                  var inst_26453 = inst_26452__$1 == null;
                  var inst_26454 = cljs.core.not(inst_26453);
                  var state_26488__$1 = function() {
                    var statearr_26492 = state_26488;
                    statearr_26492[9] = inst_26452__$1;
                    return statearr_26492;
                  }();
                  if (inst_26454) {
                    var statearr_26493_26520 = state_26488__$1;
                    statearr_26493_26520[1] = 5;
                  } else {
                    var statearr_26494_26521 = state_26488__$1;
                    statearr_26494_26521[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_26489 === 5) {
                    var inst_26449 = state_26488[7];
                    var inst_26456 = state_26488[10];
                    var inst_26452 = state_26488[9];
                    var inst_26456__$1 = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(inst_26452) : f.call(null, inst_26452);
                    var inst_26457 = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(inst_26456__$1, inst_26449);
                    var inst_26458 = cljs.core.keyword_identical_QMARK_(inst_26449, new cljs.core.Keyword("cljs.core.async", "nothing", "cljs.core.async/nothing", 4382193538));
                    var inst_26459 = inst_26457 || inst_26458;
                    var state_26488__$1 = function() {
                      var statearr_26495 = state_26488;
                      statearr_26495[10] = inst_26456__$1;
                      return statearr_26495;
                    }();
                    if (cljs.core.truth_(inst_26459)) {
                      var statearr_26496_26522 = state_26488__$1;
                      statearr_26496_26522[1] = 8;
                    } else {
                      var statearr_26497_26523 = state_26488__$1;
                      statearr_26497_26523[1] = 9;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_26489 === 6) {
                      var inst_26448 = state_26488[8];
                      var inst_26473 = inst_26448.length;
                      var inst_26474 = inst_26473 > 0;
                      var state_26488__$1 = state_26488;
                      if (cljs.core.truth_(inst_26474)) {
                        var statearr_26499_26524 = state_26488__$1;
                        statearr_26499_26524[1] = 12;
                      } else {
                        var statearr_26500_26525 = state_26488__$1;
                        statearr_26500_26525[1] = 13;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_26489 === 7) {
                        var inst_26484 = state_26488[2];
                        var state_26488__$1 = state_26488;
                        var statearr_26501_26526 = state_26488__$1;
                        statearr_26501_26526[2] = inst_26484;
                        statearr_26501_26526[1] = 3;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_26489 === 8) {
                          var inst_26456 = state_26488[10];
                          var inst_26452 = state_26488[9];
                          var inst_26448 = state_26488[8];
                          var inst_26461 = inst_26448.push(inst_26452);
                          var tmp26498 = inst_26448;
                          var inst_26448__$1 = tmp26498;
                          var inst_26449 = inst_26456;
                          var state_26488__$1 = function() {
                            var statearr_26502 = state_26488;
                            statearr_26502[11] = inst_26461;
                            statearr_26502[7] = inst_26449;
                            statearr_26502[8] = inst_26448__$1;
                            return statearr_26502;
                          }();
                          var statearr_26503_26527 = state_26488__$1;
                          statearr_26503_26527[2] = null;
                          statearr_26503_26527[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_26489 === 9) {
                            var inst_26448 = state_26488[8];
                            var inst_26464 = cljs.core.vec(inst_26448);
                            var state_26488__$1 = state_26488;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_(state_26488__$1, 11, out, inst_26464);
                          } else {
                            if (state_val_26489 === 10) {
                              var inst_26471 = state_26488[2];
                              var state_26488__$1 = state_26488;
                              var statearr_26504_26528 = state_26488__$1;
                              statearr_26504_26528[2] = inst_26471;
                              statearr_26504_26528[1] = 7;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_26489 === 11) {
                                var inst_26456 = state_26488[10];
                                var inst_26452 = state_26488[9];
                                var inst_26466 = state_26488[2];
                                var inst_26467 = [];
                                var inst_26468 = inst_26467.push(inst_26452);
                                var inst_26448 = inst_26467;
                                var inst_26449 = inst_26456;
                                var state_26488__$1 = function() {
                                  var statearr_26505 = state_26488;
                                  statearr_26505[12] = inst_26466;
                                  statearr_26505[13] = inst_26468;
                                  statearr_26505[7] = inst_26449;
                                  statearr_26505[8] = inst_26448;
                                  return statearr_26505;
                                }();
                                var statearr_26506_26529 = state_26488__$1;
                                statearr_26506_26529[2] = null;
                                statearr_26506_26529[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_26489 === 12) {
                                  var inst_26448 = state_26488[8];
                                  var inst_26476 = cljs.core.vec(inst_26448);
                                  var state_26488__$1 = state_26488;
                                  return cljs.core.async.impl.ioc_helpers.put_BANG_(state_26488__$1, 15, out, inst_26476);
                                } else {
                                  if (state_val_26489 === 13) {
                                    var state_26488__$1 = state_26488;
                                    var statearr_26507_26530 = state_26488__$1;
                                    statearr_26507_26530[2] = null;
                                    statearr_26507_26530[1] = 14;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    if (state_val_26489 === 14) {
                                      var inst_26481 = state_26488[2];
                                      var inst_26482 = cljs.core.async.close_BANG_(out);
                                      var state_26488__$1 = function() {
                                        var statearr_26508 = state_26488;
                                        statearr_26508[14] = inst_26481;
                                        return statearr_26508;
                                      }();
                                      var statearr_26509_26531 = state_26488__$1;
                                      statearr_26509_26531[2] = inst_26482;
                                      statearr_26509_26531[1] = 7;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                    } else {
                                      if (state_val_26489 === 15) {
                                        var inst_26478 = state_26488[2];
                                        var state_26488__$1 = state_26488;
                                        var statearr_26510_26532 = state_26488__$1;
                                        statearr_26510_26532[2] = inst_26478;
                                        statearr_26510_26532[1] = 14;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                      } else {
                                        return null;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__5937__auto__) {
          return function() {
            var state_machine__5938__auto__ = null;
            var state_machine__5938__auto____0 = function() {
              var statearr_26514 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_26514[0] = state_machine__5938__auto__;
              statearr_26514[1] = 1;
              return statearr_26514;
            };
            var state_machine__5938__auto____1 = function(state_26488) {
              while (true) {
                var ret_value__5939__auto__ = function() {
                  try {
                    while (true) {
                      var result__5940__auto__ = switch__5937__auto__(state_26488);
                      if (cljs.core.keyword_identical_QMARK_(result__5940__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__5940__auto__;
                      }
                      break;
                    }
                  } catch (e26515) {
                    if (e26515 instanceof Object) {
                      var ex__5941__auto__ = e26515;
                      var statearr_26516_26533 = state_26488;
                      statearr_26516_26533[5] = ex__5941__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception(state_26488);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e26515;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_(ret_value__5939__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__26534 = state_26488;
                  state_26488 = G__26534;
                  continue;
                } else {
                  return ret_value__5939__auto__;
                }
                break;
              }
            };
            state_machine__5938__auto__ = function(state_26488) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5938__auto____0.call(this);
                case 1:
                  return state_machine__5938__auto____1.call(this, state_26488);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5938__auto____0;
            state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5938__auto____1;
            return state_machine__5938__auto__;
          }();
        }(switch__5937__auto__);
      }();
      var state__5954__auto__ = function() {
        var statearr_26517 = f__5953__auto__.cljs$core$IFn$_invoke$arity$0 ? f__5953__auto__.cljs$core$IFn$_invoke$arity$0() : f__5953__auto__.call(null);
        statearr_26517[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5952__auto___26518;
        return statearr_26517;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__5954__auto__);
    });
    return out;
  };
  partition_by = function(f, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return partition_by__2.call(this, f, ch);
      case 3:
        return partition_by__3.call(this, f, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
  partition_by.cljs$core$IFn$_invoke$arity$3 = partition_by__3;
  return partition_by;
}();
goog.provide("big_bang.protocol");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("cljs.core.async");
big_bang.protocol.IChannelSource = function() {
  var obj41507 = {};
  return obj41507;
}();
big_bang.protocol.data_channel = function data_channel(this$) {
  if (function() {
    var and__3396__auto__ = this$;
    if (and__3396__auto__) {
      return this$.big_bang$protocol$IChannelSource$data_channel$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return this$.big_bang$protocol$IChannelSource$data_channel$arity$1(this$);
  } else {
    var x__4029__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3408__auto__ = big_bang.protocol.data_channel[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = big_bang.protocol.data_channel["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChannelSource.data-channel", this$);
        }
      }
    }().call(null, this$);
  }
};
big_bang.protocol.shutdown_BANG_ = function shutdown_BANG_(this$) {
  if (function() {
    var and__3396__auto__ = this$;
    if (and__3396__auto__) {
      return this$.big_bang$protocol$IChannelSource$shutdown_BANG_$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return this$.big_bang$protocol$IChannelSource$shutdown_BANG_$arity$1(this$);
  } else {
    var x__4029__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3408__auto__ = big_bang.protocol.shutdown_BANG_[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = big_bang.protocol.shutdown_BANG_["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChannelSource.shutdown!", this$);
        }
      }
    }().call(null, this$);
  }
};
big_bang.protocol.no_op = function no_op() {
  var c = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0();
  if (typeof big_bang.protocol.t41511 !== "undefined") {
  } else {
    big_bang.protocol.t41511 = function(c, no_op, meta41512) {
      this.c = c;
      this.no_op = no_op;
      this.meta41512 = meta41512;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    big_bang.protocol.t41511.cljs$lang$type = true;
    big_bang.protocol.t41511.cljs$lang$ctorStr = "big-bang.protocol/t41511";
    big_bang.protocol.t41511.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write(writer__3971__auto__, "big-bang.protocol/t41511");
    };
    big_bang.protocol.t41511.prototype.big_bang$protocol$IChannelSource$ = true;
    big_bang.protocol.t41511.prototype.big_bang$protocol$IChannelSource$data_channel$arity$1 = function(this$) {
      var self__ = this;
      var this$__$1 = this;
      return self__.c;
    };
    big_bang.protocol.t41511.prototype.big_bang$protocol$IChannelSource$shutdown_BANG_$arity$1 = function(this$) {
      var self__ = this;
      var this$__$1 = this;
      return big_bang.protocol.close_BANG_.cljs$core$IFn$_invoke$arity$1 ? big_bang.protocol.close_BANG_.cljs$core$IFn$_invoke$arity$1(self__.c) : big_bang.protocol.close_BANG_.call(null, self__.c);
    };
    big_bang.protocol.t41511.prototype.cljs$core$IMeta$_meta$arity$1 = function(_41513) {
      var self__ = this;
      var _41513__$1 = this;
      return self__.meta41512;
    };
    big_bang.protocol.t41511.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_41513, meta41512__$1) {
      var self__ = this;
      var _41513__$1 = this;
      return new big_bang.protocol.t41511(self__.c, self__.no_op, meta41512__$1);
    };
    big_bang.protocol.__GT_t41511 = function __GT_t41511(c__$1, no_op__$1, meta41512) {
      return new big_bang.protocol.t41511(c__$1, no_op__$1, meta41512);
    };
  }
  return new big_bang.protocol.t41511(c, no_op, null);
};
goog.provide("big_bang.timer");
goog.require("cljs.core");
goog.require("big_bang.protocol");
goog.require("cljs.core.async");
goog.require("big_bang.protocol");
goog.require("cljs.core.async");
big_bang.timer.interval_ticker = function() {
  var interval_ticker = null;
  var interval_ticker__1 = function(msec) {
    return interval_ticker.cljs$core$IFn$_invoke$arity$2(msec, function() {
      return(new Date).getTime();
    });
  };
  var interval_ticker__2 = function(msec, payload_generator_fn) {
    var comm_chan = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(1);
    var timer_chan = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(cljs.core.async.dropping_buffer(1));
    var interval_fn = function(comm_chan, timer_chan) {
      return function() {
        var c__5952__auto__ = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(1);
        cljs.core.async.impl.dispatch.run(function(c__5952__auto__, comm_chan, timer_chan) {
          return function() {
            var f__5953__auto__ = function() {
              var switch__5937__auto__ = function(c__5952__auto__, comm_chan, timer_chan) {
                return function(state_40574) {
                  var state_val_40575 = state_40574[1];
                  if (state_val_40575 === 7) {
                    var inst_40568 = state_40574[2];
                    var state_40574__$1 = state_40574;
                    var statearr_40576_40617 = state_40574__$1;
                    statearr_40576_40617[2] = inst_40568;
                    statearr_40576_40617[1] = 5;
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_40575 === 6) {
                      var inst_40562 = state_40574[7];
                      var inst_40566 = state_40574[2];
                      var state_40574__$1 = function() {
                        var statearr_40577 = state_40574;
                        statearr_40577[8] = inst_40566;
                        return statearr_40577;
                      }();
                      return cljs.core.async.impl.ioc_helpers.put_BANG_(state_40574__$1, 7, comm_chan, inst_40562);
                    } else {
                      if (state_val_40575 === 5) {
                        var inst_40572 = state_40574[2];
                        var state_40574__$1 = state_40574;
                        return cljs.core.async.impl.ioc_helpers.return_chan(state_40574__$1, inst_40572);
                      } else {
                        if (state_val_40575 === 4) {
                          var inst_40570 = cljs.core.async.close_BANG_(timer_chan);
                          var state_40574__$1 = state_40574;
                          var statearr_40578_40618 = state_40574__$1;
                          statearr_40578_40618[2] = inst_40570;
                          statearr_40578_40618[1] = 5;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_40575 === 3) {
                            var inst_40564 = payload_generator_fn.cljs$core$IFn$_invoke$arity$0 ? payload_generator_fn.cljs$core$IFn$_invoke$arity$0() : payload_generator_fn.call(null);
                            var state_40574__$1 = state_40574;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_(state_40574__$1, 6, timer_chan, inst_40564);
                          } else {
                            if (state_val_40575 === 2) {
                              var inst_40562 = state_40574[7];
                              var inst_40562__$1 = state_40574[2];
                              var state_40574__$1 = function() {
                                var statearr_40579 = state_40574;
                                statearr_40579[7] = inst_40562__$1;
                                return statearr_40579;
                              }();
                              if (cljs.core.truth_(inst_40562__$1)) {
                                var statearr_40580_40619 = state_40574__$1;
                                statearr_40580_40619[1] = 3;
                              } else {
                                var statearr_40581_40620 = state_40574__$1;
                                statearr_40581_40620[1] = 4;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_40575 === 1) {
                                var state_40574__$1 = state_40574;
                                return cljs.core.async.impl.ioc_helpers.take_BANG_(state_40574__$1, 2, comm_chan);
                              } else {
                                return null;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                };
              }(c__5952__auto__, comm_chan, timer_chan);
              return function(switch__5937__auto__, c__5952__auto__, comm_chan, timer_chan) {
                return function() {
                  var state_machine__5938__auto__ = null;
                  var state_machine__5938__auto____0 = function() {
                    var statearr_40585 = [null, null, null, null, null, null, null, null, null];
                    statearr_40585[0] = state_machine__5938__auto__;
                    statearr_40585[1] = 1;
                    return statearr_40585;
                  };
                  var state_machine__5938__auto____1 = function(state_40574) {
                    while (true) {
                      var ret_value__5939__auto__ = function() {
                        try {
                          while (true) {
                            var result__5940__auto__ = switch__5937__auto__(state_40574);
                            if (cljs.core.keyword_identical_QMARK_(result__5940__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                              continue;
                            } else {
                              return result__5940__auto__;
                            }
                            break;
                          }
                        } catch (e40586) {
                          if (e40586 instanceof Object) {
                            var ex__5941__auto__ = e40586;
                            var statearr_40587_40621 = state_40574;
                            statearr_40587_40621[5] = ex__5941__auto__;
                            cljs.core.async.impl.ioc_helpers.process_exception(state_40574);
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                              throw e40586;
                            } else {
                              return null;
                            }
                          }
                        }
                      }();
                      if (cljs.core.keyword_identical_QMARK_(ret_value__5939__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        var G__40622 = state_40574;
                        state_40574 = G__40622;
                        continue;
                      } else {
                        return ret_value__5939__auto__;
                      }
                      break;
                    }
                  };
                  state_machine__5938__auto__ = function(state_40574) {
                    switch(arguments.length) {
                      case 0:
                        return state_machine__5938__auto____0.call(this);
                      case 1:
                        return state_machine__5938__auto____1.call(this, state_40574);
                    }
                    throw new Error("Invalid arity: " + arguments.length);
                  };
                  state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5938__auto____0;
                  state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5938__auto____1;
                  return state_machine__5938__auto__;
                }();
              }(switch__5937__auto__, c__5952__auto__, comm_chan, timer_chan);
            }();
            var state__5954__auto__ = function() {
              var statearr_40588 = f__5953__auto__.cljs$core$IFn$_invoke$arity$0 ? f__5953__auto__.cljs$core$IFn$_invoke$arity$0() : f__5953__auto__.call(null);
              statearr_40588[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5952__auto__;
              return statearr_40588;
            }();
            return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__5954__auto__);
          };
        }(c__5952__auto__, comm_chan, timer_chan));
        return c__5952__auto__;
      };
    }(comm_chan, timer_chan);
    var interval_id = setInterval(interval_fn, msec);
    var c__5952__auto___40623 = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(1);
    cljs.core.async.impl.dispatch.run(function() {
      var f__5953__auto__ = function() {
        var switch__5937__auto__ = function(state_40592) {
          var state_val_40593 = state_40592[1];
          if (state_val_40593 === 2) {
            var inst_40590 = state_40592[2];
            var state_40592__$1 = state_40592;
            return cljs.core.async.impl.ioc_helpers.return_chan(state_40592__$1, inst_40590);
          } else {
            if (state_val_40593 === 1) {
              var state_40592__$1 = state_40592;
              return cljs.core.async.impl.ioc_helpers.put_BANG_(state_40592__$1, 2, comm_chan, interval_id);
            } else {
              return null;
            }
          }
        };
        return function(switch__5937__auto__) {
          return function() {
            var state_machine__5938__auto__ = null;
            var state_machine__5938__auto____0 = function() {
              var statearr_40597 = [null, null, null, null, null, null, null];
              statearr_40597[0] = state_machine__5938__auto__;
              statearr_40597[1] = 1;
              return statearr_40597;
            };
            var state_machine__5938__auto____1 = function(state_40592) {
              while (true) {
                var ret_value__5939__auto__ = function() {
                  try {
                    while (true) {
                      var result__5940__auto__ = switch__5937__auto__(state_40592);
                      if (cljs.core.keyword_identical_QMARK_(result__5940__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__5940__auto__;
                      }
                      break;
                    }
                  } catch (e40598) {
                    if (e40598 instanceof Object) {
                      var ex__5941__auto__ = e40598;
                      var statearr_40599_40624 = state_40592;
                      statearr_40599_40624[5] = ex__5941__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception(state_40592);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e40598;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_(ret_value__5939__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__40625 = state_40592;
                  state_40592 = G__40625;
                  continue;
                } else {
                  return ret_value__5939__auto__;
                }
                break;
              }
            };
            state_machine__5938__auto__ = function(state_40592) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5938__auto____0.call(this);
                case 1:
                  return state_machine__5938__auto____1.call(this, state_40592);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5938__auto____0;
            state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5938__auto____1;
            return state_machine__5938__auto__;
          }();
        }(switch__5937__auto__);
      }();
      var state__5954__auto__ = function() {
        var statearr_40600 = f__5953__auto__.cljs$core$IFn$_invoke$arity$0 ? f__5953__auto__.cljs$core$IFn$_invoke$arity$0() : f__5953__auto__.call(null);
        statearr_40600[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5952__auto___40623;
        return statearr_40600;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__5954__auto__);
    });
    if (typeof big_bang.timer.t40601 !== "undefined") {
    } else {
      big_bang.timer.t40601 = function(interval_id, interval_fn, timer_chan, comm_chan, payload_generator_fn, msec, interval_ticker, meta40602) {
        this.interval_id = interval_id;
        this.interval_fn = interval_fn;
        this.timer_chan = timer_chan;
        this.comm_chan = comm_chan;
        this.payload_generator_fn = payload_generator_fn;
        this.msec = msec;
        this.interval_ticker = interval_ticker;
        this.meta40602 = meta40602;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      big_bang.timer.t40601.cljs$lang$type = true;
      big_bang.timer.t40601.cljs$lang$ctorStr = "big-bang.timer/t40601";
      big_bang.timer.t40601.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
        return cljs.core._write(writer__3971__auto__, "big-bang.timer/t40601");
      };
      big_bang.timer.t40601.prototype.big_bang$protocol$IChannelSource$ = true;
      big_bang.timer.t40601.prototype.big_bang$protocol$IChannelSource$data_channel$arity$1 = function(this$) {
        var self__ = this;
        var this$__$1 = this;
        return self__.timer_chan;
      };
      big_bang.timer.t40601.prototype.big_bang$protocol$IChannelSource$shutdown_BANG_$arity$1 = function(this$) {
        var self__ = this;
        var this$__$1 = this;
        var c__5952__auto__ = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(1);
        cljs.core.async.impl.dispatch.run(function() {
          var f__5953__auto__ = function() {
            var switch__5937__auto__ = function(state_40607) {
              var state_val_40608 = state_40607[1];
              if (state_val_40608 === 1) {
                var inst_40604 = cljs.core.async.close_BANG_(self__.comm_chan);
                var inst_40605 = clearInterval(self__.interval_id);
                var state_40607__$1 = function() {
                  var statearr_40609 = state_40607;
                  statearr_40609[7] = inst_40604;
                  return statearr_40609;
                }();
                return cljs.core.async.impl.ioc_helpers.return_chan(state_40607__$1, inst_40605);
              } else {
                return null;
              }
            };
            return function(switch__5937__auto__) {
              return function() {
                var state_machine__5938__auto__ = null;
                var state_machine__5938__auto____0 = function() {
                  var statearr_40613 = [null, null, null, null, null, null, null, null];
                  statearr_40613[0] = state_machine__5938__auto__;
                  statearr_40613[1] = 1;
                  return statearr_40613;
                };
                var state_machine__5938__auto____1 = function(state_40607) {
                  while (true) {
                    var ret_value__5939__auto__ = function() {
                      try {
                        while (true) {
                          var result__5940__auto__ = switch__5937__auto__(state_40607);
                          if (cljs.core.keyword_identical_QMARK_(result__5940__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                            continue;
                          } else {
                            return result__5940__auto__;
                          }
                          break;
                        }
                      } catch (e40614) {
                        if (e40614 instanceof Object) {
                          var ex__5941__auto__ = e40614;
                          var statearr_40615_40626 = state_40607;
                          statearr_40615_40626[5] = ex__5941__auto__;
                          cljs.core.async.impl.ioc_helpers.process_exception(state_40607);
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                            throw e40614;
                          } else {
                            return null;
                          }
                        }
                      }
                    }();
                    if (cljs.core.keyword_identical_QMARK_(ret_value__5939__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                      var G__40627 = state_40607;
                      state_40607 = G__40627;
                      continue;
                    } else {
                      return ret_value__5939__auto__;
                    }
                    break;
                  }
                };
                state_machine__5938__auto__ = function(state_40607) {
                  switch(arguments.length) {
                    case 0:
                      return state_machine__5938__auto____0.call(this);
                    case 1:
                      return state_machine__5938__auto____1.call(this, state_40607);
                  }
                  throw new Error("Invalid arity: " + arguments.length);
                };
                state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5938__auto____0;
                state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5938__auto____1;
                return state_machine__5938__auto__;
              }();
            }(switch__5937__auto__);
          }();
          var state__5954__auto__ = function() {
            var statearr_40616 = f__5953__auto__.cljs$core$IFn$_invoke$arity$0 ? f__5953__auto__.cljs$core$IFn$_invoke$arity$0() : f__5953__auto__.call(null);
            statearr_40616[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5952__auto__;
            return statearr_40616;
          }();
          return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__5954__auto__);
        });
        return c__5952__auto__;
      };
      big_bang.timer.t40601.prototype.cljs$core$IMeta$_meta$arity$1 = function(_40603) {
        var self__ = this;
        var _40603__$1 = this;
        return self__.meta40602;
      };
      big_bang.timer.t40601.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_40603, meta40602__$1) {
        var self__ = this;
        var _40603__$1 = this;
        return new big_bang.timer.t40601(self__.interval_id, self__.interval_fn, self__.timer_chan, self__.comm_chan, self__.payload_generator_fn, self__.msec, self__.interval_ticker, meta40602__$1);
      };
      big_bang.timer.__GT_t40601 = function __GT_t40601(interval_id__$1, interval_fn__$1, timer_chan__$1, comm_chan__$1, payload_generator_fn__$1, msec__$1, interval_ticker__$1, meta40602) {
        return new big_bang.timer.t40601(interval_id__$1, interval_fn__$1, timer_chan__$1, comm_chan__$1, payload_generator_fn__$1, msec__$1, interval_ticker__$1, meta40602);
      };
    }
    return new big_bang.timer.t40601(interval_id, interval_fn, timer_chan, comm_chan, payload_generator_fn, msec, interval_ticker, null);
  };
  interval_ticker = function(msec, payload_generator_fn) {
    switch(arguments.length) {
      case 1:
        return interval_ticker__1.call(this, msec);
      case 2:
        return interval_ticker__2.call(this, msec, payload_generator_fn);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  interval_ticker.cljs$core$IFn$_invoke$arity$1 = interval_ticker__1;
  interval_ticker.cljs$core$IFn$_invoke$arity$2 = interval_ticker__2;
  return interval_ticker;
}();
goog.provide("dataview.loader");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("cljs.core.async");
dataview.loader.fetch_blob = function fetch_blob(url) {
  var xhr = new XMLHttpRequest;
  var chan = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0();
  var handler = function(xhr, chan) {
    return function(event) {
      var c__5952__auto__ = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(1);
      cljs.core.async.impl.dispatch.run(function(c__5952__auto__, xhr, chan) {
        return function() {
          var f__5953__auto__ = function() {
            var switch__5937__auto__ = function(c__5952__auto__, xhr, chan) {
              return function(state_26695) {
                var state_val_26696 = state_26695[1];
                if (state_val_26696 === 2) {
                  var inst_26692 = state_26695[2];
                  var inst_26693 = cljs.core.async.close_BANG_(chan);
                  var state_26695__$1 = function() {
                    var statearr_26697 = state_26695;
                    statearr_26697[7] = inst_26692;
                    return statearr_26697;
                  }();
                  return cljs.core.async.impl.ioc_helpers.return_chan(state_26695__$1, inst_26693);
                } else {
                  if (state_val_26696 === 1) {
                    var inst_26689 = xhr.response;
                    var inst_26690 = new DataView(inst_26689);
                    var state_26695__$1 = state_26695;
                    return cljs.core.async.impl.ioc_helpers.put_BANG_(state_26695__$1, 2, chan, inst_26690);
                  } else {
                    return null;
                  }
                }
              };
            }(c__5952__auto__, xhr, chan);
            return function(switch__5937__auto__, c__5952__auto__, xhr, chan) {
              return function() {
                var state_machine__5938__auto__ = null;
                var state_machine__5938__auto____0 = function() {
                  var statearr_26701 = [null, null, null, null, null, null, null, null];
                  statearr_26701[0] = state_machine__5938__auto__;
                  statearr_26701[1] = 1;
                  return statearr_26701;
                };
                var state_machine__5938__auto____1 = function(state_26695) {
                  while (true) {
                    var ret_value__5939__auto__ = function() {
                      try {
                        while (true) {
                          var result__5940__auto__ = switch__5937__auto__(state_26695);
                          if (cljs.core.keyword_identical_QMARK_(result__5940__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                            continue;
                          } else {
                            return result__5940__auto__;
                          }
                          break;
                        }
                      } catch (e26702) {
                        if (e26702 instanceof Object) {
                          var ex__5941__auto__ = e26702;
                          var statearr_26703_26705 = state_26695;
                          statearr_26703_26705[5] = ex__5941__auto__;
                          cljs.core.async.impl.ioc_helpers.process_exception(state_26695);
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                            throw e26702;
                          } else {
                            return null;
                          }
                        }
                      }
                    }();
                    if (cljs.core.keyword_identical_QMARK_(ret_value__5939__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                      var G__26706 = state_26695;
                      state_26695 = G__26706;
                      continue;
                    } else {
                      return ret_value__5939__auto__;
                    }
                    break;
                  }
                };
                state_machine__5938__auto__ = function(state_26695) {
                  switch(arguments.length) {
                    case 0:
                      return state_machine__5938__auto____0.call(this);
                    case 1:
                      return state_machine__5938__auto____1.call(this, state_26695);
                  }
                  throw new Error("Invalid arity: " + arguments.length);
                };
                state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5938__auto____0;
                state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5938__auto____1;
                return state_machine__5938__auto__;
              }();
            }(switch__5937__auto__, c__5952__auto__, xhr, chan);
          }();
          var state__5954__auto__ = function() {
            var statearr_26704 = f__5953__auto__.cljs$core$IFn$_invoke$arity$0 ? f__5953__auto__.cljs$core$IFn$_invoke$arity$0() : f__5953__auto__.call(null);
            statearr_26704[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5952__auto__;
            return statearr_26704;
          }();
          return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__5954__auto__);
        };
      }(c__5952__auto__, xhr, chan));
      return c__5952__auto__;
    };
  }(xhr, chan);
  xhr.open("GET", url, true);
  xhr.responseType = "arraybuffer";
  xhr.onload = handler;
  xhr.send();
  return chan;
};
dataview.loader.fetch_image = function fetch_image(url) {
  var img = new Image;
  var chan = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0();
  var handler = function(img, chan) {
    return function() {
      var c__5952__auto__ = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(1);
      cljs.core.async.impl.dispatch.run(function(c__5952__auto__, img, chan) {
        return function() {
          var f__5953__auto__ = function() {
            var switch__5937__auto__ = function(c__5952__auto__, img, chan) {
              return function(state_26725) {
                var state_val_26726 = state_26725[1];
                if (state_val_26726 === 2) {
                  var inst_26722 = state_26725[2];
                  var inst_26723 = cljs.core.async.close_BANG_(chan);
                  var state_26725__$1 = function() {
                    var statearr_26727 = state_26725;
                    statearr_26727[7] = inst_26722;
                    return statearr_26727;
                  }();
                  return cljs.core.async.impl.ioc_helpers.return_chan(state_26725__$1, inst_26723);
                } else {
                  if (state_val_26726 === 1) {
                    var state_26725__$1 = state_26725;
                    return cljs.core.async.impl.ioc_helpers.put_BANG_(state_26725__$1, 2, chan, img);
                  } else {
                    return null;
                  }
                }
              };
            }(c__5952__auto__, img, chan);
            return function(switch__5937__auto__, c__5952__auto__, img, chan) {
              return function() {
                var state_machine__5938__auto__ = null;
                var state_machine__5938__auto____0 = function() {
                  var statearr_26731 = [null, null, null, null, null, null, null, null];
                  statearr_26731[0] = state_machine__5938__auto__;
                  statearr_26731[1] = 1;
                  return statearr_26731;
                };
                var state_machine__5938__auto____1 = function(state_26725) {
                  while (true) {
                    var ret_value__5939__auto__ = function() {
                      try {
                        while (true) {
                          var result__5940__auto__ = switch__5937__auto__(state_26725);
                          if (cljs.core.keyword_identical_QMARK_(result__5940__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                            continue;
                          } else {
                            return result__5940__auto__;
                          }
                          break;
                        }
                      } catch (e26732) {
                        if (e26732 instanceof Object) {
                          var ex__5941__auto__ = e26732;
                          var statearr_26733_26735 = state_26725;
                          statearr_26733_26735[5] = ex__5941__auto__;
                          cljs.core.async.impl.ioc_helpers.process_exception(state_26725);
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                            throw e26732;
                          } else {
                            return null;
                          }
                        }
                      }
                    }();
                    if (cljs.core.keyword_identical_QMARK_(ret_value__5939__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                      var G__26736 = state_26725;
                      state_26725 = G__26736;
                      continue;
                    } else {
                      return ret_value__5939__auto__;
                    }
                    break;
                  }
                };
                state_machine__5938__auto__ = function(state_26725) {
                  switch(arguments.length) {
                    case 0:
                      return state_machine__5938__auto____0.call(this);
                    case 1:
                      return state_machine__5938__auto____1.call(this, state_26725);
                  }
                  throw new Error("Invalid arity: " + arguments.length);
                };
                state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5938__auto____0;
                state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5938__auto____1;
                return state_machine__5938__auto__;
              }();
            }(switch__5937__auto__, c__5952__auto__, img, chan);
          }();
          var state__5954__auto__ = function() {
            var statearr_26734 = f__5953__auto__.cljs$core$IFn$_invoke$arity$0 ? f__5953__auto__.cljs$core$IFn$_invoke$arity$0() : f__5953__auto__.call(null);
            statearr_26734[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5952__auto__;
            return statearr_26734;
          }();
          return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__5954__auto__);
        };
      }(c__5952__auto__, img, chan));
      return c__5952__auto__;
    };
  }(img, chan);
  img.onload = handler;
  img.crossOrigin = "anonymous";
  img.src = url;
  return chan;
};
dataview.loader.fetch_text = function fetch_text(url) {
  var xhr = new XMLHttpRequest;
  var chan = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0();
  var handler = function(xhr, chan) {
    return function(event) {
      var c__5952__auto__ = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(1);
      cljs.core.async.impl.dispatch.run(function(c__5952__auto__, xhr, chan) {
        return function() {
          var f__5953__auto__ = function() {
            var switch__5937__auto__ = function(c__5952__auto__, xhr, chan) {
              return function(state_26757) {
                var state_val_26758 = state_26757[1];
                if (state_val_26758 === 2) {
                  var inst_26754 = state_26757[2];
                  var inst_26755 = cljs.core.async.close_BANG_(chan);
                  var state_26757__$1 = function() {
                    var statearr_26759 = state_26757;
                    statearr_26759[7] = inst_26754;
                    return statearr_26759;
                  }();
                  return cljs.core.async.impl.ioc_helpers.return_chan(state_26757__$1, inst_26755);
                } else {
                  if (state_val_26758 === 1) {
                    var inst_26752 = xhr.response;
                    var state_26757__$1 = state_26757;
                    return cljs.core.async.impl.ioc_helpers.put_BANG_(state_26757__$1, 2, chan, inst_26752);
                  } else {
                    return null;
                  }
                }
              };
            }(c__5952__auto__, xhr, chan);
            return function(switch__5937__auto__, c__5952__auto__, xhr, chan) {
              return function() {
                var state_machine__5938__auto__ = null;
                var state_machine__5938__auto____0 = function() {
                  var statearr_26763 = [null, null, null, null, null, null, null, null];
                  statearr_26763[0] = state_machine__5938__auto__;
                  statearr_26763[1] = 1;
                  return statearr_26763;
                };
                var state_machine__5938__auto____1 = function(state_26757) {
                  while (true) {
                    var ret_value__5939__auto__ = function() {
                      try {
                        while (true) {
                          var result__5940__auto__ = switch__5937__auto__(state_26757);
                          if (cljs.core.keyword_identical_QMARK_(result__5940__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                            continue;
                          } else {
                            return result__5940__auto__;
                          }
                          break;
                        }
                      } catch (e26764) {
                        if (e26764 instanceof Object) {
                          var ex__5941__auto__ = e26764;
                          var statearr_26765_26767 = state_26757;
                          statearr_26765_26767[5] = ex__5941__auto__;
                          cljs.core.async.impl.ioc_helpers.process_exception(state_26757);
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                            throw e26764;
                          } else {
                            return null;
                          }
                        }
                      }
                    }();
                    if (cljs.core.keyword_identical_QMARK_(ret_value__5939__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                      var G__26768 = state_26757;
                      state_26757 = G__26768;
                      continue;
                    } else {
                      return ret_value__5939__auto__;
                    }
                    break;
                  }
                };
                state_machine__5938__auto__ = function(state_26757) {
                  switch(arguments.length) {
                    case 0:
                      return state_machine__5938__auto____0.call(this);
                    case 1:
                      return state_machine__5938__auto____1.call(this, state_26757);
                  }
                  throw new Error("Invalid arity: " + arguments.length);
                };
                state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5938__auto____0;
                state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5938__auto____1;
                return state_machine__5938__auto__;
              }();
            }(switch__5937__auto__, c__5952__auto__, xhr, chan);
          }();
          var state__5954__auto__ = function() {
            var statearr_26766 = f__5953__auto__.cljs$core$IFn$_invoke$arity$0 ? f__5953__auto__.cljs$core$IFn$_invoke$arity$0() : f__5953__auto__.call(null);
            statearr_26766[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5952__auto__;
            return statearr_26766;
          }();
          return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__5954__auto__);
        };
      }(c__5952__auto__, xhr, chan));
      return c__5952__auto__;
    };
  }(xhr, chan);
  xhr.open("GET", url, true);
  xhr.onload = handler;
  xhr.send();
  return chan;
};
goog.provide("big_bang.event_handler");
goog.require("cljs.core");
goog.require("big_bang.protocol");
goog.require("cljs.core.async");
goog.require("big_bang.protocol");
goog.require("cljs.core.async");
big_bang.event_handler.add_event_listener = function add_event_listener(element, event_type) {
  var ch = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0();
  var handler = function(ch) {
    return function(event) {
      var c__5952__auto__ = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(1);
      cljs.core.async.impl.dispatch.run(function(c__5952__auto__, ch) {
        return function() {
          var f__5953__auto__ = function() {
            var switch__5937__auto__ = function(c__5952__auto__, ch) {
              return function(state_46208) {
                var state_val_46209 = state_46208[1];
                if (state_val_46209 === 2) {
                  var inst_46206 = state_46208[2];
                  var state_46208__$1 = state_46208;
                  return cljs.core.async.impl.ioc_helpers.return_chan(state_46208__$1, inst_46206);
                } else {
                  if (state_val_46209 === 1) {
                    var state_46208__$1 = state_46208;
                    return cljs.core.async.impl.ioc_helpers.put_BANG_(state_46208__$1, 2, ch, event);
                  } else {
                    return null;
                  }
                }
              };
            }(c__5952__auto__, ch);
            return function(switch__5937__auto__, c__5952__auto__, ch) {
              return function() {
                var state_machine__5938__auto__ = null;
                var state_machine__5938__auto____0 = function() {
                  var statearr_46213 = [null, null, null, null, null, null, null];
                  statearr_46213[0] = state_machine__5938__auto__;
                  statearr_46213[1] = 1;
                  return statearr_46213;
                };
                var state_machine__5938__auto____1 = function(state_46208) {
                  while (true) {
                    var ret_value__5939__auto__ = function() {
                      try {
                        while (true) {
                          var result__5940__auto__ = switch__5937__auto__(state_46208);
                          if (cljs.core.keyword_identical_QMARK_(result__5940__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                            continue;
                          } else {
                            return result__5940__auto__;
                          }
                          break;
                        }
                      } catch (e46214) {
                        if (e46214 instanceof Object) {
                          var ex__5941__auto__ = e46214;
                          var statearr_46215_46220 = state_46208;
                          statearr_46215_46220[5] = ex__5941__auto__;
                          cljs.core.async.impl.ioc_helpers.process_exception(state_46208);
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                            throw e46214;
                          } else {
                            return null;
                          }
                        }
                      }
                    }();
                    if (cljs.core.keyword_identical_QMARK_(ret_value__5939__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                      var G__46221 = state_46208;
                      state_46208 = G__46221;
                      continue;
                    } else {
                      return ret_value__5939__auto__;
                    }
                    break;
                  }
                };
                state_machine__5938__auto__ = function(state_46208) {
                  switch(arguments.length) {
                    case 0:
                      return state_machine__5938__auto____0.call(this);
                    case 1:
                      return state_machine__5938__auto____1.call(this, state_46208);
                  }
                  throw new Error("Invalid arity: " + arguments.length);
                };
                state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5938__auto____0;
                state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5938__auto____1;
                return state_machine__5938__auto__;
              }();
            }(switch__5937__auto__, c__5952__auto__, ch);
          }();
          var state__5954__auto__ = function() {
            var statearr_46216 = f__5953__auto__.cljs$core$IFn$_invoke$arity$0 ? f__5953__auto__.cljs$core$IFn$_invoke$arity$0() : f__5953__auto__.call(null);
            statearr_46216[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5952__auto__;
            return statearr_46216;
          }();
          return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__5954__auto__);
        };
      }(c__5952__auto__, ch));
      return c__5952__auto__;
    };
  }(ch);
  element.addEventListener(cljs.core.name(event_type), handler);
  if (typeof big_bang.event_handler.t46217 !== "undefined") {
  } else {
    big_bang.event_handler.t46217 = function(handler, ch, event_type, element, add_event_listener, meta46218) {
      this.handler = handler;
      this.ch = ch;
      this.event_type = event_type;
      this.element = element;
      this.add_event_listener = add_event_listener;
      this.meta46218 = meta46218;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    big_bang.event_handler.t46217.cljs$lang$type = true;
    big_bang.event_handler.t46217.cljs$lang$ctorStr = "big-bang.event-handler/t46217";
    big_bang.event_handler.t46217.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write(writer__3971__auto__, "big-bang.event-handler/t46217");
    };
    big_bang.event_handler.t46217.prototype.big_bang$protocol$IChannelSource$ = true;
    big_bang.event_handler.t46217.prototype.big_bang$protocol$IChannelSource$data_channel$arity$1 = function(this$) {
      var self__ = this;
      var this$__$1 = this;
      return self__.ch;
    };
    big_bang.event_handler.t46217.prototype.big_bang$protocol$IChannelSource$shutdown_BANG_$arity$1 = function(this$) {
      var self__ = this;
      var this$__$1 = this;
      cljs.core.async.close_BANG_(self__.ch);
      return self__.element.removeEventListener(self__.handler);
    };
    big_bang.event_handler.t46217.prototype.cljs$core$IMeta$_meta$arity$1 = function(_46219) {
      var self__ = this;
      var _46219__$1 = this;
      return self__.meta46218;
    };
    big_bang.event_handler.t46217.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_46219, meta46218__$1) {
      var self__ = this;
      var _46219__$1 = this;
      return new big_bang.event_handler.t46217(self__.handler, self__.ch, self__.event_type, self__.element, self__.add_event_listener, meta46218__$1);
    };
    big_bang.event_handler.__GT_t46217 = function __GT_t46217(handler__$1, ch__$1, event_type__$1, element__$1, add_event_listener__$1, meta46218) {
      return new big_bang.event_handler.t46217(handler__$1, ch__$1, event_type__$1, element__$1, add_event_listener__$1, meta46218);
    };
  }
  return new big_bang.event_handler.t46217(handler, ch, event_type, element, add_event_listener, null);
};
big_bang.event_handler.prevent_default = function prevent_default(event) {
  return event.preventDefault();
};
big_bang.event_handler.stop_propagation = function stop_propagation(event) {
  return event.stopPropagation();
};
big_bang.event_handler.client_coords = function client_coords(event) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [event.clientX, event.clientY], null);
};
big_bang.event_handler.coords = function coords(event) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [event.x, event.y], null);
};
big_bang.event_handler.which = function which(event) {
  return event.which;
};
big_bang.event_handler.demo = function demo() {
  var listener = big_bang.event_handler.add_event_listener(document.body, new cljs.core.Keyword(null, "click", "click", 1108654330));
  var c__5952__auto___46316 = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(1);
  cljs.core.async.impl.dispatch.run(function() {
    var f__5953__auto__ = function() {
      var switch__5937__auto__ = function(state_46283) {
        var state_val_46284 = state_46283[1];
        if (state_val_46284 === 7) {
          var inst_46279 = state_46283[2];
          var state_46283__$1 = state_46283;
          var statearr_46285_46317 = state_46283__$1;
          statearr_46285_46317[2] = inst_46279;
          statearr_46285_46317[1] = 3;
          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
        } else {
          if (state_val_46284 === 6) {
            var state_46283__$1 = state_46283;
            var statearr_46286_46318 = state_46283__$1;
            statearr_46286_46318[2] = null;
            statearr_46286_46318[1] = 7;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_46284 === 5) {
              var inst_46272 = state_46283[7];
              var inst_46274 = big_bang.event_handler.coords(inst_46272);
              var inst_46275 = cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["recv: ", inst_46274], 0));
              var state_46283__$1 = function() {
                var statearr_46287 = state_46283;
                statearr_46287[8] = inst_46275;
                return statearr_46287;
              }();
              var statearr_46288_46319 = state_46283__$1;
              statearr_46288_46319[2] = null;
              statearr_46288_46319[1] = 2;
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
            } else {
              if (state_val_46284 === 4) {
                var inst_46272 = state_46283[7];
                var inst_46272__$1 = state_46283[2];
                var state_46283__$1 = function() {
                  var statearr_46289 = state_46283;
                  statearr_46289[7] = inst_46272__$1;
                  return statearr_46289;
                }();
                if (cljs.core.truth_(inst_46272__$1)) {
                  var statearr_46290_46320 = state_46283__$1;
                  statearr_46290_46320[1] = 5;
                } else {
                  var statearr_46291_46321 = state_46283__$1;
                  statearr_46291_46321[1] = 6;
                }
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_46284 === 3) {
                  var inst_46281 = state_46283[2];
                  var state_46283__$1 = state_46283;
                  return cljs.core.async.impl.ioc_helpers.return_chan(state_46283__$1, inst_46281);
                } else {
                  if (state_val_46284 === 2) {
                    var inst_46270 = listener.big_bang$protocol$IChannelSource$data_channel$arity$1(null);
                    var state_46283__$1 = state_46283;
                    return cljs.core.async.impl.ioc_helpers.take_BANG_(state_46283__$1, 4, inst_46270);
                  } else {
                    if (state_val_46284 === 1) {
                      var state_46283__$1 = state_46283;
                      var statearr_46292_46322 = state_46283__$1;
                      statearr_46292_46322[2] = null;
                      statearr_46292_46322[1] = 2;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      return null;
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__5937__auto__) {
        return function() {
          var state_machine__5938__auto__ = null;
          var state_machine__5938__auto____0 = function() {
            var statearr_46296 = [null, null, null, null, null, null, null, null, null];
            statearr_46296[0] = state_machine__5938__auto__;
            statearr_46296[1] = 1;
            return statearr_46296;
          };
          var state_machine__5938__auto____1 = function(state_46283) {
            while (true) {
              var ret_value__5939__auto__ = function() {
                try {
                  while (true) {
                    var result__5940__auto__ = switch__5937__auto__(state_46283);
                    if (cljs.core.keyword_identical_QMARK_(result__5940__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                      continue;
                    } else {
                      return result__5940__auto__;
                    }
                    break;
                  }
                } catch (e46297) {
                  if (e46297 instanceof Object) {
                    var ex__5941__auto__ = e46297;
                    var statearr_46298_46323 = state_46283;
                    statearr_46298_46323[5] = ex__5941__auto__;
                    cljs.core.async.impl.ioc_helpers.process_exception(state_46283);
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw e46297;
                    } else {
                      return null;
                    }
                  }
                }
              }();
              if (cljs.core.keyword_identical_QMARK_(ret_value__5939__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                var G__46324 = state_46283;
                state_46283 = G__46324;
                continue;
              } else {
                return ret_value__5939__auto__;
              }
              break;
            }
          };
          state_machine__5938__auto__ = function(state_46283) {
            switch(arguments.length) {
              case 0:
                return state_machine__5938__auto____0.call(this);
              case 1:
                return state_machine__5938__auto____1.call(this, state_46283);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5938__auto____0;
          state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5938__auto____1;
          return state_machine__5938__auto__;
        }();
      }(switch__5937__auto__);
    }();
    var state__5954__auto__ = function() {
      var statearr_46299 = f__5953__auto__.cljs$core$IFn$_invoke$arity$0 ? f__5953__auto__.cljs$core$IFn$_invoke$arity$0() : f__5953__auto__.call(null);
      statearr_46299[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5952__auto___46316;
      return statearr_46299;
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__5954__auto__);
  });
  var c__5952__auto__ = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(1);
  cljs.core.async.impl.dispatch.run(function() {
    var f__5953__auto__ = function() {
      var switch__5937__auto__ = function(state_46306) {
        var state_val_46307 = state_46306[1];
        if (state_val_46307 === 2) {
          var inst_46302 = state_46306[2];
          var inst_46303 = listener.big_bang$protocol$IChannelSource$shutdown_BANG_$arity$1(null);
          var inst_46304 = cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["Timed out"], 0));
          var state_46306__$1 = function() {
            var statearr_46308 = state_46306;
            statearr_46308[7] = inst_46303;
            statearr_46308[8] = inst_46302;
            return statearr_46308;
          }();
          return cljs.core.async.impl.ioc_helpers.return_chan(state_46306__$1, inst_46304);
        } else {
          if (state_val_46307 === 1) {
            var inst_46300 = cljs.core.async.timeout(2E4);
            var state_46306__$1 = state_46306;
            return cljs.core.async.impl.ioc_helpers.take_BANG_(state_46306__$1, 2, inst_46300);
          } else {
            return null;
          }
        }
      };
      return function(switch__5937__auto__) {
        return function() {
          var state_machine__5938__auto__ = null;
          var state_machine__5938__auto____0 = function() {
            var statearr_46312 = [null, null, null, null, null, null, null, null, null];
            statearr_46312[0] = state_machine__5938__auto__;
            statearr_46312[1] = 1;
            return statearr_46312;
          };
          var state_machine__5938__auto____1 = function(state_46306) {
            while (true) {
              var ret_value__5939__auto__ = function() {
                try {
                  while (true) {
                    var result__5940__auto__ = switch__5937__auto__(state_46306);
                    if (cljs.core.keyword_identical_QMARK_(result__5940__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                      continue;
                    } else {
                      return result__5940__auto__;
                    }
                    break;
                  }
                } catch (e46313) {
                  if (e46313 instanceof Object) {
                    var ex__5941__auto__ = e46313;
                    var statearr_46314_46325 = state_46306;
                    statearr_46314_46325[5] = ex__5941__auto__;
                    cljs.core.async.impl.ioc_helpers.process_exception(state_46306);
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw e46313;
                    } else {
                      return null;
                    }
                  }
                }
              }();
              if (cljs.core.keyword_identical_QMARK_(ret_value__5939__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                var G__46326 = state_46306;
                state_46306 = G__46326;
                continue;
              } else {
                return ret_value__5939__auto__;
              }
              break;
            }
          };
          state_machine__5938__auto__ = function(state_46306) {
            switch(arguments.length) {
              case 0:
                return state_machine__5938__auto____0.call(this);
              case 1:
                return state_machine__5938__auto____1.call(this, state_46306);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5938__auto____0;
          state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5938__auto____1;
          return state_machine__5938__auto__;
        }();
      }(switch__5937__auto__);
    }();
    var state__5954__auto__ = function() {
      var statearr_46315 = f__5953__auto__.cljs$core$IFn$_invoke$arity$0 ? f__5953__auto__.cljs$core$IFn$_invoke$arity$0() : f__5953__auto__.call(null);
      statearr_46315[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5952__auto__;
      return statearr_46315;
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__5954__auto__);
  });
  return c__5952__auto__;
};
goog.provide("big_bang.package$");
goog.require("cljs.core");
big_bang.package$.package_QMARK_ = function package_QMARK_(x) {
  return cljs.core.contains_QMARK_(x, new cljs.core.Keyword(null, "message", "message", 1968829305)) && cljs.core.contains_QMARK_(x, new cljs.core.Keyword(null, "world-state", "world-state", 894595592));
};
big_bang.package$.make_package = function make_package(world_state, message) {
  return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "world-state", "world-state", 894595592), world_state, new cljs.core.Keyword(null, "message", "message", 1968829305), message], null);
};
big_bang.package$.extract_world_state = function extract_world_state(x) {
  if (big_bang.package$.package_QMARK_(x)) {
    return(new cljs.core.Keyword(null, "world-state", "world-state", 894595592)).cljs$core$IFn$_invoke$arity$1(x);
  } else {
    return x;
  }
};
big_bang.package$.extract_message = function extract_message(x) {
  return(new cljs.core.Keyword(null, "message", "message", 1968829305)).cljs$core$IFn$_invoke$arity$1(x);
};
goog.provide("big_bang.core");
goog.require("cljs.core");
goog.require("big_bang.event_handler");
goog.require("big_bang.protocol");
goog.require("big_bang.timer");
goog.require("cljs.core.async");
goog.require("big_bang.package$");
goog.require("big_bang.event_handler");
goog.require("big_bang.timer");
goog.require("big_bang.package$");
goog.require("big_bang.protocol");
goog.require("cljs.core.async");
big_bang.core.animation_frame = function() {
  var or__3408__auto__ = window.requestAnimationFrame;
  if (cljs.core.truth_(or__3408__auto__)) {
    return or__3408__auto__;
  } else {
    var or__3408__auto____$1 = window.webkitRequestAnimationFrame;
    if (cljs.core.truth_(or__3408__auto____$1)) {
      return or__3408__auto____$1;
    } else {
      var or__3408__auto____$2 = window.mozRequestAnimationFrame;
      if (cljs.core.truth_(or__3408__auto____$2)) {
        return or__3408__auto____$2;
      } else {
        var or__3408__auto____$3 = window.oRequestAnimationFrame;
        if (cljs.core.truth_(or__3408__auto____$3)) {
          return or__3408__auto____$3;
        } else {
          var or__3408__auto____$4 = window.msRequestAnimationFrame;
          if (cljs.core.truth_(or__3408__auto____$4)) {
            return or__3408__auto____$4;
          } else {
            return function(callback) {
              return setTimeout(callback, 17);
            };
          }
        }
      }
    }
  }
}();
big_bang.core.send_message = function send_message(chan, msg) {
  if (cljs.core.truth_(function() {
    var and__3396__auto__ = chan;
    if (cljs.core.truth_(and__3396__auto__)) {
      return msg;
    } else {
      return and__3396__auto__;
    }
  }())) {
    return cljs.core.async._GT__BANG_(chan, msg);
  } else {
    return null;
  }
};
big_bang.core.big_bang_BANG_ = function() {
  var big_bang_BANG___delegate = function(p__45231) {
    var map__45351 = p__45231;
    var map__45351__$1 = cljs.core.seq_QMARK_(map__45351) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__45351) : map__45351;
    var on_tick = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__45351__$1, new cljs.core.Keyword(null, "on-tick", "on-tick", 3936889917));
    var on_receive = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__45351__$1, new cljs.core.Keyword(null, "on-receive", "on-receive", 1623591015));
    var initial_state = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__45351__$1, new cljs.core.Keyword(null, "initial-state", "initial-state", 4067401786));
    var on_key = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__45351__$1, new cljs.core.Keyword(null, "on-key", "on-key", 4294773987));
    var playback = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__45351__$1, new cljs.core.Keyword(null, "playback", "playback", 2893072781));
    var on_release = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__45351__$1, new cljs.core.Keyword(null, "on-release", "on-release", 1631894923));
    var receive_channel = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__45351__$1, new cljs.core.Keyword(null, "receive-channel", "receive-channel", 1001272203));
    var tick_rate = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__45351__$1, new cljs.core.Keyword(null, "tick-rate", "tick-rate", 890997378));
    var on_mouse = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__45351__$1, new cljs.core.Keyword(null, "on-mouse", "on-mouse", 1425878697));
    var record_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__45351__$1, new cljs.core.Keyword(null, "record?", "record?", 2096501120));
    var frame_limit = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__45351__$1, new cljs.core.Keyword(null, "frame-limit", "frame-limit", 4073944781));
    var send_channel = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__45351__$1, new cljs.core.Keyword(null, "send-channel", "send-channel", 3227589424));
    var to_draw = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__45351__$1, new cljs.core.Keyword(null, "to-draw", "to-draw", 4107602120));
    var stop_when_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__45351__$1, new cljs.core.Keyword(null, "stop-when?", "stop-when?", 2874360364));
    var history_builder = cljs.core.truth_(record_QMARK_) ? cljs.core.conj : cljs.core.constantly(null);
    var limit_reached_QMARK_ = cljs.core.truth_(frame_limit) ? function(history_builder) {
      return function(p1__45230_SHARP_) {
        return p1__45230_SHARP_ > frame_limit;
      };
    }(history_builder) : cljs.core.constantly(false);
    var stop_when_QMARK___$1 = function() {
      var or__3408__auto__ = stop_when_QMARK_;
      if (cljs.core.truth_(or__3408__auto__)) {
        return or__3408__auto__;
      } else {
        return cljs.core.constantly(false);
      }
    }();
    var ticker = big_bang.timer.interval_ticker.cljs$core$IFn$_invoke$arity$1(function() {
      var or__3408__auto__ = tick_rate;
      if (cljs.core.truth_(or__3408__auto__)) {
        return or__3408__auto__;
      } else {
        return 17;
      }
    }());
    var keydown_handler = cljs.core.truth_(on_key) ? big_bang.event_handler.add_event_listener(document.body, new cljs.core.Keyword(null, "keydown", "keydown", 4493897459)) : big_bang.protocol.no_op();
    var mouse_handler = cljs.core.truth_(on_mouse) ? big_bang.event_handler.add_event_listener(document.body, new cljs.core.Keyword(null, "click", "click", 1108654330)) : big_bang.protocol.no_op();
    var c__5952__auto__ = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(1);
    cljs.core.async.impl.dispatch.run(function() {
      var f__5953__auto__ = function() {
        var switch__5937__auto__ = function(state_45426) {
          var state_val_45427 = state_45426[1];
          if (state_val_45427 === 1) {
            var inst_45352 = initial_state;
            var inst_45353 = cljs.core.PersistentVector.EMPTY;
            var inst_45354 = 0;
            var state_45426__$1 = function() {
              var statearr_45428 = state_45426;
              statearr_45428[7] = inst_45352;
              statearr_45428[8] = inst_45353;
              statearr_45428[9] = inst_45354;
              return statearr_45428;
            }();
            var statearr_45429_45470 = state_45426__$1;
            statearr_45429_45470[2] = null;
            statearr_45429_45470[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_45427 === 2) {
              var inst_45363 = state_45426[10];
              var inst_45364 = state_45426[11];
              var inst_45362 = state_45426[12];
              var inst_45362__$1 = big_bang.protocol.data_channel(keydown_handler);
              var inst_45363__$1 = big_bang.protocol.data_channel(mouse_handler);
              var inst_45364__$1 = ticker.big_bang$protocol$IChannelSource$data_channel$arity$1(null);
              var inst_45365 = [inst_45362__$1, inst_45363__$1, inst_45364__$1];
              var inst_45366 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, inst_45365, null);
              var state_45426__$1 = function() {
                var statearr_45430 = state_45426;
                statearr_45430[10] = inst_45363__$1;
                statearr_45430[11] = inst_45364__$1;
                statearr_45430[12] = inst_45362__$1;
                return statearr_45430;
              }();
              return cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_(state_45426__$1, 4, inst_45366);
            } else {
              if (state_val_45427 === 3) {
                var inst_45424 = state_45426[2];
                var state_45426__$1 = state_45426;
                return cljs.core.async.impl.ioc_helpers.return_chan(state_45426__$1, inst_45424);
              } else {
                if (state_val_45427 === 4) {
                  var inst_45370 = state_45426[13];
                  var inst_45368 = state_45426[14];
                  var inst_45362 = state_45426[12];
                  var inst_45368__$1 = state_45426[2];
                  var inst_45369 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_45368__$1, 0, null);
                  var inst_45370__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_45368__$1, 1, null);
                  var inst_45371 = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(inst_45370__$1, inst_45362);
                  var state_45426__$1 = function() {
                    var statearr_45431 = state_45426;
                    statearr_45431[13] = inst_45370__$1;
                    statearr_45431[15] = inst_45369;
                    statearr_45431[14] = inst_45368__$1;
                    return statearr_45431;
                  }();
                  if (inst_45371) {
                    var statearr_45432_45471 = state_45426__$1;
                    statearr_45432_45471[1] = 5;
                  } else {
                    var statearr_45433_45472 = state_45426__$1;
                    statearr_45433_45472[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_45427 === 5) {
                    var inst_45352 = state_45426[7];
                    var inst_45368 = state_45426[14];
                    var inst_45374 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_45368, 0, null);
                    var inst_45375 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_45368, 1, null);
                    var inst_45376 = on_key.cljs$core$IFn$_invoke$arity$2 ? on_key.cljs$core$IFn$_invoke$arity$2(inst_45374, inst_45352) : on_key.call(null, inst_45374, inst_45352);
                    var state_45426__$1 = function() {
                      var statearr_45434 = state_45426;
                      statearr_45434[16] = inst_45375;
                      return statearr_45434;
                    }();
                    var statearr_45435_45473 = state_45426__$1;
                    statearr_45435_45473[2] = inst_45376;
                    statearr_45435_45473[1] = 7;
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_45427 === 6) {
                      var inst_45370 = state_45426[13];
                      var inst_45363 = state_45426[10];
                      var inst_45378 = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(inst_45370, inst_45363);
                      var state_45426__$1 = state_45426;
                      if (inst_45378) {
                        var statearr_45436_45474 = state_45426__$1;
                        statearr_45436_45474[1] = 8;
                      } else {
                        var statearr_45437_45475 = state_45426__$1;
                        statearr_45437_45475[1] = 9;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_45427 === 7) {
                        var inst_45402 = state_45426[17];
                        var inst_45404 = state_45426[18];
                        var inst_45406 = state_45426[19];
                        var inst_45354 = state_45426[9];
                        var inst_45402__$1 = state_45426[2];
                        var inst_45403 = big_bang.package$.extract_world_state(inst_45402__$1);
                        var inst_45404__$1 = big_bang.package$.extract_message(inst_45402__$1);
                        var inst_45405 = big_bang.core.send_message(send_channel, inst_45404__$1);
                        var inst_45406__$1 = limit_reached_QMARK_.cljs$core$IFn$_invoke$arity$1 ? limit_reached_QMARK_.cljs$core$IFn$_invoke$arity$1(inst_45354) : limit_reached_QMARK_.call(null, inst_45354);
                        var state_45426__$1 = function() {
                          var statearr_45438 = state_45426;
                          statearr_45438[17] = inst_45402__$1;
                          statearr_45438[20] = inst_45403;
                          statearr_45438[18] = inst_45404__$1;
                          statearr_45438[21] = inst_45405;
                          statearr_45438[19] = inst_45406__$1;
                          return statearr_45438;
                        }();
                        if (cljs.core.truth_(inst_45406__$1)) {
                          var statearr_45439_45476 = state_45426__$1;
                          statearr_45439_45476[1] = 17;
                        } else {
                          var statearr_45440_45477 = state_45426__$1;
                          statearr_45440_45477[1] = 18;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_45427 === 8) {
                          var inst_45352 = state_45426[7];
                          var inst_45368 = state_45426[14];
                          var inst_45381 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_45368, 0, null);
                          var inst_45382 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_45368, 1, null);
                          var inst_45383 = on_mouse.cljs$core$IFn$_invoke$arity$2 ? on_mouse.cljs$core$IFn$_invoke$arity$2(inst_45381, inst_45352) : on_mouse.call(null, inst_45381, inst_45352);
                          var state_45426__$1 = function() {
                            var statearr_45441 = state_45426;
                            statearr_45441[22] = inst_45382;
                            return statearr_45441;
                          }();
                          var statearr_45442_45478 = state_45426__$1;
                          statearr_45442_45478[2] = inst_45383;
                          statearr_45442_45478[1] = 10;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_45427 === 9) {
                            var inst_45370 = state_45426[13];
                            var inst_45364 = state_45426[11];
                            var inst_45385 = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(inst_45370, inst_45364);
                            var state_45426__$1 = state_45426;
                            if (inst_45385) {
                              var statearr_45443_45479 = state_45426__$1;
                              statearr_45443_45479[1] = 11;
                            } else {
                              var statearr_45444_45480 = state_45426__$1;
                              statearr_45444_45480[1] = 12;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_45427 === 10) {
                              var inst_45400 = state_45426[2];
                              var state_45426__$1 = state_45426;
                              var statearr_45445_45481 = state_45426__$1;
                              statearr_45445_45481[2] = inst_45400;
                              statearr_45445_45481[1] = 7;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_45427 === 11) {
                                var inst_45352 = state_45426[7];
                                var inst_45368 = state_45426[14];
                                var inst_45388 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_45368, 0, null);
                                var inst_45389 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_45368, 1, null);
                                var inst_45390 = on_tick.cljs$core$IFn$_invoke$arity$1 ? on_tick.cljs$core$IFn$_invoke$arity$1(inst_45352) : on_tick.call(null, inst_45352);
                                var state_45426__$1 = function() {
                                  var statearr_45446 = state_45426;
                                  statearr_45446[23] = inst_45389;
                                  statearr_45446[24] = inst_45388;
                                  return statearr_45446;
                                }();
                                var statearr_45447_45482 = state_45426__$1;
                                statearr_45447_45482[2] = inst_45390;
                                statearr_45447_45482[1] = 13;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_45427 === 12) {
                                  var inst_45370 = state_45426[13];
                                  var inst_45392 = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(inst_45370, new cljs.core.Keyword(null, "default", "default", 2558708147));
                                  var state_45426__$1 = state_45426;
                                  if (inst_45392) {
                                    var statearr_45448_45483 = state_45426__$1;
                                    statearr_45448_45483[1] = 14;
                                  } else {
                                    var statearr_45449_45484 = state_45426__$1;
                                    statearr_45449_45484[1] = 15;
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_45427 === 13) {
                                    var inst_45398 = state_45426[2];
                                    var state_45426__$1 = state_45426;
                                    var statearr_45450_45485 = state_45426__$1;
                                    statearr_45450_45485[2] = inst_45398;
                                    statearr_45450_45485[1] = 10;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    if (state_val_45427 === 14) {
                                      var inst_45369 = state_45426[15];
                                      var state_45426__$1 = state_45426;
                                      var statearr_45451_45486 = state_45426__$1;
                                      statearr_45451_45486[2] = inst_45369;
                                      statearr_45451_45486[1] = 16;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                    } else {
                                      if (state_val_45427 === 15) {
                                        var state_45426__$1 = state_45426;
                                        var statearr_45452_45487 = state_45426__$1;
                                        statearr_45452_45487[2] = null;
                                        statearr_45452_45487[1] = 16;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                      } else {
                                        if (state_val_45427 === 16) {
                                          var inst_45396 = state_45426[2];
                                          var state_45426__$1 = state_45426;
                                          var statearr_45453_45488 = state_45426__$1;
                                          statearr_45453_45488[2] = inst_45396;
                                          statearr_45453_45488[1] = 13;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                        } else {
                                          if (state_val_45427 === 17) {
                                            var inst_45406 = state_45426[19];
                                            var state_45426__$1 = state_45426;
                                            var statearr_45454_45489 = state_45426__$1;
                                            statearr_45454_45489[2] = inst_45406;
                                            statearr_45454_45489[1] = 19;
                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                          } else {
                                            if (state_val_45427 === 18) {
                                              var inst_45403 = state_45426[20];
                                              var inst_45409 = stop_when_QMARK___$1.cljs$core$IFn$_invoke$arity$1 ? stop_when_QMARK___$1.cljs$core$IFn$_invoke$arity$1(inst_45403) : stop_when_QMARK___$1.call(null, inst_45403);
                                              var state_45426__$1 = state_45426;
                                              var statearr_45455_45490 = state_45426__$1;
                                              statearr_45455_45490[2] = inst_45409;
                                              statearr_45455_45490[1] = 19;
                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                            } else {
                                              if (state_val_45427 === 19) {
                                                var inst_45411 = state_45426[2];
                                                var state_45426__$1 = state_45426;
                                                if (cljs.core.truth_(inst_45411)) {
                                                  var statearr_45456_45491 = state_45426__$1;
                                                  statearr_45456_45491[1] = 20;
                                                } else {
                                                  var statearr_45457_45492 = state_45426__$1;
                                                  statearr_45457_45492[1] = 21;
                                                }
                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                              } else {
                                                if (state_val_45427 === 20) {
                                                  var inst_45353 = state_45426[8];
                                                  var inst_45413 = ticker.big_bang$protocol$IChannelSource$shutdown_BANG_$arity$1(null);
                                                  var inst_45414 = big_bang.protocol.shutdown_BANG_(keydown_handler);
                                                  var state_45426__$1 = function() {
                                                    var statearr_45458 = state_45426;
                                                    statearr_45458[25] = inst_45413;
                                                    statearr_45458[26] = inst_45414;
                                                    return statearr_45458;
                                                  }();
                                                  var statearr_45459_45493 = state_45426__$1;
                                                  statearr_45459_45493[2] = inst_45353;
                                                  statearr_45459_45493[1] = 22;
                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                } else {
                                                  if (state_val_45427 === 21) {
                                                    var inst_45402 = state_45426[17];
                                                    var inst_45403 = state_45426[20];
                                                    var inst_45404 = state_45426[18];
                                                    var inst_45352 = state_45426[7];
                                                    var inst_45353 = state_45426[8];
                                                    var inst_45354 = state_45426[9];
                                                    var inst_45416 = function() {
                                                      var message = inst_45404;
                                                      var next_world_state = inst_45403;
                                                      var handler_result = inst_45402;
                                                      var world_state = inst_45352;
                                                      var history = inst_45353;
                                                      var frame = inst_45354;
                                                      return function(message, next_world_state, handler_result, world_state, history, frame, inst_45402, inst_45403, inst_45404, inst_45352, inst_45353, inst_45354, state_val_45427) {
                                                        return function() {
                                                          return to_draw.cljs$core$IFn$_invoke$arity$1 ? to_draw.cljs$core$IFn$_invoke$arity$1(world_state) : to_draw.call(null, world_state);
                                                        };
                                                      }(message, next_world_state, handler_result, world_state, history, frame, inst_45402, inst_45403, inst_45404, inst_45352, inst_45353, inst_45354, state_val_45427);
                                                    }();
                                                    var inst_45417 = big_bang.core.animation_frame.cljs$core$IFn$_invoke$arity$1 ? big_bang.core.animation_frame.cljs$core$IFn$_invoke$arity$1(inst_45416) : big_bang.core.animation_frame.call(null, inst_45416);
                                                    var inst_45418 = history_builder.cljs$core$IFn$_invoke$arity$2 ? history_builder.cljs$core$IFn$_invoke$arity$2(inst_45353, inst_45403) : history_builder.call(null, inst_45353, inst_45403);
                                                    var inst_45419 = inst_45354 + 1;
                                                    var inst_45352__$1 = inst_45403;
                                                    var inst_45353__$1 = inst_45418;
                                                    var inst_45354__$1 = inst_45419;
                                                    var state_45426__$1 = function() {
                                                      var statearr_45460 = state_45426;
                                                      statearr_45460[7] = inst_45352__$1;
                                                      statearr_45460[8] = inst_45353__$1;
                                                      statearr_45460[27] = inst_45417;
                                                      statearr_45460[9] = inst_45354__$1;
                                                      return statearr_45460;
                                                    }();
                                                    var statearr_45461_45494 = state_45426__$1;
                                                    statearr_45461_45494[2] = null;
                                                    statearr_45461_45494[1] = 2;
                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                  } else {
                                                    if (state_val_45427 === 22) {
                                                      var inst_45422 = state_45426[2];
                                                      var state_45426__$1 = state_45426;
                                                      var statearr_45462_45495 = state_45426__$1;
                                                      statearr_45462_45495[2] = inst_45422;
                                                      statearr_45462_45495[1] = 3;
                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                    } else {
                                                      return null;
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__5937__auto__) {
          return function() {
            var state_machine__5938__auto__ = null;
            var state_machine__5938__auto____0 = function() {
              var statearr_45466 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_45466[0] = state_machine__5938__auto__;
              statearr_45466[1] = 1;
              return statearr_45466;
            };
            var state_machine__5938__auto____1 = function(state_45426) {
              while (true) {
                var ret_value__5939__auto__ = function() {
                  try {
                    while (true) {
                      var result__5940__auto__ = switch__5937__auto__(state_45426);
                      if (cljs.core.keyword_identical_QMARK_(result__5940__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__5940__auto__;
                      }
                      break;
                    }
                  } catch (e45467) {
                    if (e45467 instanceof Object) {
                      var ex__5941__auto__ = e45467;
                      var statearr_45468_45496 = state_45426;
                      statearr_45468_45496[5] = ex__5941__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception(state_45426);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e45467;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_(ret_value__5939__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__45497 = state_45426;
                  state_45426 = G__45497;
                  continue;
                } else {
                  return ret_value__5939__auto__;
                }
                break;
              }
            };
            state_machine__5938__auto__ = function(state_45426) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5938__auto____0.call(this);
                case 1:
                  return state_machine__5938__auto____1.call(this, state_45426);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5938__auto____0;
            state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5938__auto____1;
            return state_machine__5938__auto__;
          }();
        }(switch__5937__auto__);
      }();
      var state__5954__auto__ = function() {
        var statearr_45469 = f__5953__auto__.cljs$core$IFn$_invoke$arity$0 ? f__5953__auto__.cljs$core$IFn$_invoke$arity$0() : f__5953__auto__.call(null);
        statearr_45469[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5952__auto__;
        return statearr_45469;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__5954__auto__);
    });
    return c__5952__auto__;
  };
  var big_bang_BANG_ = function(var_args) {
    var p__45231 = null;
    if (arguments.length > 0) {
      p__45231 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return big_bang_BANG___delegate.call(this, p__45231);
  };
  big_bang_BANG_.cljs$lang$maxFixedArity = 0;
  big_bang_BANG_.cljs$lang$applyTo = function(arglist__45498) {
    var p__45231 = cljs.core.seq(arglist__45498);
    return big_bang_BANG___delegate(p__45231);
  };
  big_bang_BANG_.cljs$core$IFn$_invoke$arity$variadic = big_bang_BANG___delegate;
  return big_bang_BANG_;
}();
goog.provide("big_bang.examples.cat");
goog.require("cljs.core");
goog.require("dataview.loader");
goog.require("cljs.core.async");
goog.require("big_bang.timer");
goog.require("big_bang.core");
goog.require("big_bang.timer");
goog.require("big_bang.core");
goog.require("dataview.loader");
goog.require("cljs.core.async");
big_bang.examples.cat.proxy_request = function proxy_request(url) {
  return[cljs.core.str("http://programming-enchiladas.destructuring-bind.org/proxy?url\x3d"), cljs.core.str(encodeURI(url))].join("");
};
big_bang.examples.cat.increment_and_wrap = function increment_and_wrap(x, limit) {
  if (x < limit) {
    return x + 1;
  } else {
    return 0;
  }
};
big_bang.examples.cat.update_state = function update_state(p__22812) {
  var vec__22814 = p__22812;
  var x = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22814, 0, null);
  var y = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22814, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [big_bang.examples.cat.increment_and_wrap(x, 800), y], null);
};
big_bang.examples.cat.render_scene = function render_scene(ctx, cat_image, p__22815) {
  var vec__22817 = p__22815;
  var x = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22817, 0, null);
  var y = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22817, 1, null);
  ctx.clearRect(0, 0, 800, 600);
  return ctx.drawImage(cat_image, x, y);
};
big_bang.examples.cat.demo = function demo() {
  var cat_22946 = "https://gist.github.com/rm-hull/8859515c9dce89935ac2/raw/cat_08.jpg";
  var canvas_22947 = document.getElementById("cat-canvas");
  var ctx_22948 = canvas_22947.getContext("2d");
  var c__5952__auto___22949 = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(1);
  cljs.core.async.impl.dispatch.run(function() {
    var f__5953__auto__ = function() {
      var switch__5937__auto__ = function(state_22891) {
        var state_val_22892 = state_22891[1];
        if (state_val_22892 === 2) {
          var inst_22885 = state_22891[2];
          var inst_22886 = [0, 0];
          var inst_22887 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, inst_22886, null);
          var inst_22888 = cljs.core.partial.cljs$core$IFn$_invoke$arity$3(big_bang.examples.cat.render_scene, ctx_22948, inst_22885);
          var inst_22889 = big_bang.core.big_bang_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.Keyword(null, "initial-state", "initial-state", 4067401786), inst_22887, new cljs.core.Keyword(null, "on-tick", "on-tick", 3936889917), big_bang.examples.cat.update_state, new cljs.core.Keyword(null, "to-draw", "to-draw", 4107602120), inst_22888], 0));
          var state_22891__$1 = state_22891;
          return cljs.core.async.impl.ioc_helpers.return_chan(state_22891__$1, inst_22889);
        } else {
          if (state_val_22892 === 1) {
            var inst_22882 = big_bang.examples.cat.proxy_request(cat_22946);
            var inst_22883 = dataview.loader.fetch_image(inst_22882);
            var state_22891__$1 = state_22891;
            return cljs.core.async.impl.ioc_helpers.take_BANG_(state_22891__$1, 2, inst_22883);
          } else {
            return null;
          }
        }
      };
      return function(switch__5937__auto__) {
        return function() {
          var state_machine__5938__auto__ = null;
          var state_machine__5938__auto____0 = function() {
            var statearr_22896 = [null, null, null, null, null, null, null];
            statearr_22896[0] = state_machine__5938__auto__;
            statearr_22896[1] = 1;
            return statearr_22896;
          };
          var state_machine__5938__auto____1 = function(state_22891) {
            while (true) {
              var ret_value__5939__auto__ = function() {
                try {
                  while (true) {
                    var result__5940__auto__ = switch__5937__auto__(state_22891);
                    if (cljs.core.keyword_identical_QMARK_(result__5940__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                      continue;
                    } else {
                      return result__5940__auto__;
                    }
                    break;
                  }
                } catch (e22897) {
                  if (e22897 instanceof Object) {
                    var ex__5941__auto__ = e22897;
                    var statearr_22898_22950 = state_22891;
                    statearr_22898_22950[5] = ex__5941__auto__;
                    cljs.core.async.impl.ioc_helpers.process_exception(state_22891);
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw e22897;
                    } else {
                      return null;
                    }
                  }
                }
              }();
              if (cljs.core.keyword_identical_QMARK_(ret_value__5939__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                var G__22951 = state_22891;
                state_22891 = G__22951;
                continue;
              } else {
                return ret_value__5939__auto__;
              }
              break;
            }
          };
          state_machine__5938__auto__ = function(state_22891) {
            switch(arguments.length) {
              case 0:
                return state_machine__5938__auto____0.call(this);
              case 1:
                return state_machine__5938__auto____1.call(this, state_22891);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5938__auto____0;
          state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5938__auto____1;
          return state_machine__5938__auto__;
        }();
      }(switch__5937__auto__);
    }();
    var state__5954__auto__ = function() {
      var statearr_22899 = f__5953__auto__.cljs$core$IFn$_invoke$arity$0 ? f__5953__auto__.cljs$core$IFn$_invoke$arity$0() : f__5953__auto__.call(null);
      statearr_22899[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5952__auto___22949;
      return statearr_22899;
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__5954__auto__);
  });
  big_bang.examples.cat.ticker = big_bang.timer.interval_ticker.cljs$core$IFn$_invoke$arity$1(17);
  var c__5952__auto___22952 = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(1);
  cljs.core.async.impl.dispatch.run(function() {
    var f__5953__auto__ = function() {
      var switch__5937__auto__ = function(state_22914) {
        var state_val_22915 = state_22914[1];
        if (state_val_22915 === 7) {
          var inst_22910 = state_22914[2];
          var state_22914__$1 = state_22914;
          var statearr_22916_22953 = state_22914__$1;
          statearr_22916_22953[2] = inst_22910;
          statearr_22916_22953[1] = 3;
          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
        } else {
          if (state_val_22915 === 6) {
            var state_22914__$1 = state_22914;
            var statearr_22917_22954 = state_22914__$1;
            statearr_22917_22954[2] = null;
            statearr_22917_22954[1] = 7;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_22915 === 5) {
              var inst_22903 = state_22914[7];
              var inst_22905 = [cljs.core.str("Received: "), cljs.core.str(inst_22903)].join("");
              var inst_22906 = console.log(inst_22905);
              var state_22914__$1 = function() {
                var statearr_22918 = state_22914;
                statearr_22918[8] = inst_22906;
                return statearr_22918;
              }();
              var statearr_22919_22955 = state_22914__$1;
              statearr_22919_22955[2] = null;
              statearr_22919_22955[1] = 2;
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
            } else {
              if (state_val_22915 === 4) {
                var inst_22903 = state_22914[7];
                var inst_22903__$1 = state_22914[2];
                var state_22914__$1 = function() {
                  var statearr_22920 = state_22914;
                  statearr_22920[7] = inst_22903__$1;
                  return statearr_22920;
                }();
                if (cljs.core.truth_(inst_22903__$1)) {
                  var statearr_22921_22956 = state_22914__$1;
                  statearr_22921_22956[1] = 5;
                } else {
                  var statearr_22922_22957 = state_22914__$1;
                  statearr_22922_22957[1] = 6;
                }
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_22915 === 3) {
                  var inst_22912 = state_22914[2];
                  var state_22914__$1 = state_22914;
                  return cljs.core.async.impl.ioc_helpers.return_chan(state_22914__$1, inst_22912);
                } else {
                  if (state_val_22915 === 2) {
                    var inst_22901 = (new cljs.core.Keyword(null, "timer-chan", "timer-chan", 2628674636)).cljs$core$IFn$_invoke$arity$1(big_bang.examples.cat.ticker);
                    var state_22914__$1 = state_22914;
                    return cljs.core.async.impl.ioc_helpers.take_BANG_(state_22914__$1, 4, inst_22901);
                  } else {
                    if (state_val_22915 === 1) {
                      var state_22914__$1 = state_22914;
                      var statearr_22923_22958 = state_22914__$1;
                      statearr_22923_22958[2] = null;
                      statearr_22923_22958[1] = 2;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      return null;
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__5937__auto__) {
        return function() {
          var state_machine__5938__auto__ = null;
          var state_machine__5938__auto____0 = function() {
            var statearr_22927 = [null, null, null, null, null, null, null, null, null];
            statearr_22927[0] = state_machine__5938__auto__;
            statearr_22927[1] = 1;
            return statearr_22927;
          };
          var state_machine__5938__auto____1 = function(state_22914) {
            while (true) {
              var ret_value__5939__auto__ = function() {
                try {
                  while (true) {
                    var result__5940__auto__ = switch__5937__auto__(state_22914);
                    if (cljs.core.keyword_identical_QMARK_(result__5940__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                      continue;
                    } else {
                      return result__5940__auto__;
                    }
                    break;
                  }
                } catch (e22928) {
                  if (e22928 instanceof Object) {
                    var ex__5941__auto__ = e22928;
                    var statearr_22929_22959 = state_22914;
                    statearr_22929_22959[5] = ex__5941__auto__;
                    cljs.core.async.impl.ioc_helpers.process_exception(state_22914);
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw e22928;
                    } else {
                      return null;
                    }
                  }
                }
              }();
              if (cljs.core.keyword_identical_QMARK_(ret_value__5939__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                var G__22960 = state_22914;
                state_22914 = G__22960;
                continue;
              } else {
                return ret_value__5939__auto__;
              }
              break;
            }
          };
          state_machine__5938__auto__ = function(state_22914) {
            switch(arguments.length) {
              case 0:
                return state_machine__5938__auto____0.call(this);
              case 1:
                return state_machine__5938__auto____1.call(this, state_22914);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5938__auto____0;
          state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5938__auto____1;
          return state_machine__5938__auto__;
        }();
      }(switch__5937__auto__);
    }();
    var state__5954__auto__ = function() {
      var statearr_22930 = f__5953__auto__.cljs$core$IFn$_invoke$arity$0 ? f__5953__auto__.cljs$core$IFn$_invoke$arity$0() : f__5953__auto__.call(null);
      statearr_22930[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5952__auto___22952;
      return statearr_22930;
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__5954__auto__);
  });
  var c__5952__auto__ = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(1);
  cljs.core.async.impl.dispatch.run(function() {
    var f__5953__auto__ = function() {
      var switch__5937__auto__ = function(state_22936) {
        var state_val_22937 = state_22936[1];
        if (state_val_22937 === 2) {
          var inst_22933 = state_22936[2];
          var inst_22934 = big_bang.timer.stop_BANG_(big_bang.examples.cat.ticker);
          var state_22936__$1 = function() {
            var statearr_22938 = state_22936;
            statearr_22938[7] = inst_22933;
            return statearr_22938;
          }();
          return cljs.core.async.impl.ioc_helpers.return_chan(state_22936__$1, inst_22934);
        } else {
          if (state_val_22937 === 1) {
            var inst_22931 = cljs.core.async.timeout(2E3);
            var state_22936__$1 = state_22936;
            return cljs.core.async.impl.ioc_helpers.take_BANG_(state_22936__$1, 2, inst_22931);
          } else {
            return null;
          }
        }
      };
      return function(switch__5937__auto__) {
        return function() {
          var state_machine__5938__auto__ = null;
          var state_machine__5938__auto____0 = function() {
            var statearr_22942 = [null, null, null, null, null, null, null, null];
            statearr_22942[0] = state_machine__5938__auto__;
            statearr_22942[1] = 1;
            return statearr_22942;
          };
          var state_machine__5938__auto____1 = function(state_22936) {
            while (true) {
              var ret_value__5939__auto__ = function() {
                try {
                  while (true) {
                    var result__5940__auto__ = switch__5937__auto__(state_22936);
                    if (cljs.core.keyword_identical_QMARK_(result__5940__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                      continue;
                    } else {
                      return result__5940__auto__;
                    }
                    break;
                  }
                } catch (e22943) {
                  if (e22943 instanceof Object) {
                    var ex__5941__auto__ = e22943;
                    var statearr_22944_22961 = state_22936;
                    statearr_22944_22961[5] = ex__5941__auto__;
                    cljs.core.async.impl.ioc_helpers.process_exception(state_22936);
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw e22943;
                    } else {
                      return null;
                    }
                  }
                }
              }();
              if (cljs.core.keyword_identical_QMARK_(ret_value__5939__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                var G__22962 = state_22936;
                state_22936 = G__22962;
                continue;
              } else {
                return ret_value__5939__auto__;
              }
              break;
            }
          };
          state_machine__5938__auto__ = function(state_22936) {
            switch(arguments.length) {
              case 0:
                return state_machine__5938__auto____0.call(this);
              case 1:
                return state_machine__5938__auto____1.call(this, state_22936);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5938__auto____0;
          state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5938__auto____1;
          return state_machine__5938__auto__;
        }();
      }(switch__5937__auto__);
    }();
    var state__5954__auto__ = function() {
      var statearr_22945 = f__5953__auto__.cljs$core$IFn$_invoke$arity$0 ? f__5953__auto__.cljs$core$IFn$_invoke$arity$0() : f__5953__auto__.call(null);
      statearr_22945[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5952__auto__;
      return statearr_22945;
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__5954__auto__);
  });
  return c__5952__auto__;
};
goog.provide("big_bang.examples.pacman.util");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("cljs.core.async");
goog.require("cljs.core.async");
big_bang.examples.pacman.util.posn = function posn(x, y, sz) {
  return new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "x", "x", 1013904362), sz * x, new cljs.core.Keyword(null, "y", "y", 1013904363), sz * y, new cljs.core.Keyword(null, "w", "w", 1013904361), sz, new cljs.core.Keyword(null, "h", "h", 1013904346), sz], null);
};
big_bang.examples.pacman.util.into_channel = function into_channel(chan, coll) {
  var c__5952__auto__ = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(1);
  cljs.core.async.impl.dispatch.run(function() {
    var f__5953__auto__ = function() {
      var switch__5937__auto__ = function(state_27916) {
        var state_val_27917 = state_27916[1];
        if (state_val_27917 === 7) {
          var inst_27900 = state_27916[7];
          var inst_27908 = state_27916[2];
          var inst_27909 = cljs.core.rest(inst_27900);
          var inst_27900__$1 = inst_27909;
          var state_27916__$1 = function() {
            var statearr_27918 = state_27916;
            statearr_27918[8] = inst_27908;
            statearr_27918[7] = inst_27900__$1;
            return statearr_27918;
          }();
          var statearr_27919_27933 = state_27916__$1;
          statearr_27919_27933[2] = null;
          statearr_27919_27933[1] = 2;
          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
        } else {
          if (state_val_27917 === 6) {
            var inst_27912 = state_27916[2];
            var state_27916__$1 = state_27916;
            var statearr_27920_27934 = state_27916__$1;
            statearr_27920_27934[2] = inst_27912;
            statearr_27920_27934[1] = 3;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_27917 === 5) {
              var inst_27900 = state_27916[7];
              var inst_27906 = cljs.core.first(inst_27900);
              var state_27916__$1 = state_27916;
              return cljs.core.async.impl.ioc_helpers.put_BANG_(state_27916__$1, 7, chan, inst_27906);
            } else {
              if (state_val_27917 === 4) {
                var inst_27904 = cljs.core.async.close_BANG_(chan);
                var state_27916__$1 = state_27916;
                var statearr_27921_27935 = state_27916__$1;
                statearr_27921_27935[2] = inst_27904;
                statearr_27921_27935[1] = 6;
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_27917 === 3) {
                  var inst_27914 = state_27916[2];
                  var state_27916__$1 = state_27916;
                  return cljs.core.async.impl.ioc_helpers.return_chan(state_27916__$1, inst_27914);
                } else {
                  if (state_val_27917 === 2) {
                    var inst_27900 = state_27916[7];
                    var inst_27902 = cljs.core.empty_QMARK_(inst_27900);
                    var state_27916__$1 = state_27916;
                    if (inst_27902) {
                      var statearr_27922_27936 = state_27916__$1;
                      statearr_27922_27936[1] = 4;
                    } else {
                      var statearr_27923_27937 = state_27916__$1;
                      statearr_27923_27937[1] = 5;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_27917 === 1) {
                      var inst_27900 = coll;
                      var state_27916__$1 = function() {
                        var statearr_27924 = state_27916;
                        statearr_27924[7] = inst_27900;
                        return statearr_27924;
                      }();
                      var statearr_27925_27938 = state_27916__$1;
                      statearr_27925_27938[2] = null;
                      statearr_27925_27938[1] = 2;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      return null;
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__5937__auto__) {
        return function() {
          var state_machine__5938__auto__ = null;
          var state_machine__5938__auto____0 = function() {
            var statearr_27929 = [null, null, null, null, null, null, null, null, null];
            statearr_27929[0] = state_machine__5938__auto__;
            statearr_27929[1] = 1;
            return statearr_27929;
          };
          var state_machine__5938__auto____1 = function(state_27916) {
            while (true) {
              var ret_value__5939__auto__ = function() {
                try {
                  while (true) {
                    var result__5940__auto__ = switch__5937__auto__(state_27916);
                    if (cljs.core.keyword_identical_QMARK_(result__5940__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                      continue;
                    } else {
                      return result__5940__auto__;
                    }
                    break;
                  }
                } catch (e27930) {
                  if (e27930 instanceof Object) {
                    var ex__5941__auto__ = e27930;
                    var statearr_27931_27939 = state_27916;
                    statearr_27931_27939[5] = ex__5941__auto__;
                    cljs.core.async.impl.ioc_helpers.process_exception(state_27916);
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw e27930;
                    } else {
                      return null;
                    }
                  }
                }
              }();
              if (cljs.core.keyword_identical_QMARK_(ret_value__5939__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                var G__27940 = state_27916;
                state_27916 = G__27940;
                continue;
              } else {
                return ret_value__5939__auto__;
              }
              break;
            }
          };
          state_machine__5938__auto__ = function(state_27916) {
            switch(arguments.length) {
              case 0:
                return state_machine__5938__auto____0.call(this);
              case 1:
                return state_machine__5938__auto____1.call(this, state_27916);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5938__auto____0;
          state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5938__auto____1;
          return state_machine__5938__auto__;
        }();
      }(switch__5937__auto__);
    }();
    var state__5954__auto__ = function() {
      var statearr_27932 = f__5953__auto__.cljs$core$IFn$_invoke$arity$0 ? f__5953__auto__.cljs$core$IFn$_invoke$arity$0() : f__5953__auto__.call(null);
      statearr_27932[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5952__auto__;
      return statearr_27932;
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__5954__auto__);
  });
  return c__5952__auto__;
};
big_bang.examples.pacman.util.proxy_request = function proxy_request(url) {
  return[cljs.core.str("http://programming-enchiladas.destructuring-bind.org/proxy?url\x3d"), cljs.core.str(encodeURI(url))].join("");
};
big_bang.examples.pacman.util.with$ = function() {
  var with$__delegate = function(arg, fns) {
    var seq__27945 = cljs.core.seq(fns);
    var chunk__27946 = null;
    var count__27947 = 0;
    var i__27948 = 0;
    while (true) {
      if (i__27948 < count__27947) {
        var fn = chunk__27946.cljs$core$IIndexed$_nth$arity$2(null, i__27948);
        fn.cljs$core$IFn$_invoke$arity$1 ? fn.cljs$core$IFn$_invoke$arity$1(arg) : fn.call(null, arg);
        var G__27949 = seq__27945;
        var G__27950 = chunk__27946;
        var G__27951 = count__27947;
        var G__27952 = i__27948 + 1;
        seq__27945 = G__27949;
        chunk__27946 = G__27950;
        count__27947 = G__27951;
        i__27948 = G__27952;
        continue;
      } else {
        var temp__4092__auto__ = cljs.core.seq(seq__27945);
        if (temp__4092__auto__) {
          var seq__27945__$1 = temp__4092__auto__;
          if (cljs.core.chunked_seq_QMARK_(seq__27945__$1)) {
            var c__4150__auto__ = cljs.core.chunk_first(seq__27945__$1);
            var G__27953 = cljs.core.chunk_rest(seq__27945__$1);
            var G__27954 = c__4150__auto__;
            var G__27955 = cljs.core.count(c__4150__auto__);
            var G__27956 = 0;
            seq__27945 = G__27953;
            chunk__27946 = G__27954;
            count__27947 = G__27955;
            i__27948 = G__27956;
            continue;
          } else {
            var fn = cljs.core.first(seq__27945__$1);
            fn.cljs$core$IFn$_invoke$arity$1 ? fn.cljs$core$IFn$_invoke$arity$1(arg) : fn.call(null, arg);
            var G__27957 = cljs.core.next(seq__27945__$1);
            var G__27958 = null;
            var G__27959 = 0;
            var G__27960 = 0;
            seq__27945 = G__27957;
            chunk__27946 = G__27958;
            count__27947 = G__27959;
            i__27948 = G__27960;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  };
  var with$ = function(arg, var_args) {
    var fns = null;
    if (arguments.length > 1) {
      fns = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return with$__delegate.call(this, arg, fns);
  };
  with$.cljs$lang$maxFixedArity = 1;
  with$.cljs$lang$applyTo = function(arglist__27961) {
    var arg = cljs.core.first(arglist__27961);
    var fns = cljs.core.rest(arglist__27961);
    return with$__delegate(arg, fns);
  };
  with$.cljs$core$IFn$_invoke$arity$variadic = with$__delegate;
  return with$;
}();
goog.provide("big_bang.examples.pacman.config");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("dataview.loader");
goog.require("big_bang.examples.pacman.util");
goog.require("dataview.loader");
goog.require("big_bang.examples.pacman.util");
goog.require("cljs.core.async");
goog.require("cljs.core.async");
big_bang.examples.pacman.config.canvas = document.getElementById("pacman-canvas");
big_bang.examples.pacman.config.ctx = cljs.core.truth_(big_bang.examples.pacman.config.canvas) ? big_bang.examples.pacman.config.canvas.getContext("2d") : null;
big_bang.examples.pacman.config.cell_size = 12;
big_bang.examples.pacman.config.width = 29;
big_bang.examples.pacman.config.height = 31;
big_bang.examples.pacman.config.background_size = cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(cljs.core._STAR_, big_bang.examples.pacman.config.cell_size), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [big_bang.examples.pacman.config.width, big_bang.examples.pacman.config.height], null));
big_bang.examples.pacman.config.start_position = cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(cljs.core._STAR_, big_bang.examples.pacman.config.cell_size), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [13.5, 23], null));
big_bang.examples.pacman.config.frighten_duration = 1E3;
big_bang.examples.pacman.config.url = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "sprite-map", "sprite-map", 2544444870), "https://raw.github.com/rm-hull/big-bang/master/examples/pacman/data/spritemap-192.png", new cljs.core.Keyword(null, "levels", "levels", 4202744033), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["https://raw.github.com/rm-hull/big-bang/master/examples/pacman/data/", ".txt"], null)], null);
big_bang.examples.pacman.config.sprites = function() {
  var c = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(1);
  var c__5952__auto___39844 = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(1);
  cljs.core.async.impl.dispatch.run(function() {
    var f__5953__auto__ = function() {
      var switch__5937__auto__ = function(state_39835) {
        var state_val_39836 = state_39835[1];
        if (state_val_39836 === 2) {
          var inst_39831 = state_39835[2];
          var inst_39832 = cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(inst_39831);
          var inst_39833 = big_bang.examples.pacman.util.into_channel(c, inst_39832);
          var state_39835__$1 = state_39835;
          return cljs.core.async.impl.ioc_helpers.return_chan(state_39835__$1, inst_39833);
        } else {
          if (state_val_39836 === 1) {
            var inst_39827 = (new cljs.core.Keyword(null, "sprite-map", "sprite-map", 2544444870)).cljs$core$IFn$_invoke$arity$1(big_bang.examples.pacman.config.url);
            var inst_39828 = big_bang.examples.pacman.util.proxy_request(inst_39827);
            var inst_39829 = dataview.loader.fetch_image(inst_39828);
            var state_39835__$1 = state_39835;
            return cljs.core.async.impl.ioc_helpers.take_BANG_(state_39835__$1, 2, inst_39829);
          } else {
            return null;
          }
        }
      };
      return function(switch__5937__auto__) {
        return function() {
          var state_machine__5938__auto__ = null;
          var state_machine__5938__auto____0 = function() {
            var statearr_39840 = [null, null, null, null, null, null, null];
            statearr_39840[0] = state_machine__5938__auto__;
            statearr_39840[1] = 1;
            return statearr_39840;
          };
          var state_machine__5938__auto____1 = function(state_39835) {
            while (true) {
              var ret_value__5939__auto__ = function() {
                try {
                  while (true) {
                    var result__5940__auto__ = switch__5937__auto__(state_39835);
                    if (cljs.core.keyword_identical_QMARK_(result__5940__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                      continue;
                    } else {
                      return result__5940__auto__;
                    }
                    break;
                  }
                } catch (e39841) {
                  if (e39841 instanceof Object) {
                    var ex__5941__auto__ = e39841;
                    var statearr_39842_39845 = state_39835;
                    statearr_39842_39845[5] = ex__5941__auto__;
                    cljs.core.async.impl.ioc_helpers.process_exception(state_39835);
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw e39841;
                    } else {
                      return null;
                    }
                  }
                }
              }();
              if (cljs.core.keyword_identical_QMARK_(ret_value__5939__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                var G__39846 = state_39835;
                state_39835 = G__39846;
                continue;
              } else {
                return ret_value__5939__auto__;
              }
              break;
            }
          };
          state_machine__5938__auto__ = function(state_39835) {
            switch(arguments.length) {
              case 0:
                return state_machine__5938__auto____0.call(this);
              case 1:
                return state_machine__5938__auto____1.call(this, state_39835);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5938__auto____0;
          state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5938__auto____1;
          return state_machine__5938__auto__;
        }();
      }(switch__5937__auto__);
    }();
    var state__5954__auto__ = function() {
      var statearr_39843 = f__5953__auto__.cljs$core$IFn$_invoke$arity$0 ? f__5953__auto__.cljs$core$IFn$_invoke$arity$0() : f__5953__auto__.call(null);
      statearr_39843[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5952__auto___39844;
      return statearr_39843;
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__5954__auto__);
  });
  return c;
}();
big_bang.examples.pacman.config.level = cljs.core.memoize(function(n) {
  var vec__39847 = (new cljs.core.Keyword(null, "levels", "levels", 4202744033)).cljs$core$IFn$_invoke$arity$1(big_bang.examples.pacman.config.url);
  var prefix = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__39847, 0, null);
  var suffix = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__39847, 1, null);
  var url = [cljs.core.str(prefix), cljs.core.str(n), cljs.core.str(suffix)].join("");
  var c = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(1);
  var c__5952__auto___39864 = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(1);
  cljs.core.async.impl.dispatch.run(function() {
    var f__5953__auto__ = function() {
      var switch__5937__auto__ = function(state_39855) {
        var state_val_39856 = state_39855[1];
        if (state_val_39856 === 2) {
          var inst_39851 = state_39855[2];
          var inst_39852 = cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(inst_39851);
          var inst_39853 = big_bang.examples.pacman.util.into_channel(c, inst_39852);
          var state_39855__$1 = state_39855;
          return cljs.core.async.impl.ioc_helpers.return_chan(state_39855__$1, inst_39853);
        } else {
          if (state_val_39856 === 1) {
            var inst_39848 = big_bang.examples.pacman.util.proxy_request(url);
            var inst_39849 = dataview.loader.fetch_text(inst_39848);
            var state_39855__$1 = state_39855;
            return cljs.core.async.impl.ioc_helpers.take_BANG_(state_39855__$1, 2, inst_39849);
          } else {
            return null;
          }
        }
      };
      return function(switch__5937__auto__) {
        return function() {
          var state_machine__5938__auto__ = null;
          var state_machine__5938__auto____0 = function() {
            var statearr_39860 = [null, null, null, null, null, null, null];
            statearr_39860[0] = state_machine__5938__auto__;
            statearr_39860[1] = 1;
            return statearr_39860;
          };
          var state_machine__5938__auto____1 = function(state_39855) {
            while (true) {
              var ret_value__5939__auto__ = function() {
                try {
                  while (true) {
                    var result__5940__auto__ = switch__5937__auto__(state_39855);
                    if (cljs.core.keyword_identical_QMARK_(result__5940__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                      continue;
                    } else {
                      return result__5940__auto__;
                    }
                    break;
                  }
                } catch (e39861) {
                  if (e39861 instanceof Object) {
                    var ex__5941__auto__ = e39861;
                    var statearr_39862_39865 = state_39855;
                    statearr_39862_39865[5] = ex__5941__auto__;
                    cljs.core.async.impl.ioc_helpers.process_exception(state_39855);
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw e39861;
                    } else {
                      return null;
                    }
                  }
                }
              }();
              if (cljs.core.keyword_identical_QMARK_(ret_value__5939__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                var G__39866 = state_39855;
                state_39855 = G__39866;
                continue;
              } else {
                return ret_value__5939__auto__;
              }
              break;
            }
          };
          state_machine__5938__auto__ = function(state_39855) {
            switch(arguments.length) {
              case 0:
                return state_machine__5938__auto____0.call(this);
              case 1:
                return state_machine__5938__auto____1.call(this, state_39855);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5938__auto____0;
          state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5938__auto____1;
          return state_machine__5938__auto__;
        }();
      }(switch__5937__auto__);
    }();
    var state__5954__auto__ = function() {
      var statearr_39863 = f__5953__auto__.cljs$core$IFn$_invoke$arity$0 ? f__5953__auto__.cljs$core$IFn$_invoke$arity$0() : f__5953__auto__.call(null);
      statearr_39863[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5952__auto___39864;
      return statearr_39863;
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__5954__auto__);
  });
  return c;
});
goog.provide("big_bang.examples.pacman.sprite");
goog.require("cljs.core");
goog.require("big_bang.examples.pacman.config");
goog.require("big_bang.examples.pacman.util");
goog.require("big_bang.examples.pacman.util");
goog.require("big_bang.examples.pacman.config");
goog.require("big_bang.examples.pacman.config");
big_bang.examples.pacman.sprite.frames = function() {
  var frames__delegate = function(frame_refs) {
    var v = cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(cljs.core.vals, frame_refs);
    var cnt = cljs.core.count(v);
    return function(frame_num) {
      return v.cljs$core$IFn$_invoke$arity$1 ? v.cljs$core$IFn$_invoke$arity$1(cljs.core.mod(frame_num, cnt)) : v.call(null, cljs.core.mod(frame_num, cnt));
    };
  };
  var frames = function(var_args) {
    var frame_refs = null;
    if (arguments.length > 0) {
      frame_refs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return frames__delegate.call(this, frame_refs);
  };
  frames.cljs$lang$maxFixedArity = 0;
  frames.cljs$lang$applyTo = function(arglist__22520) {
    var frame_refs = cljs.core.seq(arglist__22520);
    return frames__delegate(frame_refs);
  };
  frames.cljs$core$IFn$_invoke$arity$variadic = frames__delegate;
  return frames;
}();
big_bang.examples.pacman.sprite.sprites = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "pacman", "pacman", 4313007866), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "up", "up", 1013907981), big_bang.examples.pacman.sprite.frames.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([big_bang.examples.pacman.util.posn(1, 3, big_bang.examples.pacman.config.cell_size), big_bang.examples.pacman.util.posn(3, 3, big_bang.examples.pacman.config.cell_size), 
big_bang.examples.pacman.util.posn(0, 7, big_bang.examples.pacman.config.cell_size), big_bang.examples.pacman.util.posn(3, 3, big_bang.examples.pacman.config.cell_size)], 0)), new cljs.core.Keyword(null, "down", "down", 1016993812), big_bang.examples.pacman.sprite.frames.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([big_bang.examples.pacman.util.posn(5, 3, big_bang.examples.pacman.config.cell_size), big_bang.examples.pacman.util.posn(7, 3, big_bang.examples.pacman.config.cell_size), big_bang.examples.pacman.util.posn(0, 
7, big_bang.examples.pacman.config.cell_size), big_bang.examples.pacman.util.posn(7, 3, big_bang.examples.pacman.config.cell_size)], 0)), new cljs.core.Keyword(null, "left", "left", 1017222009), big_bang.examples.pacman.sprite.frames.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([big_bang.examples.pacman.util.posn(0, 3, big_bang.examples.pacman.config.cell_size), big_bang.examples.pacman.util.posn(2, 3, big_bang.examples.pacman.config.cell_size), big_bang.examples.pacman.util.posn(0, 7, 
big_bang.examples.pacman.config.cell_size), big_bang.examples.pacman.util.posn(2, 3, big_bang.examples.pacman.config.cell_size)], 0)), new cljs.core.Keyword(null, "right", "right", 1122416014), big_bang.examples.pacman.sprite.frames.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([big_bang.examples.pacman.util.posn(4, 3, big_bang.examples.pacman.config.cell_size), big_bang.examples.pacman.util.posn(6, 3, big_bang.examples.pacman.config.cell_size), big_bang.examples.pacman.util.posn(0, 7, 
big_bang.examples.pacman.config.cell_size), big_bang.examples.pacman.util.posn(6, 3, big_bang.examples.pacman.config.cell_size)], 0))], null), new cljs.core.Keyword(null, "blinky", "blinky", 3922538511), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "pinky", "pinky", 1120575797), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "inky", "inky", 1017141445), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "clyde", "clyde", 1108669731), cljs.core.PersistentArrayMap.EMPTY], 
null);
big_bang.examples.pacman.sprite.spritemap_position = function spritemap_position(refs, frame) {
  return cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(big_bang.examples.pacman.sprite.sprites, refs).call(null, frame);
};
goog.provide("big_bang.examples.pacman.render");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("big_bang.examples.pacman.sprite");
goog.require("big_bang.examples.pacman.util");
goog.require("big_bang.examples.pacman.config");
goog.require("big_bang.examples.pacman.sprite");
goog.require("big_bang.examples.pacman.util");
goog.require("big_bang.examples.pacman.config");
goog.require("cljs.core.async");
goog.require("cljs.core.async");
big_bang.examples.pacman.render.draw_backdrop_BANG_ = function draw_backdrop_BANG_(p__40106, backdrop, world_state) {
  var vec__40108 = p__40106;
  var width = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__40108, 0, null);
  var height = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__40108, 1, null);
  big_bang.examples.pacman.config.ctx.clearRect(0, 0, width, height);
  return big_bang.examples.pacman.config.ctx.drawImage(backdrop, 0, 0);
};
big_bang.examples.pacman.render.draw_pills_BANG_ = function draw_pills_BANG_(world_state) {
  return null;
};
big_bang.examples.pacman.render.draw_ghosts_BANG_ = function draw_ghosts_BANG_(world_state) {
  return null;
};
big_bang.examples.pacman.render.draw_pacman_BANG_ = function draw_pacman_BANG_(sprite_map, world_state) {
  var vec__40111 = big_bang.examples.pacman.sprite.spritemap_position(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "pacman", "pacman", 4313007866), (new cljs.core.Keyword(null, "direction", "direction", 4346280689)).cljs$core$IFn$_invoke$arity$1(world_state)], null), cljs.core.quot((new cljs.core.Keyword(null, "frame", "frame", 1111596255)).cljs$core$IFn$_invoke$arity$1(world_state), 5));
  var sx = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__40111, 0, null);
  var sy = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__40111, 1, null);
  var sw = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__40111, 2, null);
  var sh = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__40111, 3, null);
  var vec__40112 = (new cljs.core.Keyword(null, "position", "position", 1761709211)).cljs$core$IFn$_invoke$arity$1(world_state);
  var dx = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__40112, 0, null);
  var dy = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__40112, 1, null);
  return big_bang.examples.pacman.config.ctx.drawImage(sprite_map, sx, sy, sw, sh, dx, dy, sw, sh);
};
big_bang.examples.pacman.render.draw_score_BANG_ = function draw_score_BANG_(world_state) {
  return null;
};
big_bang.examples.pacman.render.make_render_frame = function make_render_frame(sprite_map, backdrop, background_size) {
  var background_size__$1 = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.dec, background_size);
  var draw_backdrop_BANG_ = cljs.core.partial.cljs$core$IFn$_invoke$arity$3(big_bang.examples.pacman.render.draw_backdrop_BANG_, background_size__$1, backdrop);
  var draw_pacman_BANG_ = cljs.core.partial.cljs$core$IFn$_invoke$arity$2(big_bang.examples.pacman.render.draw_pacman_BANG_, sprite_map);
  return function(world_state) {
    return big_bang.examples.pacman.util.with$.cljs$core$IFn$_invoke$arity$variadic(world_state, cljs.core.array_seq([draw_backdrop_BANG_, big_bang.examples.pacman.render.draw_pills_BANG_, big_bang.examples.pacman.render.draw_ghosts_BANG_, draw_pacman_BANG_, big_bang.examples.pacman.render.draw_score_BANG_], 0));
  };
};
goog.provide("dataview.ops");
goog.require("cljs.core");
dataview.ops.get_uint8 = function get_uint8(data_view, byte_offset) {
  return data_view.getUint8(byte_offset);
};
dataview.ops.get_uint16_le = function get_uint16_le(data_view, byte_offset) {
  return data_view.getUint16(byte_offset, true);
};
dataview.ops.get_uint32_le = function get_uint32_le(data_view, byte_offset) {
  return data_view.getUint32(byte_offset, true);
};
dataview.ops.get_float32_le = function get_float32_le(data_view, byte_offset) {
  return data_view.getFloat32(byte_offset, true);
};
dataview.ops.byte_length = function byte_length(data_view) {
  return data_view.byteLength;
};
dataview.ops.get_string = function() {
  var utf_QMARK_ = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "UTF-8", "UTF-8", 1094974692), null, new cljs.core.Keyword(null, "UTF8", "UTF8", 1016519427), null, new cljs.core.Keyword(null, "utf-8", "utf-8", 1125511428), null, new cljs.core.Keyword(null, "utf8", "utf8", 1017504483), null], null), null);
  return function() {
    var G__26641__delegate = function(data_view, byte_offset, p__26639) {
      var map__26640 = p__26639;
      var map__26640__$1 = cljs.core.seq_QMARK_(map__26640) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__26640) : map__26640;
      var opts = map__26640__$1;
      var encoding = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__26640__$1, new cljs.core.Keyword(null, "encoding", "encoding", 2725126341));
      var length = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__26640__$1, new cljs.core.Keyword(null, "length", "length", 4202507864));
      var delimiters = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__26640__$1, new cljs.core.Keyword(null, "delimiters", "delimiters", 1837780670));
      if (cljs.core.truth_(function() {
        var and__3396__auto__ = delimiters;
        if (cljs.core.truth_(and__3396__auto__)) {
          return length;
        } else {
          return and__3396__auto__;
        }
      }())) {
        throw new Error("Cannot support :length and :delimiters at the same time");
      } else {
        var take_fn = function(cs) {
          if (cljs.core.truth_(length)) {
            return cljs.core.take(length, cs);
          } else {
            return cljs.core.take_while(function(p1__26638_SHARP_) {
              return cljs.core.not(delimiters.cljs$core$IFn$_invoke$arity$1 ? delimiters.cljs$core$IFn$_invoke$arity$1(p1__26638_SHARP_) : delimiters.call(null, p1__26638_SHARP_));
            }, cs);
          }
        };
        var s = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str, take_fn(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.char$, cljs.core.partial.cljs$core$IFn$_invoke$arity$2(dataview.ops.get_uint8, data_view)), cljs.core.range.cljs$core$IFn$_invoke$arity$2(byte_offset, dataview.ops.byte_length(data_view)))));
        if (cljs.core.truth_(utf_QMARK_.cljs$core$IFn$_invoke$arity$1 ? utf_QMARK_.cljs$core$IFn$_invoke$arity$1(cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(encoding)) : utf_QMARK_.call(null, cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(encoding)))) {
          return decodeURIComponent(escape(s));
        } else {
          return s;
        }
      }
    };
    var G__26641 = function(data_view, byte_offset, var_args) {
      var p__26639 = null;
      if (arguments.length > 2) {
        p__26639 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__26641__delegate.call(this, data_view, byte_offset, p__26639);
    };
    G__26641.cljs$lang$maxFixedArity = 2;
    G__26641.cljs$lang$applyTo = function(arglist__26642) {
      var data_view = cljs.core.first(arglist__26642);
      arglist__26642 = cljs.core.next(arglist__26642);
      var byte_offset = cljs.core.first(arglist__26642);
      var p__26639 = cljs.core.rest(arglist__26642);
      return G__26641__delegate(data_view, byte_offset, p__26639);
    };
    G__26641.cljs$core$IFn$_invoke$arity$variadic = G__26641__delegate;
    return G__26641;
  }();
}();
dataview.ops.can_read_QMARK_ = function can_read_QMARK_(data_view, offset, bytes_to_read) {
  return offset + bytes_to_read <= dataview.ops.byte_length(data_view);
};
dataview.ops.IReader = function() {
  var obj26644 = {};
  return obj26644;
}();
dataview.ops.read_delimited_string = function read_delimited_string(this$, delimiters, encoding) {
  if (function() {
    var and__3396__auto__ = this$;
    if (and__3396__auto__) {
      return this$.dataview$ops$IReader$read_delimited_string$arity$3;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return this$.dataview$ops$IReader$read_delimited_string$arity$3(this$, delimiters, encoding);
  } else {
    var x__4029__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3408__auto__ = dataview.ops.read_delimited_string[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = dataview.ops.read_delimited_string["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IReader.read-delimited-string", this$);
        }
      }
    }().call(null, this$, delimiters, encoding);
  }
};
dataview.ops.read_fixed_string = function read_fixed_string(this$, length, encoding) {
  if (function() {
    var and__3396__auto__ = this$;
    if (and__3396__auto__) {
      return this$.dataview$ops$IReader$read_fixed_string$arity$3;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return this$.dataview$ops$IReader$read_fixed_string$arity$3(this$, length, encoding);
  } else {
    var x__4029__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3408__auto__ = dataview.ops.read_fixed_string[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = dataview.ops.read_fixed_string["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IReader.read-fixed-string", this$);
        }
      }
    }().call(null, this$, length, encoding);
  }
};
dataview.ops.read_uint8 = function read_uint8(this$) {
  if (function() {
    var and__3396__auto__ = this$;
    if (and__3396__auto__) {
      return this$.dataview$ops$IReader$read_uint8$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return this$.dataview$ops$IReader$read_uint8$arity$1(this$);
  } else {
    var x__4029__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3408__auto__ = dataview.ops.read_uint8[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = dataview.ops.read_uint8["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IReader.read-uint8", this$);
        }
      }
    }().call(null, this$);
  }
};
dataview.ops.read_uint16_le = function read_uint16_le(this$) {
  if (function() {
    var and__3396__auto__ = this$;
    if (and__3396__auto__) {
      return this$.dataview$ops$IReader$read_uint16_le$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return this$.dataview$ops$IReader$read_uint16_le$arity$1(this$);
  } else {
    var x__4029__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3408__auto__ = dataview.ops.read_uint16_le[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = dataview.ops.read_uint16_le["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IReader.read-uint16-le", this$);
        }
      }
    }().call(null, this$);
  }
};
dataview.ops.read_uint32_le = function read_uint32_le(this$) {
  if (function() {
    var and__3396__auto__ = this$;
    if (and__3396__auto__) {
      return this$.dataview$ops$IReader$read_uint32_le$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return this$.dataview$ops$IReader$read_uint32_le$arity$1(this$);
  } else {
    var x__4029__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3408__auto__ = dataview.ops.read_uint32_le[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = dataview.ops.read_uint32_le["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IReader.read-uint32-le", this$);
        }
      }
    }().call(null, this$);
  }
};
dataview.ops.read_float32_le = function read_float32_le(this$) {
  if (function() {
    var and__3396__auto__ = this$;
    if (and__3396__auto__) {
      return this$.dataview$ops$IReader$read_float32_le$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return this$.dataview$ops$IReader$read_float32_le$arity$1(this$);
  } else {
    var x__4029__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3408__auto__ = dataview.ops.read_float32_le[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = dataview.ops.read_float32_le["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IReader.read-float32-le", this$);
        }
      }
    }().call(null, this$);
  }
};
dataview.ops.eod_QMARK_ = function eod_QMARK_(this$) {
  if (function() {
    var and__3396__auto__ = this$;
    if (and__3396__auto__) {
      return this$.dataview$ops$IReader$eod_QMARK_$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return this$.dataview$ops$IReader$eod_QMARK_$arity$1(this$);
  } else {
    var x__4029__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3408__auto__ = dataview.ops.eod_QMARK_[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = dataview.ops.eod_QMARK_["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IReader.eod?", this$);
        }
      }
    }().call(null, this$);
  }
};
dataview.ops.IRandomAccess = function() {
  var obj26646 = {};
  return obj26646;
}();
dataview.ops.tell = function tell(this$) {
  if (function() {
    var and__3396__auto__ = this$;
    if (and__3396__auto__) {
      return this$.dataview$ops$IRandomAccess$tell$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return this$.dataview$ops$IRandomAccess$tell$arity$1(this$);
  } else {
    var x__4029__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3408__auto__ = dataview.ops.tell[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = dataview.ops.tell["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IRandomAccess.tell", this$);
        }
      }
    }().call(null, this$);
  }
};
dataview.ops.advance_BANG_ = function advance_BANG_(this$, delta) {
  if (function() {
    var and__3396__auto__ = this$;
    if (and__3396__auto__) {
      return this$.dataview$ops$IRandomAccess$advance_BANG_$arity$2;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return this$.dataview$ops$IRandomAccess$advance_BANG_$arity$2(this$, delta);
  } else {
    var x__4029__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3408__auto__ = dataview.ops.advance_BANG_[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = dataview.ops.advance_BANG_["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IRandomAccess.advance!", this$);
        }
      }
    }().call(null, this$, delta);
  }
};
dataview.ops.seek_BANG_ = function seek_BANG_(this$, new_offset) {
  if (function() {
    var and__3396__auto__ = this$;
    if (and__3396__auto__) {
      return this$.dataview$ops$IRandomAccess$seek_BANG_$arity$2;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return this$.dataview$ops$IRandomAccess$seek_BANG_$arity$2(this$, new_offset);
  } else {
    var x__4029__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3408__auto__ = dataview.ops.seek_BANG_[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = dataview.ops.seek_BANG_["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IRandomAccess.seek!", this$);
        }
      }
    }().call(null, this$, new_offset);
  }
};
dataview.ops.rewind_BANG_ = function rewind_BANG_(this$) {
  if (function() {
    var and__3396__auto__ = this$;
    if (and__3396__auto__) {
      return this$.dataview$ops$IRandomAccess$rewind_BANG_$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return this$.dataview$ops$IRandomAccess$rewind_BANG_$arity$1(this$);
  } else {
    var x__4029__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3408__auto__ = dataview.ops.rewind_BANG_[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = dataview.ops.rewind_BANG_["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IRandomAccess.rewind!", this$);
        }
      }
    }().call(null, this$);
  }
};
dataview.ops.create_seeker = function create_seeker(initial_offset) {
  var index = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(initial_offset);
  if (typeof dataview.ops.t26650 !== "undefined") {
  } else {
    dataview.ops.t26650 = function(index, initial_offset, create_seeker, meta26651) {
      this.index = index;
      this.initial_offset = initial_offset;
      this.create_seeker = create_seeker;
      this.meta26651 = meta26651;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    dataview.ops.t26650.cljs$lang$type = true;
    dataview.ops.t26650.cljs$lang$ctorStr = "dataview.ops/t26650";
    dataview.ops.t26650.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write(writer__3971__auto__, "dataview.ops/t26650");
    };
    dataview.ops.t26650.prototype.dataview$ops$IRandomAccess$ = true;
    dataview.ops.t26650.prototype.dataview$ops$IRandomAccess$tell$arity$1 = function(this$) {
      var self__ = this;
      var this$__$1 = this;
      return cljs.core.deref(self__.index);
    };
    dataview.ops.t26650.prototype.dataview$ops$IRandomAccess$advance_BANG_$arity$2 = function(this$, delta) {
      var self__ = this;
      var this$__$1 = this;
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.index, cljs.core._PLUS_, delta) - delta;
    };
    dataview.ops.t26650.prototype.dataview$ops$IRandomAccess$seek_BANG_$arity$2 = function(this$, new_offset) {
      var self__ = this;
      var this$__$1 = this;
      return cljs.core.reset_BANG_(self__.index, new_offset);
    };
    dataview.ops.t26650.prototype.dataview$ops$IRandomAccess$rewind_BANG_$arity$1 = function(this$) {
      var self__ = this;
      var this$__$1 = this;
      return dataview.ops.seek_BANG_(this$__$1, 0);
    };
    dataview.ops.t26650.prototype.cljs$core$IMeta$_meta$arity$1 = function(_26652) {
      var self__ = this;
      var _26652__$1 = this;
      return self__.meta26651;
    };
    dataview.ops.t26650.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_26652, meta26651__$1) {
      var self__ = this;
      var _26652__$1 = this;
      return new dataview.ops.t26650(self__.index, self__.initial_offset, self__.create_seeker, meta26651__$1);
    };
    dataview.ops.__GT_t26650 = function __GT_t26650(index__$1, initial_offset__$1, create_seeker__$1, meta26651) {
      return new dataview.ops.t26650(index__$1, initial_offset__$1, create_seeker__$1, meta26651);
    };
  }
  return new dataview.ops.t26650(index, initial_offset, create_seeker, null);
};
dataview.ops.create_reader = function create_reader(data_view) {
  var seeker = dataview.ops.create_seeker(0);
  if (typeof dataview.ops.t26656 !== "undefined") {
  } else {
    dataview.ops.t26656 = function(seeker, data_view, create_reader, meta26657) {
      this.seeker = seeker;
      this.data_view = data_view;
      this.create_reader = create_reader;
      this.meta26657 = meta26657;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    dataview.ops.t26656.cljs$lang$type = true;
    dataview.ops.t26656.cljs$lang$ctorStr = "dataview.ops/t26656";
    dataview.ops.t26656.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write(writer__3971__auto__, "dataview.ops/t26656");
    };
    dataview.ops.t26656.prototype.dataview$ops$IRandomAccess$ = true;
    dataview.ops.t26656.prototype.dataview$ops$IRandomAccess$tell$arity$1 = function(this$) {
      var self__ = this;
      var this$__$1 = this;
      return dataview.ops.tell(self__.seeker);
    };
    dataview.ops.t26656.prototype.dataview$ops$IRandomAccess$advance_BANG_$arity$2 = function(this$, delta) {
      var self__ = this;
      var this$__$1 = this;
      return dataview.ops.advance_BANG_(self__.seeker, delta);
    };
    dataview.ops.t26656.prototype.dataview$ops$IRandomAccess$seek_BANG_$arity$2 = function(this$, new_offset) {
      var self__ = this;
      var this$__$1 = this;
      return dataview.ops.seek_BANG_(self__.seeker, new_offset);
    };
    dataview.ops.t26656.prototype.dataview$ops$IRandomAccess$rewind_BANG_$arity$1 = function(this$) {
      var self__ = this;
      var this$__$1 = this;
      return dataview.ops.rewind_BANG_(self__.seeker);
    };
    dataview.ops.t26656.prototype.dataview$ops$IReader$ = true;
    dataview.ops.t26656.prototype.dataview$ops$IReader$read_delimited_string$arity$3 = function(this$, delimiters, encoding) {
      var self__ = this;
      var this$__$1 = this;
      if (cljs.core.truth_(dataview.ops.eod_QMARK_(this$__$1))) {
        return null;
      } else {
        var offset = dataview.ops.tell(self__.seeker);
        var data = dataview.ops.get_string.cljs$core$IFn$_invoke$arity$6 ? dataview.ops.get_string.cljs$core$IFn$_invoke$arity$6(self__.data_view, offset, new cljs.core.Keyword(null, "delimiters", "delimiters", 1837780670), delimiters, new cljs.core.Keyword(null, "encoding", "encoding", 2725126341), encoding) : dataview.ops.get_string.call(null, self__.data_view, offset, new cljs.core.Keyword(null, "delimiters", "delimiters", 1837780670), delimiters, new cljs.core.Keyword(null, "encoding", "encoding", 
        2725126341), encoding);
        dataview.ops.advance_BANG_(self__.seeker, cljs.core.count(data) + 1);
        return data;
      }
    };
    dataview.ops.t26656.prototype.dataview$ops$IReader$read_fixed_string$arity$3 = function(this$, length, encoding) {
      var self__ = this;
      var this$__$1 = this;
      if (dataview.ops.can_read_QMARK_(self__.data_view, dataview.ops.tell(self__.seeker), length)) {
        var offset = dataview.ops.advance_BANG_(self__.seeker, length);
        return dataview.ops.get_string.cljs$core$IFn$_invoke$arity$6 ? dataview.ops.get_string.cljs$core$IFn$_invoke$arity$6(self__.data_view, offset, new cljs.core.Keyword(null, "length", "length", 4202507864), length, new cljs.core.Keyword(null, "encoding", "encoding", 2725126341), encoding) : dataview.ops.get_string.call(null, self__.data_view, offset, new cljs.core.Keyword(null, "length", "length", 4202507864), length, new cljs.core.Keyword(null, "encoding", "encoding", 2725126341), encoding);
      } else {
        return null;
      }
    };
    dataview.ops.t26656.prototype.dataview$ops$IReader$read_uint8$arity$1 = function(this$) {
      var self__ = this;
      var this$__$1 = this;
      if (dataview.ops.can_read_QMARK_(self__.data_view, dataview.ops.tell(self__.seeker), 1)) {
        var offset = dataview.ops.advance_BANG_(this$__$1, 1);
        return dataview.ops.get_uint8(self__.data_view, offset);
      } else {
        return null;
      }
    };
    dataview.ops.t26656.prototype.dataview$ops$IReader$read_uint16_le$arity$1 = function(this$) {
      var self__ = this;
      var this$__$1 = this;
      if (dataview.ops.can_read_QMARK_(self__.data_view, dataview.ops.tell(self__.seeker), 2)) {
        var offset = dataview.ops.advance_BANG_(this$__$1, 2);
        return dataview.ops.get_uint16_le(self__.data_view, offset);
      } else {
        return null;
      }
    };
    dataview.ops.t26656.prototype.dataview$ops$IReader$read_uint32_le$arity$1 = function(this$) {
      var self__ = this;
      var this$__$1 = this;
      if (dataview.ops.can_read_QMARK_(self__.data_view, dataview.ops.tell(self__.seeker), 4)) {
        var offset = dataview.ops.advance_BANG_(this$__$1, 4);
        return dataview.ops.get_uint32_le(self__.data_view, offset);
      } else {
        return null;
      }
    };
    dataview.ops.t26656.prototype.dataview$ops$IReader$read_float32_le$arity$1 = function(this$) {
      var self__ = this;
      var this$__$1 = this;
      if (dataview.ops.can_read_QMARK_(self__.data_view, dataview.ops.tell(self__.seeker), 4)) {
        var offset = dataview.ops.advance_BANG_(this$__$1, 4);
        return dataview.ops.get_float32_le(self__.data_view, offset);
      } else {
        return null;
      }
    };
    dataview.ops.t26656.prototype.dataview$ops$IReader$eod_QMARK_$arity$1 = function(this$) {
      var self__ = this;
      var this$__$1 = this;
      return dataview.ops.tell(self__.seeker) >= dataview.ops.byte_length(self__.data_view);
    };
    dataview.ops.t26656.prototype.cljs$core$IMeta$_meta$arity$1 = function(_26658) {
      var self__ = this;
      var _26658__$1 = this;
      return self__.meta26657;
    };
    dataview.ops.t26656.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_26658, meta26657__$1) {
      var self__ = this;
      var _26658__$1 = this;
      return new dataview.ops.t26656(self__.seeker, self__.data_view, self__.create_reader, meta26657__$1);
    };
    dataview.ops.__GT_t26656 = function __GT_t26656(seeker__$1, data_view__$1, create_reader__$1, meta26657) {
      return new dataview.ops.t26656(seeker__$1, data_view__$1, create_reader__$1, meta26657);
    };
  }
  return new dataview.ops.t26656(seeker, data_view, create_reader, null);
};
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
goog.require("goog.string");
clojure.string.seq_reverse = function seq_reverse(coll) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, coll);
};
clojure.string.reverse = function reverse(s) {
  return s.split("").reverse().join("");
};
clojure.string.replace = function replace(s, match, replacement) {
  if (typeof match === "string") {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement);
  } else {
    if (cljs.core.truth_(match.hasOwnProperty("source"))) {
      return s.replace(new RegExp(match.source, "g"), replacement);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw[cljs.core.str("Invalid match arg: "), cljs.core.str(match)].join("");
      } else {
        return null;
      }
    }
  }
};
clojure.string.replace_first = function replace_first(s, match, replacement) {
  return s.replace(match, replacement);
};
clojure.string.join = function() {
  var join = null;
  var join__1 = function(coll) {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str, coll);
  };
  var join__2 = function(separator, coll) {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str, cljs.core.interpose(separator, coll));
  };
  join = function(separator, coll) {
    switch(arguments.length) {
      case 1:
        return join__1.call(this, separator);
      case 2:
        return join__2.call(this, separator, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  join.cljs$core$IFn$_invoke$arity$1 = join__1;
  join.cljs$core$IFn$_invoke$arity$2 = join__2;
  return join;
}();
clojure.string.upper_case = function upper_case(s) {
  return s.toUpperCase();
};
clojure.string.lower_case = function lower_case(s) {
  return s.toLowerCase();
};
clojure.string.capitalize = function capitalize(s) {
  if (cljs.core.count(s) < 2) {
    return clojure.string.upper_case(s);
  } else {
    return[cljs.core.str(clojure.string.upper_case(cljs.core.subs.cljs$core$IFn$_invoke$arity$3(s, 0, 1))), cljs.core.str(clojure.string.lower_case(cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, 1)))].join("");
  }
};
clojure.string.pop_last_while_empty = function pop_last_while_empty(v) {
  var v__$1 = v;
  while (true) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2("", cljs.core.peek(v__$1))) {
      var G__26659 = cljs.core.pop(v__$1);
      v__$1 = G__26659;
      continue;
    } else {
      return v__$1;
    }
    break;
  }
};
clojure.string.discard_trailing_if_needed = function discard_trailing_if_needed(limit, v) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(0, limit)) {
    return clojure.string.pop_last_while_empty(v);
  } else {
    return v;
  }
};
clojure.string.split_with_empty_regex = function split_with_empty_regex(s, limit) {
  if (limit <= 0 || limit >= 2 + cljs.core.count(s)) {
    return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.vec(cljs.core.cons("", cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.str, cljs.core.seq(s)))), "");
  } else {
    var pred__26663 = cljs.core._EQ_;
    var expr__26664 = limit;
    if (cljs.core.truth_(pred__26663.cljs$core$IFn$_invoke$arity$2 ? pred__26663.cljs$core$IFn$_invoke$arity$2(1, expr__26664) : pred__26663.call(null, 1, expr__26664))) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [s], null);
    } else {
      if (cljs.core.truth_(pred__26663.cljs$core$IFn$_invoke$arity$2 ? pred__26663.cljs$core$IFn$_invoke$arity$2(2, expr__26664) : pred__26663.call(null, 2, expr__26664))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", s], null);
      } else {
        var c = limit - 2;
        return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.vec(cljs.core.cons("", cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.str, cljs.core.seq(s))), 0, c))), cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, c));
      }
    }
  }
};
clojure.string.split = function() {
  var split = null;
  var split__2 = function(s, re) {
    return split.cljs$core$IFn$_invoke$arity$3(s, re, 0);
  };
  var split__3 = function(s, re, limit) {
    return clojure.string.discard_trailing_if_needed(limit, cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2([cljs.core.str(re)].join(""), "/(?:)/") ? clojure.string.split_with_empty_regex(s, limit) : limit < 1 ? cljs.core.vec([cljs.core.str(s)].join("").split(re)) : function() {
      var s__$1 = s;
      var limit__$1 = limit;
      var parts = cljs.core.PersistentVector.EMPTY;
      while (true) {
        if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(limit__$1, 1)) {
          return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(parts, s__$1);
        } else {
          var temp__4090__auto__ = cljs.core.re_find(re, s__$1);
          if (cljs.core.truth_(temp__4090__auto__)) {
            var m = temp__4090__auto__;
            var index = s__$1.indexOf(m);
            var G__26666 = s__$1.substring(index + cljs.core.count(m));
            var G__26667 = limit__$1 - 1;
            var G__26668 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(parts, s__$1.substring(0, index));
            s__$1 = G__26666;
            limit__$1 = G__26667;
            parts = G__26668;
            continue;
          } else {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(parts, s__$1);
          }
        }
        break;
      }
    }());
  };
  split = function(s, re, limit) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, s, re);
      case 3:
        return split__3.call(this, s, re, limit);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  split.cljs$core$IFn$_invoke$arity$2 = split__2;
  split.cljs$core$IFn$_invoke$arity$3 = split__3;
  return split;
}();
clojure.string.split_lines = function split_lines(s) {
  return clojure.string.split.cljs$core$IFn$_invoke$arity$2(s, /\n|\r\n/);
};
clojure.string.trim = function trim(s) {
  return goog.string.trim(s);
};
clojure.string.triml = function triml(s) {
  return goog.string.trimLeft(s);
};
clojure.string.trimr = function trimr(s) {
  return goog.string.trimRight(s);
};
clojure.string.trim_newline = function trim_newline(s) {
  var index = s.length;
  while (true) {
    if (index === 0) {
      return "";
    } else {
      var ch = cljs.core.get.cljs$core$IFn$_invoke$arity$2(s, index - 1);
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(ch, "\n") || cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(ch, "\r")) {
        var G__26669 = index - 1;
        index = G__26669;
        continue;
      } else {
        return s.substring(0, index);
      }
    }
    break;
  }
};
clojure.string.blank_QMARK_ = function blank_QMARK_(s) {
  return goog.string.isEmptySafe(s);
};
clojure.string.escape = function escape__$1(s, cmap) {
  var buffer = new goog.string.StringBuffer;
  var length = s.length;
  var index = 0;
  while (true) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(length, index)) {
      return buffer.toString();
    } else {
      var ch = s.charAt(index);
      var temp__4090__auto___26670 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cmap, ch);
      if (cljs.core.truth_(temp__4090__auto___26670)) {
        var replacement_26671 = temp__4090__auto___26670;
        buffer.append([cljs.core.str(replacement_26671)].join(""));
      } else {
        buffer.append(ch);
      }
      var G__26672 = index + 1;
      index = G__26672;
      continue;
    }
    break;
  }
};
goog.provide("big_bang.examples.pacman.level_builder");
goog.require("cljs.core");
goog.require("dataview.ops");
goog.require("cljs.core.async");
goog.require("clojure.string");
goog.require("big_bang.examples.pacman.util");
goog.require("big_bang.examples.pacman.util");
goog.require("big_bang.examples.pacman.config");
goog.require("big_bang.examples.pacman.config");
goog.require("dataview.ops");
goog.require("clojure.string");
goog.require("cljs.core.async");
goog.require("cljs.core.async");
big_bang.examples.pacman.level_builder.pieces = new cljs.core.PersistentArrayMap(null, 8, ["\u250f", big_bang.examples.pacman.util.posn(4, 4, big_bang.examples.pacman.config.cell_size), "\u2501", big_bang.examples.pacman.util.posn(0, 4, big_bang.examples.pacman.config.cell_size), "\u2513", big_bang.examples.pacman.util.posn(5, 4, big_bang.examples.pacman.config.cell_size), "\u2517", big_bang.examples.pacman.util.posn(2, 4, big_bang.examples.pacman.config.cell_size), "\u251b", big_bang.examples.pacman.util.posn(3, 
4, big_bang.examples.pacman.config.cell_size), "\u2503", big_bang.examples.pacman.util.posn(1, 4, big_bang.examples.pacman.config.cell_size), ".", cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(big_bang.examples.pacman.util.posn(16, 0, big_bang.examples.pacman.config.cell_size / 2), new cljs.core.Keyword(null, "target-offset", "target-offset", 1916378049), big_bang.examples.pacman.config.cell_size / 4), "O", cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(big_bang.examples.pacman.util.posn(20, 0, big_bang.examples.pacman.config.cell_size / 
2), new cljs.core.Keyword(null, "target-offset", "target-offset", 1916378049), big_bang.examples.pacman.config.cell_size / 4)], null);
big_bang.examples.pacman.level_builder.make_directive = function make_directive(p__46327, map_piece) {
  var vec__46330 = p__46327;
  var dx = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46330, 0, null);
  var dy = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46330, 1, null);
  var map__46331 = big_bang.examples.pacman.level_builder.pieces.cljs$core$IFn$_invoke$arity$1 ? big_bang.examples.pacman.level_builder.pieces.cljs$core$IFn$_invoke$arity$1(map_piece) : big_bang.examples.pacman.level_builder.pieces.call(null, map_piece);
  var map__46331__$1 = cljs.core.seq_QMARK_(map__46331) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__46331) : map__46331;
  var target_offset = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__46331__$1, new cljs.core.Keyword(null, "target-offset", "target-offset", 1916378049));
  var h = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__46331__$1, new cljs.core.Keyword(null, "h", "h", 1013904346));
  var w = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__46331__$1, new cljs.core.Keyword(null, "w", "w", 1013904361));
  var y = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__46331__$1, new cljs.core.Keyword(null, "y", "y", 1013904363));
  var x = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__46331__$1, new cljs.core.Keyword(null, "x", "x", 1013904362));
  return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, y, w, h, dx + target_offset, dy + target_offset, w, h], null);
};
big_bang.examples.pacman.level_builder.convert_level = function convert_level(raw_level_data) {
  var canvas_coords = function() {
    var iter__4119__auto__ = function iter__46338(s__46339) {
      return new cljs.core.LazySeq(null, function() {
        var s__46339__$1 = s__46339;
        while (true) {
          var temp__4092__auto__ = cljs.core.seq(s__46339__$1);
          if (temp__4092__auto__) {
            var xs__4579__auto__ = temp__4092__auto__;
            var y = cljs.core.first(xs__4579__auto__);
            var iterys__4115__auto__ = function(s__46339__$1, y, xs__4579__auto__, temp__4092__auto__) {
              return function iter__46340(s__46341) {
                return new cljs.core.LazySeq(null, function(s__46339__$1, y, xs__4579__auto__, temp__4092__auto__) {
                  return function() {
                    var s__46341__$1 = s__46341;
                    while (true) {
                      var temp__4092__auto____$1 = cljs.core.seq(s__46341__$1);
                      if (temp__4092__auto____$1) {
                        var s__46341__$2 = temp__4092__auto____$1;
                        if (cljs.core.chunked_seq_QMARK_(s__46341__$2)) {
                          var c__4117__auto__ = cljs.core.chunk_first(s__46341__$2);
                          var size__4118__auto__ = cljs.core.count(c__4117__auto__);
                          var b__46343 = cljs.core.chunk_buffer(size__4118__auto__);
                          if (function() {
                            var i__46342 = 0;
                            while (true) {
                              if (i__46342 < size__4118__auto__) {
                                var x = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4117__auto__, i__46342);
                                cljs.core.chunk_append(b__46343, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(cljs.core._STAR_, big_bang.examples.pacman.config.cell_size), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, y], null)));
                                var G__46344 = i__46342 + 1;
                                i__46342 = G__46344;
                                continue;
                              } else {
                                return true;
                              }
                              break;
                            }
                          }()) {
                            return cljs.core.chunk_cons(cljs.core.chunk(b__46343), iter__46340(cljs.core.chunk_rest(s__46341__$2)));
                          } else {
                            return cljs.core.chunk_cons(cljs.core.chunk(b__46343), null);
                          }
                        } else {
                          var x = cljs.core.first(s__46341__$2);
                          return cljs.core.cons(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(cljs.core._STAR_, big_bang.examples.pacman.config.cell_size), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, y], null)), iter__46340(cljs.core.rest(s__46341__$2)));
                        }
                      } else {
                        return null;
                      }
                      break;
                    }
                  };
                }(s__46339__$1, y, xs__4579__auto__, temp__4092__auto__), null, null);
              };
            }(s__46339__$1, y, xs__4579__auto__, temp__4092__auto__);
            var fs__4116__auto__ = cljs.core.seq(iterys__4115__auto__(cljs.core.range.cljs$core$IFn$_invoke$arity$2(0, big_bang.examples.pacman.config.width)));
            if (fs__4116__auto__) {
              return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(fs__4116__auto__, iter__46338(cljs.core.rest(s__46339__$1)));
            } else {
              var G__46345 = cljs.core.rest(s__46339__$1);
              s__46339__$1 = G__46345;
              continue;
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4119__auto__(cljs.core.range.cljs$core$IFn$_invoke$arity$2(0, big_bang.examples.pacman.config.height));
  }();
  return cljs.core.map.cljs$core$IFn$_invoke$arity$3(big_bang.examples.pacman.level_builder.make_directive, canvas_coords, cljs.core.seq(raw_level_data));
};
big_bang.examples.pacman.level_builder.make_ctx = function make_ctx(p__46346) {
  var vec__46348 = p__46346;
  var width = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46348, 0, null);
  var height = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46348, 1, null);
  var canvas = document.createElement("canvas");
  canvas.width = width;
  canvas.height = height;
  return canvas.getContext("2d");
};
big_bang.examples.pacman.level_builder.draw_cells = function draw_cells(ctx, level, sprite_map) {
  var level__$1 = level;
  while (true) {
    if (cljs.core.empty_QMARK_(level__$1)) {
      return ctx;
    } else {
      var temp__4092__auto__ = cljs.core.first(level__$1);
      if (cljs.core.truth_(temp__4092__auto__)) {
        var vec__46350 = temp__4092__auto__;
        var sx = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46350, 0, null);
        var sy = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46350, 1, null);
        var sw = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46350, 2, null);
        var sh = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46350, 3, null);
        var dx = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46350, 4, null);
        var dy = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46350, 5, null);
        var dw = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46350, 6, null);
        var dh = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46350, 7, null);
        ctx.drawImage(sprite_map, sx, sy, sw, sh, dx, dy, dw, dh);
        var G__46351 = cljs.core.rest(level__$1);
        level__$1 = G__46351;
        continue;
      } else {
        return null;
      }
    }
    break;
  }
};
big_bang.examples.pacman.level_builder.create_background_image = function create_background_image(level_chan, sprite_chan) {
  return cljs.core.async.map.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(big_bang.examples.pacman.level_builder.draw_cells, big_bang.examples.pacman.level_builder.make_ctx(big_bang.examples.pacman.config.background_size)), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [level_chan, sprite_chan], null));
};
big_bang.examples.pacman.level_builder.get_background = cljs.core.memoize(function(n) {
  var c = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0();
  var c__5952__auto___46371 = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(1);
  cljs.core.async.impl.dispatch.run(function() {
    var f__5953__auto__ = function() {
      var switch__5937__auto__ = function(state_46362) {
        var state_val_46363 = state_46362[1];
        if (state_val_46363 === 2) {
          var inst_46358 = state_46362[2];
          var inst_46359 = cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(inst_46358);
          var inst_46360 = big_bang.examples.pacman.util.into_channel(c, inst_46359);
          var state_46362__$1 = state_46362;
          return cljs.core.async.impl.ioc_helpers.return_chan(state_46362__$1, inst_46360);
        } else {
          if (state_val_46363 === 1) {
            var inst_46352 = big_bang.examples.pacman.config.level.cljs$core$IFn$_invoke$arity$1 ? big_bang.examples.pacman.config.level.cljs$core$IFn$_invoke$arity$1(n) : big_bang.examples.pacman.config.level.call(null, n);
            var inst_46353 = cljs.core.async.map_LT_(big_bang.examples.pacman.level_builder.convert_level, inst_46352);
            var inst_46354 = cljs.core.async.take.cljs$core$IFn$_invoke$arity$2(1, inst_46353);
            var inst_46355 = cljs.core.async.take.cljs$core$IFn$_invoke$arity$2(1, big_bang.examples.pacman.config.sprites);
            var inst_46356 = big_bang.examples.pacman.level_builder.create_background_image(inst_46354, inst_46355);
            var state_46362__$1 = state_46362;
            return cljs.core.async.impl.ioc_helpers.take_BANG_(state_46362__$1, 2, inst_46356);
          } else {
            return null;
          }
        }
      };
      return function(switch__5937__auto__) {
        return function() {
          var state_machine__5938__auto__ = null;
          var state_machine__5938__auto____0 = function() {
            var statearr_46367 = [null, null, null, null, null, null, null];
            statearr_46367[0] = state_machine__5938__auto__;
            statearr_46367[1] = 1;
            return statearr_46367;
          };
          var state_machine__5938__auto____1 = function(state_46362) {
            while (true) {
              var ret_value__5939__auto__ = function() {
                try {
                  while (true) {
                    var result__5940__auto__ = switch__5937__auto__(state_46362);
                    if (cljs.core.keyword_identical_QMARK_(result__5940__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                      continue;
                    } else {
                      return result__5940__auto__;
                    }
                    break;
                  }
                } catch (e46368) {
                  if (e46368 instanceof Object) {
                    var ex__5941__auto__ = e46368;
                    var statearr_46369_46372 = state_46362;
                    statearr_46369_46372[5] = ex__5941__auto__;
                    cljs.core.async.impl.ioc_helpers.process_exception(state_46362);
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw e46368;
                    } else {
                      return null;
                    }
                  }
                }
              }();
              if (cljs.core.keyword_identical_QMARK_(ret_value__5939__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                var G__46373 = state_46362;
                state_46362 = G__46373;
                continue;
              } else {
                return ret_value__5939__auto__;
              }
              break;
            }
          };
          state_machine__5938__auto__ = function(state_46362) {
            switch(arguments.length) {
              case 0:
                return state_machine__5938__auto____0.call(this);
              case 1:
                return state_machine__5938__auto____1.call(this, state_46362);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5938__auto____0;
          state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5938__auto____1;
          return state_machine__5938__auto__;
        }();
      }(switch__5937__auto__);
    }();
    var state__5954__auto__ = function() {
      var statearr_46370 = f__5953__auto__.cljs$core$IFn$_invoke$arity$0 ? f__5953__auto__.cljs$core$IFn$_invoke$arity$0() : f__5953__auto__.call(null);
      statearr_46370[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5952__auto___46371;
      return statearr_46370;
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__5954__auto__);
  });
  return c;
});
goog.provide("big_bang.examples.pacman.main");
goog.require("cljs.core");
goog.require("big_bang.examples.pacman.level_builder");
goog.require("cljs.core.async");
goog.require("big_bang.core");
goog.require("big_bang.examples.pacman.config");
goog.require("big_bang.examples.pacman.render");
goog.require("big_bang.event_handler");
goog.require("big_bang.examples.pacman.level_builder");
goog.require("big_bang.examples.pacman.render");
goog.require("big_bang.examples.pacman.config");
goog.require("big_bang.examples.pacman.config");
goog.require("big_bang.event_handler");
goog.require("big_bang.core");
goog.require("cljs.core.async");
goog.require("cljs.core.async");
cljs.core.enable_console_print_BANG_();
big_bang.examples.pacman.main.make_ghost = function make_ghost() {
  return cljs.core.PersistentArrayMap.EMPTY;
};
big_bang.examples.pacman.main.advance_ghost = function advance_ghost(world_state, ghost_name) {
  return world_state;
};
big_bang.examples.pacman.main.frighten_ghost = function frighten_ghost(world_state, ghost_name) {
  return world_state;
};
big_bang.examples.pacman.main.posn__GT_cell = function posn__GT_cell(p__45842) {
  var vec__45844 = p__45842;
  var x = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__45844, 0, null);
  var y = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__45844, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.quot(x, big_bang.examples.pacman.config.cell_size), cljs.core.quot(y, big_bang.examples.pacman.config.cell_size)], null);
};
big_bang.examples.pacman.main.cell__GT_offset = function cell__GT_offset(p__45845) {
  var vec__45847 = p__45845;
  var x = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__45847, 0, null);
  var y = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__45847, 1, null);
  return x + big_bang.examples.pacman.config.width * y;
};
big_bang.examples.pacman.main.adjust_for = function adjust_for(direction, p__45848) {
  var vec__45851 = p__45848;
  var x = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__45851, 0, null);
  var y = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__45851, 1, null);
  var G__45852 = direction;
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null, "down", "down", 1016993812), G__45852)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, y + big_bang.examples.pacman.config.cell_size], null);
  } else {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null, "right", "right", 1122416014), G__45852)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x + big_bang.examples.pacman.config.cell_size, y], null);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, y], null);
      } else {
        return null;
      }
    }
  }
};
big_bang.examples.pacman.main.level_item = function level_item(world_state, next_posn) {
  return cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(world_state, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "level", "level", 1116770038), new cljs.core.Keyword(null, "map", "map", 1014012110), big_bang.examples.pacman.main.cell__GT_offset(big_bang.examples.pacman.main.posn__GT_cell(big_bang.examples.pacman.main.adjust_for((new cljs.core.Keyword(null, "direction", "direction", 4346280689)).cljs$core$IFn$_invoke$arity$1(world_state), 
  next_posn)))], null));
};
big_bang.examples.pacman.main.update_score = function update_score(world_state, points_to_add) {
  return cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(world_state, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "score", "score", 1123168772)], null), cljs.core.partial.cljs$core$IFn$_invoke$arity$2(cljs.core._PLUS_, points_to_add));
};
big_bang.examples.pacman.main.eat_pill = function eat_pill(world_state, pill_pos) {
  var pill_offset = big_bang.examples.pacman.main.cell__GT_offset(big_bang.examples.pacman.main.posn__GT_cell(pill_pos));
  return cljs.core.assoc_in(world_state, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "level", "level", 1116770038), new cljs.core.Keyword(null, "map", "map", 1014012110), pill_offset], null), " ");
};
big_bang.examples.pacman.main.update_position = function update_position(world_state, new_posn) {
  return cljs.core.assoc_in(world_state, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "position", "position", 1761709211)], null), new_posn);
};
big_bang.examples.pacman.main.calc_next_position = function calc_next_position(world_state) {
  var vec__45855 = (new cljs.core.Keyword(null, "position", "position", 1761709211)).cljs$core$IFn$_invoke$arity$1(world_state);
  var x = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__45855, 0, null);
  var y = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__45855, 1, null);
  var G__45856 = (new cljs.core.Keyword(null, "direction", "direction", 4346280689)).cljs$core$IFn$_invoke$arity$1(world_state);
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null, "down", "down", 1016993812), G__45856)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, y + 1], null);
  } else {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null, "up", "up", 1013907981), G__45856)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, y - 1], null);
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null, "left", "left", 1017222009), G__45856)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x - 1, y], null);
      } else {
        if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null, "right", "right", 1122416014), G__45856)) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x + 1, y], null);
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw new Error([cljs.core.str("No matching clause: "), cljs.core.str((new cljs.core.Keyword(null, "direction", "direction", 4346280689)).cljs$core$IFn$_invoke$arity$1(world_state))].join(""));
          } else {
            return null;
          }
        }
      }
    }
  }
};
big_bang.examples.pacman.main.screen_wrap = function() {
  var vec__45857 = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.dec, big_bang.examples.pacman.config.background_size);
  var maxx = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__45857, 0, null);
  var maxy = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__45857, 1, null);
  return function(p__45858) {
    var vec__45859 = p__45858;
    var x = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__45859, 0, null);
    var y = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__45859, 1, null);
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x < 0 ? maxx : x > maxx ? 0 : new cljs.core.Keyword(null, "else", "else", 1017020587) ? x : null, y < 0 ? maxy : y > maxx ? 0 : new cljs.core.Keyword(null, "else", "else", 1017020587) ? y : null], null);
  };
}();
big_bang.examples.pacman.main.advance_pacman = function advance_pacman(world_state) {
  var next_pos = big_bang.examples.pacman.main.screen_wrap.cljs$core$IFn$_invoke$arity$1 ? big_bang.examples.pacman.main.screen_wrap.cljs$core$IFn$_invoke$arity$1(big_bang.examples.pacman.main.calc_next_position(world_state)) : big_bang.examples.pacman.main.screen_wrap.call(null, big_bang.examples.pacman.main.calc_next_position(world_state));
  var new_cell = big_bang.examples.pacman.main.level_item(world_state, next_pos);
  var pred__45863 = cljs.core._EQ_;
  var expr__45864 = new_cell;
  if (cljs.core.truth_(pred__45863.cljs$core$IFn$_invoke$arity$2 ? pred__45863.cljs$core$IFn$_invoke$arity$2(" ", expr__45864) : pred__45863.call(null, " ", expr__45864))) {
    return big_bang.examples.pacman.main.update_position(world_state, next_pos);
  } else {
    if (cljs.core.truth_(pred__45863.cljs$core$IFn$_invoke$arity$2 ? pred__45863.cljs$core$IFn$_invoke$arity$2(".", expr__45864) : pred__45863.call(null, ".", expr__45864))) {
      return big_bang.examples.pacman.main.update_score(big_bang.examples.pacman.main.eat_pill(big_bang.examples.pacman.main.update_position(world_state, next_pos), next_pos), 1);
    } else {
      if (cljs.core.truth_(pred__45863.cljs$core$IFn$_invoke$arity$2 ? pred__45863.cljs$core$IFn$_invoke$arity$2("O", expr__45864) : pred__45863.call(null, "O", expr__45864))) {
        return big_bang.examples.pacman.main.frighten_ghost(big_bang.examples.pacman.main.frighten_ghost(big_bang.examples.pacman.main.frighten_ghost(big_bang.examples.pacman.main.frighten_ghost(big_bang.examples.pacman.main.update_score(big_bang.examples.pacman.main.eat_pill(big_bang.examples.pacman.main.update_position(world_state, next_pos), next_pos), 10), new cljs.core.Keyword(null, "blinky", "blinky", 3922538511)), new cljs.core.Keyword(null, "pinky", "pinky", 1120575797)), new cljs.core.Keyword(null, 
        "inky", "inky", 1017141445)), new cljs.core.Keyword(null, "clyde", "clyde", 1108669731));
      } else {
        return world_state;
      }
    }
  }
};
big_bang.examples.pacman.main.update_state = function update_state(world_state) {
  return big_bang.examples.pacman.main.advance_pacman(big_bang.examples.pacman.main.advance_ghost(big_bang.examples.pacman.main.advance_ghost(big_bang.examples.pacman.main.advance_ghost(big_bang.examples.pacman.main.advance_ghost(cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(world_state, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "frame", "frame", 1111596255)], null), cljs.core.inc), new cljs.core.Keyword(null, "blinky", "blinky", 
  3922538511)), new cljs.core.Keyword(null, "pinky", "pinky", 1120575797)), new cljs.core.Keyword(null, "inky", "inky", 1017141445)), new cljs.core.Keyword(null, "clyde", "clyde", 1108669731)));
};
big_bang.examples.pacman.main.make_initial_state = function make_initial_state(level_num, level_data) {
  return new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "lives", "lives", 1116889209), 3, new cljs.core.Keyword(null, "frame", "frame", 1111596255), 0, new cljs.core.Keyword(null, "score", "score", 1123168772), 0, new cljs.core.Keyword(null, "direction", "direction", 4346280689), new cljs.core.Keyword(null, "left", "left", 1017222009), new cljs.core.Keyword(null, "position", "position", 1761709211), big_bang.examples.pacman.config.start_position, new cljs.core.Keyword(null, 
  "ghosts", "ghosts", 4062174006), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "blinky", "blinky", 3922538511), big_bang.examples.pacman.main.make_ghost(), new cljs.core.Keyword(null, "pinky", "pinky", 1120575797), big_bang.examples.pacman.main.make_ghost(), new cljs.core.Keyword(null, "inky", "inky", 1017141445), big_bang.examples.pacman.main.make_ghost(), new cljs.core.Keyword(null, "clyde", "clyde", 1108669731), big_bang.examples.pacman.main.make_ghost()], null), new cljs.core.Keyword(null, 
  "level", "level", 1116770038), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "map", "map", 1014012110), cljs.core.vec(level_data), new cljs.core.Keyword(null, "number", "number", 4274507451), level_num], null)], null);
};
big_bang.examples.pacman.main.directions = new cljs.core.PersistentArrayMap(null, 4, [37, new cljs.core.Keyword(null, "left", "left", 1017222009), 38, new cljs.core.Keyword(null, "up", "up", 1013907981), 39, new cljs.core.Keyword(null, "right", "right", 1122416014), 40, new cljs.core.Keyword(null, "down", "down", 1016993812)], null);
big_bang.examples.pacman.main.change_direction = function change_direction(event, world_state) {
  var temp__4090__auto__ = big_bang.examples.pacman.main.directions.cljs$core$IFn$_invoke$arity$1 ? big_bang.examples.pacman.main.directions.cljs$core$IFn$_invoke$arity$1(big_bang.event_handler.which(event)) : big_bang.examples.pacman.main.directions.call(null, big_bang.event_handler.which(event));
  if (cljs.core.truth_(temp__4090__auto__)) {
    var dir = temp__4090__auto__;
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(world_state, new cljs.core.Keyword(null, "direction", "direction", 4346280689), dir);
  } else {
    return world_state;
  }
};
big_bang.examples.pacman.main.start_game = function start_game() {
  var c__5952__auto__ = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(1);
  cljs.core.async.impl.dispatch.run(function() {
    var f__5953__auto__ = function() {
      var switch__5937__auto__ = function(state_45903) {
        var state_val_45904 = state_45903[1];
        if (state_val_45904 === 4) {
          var inst_45896 = state_45903[7];
          var inst_45899 = state_45903[2];
          var inst_45900 = big_bang.examples.pacman.main.make_initial_state(1, inst_45899);
          var inst_45901 = big_bang.core.big_bang_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.Keyword(null, "initial-state", "initial-state", 4067401786), inst_45900, new cljs.core.Keyword(null, "on-tick", "on-tick", 3936889917), big_bang.examples.pacman.main.update_state, new cljs.core.Keyword(null, "on-key", "on-key", 4294773987), big_bang.examples.pacman.main.change_direction, new cljs.core.Keyword(null, "to-draw", "to-draw", 4107602120), inst_45896], 0));
          var state_45903__$1 = state_45903;
          return cljs.core.async.impl.ioc_helpers.return_chan(state_45903__$1, inst_45901);
        } else {
          if (state_val_45904 === 3) {
            var inst_45891 = state_45903[8];
            var inst_45894 = state_45903[2];
            var inst_45895 = inst_45894.canvas;
            var inst_45896 = big_bang.examples.pacman.render.make_render_frame(inst_45891, inst_45895, big_bang.examples.pacman.config.background_size);
            var inst_45897 = big_bang.examples.pacman.config.level.cljs$core$IFn$_invoke$arity$1 ? big_bang.examples.pacman.config.level.cljs$core$IFn$_invoke$arity$1(1) : big_bang.examples.pacman.config.level.call(null, 1);
            var state_45903__$1 = function() {
              var statearr_45905 = state_45903;
              statearr_45905[7] = inst_45896;
              return statearr_45905;
            }();
            return cljs.core.async.impl.ioc_helpers.take_BANG_(state_45903__$1, 4, inst_45897);
          } else {
            if (state_val_45904 === 2) {
              var inst_45891 = state_45903[2];
              var inst_45892 = big_bang.examples.pacman.level_builder.get_background.cljs$core$IFn$_invoke$arity$1 ? big_bang.examples.pacman.level_builder.get_background.cljs$core$IFn$_invoke$arity$1(1) : big_bang.examples.pacman.level_builder.get_background.call(null, 1);
              var state_45903__$1 = function() {
                var statearr_45906 = state_45903;
                statearr_45906[8] = inst_45891;
                return statearr_45906;
              }();
              return cljs.core.async.impl.ioc_helpers.take_BANG_(state_45903__$1, 3, inst_45892);
            } else {
              if (state_val_45904 === 1) {
                var state_45903__$1 = state_45903;
                return cljs.core.async.impl.ioc_helpers.take_BANG_(state_45903__$1, 2, big_bang.examples.pacman.config.sprites);
              } else {
                return null;
              }
            }
          }
        }
      };
      return function(switch__5937__auto__) {
        return function() {
          var state_machine__5938__auto__ = null;
          var state_machine__5938__auto____0 = function() {
            var statearr_45910 = [null, null, null, null, null, null, null, null, null];
            statearr_45910[0] = state_machine__5938__auto__;
            statearr_45910[1] = 1;
            return statearr_45910;
          };
          var state_machine__5938__auto____1 = function(state_45903) {
            while (true) {
              var ret_value__5939__auto__ = function() {
                try {
                  while (true) {
                    var result__5940__auto__ = switch__5937__auto__(state_45903);
                    if (cljs.core.keyword_identical_QMARK_(result__5940__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                      continue;
                    } else {
                      return result__5940__auto__;
                    }
                    break;
                  }
                } catch (e45911) {
                  if (e45911 instanceof Object) {
                    var ex__5941__auto__ = e45911;
                    var statearr_45912_45914 = state_45903;
                    statearr_45912_45914[5] = ex__5941__auto__;
                    cljs.core.async.impl.ioc_helpers.process_exception(state_45903);
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw e45911;
                    } else {
                      return null;
                    }
                  }
                }
              }();
              if (cljs.core.keyword_identical_QMARK_(ret_value__5939__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                var G__45915 = state_45903;
                state_45903 = G__45915;
                continue;
              } else {
                return ret_value__5939__auto__;
              }
              break;
            }
          };
          state_machine__5938__auto__ = function(state_45903) {
            switch(arguments.length) {
              case 0:
                return state_machine__5938__auto____0.call(this);
              case 1:
                return state_machine__5938__auto____1.call(this, state_45903);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5938__auto____0;
          state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5938__auto____1;
          return state_machine__5938__auto__;
        }();
      }(switch__5937__auto__);
    }();
    var state__5954__auto__ = function() {
      var statearr_45913 = f__5953__auto__.cljs$core$IFn$_invoke$arity$0 ? f__5953__auto__.cljs$core$IFn$_invoke$arity$0() : f__5953__auto__.call(null);
      statearr_45913[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5952__auto__;
      return statearr_45913;
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__5954__auto__);
  });
  return c__5952__auto__;
};

//# sourceMappingURL=example.map