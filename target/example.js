var CLOSURE_NO_DEPS = true;
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.DEBUG = true;
goog.LOCALE = "en";
goog.TRUSTED_SITE = true;
goog.provide = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while (namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if (goog.getObjectByName(namespace)) {
        break;
      }
      goog.implicitNamespaces_[namespace] = true;
    }
  }
  goog.exportPath_(name);
};
goog.setTestOnly = function(opt_message) {
  if (COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + opt_message ? ": " + opt_message : ".");
  }
};
if (!COMPILED) {
  goog.isProvided_ = function(name) {
    return!goog.implicitNamespaces_[name] && !!goog.getObjectByName(name);
  };
  goog.implicitNamespaces_ = {};
}
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if (!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0]);
  }
  for (var part;parts.length && (part = parts.shift());) {
    if (!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object;
    } else {
      if (cur[part]) {
        cur = cur[part];
      } else {
        cur = cur[part] = {};
      }
    }
  }
};
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for (var part;part = parts.shift();) {
    if (goog.isDefAndNotNull(cur[part])) {
      cur = cur[part];
    } else {
      return null;
    }
  }
  return cur;
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for (var x in obj) {
    global[x] = obj[x];
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if (!COMPILED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for (var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if (!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {};
      }
      deps.pathToNames[path][provide] = true;
    }
    for (var j = 0;require = requires[j];j++) {
      if (!(path in deps.requires)) {
        deps.requires[path] = {};
      }
      deps.requires[path][require] = true;
    }
  }
};
goog.ENABLE_DEBUG_LOADER = true;
goog.require = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      return;
    }
    if (goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if (path) {
        goog.included_[path] = true;
        goog.writeScripts_();
        return;
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    if (goog.global.console) {
      goog.global.console["error"](errorMessage);
    }
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    if (ctor.instance_) {
      return ctor.instance_;
    }
    if (goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;
    }
    return ctor.instance_ = new ctor;
  };
};
goog.instantiatedSingletons_ = [];
if (!COMPILED && goog.ENABLE_DEBUG_LOADER) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc;
  };
  goog.findBasePath_ = function() {
    if (goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return;
    } else {
      if (!goog.inHtmlDocument_()) {
        return;
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for (var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if (src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return;
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if (!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.writeScriptTag_ = function(src) {
    if (goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      if (doc.readyState == "complete") {
        var isDeps = /\bdeps.js$/.test(src);
        if (isDeps) {
          return false;
        } else {
          throw Error('Cannot write "' + src + '" after document load');
        }
      }
      doc.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"\x3e\x3c/' + "script\x3e");
      return true;
    } else {
      return false;
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if (path in deps.written) {
        return;
      }
      if (path in deps.visited) {
        if (!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path);
        }
        return;
      }
      deps.visited[path] = true;
      if (path in deps.requires) {
        for (var requireName in deps.requires[path]) {
          if (!goog.isProvided_(requireName)) {
            if (requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName]);
            } else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if (!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path);
      }
    }
    for (var path in goog.included_) {
      if (!deps.written[path]) {
        visitNode(path);
      }
    }
    for (var i = 0;i < scripts.length;i++) {
      if (scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i]);
      } else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if (rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule];
    } else {
      return null;
    }
  };
  goog.findBasePath_();
  if (!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js");
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if (s == "object") {
    if (value) {
      if (value instanceof Array) {
        return "array";
      } else {
        if (value instanceof Object) {
          return s;
        }
      }
      var className = Object.prototype.toString.call((value));
      if (className == "[object Window]") {
        return "object";
      }
      if (className == "[object Array]" || typeof value.length == "number" && (typeof value.splice != "undefined" && (typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")))) {
        return "array";
      }
      if (className == "[object Function]" || typeof value.call != "undefined" && (typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call"))) {
        return "function";
      }
    } else {
      return "null";
    }
  } else {
    if (s == "function" && typeof value.call == "undefined") {
      return "object";
    }
  }
  return s;
};
goog.isDef = function(val) {
  return val !== undefined;
};
goog.isNull = function(val) {
  return val === null;
};
goog.isDefAndNotNull = function(val) {
  return val != null;
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array";
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number";
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function";
};
goog.isString = function(val) {
  return typeof val == "string";
};
goog.isBoolean = function(val) {
  return typeof val == "boolean";
};
goog.isNumber = function(val) {
  return typeof val == "number";
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function";
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function";
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);
};
goog.removeUid = function(obj) {
  if ("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_);
  }
  try {
    delete obj[goog.UID_PROPERTY_];
  } catch (ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1E9 >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.cloneObject(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return(fn.call.apply(fn.bind, arguments));
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if (!fn) {
    throw new Error;
  }
  if (arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs);
    };
  } else {
    return function() {
      return fn.apply(selfObj, arguments);
    };
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if (Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_;
  } else {
    goog.bind = goog.bindJs_;
  }
  return goog.bind.apply(null, arguments);
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = Array.prototype.slice.call(arguments);
    newArgs.unshift.apply(newArgs, args);
    return fn.apply(this, newArgs);
  };
};
goog.mixin = function(target, source) {
  for (var x in source) {
    target[x] = source[x];
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return+new Date;
};
goog.globalEval = function(script) {
  if (goog.global.execScript) {
    goog.global.execScript(script, "JavaScript");
  } else {
    if (goog.global.eval) {
      if (goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ \x3d 1;");
        if (typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true;
        } else {
          goog.evalWorksForGlobals_ = false;
        }
      }
      if (goog.evalWorksForGlobals_) {
        goog.global.eval(script);
      } else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt);
      }
    } else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName;
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for (var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]));
    }
    return mapped.join("-");
  };
  var rename;
  if (goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts;
  } else {
    rename = function(a) {
      return a;
    };
  }
  if (opt_modifier) {
    return className + "-" + rename(opt_modifier);
  } else {
    return rename(className);
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style;
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;
}
goog.getMsg = function(str, opt_values) {
  var values = opt_values || {};
  for (var key in values) {
    var value = ("" + values[key]).replace(/\$/g, "$$$$");
    str = str.replace(new RegExp("\\{\\$" + key + "\\}", "gi"), value);
  }
  return str;
};
goog.getMsgWithFallback = function(a, b) {
  return a;
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo);
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol;
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor;
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if (caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1));
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for (var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if (ctor.prototype[opt_methodName] === caller) {
      foundCaller = true;
    } else {
      if (foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args);
      }
    }
  }
  if (me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args);
  } else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global);
};
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0;
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l;
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0;
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0;
};
goog.string.subs = function(str, var_args) {
  for (var i = 1;i < arguments.length;i++) {
    var replacement = String(arguments[i]).replace(/\$/g, "$$$$");
    str = str.replace(/\%s/, replacement);
  }
  return str;
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str);
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str));
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str);
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str);
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str);
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str);
};
goog.string.isSpace = function(ch) {
  return ch == " ";
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && (ch >= " " && ch <= "~") || ch >= "\u0080" && ch <= "\ufffd";
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ");
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n");
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ");
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ");
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "");
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "");
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "");
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "");
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if (test1 < test2) {
    return-1;
  } else {
    if (test1 == test2) {
      return 0;
    } else {
      return 1;
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if (str1 == str2) {
    return 0;
  }
  if (!str1) {
    return-1;
  }
  if (!str2) {
    return 1;
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for (var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if (a != b) {
      var num1 = parseInt(a, 10);
      if (!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if (!isNaN(num2) && num1 - num2) {
          return num1 - num2;
        }
      }
      return a < b ? -1 : 1;
    }
  }
  if (tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length;
  }
  return str1 < str2 ? -1 : 1;
};
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str));
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "));
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "\x3cbr /\x3e" : "\x3cbr\x3e");
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if (opt_isLikelyToContainHtmlChars) {
    return str.replace(goog.string.amperRe_, "\x26amp;").replace(goog.string.ltRe_, "\x26lt;").replace(goog.string.gtRe_, "\x26gt;").replace(goog.string.quotRe_, "\x26quot;");
  } else {
    if (!goog.string.allRe_.test(str)) {
      return str;
    }
    if (str.indexOf("\x26") != -1) {
      str = str.replace(goog.string.amperRe_, "\x26amp;");
    }
    if (str.indexOf("\x3c") != -1) {
      str = str.replace(goog.string.ltRe_, "\x26lt;");
    }
    if (str.indexOf("\x3e") != -1) {
      str = str.replace(goog.string.gtRe_, "\x26gt;");
    }
    if (str.indexOf('"') != -1) {
      str = str.replace(goog.string.quotRe_, "\x26quot;");
    }
    return str;
  }
};
goog.string.amperRe_ = /&/g;
goog.string.ltRe_ = /</g;
goog.string.gtRe_ = />/g;
goog.string.quotRe_ = /\"/g;
goog.string.allRe_ = /[&<>\"]/;
goog.string.unescapeEntities = function(str) {
  if (goog.string.contains(str, "\x26")) {
    if ("document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str);
    } else {
      return goog.string.unescapePureXmlEntities_(str);
    }
  }
  return str;
};
goog.string.unescapeEntitiesUsingDom_ = function(str) {
  var seen = {"\x26amp;":"\x26", "\x26lt;":"\x3c", "\x26gt;":"\x3e", "\x26quot;":'"'};
  var div = document.createElement("div");
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if (value) {
      return value;
    }
    if (entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if (!isNaN(n)) {
        value = String.fromCharCode(n);
      }
    }
    if (!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1);
    }
    return seen[s] = value;
  });
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return "\x26";
      case "lt":
        return "\x3c";
      case "gt":
        return "\x3e";
      case "quot":
        return'"';
      default:
        if (entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if (!isNaN(n)) {
            return String.fromCharCode(n);
          }
        }
        return s;
    }
  });
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " \x26#160;"), opt_xml);
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for (var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if (str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1);
    }
  }
  return str;
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (str.length > chars) {
    str = str.substring(0, chars - 3) + "...";
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (opt_trailingChars && str.length > chars) {
    if (opt_trailingChars > chars) {
      opt_trailingChars = chars;
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint);
  } else {
    if (str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos);
    }
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if (s.quote) {
    return s.quote();
  } else {
    var sb = ['"'];
    for (var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch));
    }
    sb.push('"');
    return sb.join("");
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for (var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i));
  }
  return sb.join("");
};
goog.string.escapeChar = function(c) {
  if (c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c];
  }
  if (c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c];
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if (cc > 31 && cc < 127) {
    rv = c;
  } else {
    if (cc < 256) {
      rv = "\\x";
      if (cc < 16 || cc > 256) {
        rv += "0";
      }
    } else {
      rv = "\\u";
      if (cc < 4096) {
        rv += "0";
      }
    }
    rv += cc.toString(16).toUpperCase();
  }
  return goog.string.jsEscapeCache_[c] = rv;
};
goog.string.toMap = function(s) {
  var rv = {};
  for (var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true;
  }
  return rv;
};
goog.string.contains = function(s, ss) {
  return s.indexOf(ss) != -1;
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0;
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if (index >= 0 && (index < s.length && stringLength > 0)) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength);
  }
  return resultStr;
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "");
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "");
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string);
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if (index == -1) {
    index = s.length;
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s;
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj);
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "");
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36);
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for (var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if (v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break;
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || (goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2]));
    } while (order == 0);
  }
  return order;
};
goog.string.compareElements_ = function(left, right) {
  if (left < right) {
    return-1;
  } else {
    if (left > right) {
      return 1;
    }
  }
  return 0;
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for (var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_;
  }
  return result;
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return "goog_" + goog.string.uniqueStringCounter_++;
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if (num == 0 && goog.string.isEmpty(str)) {
    return NaN;
  }
  return num;
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase();
  });
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase();
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase();
  });
};
goog.string.parseInt = function(value) {
  if (isFinite(value)) {
    value = String(value);
  }
  if (goog.isString(value)) {
    return/^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10);
  }
  return NaN;
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error);
  } else {
    this.stack = (new Error).stack || "";
  }
  if (opt_msg) {
    this.message = String(opt_msg);
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.string");
goog.asserts.ENABLE_ASSERTS = goog.DEBUG;
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern;
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if (givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs;
  } else {
    if (defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs;
    }
  }
  throw new goog.asserts.AssertionError("" + message, args || []);
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return condition;
};
goog.asserts.fail = function(opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS) {
    throw new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3));
  }
  return(value);
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.NATIVE_ARRAY_PROTOTYPES = goog.TRUSTED_SITE;
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1];
};
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.indexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.indexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i < arr.length;i++) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.lastIndexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if (fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex);
  }
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.lastIndexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i >= 0;i--) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.forEach ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;--i) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.filter ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      var val = arr2[i];
      if (f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val;
      }
    }
  }
  return res;
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.map ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr);
    }
  }
  return res;
};
goog.array.reduce = function(arr, f, val, opt_obj) {
  if (arr.reduce) {
    if (opt_obj) {
      return arr.reduce(goog.bind(f, opt_obj), val);
    } else {
      return arr.reduce(f, val);
    }
  }
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.reduceRight = function(arr, f, val, opt_obj) {
  if (arr.reduceRight) {
    if (opt_obj) {
      return arr.reduceRight(goog.bind(f, opt_obj), val);
    } else {
      return arr.reduceRight(f, val);
    }
  }
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.some ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true;
    }
  }
  return false;
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.every ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false;
    }
  }
  return true;
};
goog.array.count = function(arr, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr, function(element, index, arr) {
    if (f.call(opt_obj, element, index, arr)) {
      ++count;
    }
  }, opt_obj);
  return count;
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;i--) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0;
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0;
};
goog.array.clear = function(arr) {
  if (!goog.isArray(arr)) {
    for (var i = arr.length - 1;i >= 0;i--) {
      delete arr[i];
    }
  }
  arr.length = 0;
};
goog.array.insert = function(arr, obj) {
  if (!goog.array.contains(arr, obj)) {
    arr.push(obj);
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj);
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd);
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if (arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj);
  } else {
    goog.array.insertAt(arr, obj, i);
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if (rv = i >= 0) {
    goog.array.removeAt(arr, i);
  }
  return rv;
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1;
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if (i >= 0) {
    goog.array.removeAt(arr, i);
    return true;
  }
  return false;
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.toArray = function(object) {
  var length = object.length;
  if (length > 0) {
    var rv = new Array(length);
    for (var i = 0;i < length;i++) {
      rv[i] = object[i];
    }
    return rv;
  }
  return[];
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for (var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if (goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && Object.prototype.hasOwnProperty.call(arr2, "callee")) {
      arr1.push.apply(arr1, arr2);
    } else {
      if (isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for (var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j];
        }
      } else {
        arr1.push(arr2);
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1));
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if (arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start);
  } else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end);
  }
};
goog.array.removeDuplicates = function(arr, opt_rv) {
  var returnArray = opt_rv || arr;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while (cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
    if (!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current;
    }
  }
  returnArray.length = cursorInsert;
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target);
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj);
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while (left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if (isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr);
    } else {
      compareResult = compareFn(opt_target, arr[middle]);
    }
    if (compareResult > 0) {
      left = middle + 1;
    } else {
      right = middle;
      found = !compareResult;
    }
  }
  return found ? left : ~left;
};
goog.array.sort = function(arr, opt_compareFn) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.sort.call(arr, opt_compareFn || goog.array.defaultCompare);
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for (var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]};
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index;
  }
  goog.array.sort(arr, stableCompareFn);
  for (var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value;
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key]);
  });
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for (var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if (compareResult > 0 || compareResult == 0 && opt_strict) {
      return false;
    }
  }
  return true;
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if (!goog.isArrayLike(arr1) || (!goog.isArrayLike(arr2) || arr1.length != arr2.length)) {
    return false;
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for (var i = 0;i < l;i++) {
    if (!equalsFn(arr1[i], arr2[i])) {
      return false;
    }
  }
  return true;
};
goog.array.compare = function(arr1, arr2, opt_equalsFn) {
  return goog.array.equals(arr1, arr2, opt_equalsFn);
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for (var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if (result != 0) {
      return result;
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length);
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0;
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b;
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if (index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true;
  }
  return false;
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false;
};
goog.array.bucket = function(array, sorter) {
  var buckets = {};
  for (var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter(value, i, array);
    if (goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value);
    }
  }
  return buckets;
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call(opt_obj, element, index, arr)] = element;
  });
  return ret;
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [];
  var start = 0;
  var end = startOrEnd;
  var step = opt_step || 1;
  if (opt_end !== undefined) {
    start = startOrEnd;
    end = opt_end;
  }
  if (step * (end - start) < 0) {
    return[];
  }
  if (step > 0) {
    for (var i = start;i < end;i += step) {
      array.push(i);
    }
  } else {
    for (var i = start;i > end;i += step) {
      array.push(i);
    }
  }
  return array;
};
goog.array.repeat = function(value, n) {
  var array = [];
  for (var i = 0;i < n;i++) {
    array[i] = value;
  }
  return array;
};
goog.array.flatten = function(var_args) {
  var result = [];
  for (var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if (goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element));
    } else {
      result.push(element);
    }
  }
  return result;
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if (array.length) {
    n %= array.length;
    if (n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n));
    } else {
      if (n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n));
      }
    }
  }
  return array;
};
goog.array.zip = function(var_args) {
  if (!arguments.length) {
    return[];
  }
  var result = [];
  for (var i = 0;true;i++) {
    var value = [];
    for (var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if (i >= arr.length) {
        return result;
      }
      value.push(arr[i]);
    }
    result.push(value);
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for (var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp;
  }
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for (var key in obj) {
    f.call(opt_obj, obj[key], key, obj);
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key];
    }
  }
  return res;
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj);
  }
  return res;
};
goog.object.some = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      return true;
    }
  }
  return false;
};
goog.object.every = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (!f.call(opt_obj, obj[key], key, obj)) {
      return false;
    }
  }
  return true;
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for (var key in obj) {
    rv++;
  }
  return rv;
};
goog.object.getAnyKey = function(obj) {
  for (var key in obj) {
    return key;
  }
};
goog.object.getAnyValue = function(obj) {
  for (var key in obj) {
    return obj[key];
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val);
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = obj[key];
  }
  return res;
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = key;
  }
  return res;
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for (var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if (!goog.isDef(obj)) {
      break;
    }
  }
  return obj;
};
goog.object.containsKey = function(obj, key) {
  return key in obj;
};
goog.object.containsValue = function(obj, val) {
  for (var key in obj) {
    if (obj[key] == val) {
      return true;
    }
  }
  return false;
};
goog.object.findKey = function(obj, f, opt_this) {
  for (var key in obj) {
    if (f.call(opt_this, obj[key], key, obj)) {
      return key;
    }
  }
  return undefined;
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key];
};
goog.object.isEmpty = function(obj) {
  for (var key in obj) {
    return false;
  }
  return true;
};
goog.object.clear = function(obj) {
  for (var i in obj) {
    delete obj[i];
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if (rv = key in obj) {
    delete obj[key];
  }
  return rv;
};
goog.object.add = function(obj, key, val) {
  if (key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val);
};
goog.object.get = function(obj, key, opt_val) {
  if (key in obj) {
    return obj[key];
  }
  return opt_val;
};
goog.object.set = function(obj, key, value) {
  obj[key] = value;
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value;
};
goog.object.clone = function(obj) {
  var res = {};
  for (var key in obj) {
    res[key] = obj[key];
  }
  return res;
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for (var key in obj) {
    transposed[obj[key]] = key;
  }
  return transposed;
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for (var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for (key in source) {
      target[key] = source[key];
    }
    for (var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0]);
  }
  if (argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for (var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1];
  }
  return rv;
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0]);
  }
  var rv = {};
  for (var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true;
  }
  return rv;
};
goog.object.createImmutableView = function(obj) {
  var result = obj;
  if (Object.isFrozen && !Object.isFrozen(obj)) {
    result = Object.create(obj);
    Object.freeze(result);
  }
  return result;
};
goog.object.isImmutableView = function(obj) {
  return!!Object.isFrozen && Object.isFrozen(obj);
};
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if (opt_a1 != null) {
    this.append.apply(this, arguments);
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s;
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += a1;
  if (opt_a2 != null) {
    for (var i = 1;i < arguments.length;i++) {
      this.buffer_ += arguments[i];
    }
  }
  return this;
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = "";
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length;
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_;
};
goog.provide("cljs.core");
goog.require("goog.array");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.object");
goog.require("goog.string.StringBuffer");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
goog.require("goog.string");
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2138";
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_print_fn_STAR_ = function _STAR_print_fn_STAR_(_) {
  throw new Error("No *print-fn* fn set for evaluation environment");
};
cljs.core.set_print_fn_BANG_ = function set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f;
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
cljs.core.pr_opts = function pr_opts() {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", 4338025857), cljs.core._STAR_flush_on_newline_STAR_, new cljs.core.Keyword(null, "readably", "readably", 4441712502), cljs.core._STAR_print_readably_STAR_, new cljs.core.Keyword(null, "meta", "meta", 1017252215), cljs.core._STAR_print_meta_STAR_, new cljs.core.Keyword(null, "dup", "dup", 1014004081), cljs.core._STAR_print_dup_STAR_, new cljs.core.Keyword(null, "print-length", "print-length", 
  3960797560), cljs.core._STAR_print_length_STAR_], null);
};
cljs.core.enable_console_print_BANG_ = function enable_console_print_BANG_() {
  cljs.core._STAR_print_newline_STAR_ = false;
  return cljs.core._STAR_print_fn_STAR_ = function() {
    var G__22737__delegate = function(args) {
      return console.log.apply(console, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args) : cljs.core.into_array.call(null, args));
    };
    var G__22737 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__22737__delegate.call(this, args);
    };
    G__22737.cljs$lang$maxFixedArity = 0;
    G__22737.cljs$lang$applyTo = function(arglist__22738) {
      var args = cljs.core.seq(arglist__22738);
      return G__22737__delegate(args);
    };
    G__22737.cljs$core$IFn$_invoke$arity$variadic = G__22737__delegate;
    return G__22737;
  }();
};
cljs.core.truth_ = function truth_(x) {
  return x != null && x !== false;
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function identical_QMARK_(x, y) {
  return x === y;
};
cljs.core.nil_QMARK_ = function nil_QMARK_(x) {
  return x == null;
};
cljs.core.array_QMARK_ = function array_QMARK_(x) {
  return x instanceof Array;
};
cljs.core.number_QMARK_ = function number_QMARK_(n) {
  return typeof n === "number";
};
cljs.core.not = function not(x) {
  if (cljs.core.truth_(x)) {
    return false;
  } else {
    return true;
  }
};
cljs.core.object_QMARK_ = function object_QMARK_(x) {
  if (!(x == null)) {
    return x.constructor === Object;
  } else {
    return false;
  }
};
cljs.core.string_QMARK_ = function string_QMARK_(x) {
  return goog.isString(x);
};
cljs.core.native_satisfies_QMARK_ = function native_satisfies_QMARK_(p, x) {
  var x__$1 = x == null ? null : x;
  if (p[goog.typeOf(x__$1)]) {
    return true;
  } else {
    if (p["_"]) {
      return true;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return false;
      } else {
        return null;
      }
    }
  }
};
cljs.core.is_proto_ = function is_proto_(x) {
  return x.constructor.prototype === x;
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = function type(x) {
  if (x == null) {
    return null;
  } else {
    return x.constructor;
  }
};
cljs.core.missing_protocol = function missing_protocol(proto, obj) {
  var ty = cljs.core.type(obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__3396__auto__ = ty;
    if (cljs.core.truth_(and__3396__auto__)) {
      return ty.cljs$lang$type;
    } else {
      return and__3396__auto__;
    }
  }()) ? ty.cljs$lang$ctorStr : goog.typeOf(obj);
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""));
};
cljs.core.type__GT_str = function type__GT_str(ty) {
  var temp__4090__auto__ = ty.cljs$lang$ctorStr;
  if (cljs.core.truth_(temp__4090__auto__)) {
    var s = temp__4090__auto__;
    return s;
  } else {
    return[cljs.core.str(ty)].join("");
  }
};
cljs.core.make_array = function() {
  var make_array = null;
  var make_array__1 = function(size) {
    return new Array(size);
  };
  var make_array__2 = function(type, size) {
    return make_array.cljs$core$IFn$_invoke$arity$1(size);
  };
  make_array = function(type, size) {
    switch(arguments.length) {
      case 1:
        return make_array__1.call(this, type);
      case 2:
        return make_array__2.call(this, type, size);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
  make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
  return make_array;
}();
cljs.core.aclone = function aclone(arr) {
  var len = arr.length;
  var new_arr = new Array(len);
  var n__4250__auto___22739 = len;
  var i_22740 = 0;
  while (true) {
    if (i_22740 < n__4250__auto___22739) {
      new_arr[i_22740] = arr[i_22740];
      var G__22741 = i_22740 + 1;
      i_22740 = G__22741;
      continue;
    } else {
    }
    break;
  }
  return new_arr;
};
cljs.core.array = function array(var_args) {
  return Array.prototype.slice.call(arguments);
};
cljs.core.aget = function() {
  var aget = null;
  var aget__2 = function(array, i) {
    return array[i];
  };
  var aget__3 = function() {
    var G__22742__delegate = function(array, i, idxs) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(aget, aget.cljs$core$IFn$_invoke$arity$2(array, i), idxs) : cljs.core.apply.call(null, aget, aget.cljs$core$IFn$_invoke$arity$2(array, i), idxs);
    };
    var G__22742 = function(array, i, var_args) {
      var idxs = null;
      if (arguments.length > 2) {
        idxs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__22742__delegate.call(this, array, i, idxs);
    };
    G__22742.cljs$lang$maxFixedArity = 2;
    G__22742.cljs$lang$applyTo = function(arglist__22743) {
      var array = cljs.core.first(arglist__22743);
      arglist__22743 = cljs.core.next(arglist__22743);
      var i = cljs.core.first(arglist__22743);
      var idxs = cljs.core.rest(arglist__22743);
      return G__22742__delegate(array, i, idxs);
    };
    G__22742.cljs$core$IFn$_invoke$arity$variadic = G__22742__delegate;
    return G__22742;
  }();
  aget = function(array, i, var_args) {
    var idxs = var_args;
    switch(arguments.length) {
      case 2:
        return aget__2.call(this, array, i);
      default:
        return aget__3.cljs$core$IFn$_invoke$arity$variadic(array, i, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aget.cljs$lang$maxFixedArity = 2;
  aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
  aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
  aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
  return aget;
}();
cljs.core.aset = function() {
  var aset = null;
  var aset__3 = function(array, i, val) {
    return array[i] = val;
  };
  var aset__4 = function() {
    var G__22744__delegate = function(array, idx, idx2, idxv) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(aset, array[idx], idx2, idxv) : cljs.core.apply.call(null, aset, array[idx], idx2, idxv);
    };
    var G__22744 = function(array, idx, idx2, var_args) {
      var idxv = null;
      if (arguments.length > 3) {
        idxv = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__22744__delegate.call(this, array, idx, idx2, idxv);
    };
    G__22744.cljs$lang$maxFixedArity = 3;
    G__22744.cljs$lang$applyTo = function(arglist__22745) {
      var array = cljs.core.first(arglist__22745);
      arglist__22745 = cljs.core.next(arglist__22745);
      var idx = cljs.core.first(arglist__22745);
      arglist__22745 = cljs.core.next(arglist__22745);
      var idx2 = cljs.core.first(arglist__22745);
      var idxv = cljs.core.rest(arglist__22745);
      return G__22744__delegate(array, idx, idx2, idxv);
    };
    G__22744.cljs$core$IFn$_invoke$arity$variadic = G__22744__delegate;
    return G__22744;
  }();
  aset = function(array, idx, idx2, var_args) {
    var idxv = var_args;
    switch(arguments.length) {
      case 3:
        return aset__3.call(this, array, idx, idx2);
      default:
        return aset__4.cljs$core$IFn$_invoke$arity$variadic(array, idx, idx2, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aset.cljs$lang$maxFixedArity = 3;
  aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
  aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
  aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
  return aset;
}();
cljs.core.alength = function alength(array) {
  return array.length;
};
cljs.core.into_array = function() {
  var into_array = null;
  var into_array__1 = function(aseq) {
    return into_array.cljs$core$IFn$_invoke$arity$2(null, aseq);
  };
  var into_array__2 = function(type, aseq) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(a, x) {
      a.push(x);
      return a;
    }, [], aseq) : cljs.core.reduce.call(null, function(a, x) {
      a.push(x);
      return a;
    }, [], aseq);
  };
  into_array = function(type, aseq) {
    switch(arguments.length) {
      case 1:
        return into_array__1.call(this, type);
      case 2:
        return into_array__2.call(this, type, aseq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
  into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
  return into_array;
}();
cljs.core.Fn = function() {
  var obj22747 = {};
  return obj22747;
}();
cljs.core.IFn = function() {
  var obj22749 = {};
  return obj22749;
}();
cljs.core._invoke = function() {
  var _invoke = null;
  var _invoke__1 = function(this$) {
    if (function() {
      var and__3396__auto__ = this$;
      if (and__3396__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$1;
      } else {
        return and__3396__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$1(this$);
    } else {
      var x__4029__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3408__auto__ = cljs.core._invoke[goog.typeOf(x__4029__auto__)];
        if (or__3408__auto__) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = cljs.core._invoke["_"];
          if (or__3408__auto____$1) {
            return or__3408__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var _invoke__2 = function(this$, a) {
    if (function() {
      var and__3396__auto__ = this$;
      if (and__3396__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$2;
      } else {
        return and__3396__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$2(this$, a);
    } else {
      var x__4029__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3408__auto__ = cljs.core._invoke[goog.typeOf(x__4029__auto__)];
        if (or__3408__auto__) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = cljs.core._invoke["_"];
          if (or__3408__auto____$1) {
            return or__3408__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a);
    }
  };
  var _invoke__3 = function(this$, a, b) {
    if (function() {
      var and__3396__auto__ = this$;
      if (and__3396__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$3;
      } else {
        return and__3396__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b);
    } else {
      var x__4029__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3408__auto__ = cljs.core._invoke[goog.typeOf(x__4029__auto__)];
        if (or__3408__auto__) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = cljs.core._invoke["_"];
          if (or__3408__auto____$1) {
            return or__3408__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b);
    }
  };
  var _invoke__4 = function(this$, a, b, c) {
    if (function() {
      var and__3396__auto__ = this$;
      if (and__3396__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$4;
      } else {
        return and__3396__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c);
    } else {
      var x__4029__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3408__auto__ = cljs.core._invoke[goog.typeOf(x__4029__auto__)];
        if (or__3408__auto__) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = cljs.core._invoke["_"];
          if (or__3408__auto____$1) {
            return or__3408__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c);
    }
  };
  var _invoke__5 = function(this$, a, b, c, d) {
    if (function() {
      var and__3396__auto__ = this$;
      if (and__3396__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$5;
      } else {
        return and__3396__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d);
    } else {
      var x__4029__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3408__auto__ = cljs.core._invoke[goog.typeOf(x__4029__auto__)];
        if (or__3408__auto__) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = cljs.core._invoke["_"];
          if (or__3408__auto____$1) {
            return or__3408__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d);
    }
  };
  var _invoke__6 = function(this$, a, b, c, d, e) {
    if (function() {
      var and__3396__auto__ = this$;
      if (and__3396__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$6;
      } else {
        return and__3396__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e);
    } else {
      var x__4029__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3408__auto__ = cljs.core._invoke[goog.typeOf(x__4029__auto__)];
        if (or__3408__auto__) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = cljs.core._invoke["_"];
          if (or__3408__auto____$1) {
            return or__3408__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e);
    }
  };
  var _invoke__7 = function(this$, a, b, c, d, e, f) {
    if (function() {
      var and__3396__auto__ = this$;
      if (and__3396__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$7;
      } else {
        return and__3396__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f);
    } else {
      var x__4029__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3408__auto__ = cljs.core._invoke[goog.typeOf(x__4029__auto__)];
        if (or__3408__auto__) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = cljs.core._invoke["_"];
          if (or__3408__auto____$1) {
            return or__3408__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f);
    }
  };
  var _invoke__8 = function(this$, a, b, c, d, e, f, g) {
    if (function() {
      var and__3396__auto__ = this$;
      if (and__3396__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$8;
      } else {
        return and__3396__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g);
    } else {
      var x__4029__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3408__auto__ = cljs.core._invoke[goog.typeOf(x__4029__auto__)];
        if (or__3408__auto__) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = cljs.core._invoke["_"];
          if (or__3408__auto____$1) {
            return or__3408__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g);
    }
  };
  var _invoke__9 = function(this$, a, b, c, d, e, f, g, h) {
    if (function() {
      var and__3396__auto__ = this$;
      if (and__3396__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$9;
      } else {
        return and__3396__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h);
    } else {
      var x__4029__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3408__auto__ = cljs.core._invoke[goog.typeOf(x__4029__auto__)];
        if (or__3408__auto__) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = cljs.core._invoke["_"];
          if (or__3408__auto____$1) {
            return or__3408__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h);
    }
  };
  var _invoke__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    if (function() {
      var and__3396__auto__ = this$;
      if (and__3396__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$10;
      } else {
        return and__3396__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i);
    } else {
      var x__4029__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3408__auto__ = cljs.core._invoke[goog.typeOf(x__4029__auto__)];
        if (or__3408__auto__) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = cljs.core._invoke["_"];
          if (or__3408__auto____$1) {
            return or__3408__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i);
    }
  };
  var _invoke__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    if (function() {
      var and__3396__auto__ = this$;
      if (and__3396__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$11;
      } else {
        return and__3396__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j);
    } else {
      var x__4029__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3408__auto__ = cljs.core._invoke[goog.typeOf(x__4029__auto__)];
        if (or__3408__auto__) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = cljs.core._invoke["_"];
          if (or__3408__auto____$1) {
            return or__3408__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j);
    }
  };
  var _invoke__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    if (function() {
      var and__3396__auto__ = this$;
      if (and__3396__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$12;
      } else {
        return and__3396__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k);
    } else {
      var x__4029__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3408__auto__ = cljs.core._invoke[goog.typeOf(x__4029__auto__)];
        if (or__3408__auto__) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = cljs.core._invoke["_"];
          if (or__3408__auto____$1) {
            return or__3408__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
    }
  };
  var _invoke__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    if (function() {
      var and__3396__auto__ = this$;
      if (and__3396__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$13;
      } else {
        return and__3396__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l);
    } else {
      var x__4029__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3408__auto__ = cljs.core._invoke[goog.typeOf(x__4029__auto__)];
        if (or__3408__auto__) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = cljs.core._invoke["_"];
          if (or__3408__auto____$1) {
            return or__3408__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
    }
  };
  var _invoke__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    if (function() {
      var and__3396__auto__ = this$;
      if (and__3396__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$14;
      } else {
        return and__3396__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    } else {
      var x__4029__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3408__auto__ = cljs.core._invoke[goog.typeOf(x__4029__auto__)];
        if (or__3408__auto__) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = cljs.core._invoke["_"];
          if (or__3408__auto____$1) {
            return or__3408__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    }
  };
  var _invoke__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    if (function() {
      var and__3396__auto__ = this$;
      if (and__3396__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$15;
      } else {
        return and__3396__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    } else {
      var x__4029__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3408__auto__ = cljs.core._invoke[goog.typeOf(x__4029__auto__)];
        if (or__3408__auto__) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = cljs.core._invoke["_"];
          if (or__3408__auto____$1) {
            return or__3408__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    }
  };
  var _invoke__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    if (function() {
      var and__3396__auto__ = this$;
      if (and__3396__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$16;
      } else {
        return and__3396__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    } else {
      var x__4029__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3408__auto__ = cljs.core._invoke[goog.typeOf(x__4029__auto__)];
        if (or__3408__auto__) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = cljs.core._invoke["_"];
          if (or__3408__auto____$1) {
            return or__3408__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    }
  };
  var _invoke__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    if (function() {
      var and__3396__auto__ = this$;
      if (and__3396__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$17;
      } else {
        return and__3396__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    } else {
      var x__4029__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3408__auto__ = cljs.core._invoke[goog.typeOf(x__4029__auto__)];
        if (or__3408__auto__) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = cljs.core._invoke["_"];
          if (or__3408__auto____$1) {
            return or__3408__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    }
  };
  var _invoke__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    if (function() {
      var and__3396__auto__ = this$;
      if (and__3396__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$18;
      } else {
        return and__3396__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    } else {
      var x__4029__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3408__auto__ = cljs.core._invoke[goog.typeOf(x__4029__auto__)];
        if (or__3408__auto__) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = cljs.core._invoke["_"];
          if (or__3408__auto____$1) {
            return or__3408__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    }
  };
  var _invoke__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s) {
    if (function() {
      var and__3396__auto__ = this$;
      if (and__3396__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$19;
      } else {
        return and__3396__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
    } else {
      var x__4029__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3408__auto__ = cljs.core._invoke[goog.typeOf(x__4029__auto__)];
        if (or__3408__auto__) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = cljs.core._invoke["_"];
          if (or__3408__auto____$1) {
            return or__3408__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
    }
  };
  var _invoke__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t) {
    if (function() {
      var and__3396__auto__ = this$;
      if (and__3396__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$20;
      } else {
        return and__3396__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
    } else {
      var x__4029__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3408__auto__ = cljs.core._invoke[goog.typeOf(x__4029__auto__)];
        if (or__3408__auto__) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = cljs.core._invoke["_"];
          if (or__3408__auto____$1) {
            return or__3408__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
    }
  };
  var _invoke__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    if (function() {
      var and__3396__auto__ = this$;
      if (and__3396__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$21;
      } else {
        return and__3396__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest);
    } else {
      var x__4029__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3408__auto__ = cljs.core._invoke[goog.typeOf(x__4029__auto__)];
        if (or__3408__auto__) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = cljs.core._invoke["_"];
          if (or__3408__auto____$1) {
            return or__3408__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest);
    }
  };
  _invoke = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return _invoke__1.call(this, this$);
      case 2:
        return _invoke__2.call(this, this$, a);
      case 3:
        return _invoke__3.call(this, this$, a, b);
      case 4:
        return _invoke__4.call(this, this$, a, b, c);
      case 5:
        return _invoke__5.call(this, this$, a, b, c, d);
      case 6:
        return _invoke__6.call(this, this$, a, b, c, d, e);
      case 7:
        return _invoke__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return _invoke__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return _invoke__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return _invoke__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return _invoke__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return _invoke__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return _invoke__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return _invoke__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return _invoke__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return _invoke__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return _invoke__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return _invoke__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return _invoke__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
      case 20:
        return _invoke__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
      case 21:
        return _invoke__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
  _invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
  _invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
  _invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
  _invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
  _invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
  _invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
  _invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
  _invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
  _invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
  _invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
  _invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
  _invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
  _invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
  _invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
  _invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
  _invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
  _invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
  _invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
  _invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
  _invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
  return _invoke;
}();
cljs.core.ICloneable = function() {
  var obj22751 = {};
  return obj22751;
}();
cljs.core._clone = function _clone(value) {
  if (function() {
    var and__3396__auto__ = value;
    if (and__3396__auto__) {
      return value.cljs$core$ICloneable$_clone$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return value.cljs$core$ICloneable$_clone$arity$1(value);
  } else {
    var x__4029__auto__ = value == null ? null : value;
    return function() {
      var or__3408__auto__ = cljs.core._clone[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._clone["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ICloneable.-clone", value);
        }
      }
    }().call(null, value);
  }
};
cljs.core.ICounted = function() {
  var obj22753 = {};
  return obj22753;
}();
cljs.core._count = function _count(coll) {
  if (function() {
    var and__3396__auto__ = coll;
    if (and__3396__auto__) {
      return coll.cljs$core$ICounted$_count$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll);
  } else {
    var x__4029__auto__ = coll == null ? null : coll;
    return function() {
      var or__3408__auto__ = cljs.core._count[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._count["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ICounted.-count", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IEmptyableCollection = function() {
  var obj22755 = {};
  return obj22755;
}();
cljs.core._empty = function _empty(coll) {
  if (function() {
    var and__3396__auto__ = coll;
    if (and__3396__auto__) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
  } else {
    var x__4029__auto__ = coll == null ? null : coll;
    return function() {
      var or__3408__auto__ = cljs.core._empty[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._empty["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ICollection = function() {
  var obj22757 = {};
  return obj22757;
}();
cljs.core._conj = function _conj(coll, o) {
  if (function() {
    var and__3396__auto__ = coll;
    if (and__3396__auto__) {
      return coll.cljs$core$ICollection$_conj$arity$2;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o);
  } else {
    var x__4029__auto__ = coll == null ? null : coll;
    return function() {
      var or__3408__auto__ = cljs.core._conj[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._conj["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o);
  }
};
cljs.core.IIndexed = function() {
  var obj22759 = {};
  return obj22759;
}();
cljs.core._nth = function() {
  var _nth = null;
  var _nth__2 = function(coll, n) {
    if (function() {
      var and__3396__auto__ = coll;
      if (and__3396__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$2;
      } else {
        return and__3396__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$2(coll, n);
    } else {
      var x__4029__auto__ = coll == null ? null : coll;
      return function() {
        var or__3408__auto__ = cljs.core._nth[goog.typeOf(x__4029__auto__)];
        if (or__3408__auto__) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = cljs.core._nth["_"];
          if (or__3408__auto____$1) {
            return or__3408__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n);
    }
  };
  var _nth__3 = function(coll, n, not_found) {
    if (function() {
      var and__3396__auto__ = coll;
      if (and__3396__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$3;
      } else {
        return and__3396__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found);
    } else {
      var x__4029__auto__ = coll == null ? null : coll;
      return function() {
        var or__3408__auto__ = cljs.core._nth[goog.typeOf(x__4029__auto__)];
        if (or__3408__auto__) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = cljs.core._nth["_"];
          if (or__3408__auto____$1) {
            return or__3408__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n, not_found);
    }
  };
  _nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return _nth__2.call(this, coll, n);
      case 3:
        return _nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
  _nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
  return _nth;
}();
cljs.core.ASeq = function() {
  var obj22761 = {};
  return obj22761;
}();
cljs.core.ISeq = function() {
  var obj22763 = {};
  return obj22763;
}();
cljs.core._first = function _first(coll) {
  if (function() {
    var and__3396__auto__ = coll;
    if (and__3396__auto__) {
      return coll.cljs$core$ISeq$_first$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll);
  } else {
    var x__4029__auto__ = coll == null ? null : coll;
    return function() {
      var or__3408__auto__ = cljs.core._first[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._first["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISeq.-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._rest = function _rest(coll) {
  if (function() {
    var and__3396__auto__ = coll;
    if (and__3396__auto__) {
      return coll.cljs$core$ISeq$_rest$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll);
  } else {
    var x__4029__auto__ = coll == null ? null : coll;
    return function() {
      var or__3408__auto__ = cljs.core._rest[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._rest["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISeq.-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INext = function() {
  var obj22765 = {};
  return obj22765;
}();
cljs.core._next = function _next(coll) {
  if (function() {
    var and__3396__auto__ = coll;
    if (and__3396__auto__) {
      return coll.cljs$core$INext$_next$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll);
  } else {
    var x__4029__auto__ = coll == null ? null : coll;
    return function() {
      var or__3408__auto__ = cljs.core._next[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._next["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("INext.-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ILookup = function() {
  var obj22767 = {};
  return obj22767;
}();
cljs.core._lookup = function() {
  var _lookup = null;
  var _lookup__2 = function(o, k) {
    if (function() {
      var and__3396__auto__ = o;
      if (and__3396__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$2;
      } else {
        return and__3396__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(o, k);
    } else {
      var x__4029__auto__ = o == null ? null : o;
      return function() {
        var or__3408__auto__ = cljs.core._lookup[goog.typeOf(x__4029__auto__)];
        if (or__3408__auto__) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = cljs.core._lookup["_"];
          if (or__3408__auto____$1) {
            return or__3408__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ILookup.-lookup", o);
          }
        }
      }().call(null, o, k);
    }
  };
  var _lookup__3 = function(o, k, not_found) {
    if (function() {
      var and__3396__auto__ = o;
      if (and__3396__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$3;
      } else {
        return and__3396__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found);
    } else {
      var x__4029__auto__ = o == null ? null : o;
      return function() {
        var or__3408__auto__ = cljs.core._lookup[goog.typeOf(x__4029__auto__)];
        if (or__3408__auto__) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = cljs.core._lookup["_"];
          if (or__3408__auto____$1) {
            return or__3408__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ILookup.-lookup", o);
          }
        }
      }().call(null, o, k, not_found);
    }
  };
  _lookup = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return _lookup__2.call(this, o, k);
      case 3:
        return _lookup__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
  _lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
  return _lookup;
}();
cljs.core.IAssociative = function() {
  var obj22769 = {};
  return obj22769;
}();
cljs.core._contains_key_QMARK_ = function _contains_key_QMARK_(coll, k) {
  if (function() {
    var and__3396__auto__ = coll;
    if (and__3396__auto__) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k);
  } else {
    var x__4029__auto__ = coll == null ? null : coll;
    return function() {
      var or__3408__auto__ = cljs.core._contains_key_QMARK_[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._contains_key_QMARK_["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core._assoc = function _assoc(coll, k, v) {
  if (function() {
    var and__3396__auto__ = coll;
    if (and__3396__auto__) {
      return coll.cljs$core$IAssociative$_assoc$arity$3;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v);
  } else {
    var x__4029__auto__ = coll == null ? null : coll;
    return function() {
      var or__3408__auto__ = cljs.core._assoc[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._assoc["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v);
  }
};
cljs.core.IMap = function() {
  var obj22771 = {};
  return obj22771;
}();
cljs.core._dissoc = function _dissoc(coll, k) {
  if (function() {
    var and__3396__auto__ = coll;
    if (and__3396__auto__) {
      return coll.cljs$core$IMap$_dissoc$arity$2;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k);
  } else {
    var x__4029__auto__ = coll == null ? null : coll;
    return function() {
      var or__3408__auto__ = cljs.core._dissoc[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._dissoc["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core.IMapEntry = function() {
  var obj22773 = {};
  return obj22773;
}();
cljs.core._key = function _key(coll) {
  if (function() {
    var and__3396__auto__ = coll;
    if (and__3396__auto__) {
      return coll.cljs$core$IMapEntry$_key$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll);
  } else {
    var x__4029__auto__ = coll == null ? null : coll;
    return function() {
      var or__3408__auto__ = cljs.core._key[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._key["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMapEntry.-key", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._val = function _val(coll) {
  if (function() {
    var and__3396__auto__ = coll;
    if (and__3396__auto__) {
      return coll.cljs$core$IMapEntry$_val$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll);
  } else {
    var x__4029__auto__ = coll == null ? null : coll;
    return function() {
      var or__3408__auto__ = cljs.core._val[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._val["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMapEntry.-val", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISet = function() {
  var obj22775 = {};
  return obj22775;
}();
cljs.core._disjoin = function _disjoin(coll, v) {
  if (function() {
    var and__3396__auto__ = coll;
    if (and__3396__auto__) {
      return coll.cljs$core$ISet$_disjoin$arity$2;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v);
  } else {
    var x__4029__auto__ = coll == null ? null : coll;
    return function() {
      var or__3408__auto__ = cljs.core._disjoin[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._disjoin["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v);
  }
};
cljs.core.IStack = function() {
  var obj22777 = {};
  return obj22777;
}();
cljs.core._peek = function _peek(coll) {
  if (function() {
    var and__3396__auto__ = coll;
    if (and__3396__auto__) {
      return coll.cljs$core$IStack$_peek$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll);
  } else {
    var x__4029__auto__ = coll == null ? null : coll;
    return function() {
      var or__3408__auto__ = cljs.core._peek[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._peek["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IStack.-peek", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._pop = function _pop(coll) {
  if (function() {
    var and__3396__auto__ = coll;
    if (and__3396__auto__) {
      return coll.cljs$core$IStack$_pop$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll);
  } else {
    var x__4029__auto__ = coll == null ? null : coll;
    return function() {
      var or__3408__auto__ = cljs.core._pop[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._pop["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IStack.-pop", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IVector = function() {
  var obj22779 = {};
  return obj22779;
}();
cljs.core._assoc_n = function _assoc_n(coll, n, val) {
  if (function() {
    var and__3396__auto__ = coll;
    if (and__3396__auto__) {
      return coll.cljs$core$IVector$_assoc_n$arity$3;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val);
  } else {
    var x__4029__auto__ = coll == null ? null : coll;
    return function() {
      var or__3408__auto__ = cljs.core._assoc_n[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._assoc_n["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val);
  }
};
cljs.core.IDeref = function() {
  var obj22781 = {};
  return obj22781;
}();
cljs.core._deref = function _deref(o) {
  if (function() {
    var and__3396__auto__ = o;
    if (and__3396__auto__) {
      return o.cljs$core$IDeref$_deref$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o);
  } else {
    var x__4029__auto__ = o == null ? null : o;
    return function() {
      var or__3408__auto__ = cljs.core._deref[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._deref["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IDeref.-deref", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IDerefWithTimeout = function() {
  var obj22783 = {};
  return obj22783;
}();
cljs.core._deref_with_timeout = function _deref_with_timeout(o, msec, timeout_val) {
  if (function() {
    var and__3396__auto__ = o;
    if (and__3396__auto__) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val);
  } else {
    var x__4029__auto__ = o == null ? null : o;
    return function() {
      var or__3408__auto__ = cljs.core._deref_with_timeout[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._deref_with_timeout["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val);
  }
};
cljs.core.IMeta = function() {
  var obj22785 = {};
  return obj22785;
}();
cljs.core._meta = function _meta(o) {
  if (function() {
    var and__3396__auto__ = o;
    if (and__3396__auto__) {
      return o.cljs$core$IMeta$_meta$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o);
  } else {
    var x__4029__auto__ = o == null ? null : o;
    return function() {
      var or__3408__auto__ = cljs.core._meta[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._meta["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMeta.-meta", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IWithMeta = function() {
  var obj22787 = {};
  return obj22787;
}();
cljs.core._with_meta = function _with_meta(o, meta) {
  if (function() {
    var and__3396__auto__ = o;
    if (and__3396__auto__) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta);
  } else {
    var x__4029__auto__ = o == null ? null : o;
    return function() {
      var or__3408__auto__ = cljs.core._with_meta[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._with_meta["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta);
  }
};
cljs.core.IReduce = function() {
  var obj22789 = {};
  return obj22789;
}();
cljs.core._reduce = function() {
  var _reduce = null;
  var _reduce__2 = function(coll, f) {
    if (function() {
      var and__3396__auto__ = coll;
      if (and__3396__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$2;
      } else {
        return and__3396__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(coll, f);
    } else {
      var x__4029__auto__ = coll == null ? null : coll;
      return function() {
        var or__3408__auto__ = cljs.core._reduce[goog.typeOf(x__4029__auto__)];
        if (or__3408__auto__) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = cljs.core._reduce["_"];
          if (or__3408__auto____$1) {
            return or__3408__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f);
    }
  };
  var _reduce__3 = function(coll, f, start) {
    if (function() {
      var and__3396__auto__ = coll;
      if (and__3396__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$3;
      } else {
        return and__3396__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start);
    } else {
      var x__4029__auto__ = coll == null ? null : coll;
      return function() {
        var or__3408__auto__ = cljs.core._reduce[goog.typeOf(x__4029__auto__)];
        if (or__3408__auto__) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = cljs.core._reduce["_"];
          if (or__3408__auto____$1) {
            return or__3408__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f, start);
    }
  };
  _reduce = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return _reduce__2.call(this, coll, f);
      case 3:
        return _reduce__3.call(this, coll, f, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
  _reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
  return _reduce;
}();
cljs.core.IKVReduce = function() {
  var obj22791 = {};
  return obj22791;
}();
cljs.core._kv_reduce = function _kv_reduce(coll, f, init) {
  if (function() {
    var and__3396__auto__ = coll;
    if (and__3396__auto__) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init);
  } else {
    var x__4029__auto__ = coll == null ? null : coll;
    return function() {
      var or__3408__auto__ = cljs.core._kv_reduce[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._kv_reduce["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init);
  }
};
cljs.core.IEquiv = function() {
  var obj22793 = {};
  return obj22793;
}();
cljs.core._equiv = function _equiv(o, other) {
  if (function() {
    var and__3396__auto__ = o;
    if (and__3396__auto__) {
      return o.cljs$core$IEquiv$_equiv$arity$2;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other);
  } else {
    var x__4029__auto__ = o == null ? null : o;
    return function() {
      var or__3408__auto__ = cljs.core._equiv[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._equiv["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other);
  }
};
cljs.core.IHash = function() {
  var obj22795 = {};
  return obj22795;
}();
cljs.core._hash = function _hash(o) {
  if (function() {
    var and__3396__auto__ = o;
    if (and__3396__auto__) {
      return o.cljs$core$IHash$_hash$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o);
  } else {
    var x__4029__auto__ = o == null ? null : o;
    return function() {
      var or__3408__auto__ = cljs.core._hash[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._hash["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IHash.-hash", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISeqable = function() {
  var obj22797 = {};
  return obj22797;
}();
cljs.core._seq = function _seq(o) {
  if (function() {
    var and__3396__auto__ = o;
    if (and__3396__auto__) {
      return o.cljs$core$ISeqable$_seq$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o);
  } else {
    var x__4029__auto__ = o == null ? null : o;
    return function() {
      var or__3408__auto__ = cljs.core._seq[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._seq["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISeqable.-seq", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISequential = function() {
  var obj22799 = {};
  return obj22799;
}();
cljs.core.IList = function() {
  var obj22801 = {};
  return obj22801;
}();
cljs.core.IRecord = function() {
  var obj22803 = {};
  return obj22803;
}();
cljs.core.IReversible = function() {
  var obj22805 = {};
  return obj22805;
}();
cljs.core._rseq = function _rseq(coll) {
  if (function() {
    var and__3396__auto__ = coll;
    if (and__3396__auto__) {
      return coll.cljs$core$IReversible$_rseq$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll);
  } else {
    var x__4029__auto__ = coll == null ? null : coll;
    return function() {
      var or__3408__auto__ = cljs.core._rseq[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._rseq["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IReversible.-rseq", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISorted = function() {
  var obj22807 = {};
  return obj22807;
}();
cljs.core._sorted_seq = function _sorted_seq(coll, ascending_QMARK_) {
  if (function() {
    var and__3396__auto__ = coll;
    if (and__3396__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_);
  } else {
    var x__4029__auto__ = coll == null ? null : coll;
    return function() {
      var or__3408__auto__ = cljs.core._sorted_seq[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._sorted_seq["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_);
  }
};
cljs.core._sorted_seq_from = function _sorted_seq_from(coll, k, ascending_QMARK_) {
  if (function() {
    var and__3396__auto__ = coll;
    if (and__3396__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_);
  } else {
    var x__4029__auto__ = coll == null ? null : coll;
    return function() {
      var or__3408__auto__ = cljs.core._sorted_seq_from[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._sorted_seq_from["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_);
  }
};
cljs.core._entry_key = function _entry_key(coll, entry) {
  if (function() {
    var and__3396__auto__ = coll;
    if (and__3396__auto__) {
      return coll.cljs$core$ISorted$_entry_key$arity$2;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry);
  } else {
    var x__4029__auto__ = coll == null ? null : coll;
    return function() {
      var or__3408__auto__ = cljs.core._entry_key[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._entry_key["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry);
  }
};
cljs.core._comparator = function _comparator(coll) {
  if (function() {
    var and__3396__auto__ = coll;
    if (and__3396__auto__) {
      return coll.cljs$core$ISorted$_comparator$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll);
  } else {
    var x__4029__auto__ = coll == null ? null : coll;
    return function() {
      var or__3408__auto__ = cljs.core._comparator[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._comparator["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-comparator", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IWriter = function() {
  var obj22809 = {};
  return obj22809;
}();
cljs.core._write = function _write(writer, s) {
  if (function() {
    var and__3396__auto__ = writer;
    if (and__3396__auto__) {
      return writer.cljs$core$IWriter$_write$arity$2;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s);
  } else {
    var x__4029__auto__ = writer == null ? null : writer;
    return function() {
      var or__3408__auto__ = cljs.core._write[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._write["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWriter.-write", writer);
        }
      }
    }().call(null, writer, s);
  }
};
cljs.core._flush = function _flush(writer) {
  if (function() {
    var and__3396__auto__ = writer;
    if (and__3396__auto__) {
      return writer.cljs$core$IWriter$_flush$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer);
  } else {
    var x__4029__auto__ = writer == null ? null : writer;
    return function() {
      var or__3408__auto__ = cljs.core._flush[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._flush["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWriter.-flush", writer);
        }
      }
    }().call(null, writer);
  }
};
cljs.core.IPrintWithWriter = function() {
  var obj22811 = {};
  return obj22811;
}();
cljs.core._pr_writer = function _pr_writer(o, writer, opts) {
  if (function() {
    var and__3396__auto__ = o;
    if (and__3396__auto__) {
      return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts);
  } else {
    var x__4029__auto__ = o == null ? null : o;
    return function() {
      var or__3408__auto__ = cljs.core._pr_writer[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._pr_writer["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer", o);
        }
      }
    }().call(null, o, writer, opts);
  }
};
cljs.core.IPending = function() {
  var obj22813 = {};
  return obj22813;
}();
cljs.core._realized_QMARK_ = function _realized_QMARK_(d) {
  if (function() {
    var and__3396__auto__ = d;
    if (and__3396__auto__) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
  } else {
    var x__4029__auto__ = d == null ? null : d;
    return function() {
      var or__3408__auto__ = cljs.core._realized_QMARK_[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._realized_QMARK_["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IPending.-realized?", d);
        }
      }
    }().call(null, d);
  }
};
cljs.core.IWatchable = function() {
  var obj22815 = {};
  return obj22815;
}();
cljs.core._notify_watches = function _notify_watches(this$, oldval, newval) {
  if (function() {
    var and__3396__auto__ = this$;
    if (and__3396__auto__) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval);
  } else {
    var x__4029__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3408__auto__ = cljs.core._notify_watches[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._notify_watches["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval);
  }
};
cljs.core._add_watch = function _add_watch(this$, key, f) {
  if (function() {
    var and__3396__auto__ = this$;
    if (and__3396__auto__) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f);
  } else {
    var x__4029__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3408__auto__ = cljs.core._add_watch[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._add_watch["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f);
  }
};
cljs.core._remove_watch = function _remove_watch(this$, key) {
  if (function() {
    var and__3396__auto__ = this$;
    if (and__3396__auto__) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key);
  } else {
    var x__4029__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3408__auto__ = cljs.core._remove_watch[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._remove_watch["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key);
  }
};
cljs.core.IEditableCollection = function() {
  var obj22817 = {};
  return obj22817;
}();
cljs.core._as_transient = function _as_transient(coll) {
  if (function() {
    var and__3396__auto__ = coll;
    if (and__3396__auto__) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
  } else {
    var x__4029__auto__ = coll == null ? null : coll;
    return function() {
      var or__3408__auto__ = cljs.core._as_transient[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._as_transient["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ITransientCollection = function() {
  var obj22819 = {};
  return obj22819;
}();
cljs.core._conj_BANG_ = function _conj_BANG_(tcoll, val) {
  if (function() {
    var and__3396__auto__ = tcoll;
    if (and__3396__auto__) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val);
  } else {
    var x__4029__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3408__auto__ = cljs.core._conj_BANG_[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._conj_BANG_["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val);
  }
};
cljs.core._persistent_BANG_ = function _persistent_BANG_(tcoll) {
  if (function() {
    var and__3396__auto__ = tcoll;
    if (and__3396__auto__) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
  } else {
    var x__4029__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3408__auto__ = cljs.core._persistent_BANG_[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._persistent_BANG_["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientAssociative = function() {
  var obj22821 = {};
  return obj22821;
}();
cljs.core._assoc_BANG_ = function _assoc_BANG_(tcoll, key, val) {
  if (function() {
    var and__3396__auto__ = tcoll;
    if (and__3396__auto__) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val);
  } else {
    var x__4029__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3408__auto__ = cljs.core._assoc_BANG_[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._assoc_BANG_["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val);
  }
};
cljs.core.ITransientMap = function() {
  var obj22823 = {};
  return obj22823;
}();
cljs.core._dissoc_BANG_ = function _dissoc_BANG_(tcoll, key) {
  if (function() {
    var and__3396__auto__ = tcoll;
    if (and__3396__auto__) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key);
  } else {
    var x__4029__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3408__auto__ = cljs.core._dissoc_BANG_[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._dissoc_BANG_["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key);
  }
};
cljs.core.ITransientVector = function() {
  var obj22825 = {};
  return obj22825;
}();
cljs.core._assoc_n_BANG_ = function _assoc_n_BANG_(tcoll, n, val) {
  if (function() {
    var and__3396__auto__ = tcoll;
    if (and__3396__auto__) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val);
  } else {
    var x__4029__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3408__auto__ = cljs.core._assoc_n_BANG_[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._assoc_n_BANG_["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val);
  }
};
cljs.core._pop_BANG_ = function _pop_BANG_(tcoll) {
  if (function() {
    var and__3396__auto__ = tcoll;
    if (and__3396__auto__) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
  } else {
    var x__4029__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3408__auto__ = cljs.core._pop_BANG_[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._pop_BANG_["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientSet = function() {
  var obj22827 = {};
  return obj22827;
}();
cljs.core._disjoin_BANG_ = function _disjoin_BANG_(tcoll, v) {
  if (function() {
    var and__3396__auto__ = tcoll;
    if (and__3396__auto__) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v);
  } else {
    var x__4029__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3408__auto__ = cljs.core._disjoin_BANG_[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._disjoin_BANG_["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v);
  }
};
cljs.core.IComparable = function() {
  var obj22829 = {};
  return obj22829;
}();
cljs.core._compare = function _compare(x, y) {
  if (function() {
    var and__3396__auto__ = x;
    if (and__3396__auto__) {
      return x.cljs$core$IComparable$_compare$arity$2;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y);
  } else {
    var x__4029__auto__ = x == null ? null : x;
    return function() {
      var or__3408__auto__ = cljs.core._compare[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._compare["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IComparable.-compare", x);
        }
      }
    }().call(null, x, y);
  }
};
cljs.core.IChunk = function() {
  var obj22831 = {};
  return obj22831;
}();
cljs.core._drop_first = function _drop_first(coll) {
  if (function() {
    var and__3396__auto__ = coll;
    if (and__3396__auto__) {
      return coll.cljs$core$IChunk$_drop_first$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
  } else {
    var x__4029__auto__ = coll == null ? null : coll;
    return function() {
      var or__3408__auto__ = cljs.core._drop_first[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._drop_first["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedSeq = function() {
  var obj22833 = {};
  return obj22833;
}();
cljs.core._chunked_first = function _chunked_first(coll) {
  if (function() {
    var and__3396__auto__ = coll;
    if (and__3396__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
  } else {
    var x__4029__auto__ = coll == null ? null : coll;
    return function() {
      var or__3408__auto__ = cljs.core._chunked_first[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._chunked_first["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._chunked_rest = function _chunked_rest(coll) {
  if (function() {
    var and__3396__auto__ = coll;
    if (and__3396__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
  } else {
    var x__4029__auto__ = coll == null ? null : coll;
    return function() {
      var or__3408__auto__ = cljs.core._chunked_rest[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._chunked_rest["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedNext = function() {
  var obj22835 = {};
  return obj22835;
}();
cljs.core._chunked_next = function _chunked_next(coll) {
  if (function() {
    var and__3396__auto__ = coll;
    if (and__3396__auto__) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
  } else {
    var x__4029__auto__ = coll == null ? null : coll;
    return function() {
      var or__3408__auto__ = cljs.core._chunked_next[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._chunked_next["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INamed = function() {
  var obj22837 = {};
  return obj22837;
}();
cljs.core._name = function _name(x) {
  if (function() {
    var and__3396__auto__ = x;
    if (and__3396__auto__) {
      return x.cljs$core$INamed$_name$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(x);
  } else {
    var x__4029__auto__ = x == null ? null : x;
    return function() {
      var or__3408__auto__ = cljs.core._name[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._name["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("INamed.-name", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._namespace = function _namespace(x) {
  if (function() {
    var and__3396__auto__ = x;
    if (and__3396__auto__) {
      return x.cljs$core$INamed$_namespace$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(x);
  } else {
    var x__4029__auto__ = x == null ? null : x;
    return function() {
      var or__3408__auto__ = cljs.core._namespace[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._namespace["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("INamed.-namespace", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824;
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core/StringBufferWriter");
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return self__.sb.append(s);
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return null;
};
cljs.core.__GT_StringBufferWriter = function __GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb);
};
cljs.core.pr_str_STAR_ = function pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, cljs.core.pr_opts());
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return[cljs.core.str(sb)].join("");
};
cljs.core.instance_QMARK_ = function instance_QMARK_(t, o) {
  return o instanceof t;
};
cljs.core.symbol_QMARK_ = function symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol;
};
cljs.core.hash_symbol = function hash_symbol(sym) {
  return cljs.core.hash_combine.cljs$core$IFn$_invoke$arity$2 ? cljs.core.hash_combine.cljs$core$IFn$_invoke$arity$2(cljs.core.hash.cljs$core$IFn$_invoke$arity$1 ? cljs.core.hash.cljs$core$IFn$_invoke$arity$1(sym.ns) : cljs.core.hash.call(null, sym.ns), cljs.core.hash.cljs$core$IFn$_invoke$arity$1 ? cljs.core.hash.cljs$core$IFn$_invoke$arity$1(sym.name) : cljs.core.hash.call(null, sym.name)) : cljs.core.hash_combine.call(null, cljs.core.hash.cljs$core$IFn$_invoke$arity$1 ? cljs.core.hash.cljs$core$IFn$_invoke$arity$1(sym.ns) : 
  cljs.core.hash.call(null, sym.ns), cljs.core.hash.cljs$core$IFn$_invoke$arity$1 ? cljs.core.hash.cljs$core$IFn$_invoke$arity$1(sym.name) : cljs.core.hash.call(null, sym.name));
};
cljs.core.compare_symbols = function compare_symbols(a, b) {
  if (cljs.core.truth_(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2 ? cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a, b) : cljs.core._EQ_.call(null, a, b))) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__3396__auto__ = cljs.core.not(a.ns);
      if (and__3396__auto__) {
        return b.ns;
      } else {
        return and__3396__auto__;
      }
    }())) {
      return-1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = cljs.core.compare.cljs$core$IFn$_invoke$arity$2 ? cljs.core.compare.cljs$core$IFn$_invoke$arity$2(a.ns, b.ns) : cljs.core.compare.call(null, a.ns, b.ns);
          if (nsc === 0) {
            return cljs.core.compare.cljs$core$IFn$_invoke$arity$2 ? cljs.core.compare.cljs$core$IFn$_invoke$arity$2(a.name, b.name) : cljs.core.compare.call(null, a.name, b.name);
          } else {
            return nsc;
          }
        }
      } else {
        if (new cljs.core.Keyword(null, "default", "default", 2558708147)) {
          return cljs.core.compare.cljs$core$IFn$_invoke$arity$2 ? cljs.core.compare.cljs$core$IFn$_invoke$arity$2(a.name, b.name) : cljs.core.compare.call(null, a.name, b.name);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core/Symbol");
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, self__.str);
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(sym) {
  var self__ = this;
  var sym__$1 = this;
  var h__3819__auto__ = self__._hash;
  if (!(h__3819__auto__ == null)) {
    return h__3819__auto__;
  } else {
    var h__3819__auto____$1 = cljs.core.hash_symbol(sym__$1);
    self__._hash = h__3819__auto____$1;
    return h__3819__auto____$1;
  }
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta);
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Symbol.prototype.call = function() {
  var G__22839 = null;
  var G__22839__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, null);
  };
  var G__22839__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found);
  };
  G__22839 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__22839__2.call(this, self__, coll);
      case 3:
        return G__22839__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__22839;
}();
cljs.core.Symbol.prototype.apply = function(self__, args22838) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args22838)));
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, null);
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found);
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Symbol) {
    return self__.str === other.str;
  } else {
    return false;
  }
};
cljs.core.Symbol.prototype.cljs$core$ICloneable$ = true;
cljs.core.Symbol.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, self__._meta);
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str;
};
cljs.core.__GT_Symbol = function __GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta);
};
cljs.core.symbol = function() {
  var symbol = null;
  var symbol__1 = function(name) {
    if (name instanceof cljs.core.Symbol) {
      return name;
    } else {
      return symbol.cljs$core$IFn$_invoke$arity$2(null, name);
    }
  };
  var symbol__2 = function(ns, name) {
    var sym_str = !(ns == null) ? [cljs.core.str(ns), cljs.core.str("/"), cljs.core.str(name)].join("") : name;
    return new cljs.core.Symbol(ns, name, sym_str, null, null);
  };
  symbol = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return symbol__1.call(this, ns);
      case 2:
        return symbol__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
  symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
  return symbol;
}();
cljs.core.clone = function clone(value) {
  return cljs.core._clone(value);
};
cljs.core.seq = function seq(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__22841 = coll;
      if (G__22841) {
        var bit__4045__auto__ = G__22841.cljs$lang$protocol_mask$partition0$ & 8388608;
        if (bit__4045__auto__ || G__22841.cljs$core$ISeqable$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ISeqable$_seq$arity$1(null);
    } else {
      if (coll instanceof Array) {
        if (coll.length === 0) {
          return null;
        } else {
          return new cljs.core.IndexedSeq(coll, 0);
        }
      } else {
        if (typeof coll === "string") {
          if (coll.length === 0) {
            return null;
          } else {
            return new cljs.core.IndexedSeq(coll, 0);
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, coll)) {
            return cljs.core._seq(coll);
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              throw new Error([cljs.core.str(coll), cljs.core.str("is not ISeqable")].join(""));
            } else {
              return null;
            }
          }
        }
      }
    }
  }
};
cljs.core.first = function first(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__22843 = coll;
      if (G__22843) {
        var bit__4045__auto__ = G__22843.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4045__auto__ || G__22843.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ISeq$_first$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s == null) {
        return null;
      } else {
        return cljs.core._first(s);
      }
    }
  }
};
cljs.core.rest = function rest(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__22845 = coll;
      if (G__22845) {
        var bit__4045__auto__ = G__22845.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4045__auto__ || G__22845.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ISeq$_rest$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s) {
        return cljs.core._rest(s);
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.next = function next(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__22847 = coll;
      if (G__22847) {
        var bit__4045__auto__ = G__22847.cljs$lang$protocol_mask$partition0$ & 128;
        if (bit__4045__auto__ || G__22847.cljs$core$INext$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$INext$_next$arity$1(null);
    } else {
      return cljs.core.seq(cljs.core.rest(coll));
    }
  }
};
cljs.core._EQ_ = function() {
  var _EQ_ = null;
  var _EQ___1 = function(x) {
    return true;
  };
  var _EQ___2 = function(x, y) {
    if (x == null) {
      return y == null;
    } else {
      return x === y || cljs.core._equiv(x, y);
    }
  };
  var _EQ___3 = function() {
    var G__22848__delegate = function(x, y, more) {
      while (true) {
        if (_EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
          if (cljs.core.next(more)) {
            var G__22849 = y;
            var G__22850 = cljs.core.first(more);
            var G__22851 = cljs.core.next(more);
            x = G__22849;
            y = G__22850;
            more = G__22851;
            continue;
          } else {
            return _EQ_.cljs$core$IFn$_invoke$arity$2(y, cljs.core.first(more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__22848 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__22848__delegate.call(this, x, y, more);
    };
    G__22848.cljs$lang$maxFixedArity = 2;
    G__22848.cljs$lang$applyTo = function(arglist__22852) {
      var x = cljs.core.first(arglist__22852);
      arglist__22852 = cljs.core.next(arglist__22852);
      var y = cljs.core.first(arglist__22852);
      var more = cljs.core.rest(arglist__22852);
      return G__22848__delegate(x, y, more);
    };
    G__22848.cljs$core$IFn$_invoke$arity$variadic = G__22848__delegate;
    return G__22848;
  }();
  _EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ___1.call(this, x);
      case 2:
        return _EQ___2.call(this, x, y);
      default:
        return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ_.cljs$lang$maxFixedArity = 2;
  _EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
  _EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
  _EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
  _EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ_;
}();
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0;
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var o__$1 = this;
  return other instanceof Date && o__$1.toString() === other.toString();
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o;
};
cljs.core.IMeta["function"] = true;
cljs.core._meta["function"] = function(_) {
  return null;
};
cljs.core.Fn["function"] = true;
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  return goog.getUid(o);
};
cljs.core.inc = function inc(x) {
  return x + 1;
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core/Reduced");
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  var o__$1 = this;
  return self__.val;
};
cljs.core.__GT_Reduced = function __GT_Reduced(val) {
  return new cljs.core.Reduced(val);
};
cljs.core.reduced = function reduced(x) {
  return new cljs.core.Reduced(x);
};
cljs.core.reduced_QMARK_ = function reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced;
};
cljs.core.ci_reduce = function() {
  var ci_reduce = null;
  var ci_reduce__2 = function(cicoll, f) {
    var cnt = cljs.core._count(cicoll);
    if (cnt === 0) {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    } else {
      var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, 0);
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(val, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n)) : f.call(null, val, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n));
          if (cljs.core.reduced_QMARK_(nval)) {
            return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(nval) : cljs.core.deref.call(null, nval);
          } else {
            var G__22853 = nval;
            var G__22854 = n + 1;
            val = G__22853;
            n = G__22854;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var ci_reduce__3 = function(cicoll, f, val) {
    var cnt = cljs.core._count(cicoll);
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(val__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n)) : f.call(null, val__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n));
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(nval) : cljs.core.deref.call(null, nval);
        } else {
          var G__22855 = nval;
          var G__22856 = n + 1;
          val__$1 = G__22855;
          n = G__22856;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var ci_reduce__4 = function(cicoll, f, val, idx) {
    var cnt = cljs.core._count(cicoll);
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(val__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n)) : f.call(null, val__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n));
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(nval) : cljs.core.deref.call(null, nval);
        } else {
          var G__22857 = nval;
          var G__22858 = n + 1;
          val__$1 = G__22857;
          n = G__22858;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  ci_reduce = function(cicoll, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return ci_reduce__2.call(this, cicoll, f);
      case 3:
        return ci_reduce__3.call(this, cicoll, f, val);
      case 4:
        return ci_reduce__4.call(this, cicoll, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
  ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
  ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
  return ci_reduce;
}();
cljs.core.array_reduce = function() {
  var array_reduce = null;
  var array_reduce__2 = function(arr, f) {
    var cnt = arr.length;
    if (arr.length === 0) {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    } else {
      var val = arr[0];
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(val, arr[n]) : f.call(null, val, arr[n]);
          if (cljs.core.reduced_QMARK_(nval)) {
            return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(nval) : cljs.core.deref.call(null, nval);
          } else {
            var G__22859 = nval;
            var G__22860 = n + 1;
            val = G__22859;
            n = G__22860;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var array_reduce__3 = function(arr, f, val) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(val__$1, arr[n]) : f.call(null, val__$1, arr[n]);
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(nval) : cljs.core.deref.call(null, nval);
        } else {
          var G__22861 = nval;
          var G__22862 = n + 1;
          val__$1 = G__22861;
          n = G__22862;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var array_reduce__4 = function(arr, f, val, idx) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(val__$1, arr[n]) : f.call(null, val__$1, arr[n]);
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(nval) : cljs.core.deref.call(null, nval);
        } else {
          var G__22863 = nval;
          var G__22864 = n + 1;
          val__$1 = G__22863;
          n = G__22864;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  array_reduce = function(arr, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return array_reduce__2.call(this, arr, f);
      case 3:
        return array_reduce__3.call(this, arr, f, val);
      case 4:
        return array_reduce__4.call(this, arr, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
  array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
  array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
  return array_reduce;
}();
cljs.core.counted_QMARK_ = function counted_QMARK_(x) {
  var G__22866 = x;
  if (G__22866) {
    var bit__4052__auto__ = G__22866.cljs$lang$protocol_mask$partition0$ & 2;
    if (bit__4052__auto__ || G__22866.cljs$core$ICounted$) {
      return true;
    } else {
      if (!G__22866.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, G__22866);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, G__22866);
  }
};
cljs.core.indexed_QMARK_ = function indexed_QMARK_(x) {
  var G__22868 = x;
  if (G__22868) {
    var bit__4052__auto__ = G__22868.cljs$lang$protocol_mask$partition0$ & 16;
    if (bit__4052__auto__ || G__22868.cljs$core$IIndexed$) {
      return true;
    } else {
      if (!G__22868.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, G__22868);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, G__22868);
  }
};
cljs.core.IndexedSeq = function(arr, i) {
  this.arr = arr;
  this.i = i;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 166199550;
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core/IndexedSeq");
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.cljs$core$IFn$_invoke$arity$1 ? cljs.core.hash_coll.cljs$core$IFn$_invoke$arity$1(coll__$1) : cljs.core.hash_coll.call(null, coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(o, coll__$1) : cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var c = cljs.core._count(coll__$1);
  if (c > 0) {
    return new cljs.core.RSeq(coll__$1, c - 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.i], self__.i + 1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr.length - self__.i;
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr[self__.i];
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(coll__$1, other) : cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.IndexedSeq(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return not_found;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.__GT_IndexedSeq = function __GT_IndexedSeq(arr, i) {
  return new cljs.core.IndexedSeq(arr, i);
};
cljs.core.prim_seq = function() {
  var prim_seq = null;
  var prim_seq__1 = function(prim) {
    return prim_seq.cljs$core$IFn$_invoke$arity$2(prim, 0);
  };
  var prim_seq__2 = function(prim, i) {
    if (i < prim.length) {
      return new cljs.core.IndexedSeq(prim, i);
    } else {
      return null;
    }
  };
  prim_seq = function(prim, i) {
    switch(arguments.length) {
      case 1:
        return prim_seq__1.call(this, prim);
      case 2:
        return prim_seq__2.call(this, prim, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
  prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
  return prim_seq;
}();
cljs.core.array_seq = function() {
  var array_seq = null;
  var array_seq__1 = function(array) {
    return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, 0);
  };
  var array_seq__2 = function(array, i) {
    return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, i);
  };
  array_seq = function(array, i) {
    switch(arguments.length) {
      case 1:
        return array_seq__1.call(this, array);
      case 2:
        return array_seq__2.call(this, array, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
  array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
  return array_seq;
}();
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374862;
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core/RSeq");
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.cljs$core$IFn$_invoke$arity$1 ? cljs.core.hash_coll.cljs$core$IFn$_invoke$arity$1(coll__$1) : cljs.core.hash_coll.call(null, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(o, coll__$1) : cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, col__$1) : cljs.core.seq_reduce.call(null, f, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, col__$1) : cljs.core.seq_reduce.call(null, f, start, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.i + 1;
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci, self__.i);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return null;
  }
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(coll__$1, other) : cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, new_meta);
};
cljs.core.RSeq.prototype.cljs$core$ICloneable$ = true;
cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(cljs.core.List.EMPTY, self__.meta) : cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_RSeq = function __GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta);
};
cljs.core.second = function second(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.ffirst = function ffirst(coll) {
  return cljs.core.first(cljs.core.first(coll));
};
cljs.core.nfirst = function nfirst(coll) {
  return cljs.core.next(cljs.core.first(coll));
};
cljs.core.fnext = function fnext(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.nnext = function nnext(coll) {
  return cljs.core.next(cljs.core.next(coll));
};
cljs.core.last = function last(s) {
  while (true) {
    var sn = cljs.core.next(s);
    if (!(sn == null)) {
      var G__22869 = sn;
      s = G__22869;
      continue;
    } else {
      return cljs.core.first(s);
    }
    break;
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o;
};
cljs.core.conj = function() {
  var conj = null;
  var conj__2 = function(coll, x) {
    if (!(coll == null)) {
      return cljs.core._conj(coll, x);
    } else {
      return cljs.core._conj(cljs.core.List.EMPTY, x);
    }
  };
  var conj__3 = function() {
    var G__22870__delegate = function(coll, x, xs) {
      while (true) {
        if (cljs.core.truth_(xs)) {
          var G__22871 = conj.cljs$core$IFn$_invoke$arity$2(coll, x);
          var G__22872 = cljs.core.first(xs);
          var G__22873 = cljs.core.next(xs);
          coll = G__22871;
          x = G__22872;
          xs = G__22873;
          continue;
        } else {
          return conj.cljs$core$IFn$_invoke$arity$2(coll, x);
        }
        break;
      }
    };
    var G__22870 = function(coll, x, var_args) {
      var xs = null;
      if (arguments.length > 2) {
        xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__22870__delegate.call(this, coll, x, xs);
    };
    G__22870.cljs$lang$maxFixedArity = 2;
    G__22870.cljs$lang$applyTo = function(arglist__22874) {
      var coll = cljs.core.first(arglist__22874);
      arglist__22874 = cljs.core.next(arglist__22874);
      var x = cljs.core.first(arglist__22874);
      var xs = cljs.core.rest(arglist__22874);
      return G__22870__delegate(coll, x, xs);
    };
    G__22870.cljs$core$IFn$_invoke$arity$variadic = G__22870__delegate;
    return G__22870;
  }();
  conj = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 2:
        return conj__2.call(this, coll, x);
      default:
        return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll, x, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj.cljs$lang$maxFixedArity = 2;
  conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
  conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
  conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
  return conj;
}();
cljs.core.empty = function empty(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._empty(coll);
  }
};
cljs.core.accumulating_seq_count = function accumulating_seq_count(coll) {
  var s = cljs.core.seq(coll);
  var acc = 0;
  while (true) {
    if (cljs.core.counted_QMARK_(s)) {
      return acc + cljs.core._count(s);
    } else {
      var G__22875 = cljs.core.next(s);
      var G__22876 = acc + 1;
      s = G__22875;
      acc = G__22876;
      continue;
    }
    break;
  }
};
cljs.core.count = function count(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__22878 = coll;
      if (G__22878) {
        var bit__4045__auto__ = G__22878.cljs$lang$protocol_mask$partition0$ & 2;
        if (bit__4045__auto__ || G__22878.cljs$core$ICounted$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ICounted$_count$arity$1(null);
    } else {
      if (coll instanceof Array) {
        return coll.length;
      } else {
        if (typeof coll === "string") {
          return coll.length;
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, coll)) {
            return cljs.core._count(coll);
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return cljs.core.accumulating_seq_count(coll);
            } else {
              return null;
            }
          }
        }
      }
    }
  } else {
    return 0;
  }
};
cljs.core.linear_traversal_nth = function() {
  var linear_traversal_nth = null;
  var linear_traversal_nth__2 = function(coll, n) {
    while (true) {
      if (coll == null) {
        throw new Error("Index out of bounds");
      } else {
        if (n === 0) {
          if (cljs.core.seq(coll)) {
            return cljs.core.first(coll);
          } else {
            throw new Error("Index out of bounds");
          }
        } else {
          if (cljs.core.indexed_QMARK_(coll)) {
            return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
          } else {
            if (cljs.core.seq(coll)) {
              var G__22879 = cljs.core.next(coll);
              var G__22880 = n - 1;
              coll = G__22879;
              n = G__22880;
              continue;
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw new Error("Index out of bounds");
              } else {
                return null;
              }
            }
          }
        }
      }
      break;
    }
  };
  var linear_traversal_nth__3 = function(coll, n, not_found) {
    while (true) {
      if (coll == null) {
        return not_found;
      } else {
        if (n === 0) {
          if (cljs.core.seq(coll)) {
            return cljs.core.first(coll);
          } else {
            return not_found;
          }
        } else {
          if (cljs.core.indexed_QMARK_(coll)) {
            return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
          } else {
            if (cljs.core.seq(coll)) {
              var G__22881 = cljs.core.next(coll);
              var G__22882 = n - 1;
              var G__22883 = not_found;
              coll = G__22881;
              n = G__22882;
              not_found = G__22883;
              continue;
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return not_found;
              } else {
                return null;
              }
            }
          }
        }
      }
      break;
    }
  };
  linear_traversal_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return linear_traversal_nth__2.call(this, coll, n);
      case 3:
        return linear_traversal_nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
  return linear_traversal_nth;
}();
cljs.core.nth = function() {
  var nth = null;
  var nth__2 = function(coll, n) {
    if (coll == null) {
      return null;
    } else {
      if (function() {
        var G__22888 = coll;
        if (G__22888) {
          var bit__4045__auto__ = G__22888.cljs$lang$protocol_mask$partition0$ & 16;
          if (bit__4045__auto__ || G__22888.cljs$core$IIndexed$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return coll.cljs$core$IIndexed$_nth$arity$2(null, n);
      } else {
        if (coll instanceof Array) {
          if (n < coll.length) {
            return coll[n];
          } else {
            return null;
          }
        } else {
          if (typeof coll === "string") {
            if (n < coll.length) {
              return coll[n];
            } else {
              return null;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
              return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                if (function() {
                  var G__22889 = coll;
                  if (G__22889) {
                    var bit__4052__auto__ = G__22889.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__4052__auto__ || G__22889.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__22889.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__22889);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__22889);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll, n);
                } else {
                  throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
                }
              } else {
                return null;
              }
            }
          }
        }
      }
    }
  };
  var nth__3 = function(coll, n, not_found) {
    if (!(coll == null)) {
      if (function() {
        var G__22890 = coll;
        if (G__22890) {
          var bit__4045__auto__ = G__22890.cljs$lang$protocol_mask$partition0$ & 16;
          if (bit__4045__auto__ || G__22890.cljs$core$IIndexed$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return coll.cljs$core$IIndexed$_nth$arity$3(null, n, not_found);
      } else {
        if (coll instanceof Array) {
          if (n < coll.length) {
            return coll[n];
          } else {
            return not_found;
          }
        } else {
          if (typeof coll === "string") {
            if (n < coll.length) {
              return coll[n];
            } else {
              return not_found;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
              return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                if (function() {
                  var G__22891 = coll;
                  if (G__22891) {
                    var bit__4052__auto__ = G__22891.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__4052__auto__ || G__22891.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__22891.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__22891);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__22891);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
                } else {
                  throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
                }
              } else {
                return null;
              }
            }
          }
        }
      }
    } else {
      return not_found;
    }
  };
  nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return nth__2.call(this, coll, n);
      case 3:
        return nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
  nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
  return nth;
}();
cljs.core.get = function() {
  var get = null;
  var get__2 = function(o, k) {
    if (o == null) {
      return null;
    } else {
      if (function() {
        var G__22894 = o;
        if (G__22894) {
          var bit__4045__auto__ = G__22894.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4045__auto__ || G__22894.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return o.cljs$core$ILookup$_lookup$arity$2(null, k);
      } else {
        if (o instanceof Array) {
          if (k < o.length) {
            return o[k];
          } else {
            return null;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return null;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
              return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o, k);
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return null;
              } else {
                return null;
              }
            }
          }
        }
      }
    }
  };
  var get__3 = function(o, k, not_found) {
    if (!(o == null)) {
      if (function() {
        var G__22895 = o;
        if (G__22895) {
          var bit__4045__auto__ = G__22895.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4045__auto__ || G__22895.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return o.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
      } else {
        if (o instanceof Array) {
          if (k < o.length) {
            return o[k];
          } else {
            return not_found;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return not_found;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
              return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o, k, not_found);
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return not_found;
              } else {
                return null;
              }
            }
          }
        }
      }
    } else {
      return not_found;
    }
  };
  get = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return get__2.call(this, o, k);
      case 3:
        return get__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get.cljs$core$IFn$_invoke$arity$2 = get__2;
  get.cljs$core$IFn$_invoke$arity$3 = get__3;
  return get;
}();
cljs.core.assoc = function() {
  var assoc = null;
  var assoc__3 = function(coll, k, v) {
    if (!(coll == null)) {
      return cljs.core._assoc(coll, k, v);
    } else {
      return cljs.core.PersistentHashMap.fromArrays.cljs$core$IFn$_invoke$arity$2 ? cljs.core.PersistentHashMap.fromArrays.cljs$core$IFn$_invoke$arity$2([k], [v]) : cljs.core.PersistentHashMap.fromArrays.call(null, [k], [v]);
    }
  };
  var assoc__4 = function() {
    var G__22896__delegate = function(coll, k, v, kvs) {
      while (true) {
        var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll, k, v);
        if (cljs.core.truth_(kvs)) {
          var G__22897 = ret;
          var G__22898 = cljs.core.first(kvs);
          var G__22899 = cljs.core.second(kvs);
          var G__22900 = cljs.core.nnext(kvs);
          coll = G__22897;
          k = G__22898;
          v = G__22899;
          kvs = G__22900;
          continue;
        } else {
          return ret;
        }
        break;
      }
    };
    var G__22896 = function(coll, k, v, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__22896__delegate.call(this, coll, k, v, kvs);
    };
    G__22896.cljs$lang$maxFixedArity = 3;
    G__22896.cljs$lang$applyTo = function(arglist__22901) {
      var coll = cljs.core.first(arglist__22901);
      arglist__22901 = cljs.core.next(arglist__22901);
      var k = cljs.core.first(arglist__22901);
      arglist__22901 = cljs.core.next(arglist__22901);
      var v = cljs.core.first(arglist__22901);
      var kvs = cljs.core.rest(arglist__22901);
      return G__22896__delegate(coll, k, v, kvs);
    };
    G__22896.cljs$core$IFn$_invoke$arity$variadic = G__22896__delegate;
    return G__22896;
  }();
  assoc = function(coll, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc__3.call(this, coll, k, v);
      default:
        return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll, k, v, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc.cljs$lang$maxFixedArity = 3;
  assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
  assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
  assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc;
}();
cljs.core.dissoc = function() {
  var dissoc = null;
  var dissoc__1 = function(coll) {
    return coll;
  };
  var dissoc__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._dissoc(coll, k);
    }
  };
  var dissoc__3 = function() {
    var G__22902__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll, k);
          if (cljs.core.truth_(ks)) {
            var G__22903 = ret;
            var G__22904 = cljs.core.first(ks);
            var G__22905 = cljs.core.next(ks);
            coll = G__22903;
            k = G__22904;
            ks = G__22905;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__22902 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__22902__delegate.call(this, coll, k, ks);
    };
    G__22902.cljs$lang$maxFixedArity = 2;
    G__22902.cljs$lang$applyTo = function(arglist__22906) {
      var coll = cljs.core.first(arglist__22906);
      arglist__22906 = cljs.core.next(arglist__22906);
      var k = cljs.core.first(arglist__22906);
      var ks = cljs.core.rest(arglist__22906);
      return G__22902__delegate(coll, k, ks);
    };
    G__22902.cljs$core$IFn$_invoke$arity$variadic = G__22902__delegate;
    return G__22902;
  }();
  dissoc = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return dissoc__1.call(this, coll);
      case 2:
        return dissoc__2.call(this, coll, k);
      default:
        return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc.cljs$lang$maxFixedArity = 2;
  dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
  dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
  dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
  dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc;
}();
cljs.core.fn_QMARK_ = function fn_QMARK_(f) {
  var or__3408__auto__ = goog.isFunction(f);
  if (or__3408__auto__) {
    return or__3408__auto__;
  } else {
    var G__22910 = f;
    if (G__22910) {
      var bit__4052__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3408__auto____$1 = bit__4052__auto__;
        if (cljs.core.truth_(or__3408__auto____$1)) {
          return or__3408__auto____$1;
        } else {
          return G__22910.cljs$core$Fn$;
        }
      }())) {
        return true;
      } else {
        if (!G__22910.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, G__22910);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, G__22910);
    }
  }
};
cljs.core.with_meta = function with_meta(o, meta) {
  if (cljs.core.fn_QMARK_(o) && !function() {
    var G__22918 = o;
    if (G__22918) {
      var bit__4052__auto__ = G__22918.cljs$lang$protocol_mask$partition0$ & 262144;
      if (bit__4052__auto__ || G__22918.cljs$core$IWithMeta$) {
        return true;
      } else {
        if (!G__22918.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta, G__22918);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta, G__22918);
    }
  }()) {
    return with_meta(function() {
      if (typeof cljs.core.t22919 !== "undefined") {
      } else {
        cljs.core.t22919 = function(meta, o, with_meta, meta22920) {
          this.meta = meta;
          this.o = o;
          this.with_meta = with_meta;
          this.meta22920 = meta22920;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393217;
        };
        cljs.core.t22919.cljs$lang$type = true;
        cljs.core.t22919.cljs$lang$ctorStr = "cljs.core/t22919";
        cljs.core.t22919.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
          return cljs.core._write(writer__3971__auto__, "cljs.core/t22919");
        };
        cljs.core.t22919.prototype.call = function() {
          var G__22923__delegate = function(self__, args) {
            var self____$1 = this;
            var _ = self____$1;
            return cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.o, args) : cljs.core.apply.call(null, self__.o, args);
          };
          var G__22923 = function(self__, var_args) {
            var self__ = this;
            var args = null;
            if (arguments.length > 1) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
            }
            return G__22923__delegate.call(this, self__, args);
          };
          G__22923.cljs$lang$maxFixedArity = 1;
          G__22923.cljs$lang$applyTo = function(arglist__22924) {
            var self__ = cljs.core.first(arglist__22924);
            var args = cljs.core.rest(arglist__22924);
            return G__22923__delegate(self__, args);
          };
          G__22923.cljs$core$IFn$_invoke$arity$variadic = G__22923__delegate;
          return G__22923;
        }();
        cljs.core.t22919.prototype.apply = function(self__, args22922) {
          var self__ = this;
          var self____$1 = this;
          return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args22922)));
        };
        cljs.core.t22919.prototype.cljs$core$IFn$_invoke$arity$2 = function() {
          var G__22925__delegate = function(args) {
            var _ = this;
            return cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.o, args) : cljs.core.apply.call(null, self__.o, args);
          };
          var G__22925 = function(var_args) {
            var self__ = this;
            var args = null;
            if (arguments.length > 0) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
            }
            return G__22925__delegate.call(this, args);
          };
          G__22925.cljs$lang$maxFixedArity = 0;
          G__22925.cljs$lang$applyTo = function(arglist__22926) {
            var args = cljs.core.seq(arglist__22926);
            return G__22925__delegate(args);
          };
          G__22925.cljs$core$IFn$_invoke$arity$variadic = G__22925__delegate;
          return G__22925;
        }();
        cljs.core.t22919.prototype.cljs$core$Fn$ = true;
        cljs.core.t22919.prototype.cljs$core$IMeta$_meta$arity$1 = function(_22921) {
          var self__ = this;
          var _22921__$1 = this;
          return self__.meta22920;
        };
        cljs.core.t22919.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_22921, meta22920__$1) {
          var self__ = this;
          var _22921__$1 = this;
          return new cljs.core.t22919(self__.meta, self__.o, self__.with_meta, meta22920__$1);
        };
        cljs.core.__GT_t22919 = function __GT_t22919(meta__$1, o__$1, with_meta__$1, meta22920) {
          return new cljs.core.t22919(meta__$1, o__$1, with_meta__$1, meta22920);
        };
      }
      return new cljs.core.t22919(meta, o, with_meta, null);
    }(), meta);
  } else {
    if (o == null) {
      return null;
    } else {
      return cljs.core._with_meta(o, meta);
    }
  }
};
cljs.core.meta = function meta(o) {
  if (function() {
    var and__3396__auto__ = !(o == null);
    if (and__3396__auto__) {
      var G__22930 = o;
      if (G__22930) {
        var bit__4052__auto__ = G__22930.cljs$lang$protocol_mask$partition0$ & 131072;
        if (bit__4052__auto__ || G__22930.cljs$core$IMeta$) {
          return true;
        } else {
          if (!G__22930.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__22930);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__22930);
      }
    } else {
      return and__3396__auto__;
    }
  }()) {
    return cljs.core._meta(o);
  } else {
    return null;
  }
};
cljs.core.peek = function peek(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._peek(coll);
  }
};
cljs.core.pop = function pop(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._pop(coll);
  }
};
cljs.core.disj = function() {
  var disj = null;
  var disj__1 = function(coll) {
    return coll;
  };
  var disj__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._disjoin(coll, k);
    }
  };
  var disj__3 = function() {
    var G__22931__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = disj.cljs$core$IFn$_invoke$arity$2(coll, k);
          if (cljs.core.truth_(ks)) {
            var G__22932 = ret;
            var G__22933 = cljs.core.first(ks);
            var G__22934 = cljs.core.next(ks);
            coll = G__22932;
            k = G__22933;
            ks = G__22934;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__22931 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__22931__delegate.call(this, coll, k, ks);
    };
    G__22931.cljs$lang$maxFixedArity = 2;
    G__22931.cljs$lang$applyTo = function(arglist__22935) {
      var coll = cljs.core.first(arglist__22935);
      arglist__22935 = cljs.core.next(arglist__22935);
      var k = cljs.core.first(arglist__22935);
      var ks = cljs.core.rest(arglist__22935);
      return G__22931__delegate(coll, k, ks);
    };
    G__22931.cljs$core$IFn$_invoke$arity$variadic = G__22931__delegate;
    return G__22931;
  }();
  disj = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return disj__1.call(this, coll);
      case 2:
        return disj__2.call(this, coll, k);
      default:
        return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj.cljs$lang$maxFixedArity = 2;
  disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
  disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
  disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
  disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
  return disj;
}();
cljs.core.string_hash_cache = function() {
  var obj22937 = {};
  return obj22937;
}();
cljs.core.string_hash_cache_count = 0;
cljs.core.add_to_string_hash_cache = function add_to_string_hash_cache(k) {
  var h = goog.string.hashCode(k);
  cljs.core.string_hash_cache[k] = h;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h;
};
cljs.core.check_string_hash_cache = function check_string_hash_cache(k) {
  if (cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = function() {
      var obj22941 = {};
      return obj22941;
    }();
    cljs.core.string_hash_cache_count = 0;
  } else {
  }
  var h = cljs.core.string_hash_cache[k];
  if (typeof h === "number") {
    return h;
  } else {
    return cljs.core.add_to_string_hash_cache(k);
  }
};
cljs.core.hash = function hash(o) {
  if (function() {
    var G__22943 = o;
    if (G__22943) {
      var bit__4045__auto__ = G__22943.cljs$lang$protocol_mask$partition0$ & 4194304;
      if (bit__4045__auto__ || G__22943.cljs$core$IHash$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(null);
  } else {
    if (typeof o === "number") {
      return Math.floor(o) % 2147483647;
    } else {
      if (o === true) {
        return 1;
      } else {
        if (o === false) {
          return 0;
        } else {
          if (typeof o === "string") {
            return cljs.core.check_string_hash_cache(o);
          } else {
            if (o == null) {
              return 0;
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return cljs.core._hash(o);
              } else {
                return null;
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.empty_QMARK_ = function empty_QMARK_(coll) {
  return coll == null || cljs.core.not(cljs.core.seq(coll));
};
cljs.core.coll_QMARK_ = function coll_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__22945 = x;
    if (G__22945) {
      var bit__4052__auto__ = G__22945.cljs$lang$protocol_mask$partition0$ & 8;
      if (bit__4052__auto__ || G__22945.cljs$core$ICollection$) {
        return true;
      } else {
        if (!G__22945.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, G__22945);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, G__22945);
    }
  }
};
cljs.core.set_QMARK_ = function set_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__22947 = x;
    if (G__22947) {
      var bit__4052__auto__ = G__22947.cljs$lang$protocol_mask$partition0$ & 4096;
      if (bit__4052__auto__ || G__22947.cljs$core$ISet$) {
        return true;
      } else {
        if (!G__22947.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, G__22947);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, G__22947);
    }
  }
};
cljs.core.associative_QMARK_ = function associative_QMARK_(x) {
  var G__22949 = x;
  if (G__22949) {
    var bit__4052__auto__ = G__22949.cljs$lang$protocol_mask$partition0$ & 512;
    if (bit__4052__auto__ || G__22949.cljs$core$IAssociative$) {
      return true;
    } else {
      if (!G__22949.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, G__22949);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, G__22949);
  }
};
cljs.core.sequential_QMARK_ = function sequential_QMARK_(x) {
  var G__22951 = x;
  if (G__22951) {
    var bit__4052__auto__ = G__22951.cljs$lang$protocol_mask$partition0$ & 16777216;
    if (bit__4052__auto__ || G__22951.cljs$core$ISequential$) {
      return true;
    } else {
      if (!G__22951.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, G__22951);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, G__22951);
  }
};
cljs.core.sorted_QMARK_ = function sorted_QMARK_(x) {
  var G__22953 = x;
  if (G__22953) {
    var bit__4052__auto__ = G__22953.cljs$lang$protocol_mask$partition0$ & 268435456;
    if (bit__4052__auto__ || G__22953.cljs$core$ISorted$) {
      return true;
    } else {
      if (!G__22953.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, G__22953);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, G__22953);
  }
};
cljs.core.reduceable_QMARK_ = function reduceable_QMARK_(x) {
  var G__22955 = x;
  if (G__22955) {
    var bit__4052__auto__ = G__22955.cljs$lang$protocol_mask$partition0$ & 524288;
    if (bit__4052__auto__ || G__22955.cljs$core$IReduce$) {
      return true;
    } else {
      if (!G__22955.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, G__22955);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, G__22955);
  }
};
cljs.core.map_QMARK_ = function map_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__22957 = x;
    if (G__22957) {
      var bit__4052__auto__ = G__22957.cljs$lang$protocol_mask$partition0$ & 1024;
      if (bit__4052__auto__ || G__22957.cljs$core$IMap$) {
        return true;
      } else {
        if (!G__22957.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, G__22957);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, G__22957);
    }
  }
};
cljs.core.vector_QMARK_ = function vector_QMARK_(x) {
  var G__22959 = x;
  if (G__22959) {
    var bit__4052__auto__ = G__22959.cljs$lang$protocol_mask$partition0$ & 16384;
    if (bit__4052__auto__ || G__22959.cljs$core$IVector$) {
      return true;
    } else {
      if (!G__22959.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, G__22959);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, G__22959);
  }
};
cljs.core.chunked_seq_QMARK_ = function chunked_seq_QMARK_(x) {
  var G__22961 = x;
  if (G__22961) {
    var bit__4045__auto__ = G__22961.cljs$lang$protocol_mask$partition1$ & 512;
    if (bit__4045__auto__ || G__22961.cljs$core$IChunkedSeq$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.js_obj = function() {
  var js_obj = null;
  var js_obj__0 = function() {
    var obj22965 = {};
    return obj22965;
  };
  var js_obj__1 = function() {
    var G__22966__delegate = function(keyvals) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(goog.object.create, keyvals) : cljs.core.apply.call(null, goog.object.create, keyvals);
    };
    var G__22966 = function(var_args) {
      var keyvals = null;
      if (arguments.length > 0) {
        keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__22966__delegate.call(this, keyvals);
    };
    G__22966.cljs$lang$maxFixedArity = 0;
    G__22966.cljs$lang$applyTo = function(arglist__22967) {
      var keyvals = cljs.core.seq(arglist__22967);
      return G__22966__delegate(keyvals);
    };
    G__22966.cljs$core$IFn$_invoke$arity$variadic = G__22966__delegate;
    return G__22966;
  }();
  js_obj = function(var_args) {
    var keyvals = var_args;
    switch(arguments.length) {
      case 0:
        return js_obj__0.call(this);
      default:
        return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(arguments, 0));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js_obj.cljs$lang$maxFixedArity = 0;
  js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
  js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
  js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
  return js_obj;
}();
cljs.core.js_keys = function js_keys(obj) {
  var keys = [];
  goog.object.forEach(obj, function(val, key, obj__$1) {
    return keys.push(key);
  });
  return keys;
};
cljs.core.js_delete = function js_delete(obj, key) {
  return delete obj[key];
};
cljs.core.array_copy = function array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__22968 = i__$1 + 1;
      var G__22969 = j__$1 + 1;
      var G__22970 = len__$1 - 1;
      i__$1 = G__22968;
      j__$1 = G__22969;
      len__$1 = G__22970;
      continue;
    }
    break;
  }
};
cljs.core.array_copy_downward = function array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__22971 = i__$1 - 1;
      var G__22972 = j__$1 - 1;
      var G__22973 = len__$1 - 1;
      i__$1 = G__22971;
      j__$1 = G__22972;
      len__$1 = G__22973;
      continue;
    }
    break;
  }
};
cljs.core.lookup_sentinel = function() {
  var obj22975 = {};
  return obj22975;
}();
cljs.core.false_QMARK_ = function false_QMARK_(x) {
  return x === false;
};
cljs.core.true_QMARK_ = function true_QMARK_(x) {
  return x === true;
};
cljs.core.undefined_QMARK_ = function undefined_QMARK_(x) {
  return void 0 === x;
};
cljs.core.seq_QMARK_ = function seq_QMARK_(s) {
  if (s == null) {
    return false;
  } else {
    var G__22977 = s;
    if (G__22977) {
      var bit__4052__auto__ = G__22977.cljs$lang$protocol_mask$partition0$ & 64;
      if (bit__4052__auto__ || G__22977.cljs$core$ISeq$) {
        return true;
      } else {
        if (!G__22977.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__22977);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__22977);
    }
  }
};
cljs.core.seqable_QMARK_ = function seqable_QMARK_(s) {
  var G__22979 = s;
  if (G__22979) {
    var bit__4052__auto__ = G__22979.cljs$lang$protocol_mask$partition0$ & 8388608;
    if (bit__4052__auto__ || G__22979.cljs$core$ISeqable$) {
      return true;
    } else {
      if (!G__22979.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, G__22979);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, G__22979);
  }
};
cljs.core.boolean$ = function boolean$(x) {
  if (cljs.core.truth_(x)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ifn_QMARK_ = function ifn_QMARK_(f) {
  var or__3408__auto__ = cljs.core.fn_QMARK_(f);
  if (or__3408__auto__) {
    return or__3408__auto__;
  } else {
    var G__22983 = f;
    if (G__22983) {
      var bit__4052__auto__ = G__22983.cljs$lang$protocol_mask$partition0$ & 1;
      if (bit__4052__auto__ || G__22983.cljs$core$IFn$) {
        return true;
      } else {
        if (!G__22983.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, G__22983);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, G__22983);
    }
  }
};
cljs.core.integer_QMARK_ = function integer_QMARK_(n) {
  return typeof n === "number" && (!isNaN(n) && (!(n === Infinity) && parseFloat(n) === parseInt(n, 10)));
};
cljs.core.contains_QMARK_ = function contains_QMARK_(coll, v) {
  if (cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false;
  } else {
    return true;
  }
};
cljs.core.find = function find(coll, k) {
  if (!(coll == null) && (cljs.core.associative_QMARK_(coll) && cljs.core.contains_QMARK_(coll, k))) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, k)], null);
  } else {
    return null;
  }
};
cljs.core.distinct_QMARK_ = function() {
  var distinct_QMARK_ = null;
  var distinct_QMARK___1 = function(x) {
    return true;
  };
  var distinct_QMARK___2 = function(x, y) {
    return!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
  };
  var distinct_QMARK___3 = function() {
    var G__22984__delegate = function(x, y, more) {
      if (!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
        var s = cljs.core.PersistentHashSet.fromArray([y, x], true);
        var xs = more;
        while (true) {
          var x__$1 = cljs.core.first(xs);
          var etc = cljs.core.next(xs);
          if (cljs.core.truth_(xs)) {
            if (cljs.core.contains_QMARK_(s, x__$1)) {
              return false;
            } else {
              var G__22985 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s, x__$1);
              var G__22986 = etc;
              s = G__22985;
              xs = G__22986;
              continue;
            }
          } else {
            return true;
          }
          break;
        }
      } else {
        return false;
      }
    };
    var G__22984 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__22984__delegate.call(this, x, y, more);
    };
    G__22984.cljs$lang$maxFixedArity = 2;
    G__22984.cljs$lang$applyTo = function(arglist__22987) {
      var x = cljs.core.first(arglist__22987);
      arglist__22987 = cljs.core.next(arglist__22987);
      var y = cljs.core.first(arglist__22987);
      var more = cljs.core.rest(arglist__22987);
      return G__22984__delegate(x, y, more);
    };
    G__22984.cljs$core$IFn$_invoke$arity$variadic = G__22984__delegate;
    return G__22984;
  }();
  distinct_QMARK_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return distinct_QMARK___1.call(this, x);
      case 2:
        return distinct_QMARK___2.call(this, x, y);
      default:
        return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  distinct_QMARK_.cljs$lang$maxFixedArity = 2;
  distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
  return distinct_QMARK_;
}();
cljs.core.sequence = function sequence(coll) {
  if (cljs.core.seq_QMARK_(coll)) {
    return coll;
  } else {
    var or__3408__auto__ = cljs.core.seq(coll);
    if (or__3408__auto__) {
      return or__3408__auto__;
    } else {
      return cljs.core.List.EMPTY;
    }
  }
};
cljs.core.compare = function compare(x, y) {
  if (x === y) {
    return 0;
  } else {
    if (x == null) {
      return-1;
    } else {
      if (y == null) {
        return 1;
      } else {
        if (cljs.core.type(x) === cljs.core.type(y)) {
          if (function() {
            var G__22989 = x;
            if (G__22989) {
              var bit__4045__auto__ = G__22989.cljs$lang$protocol_mask$partition1$ & 2048;
              if (bit__4045__auto__ || G__22989.cljs$core$IComparable$) {
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          }()) {
            return x.cljs$core$IComparable$_compare$arity$2(null, y);
          } else {
            return goog.array.defaultCompare(x, y);
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw new Error("compare on non-nil objects of different types");
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.core.compare_indexed = function() {
  var compare_indexed = null;
  var compare_indexed__2 = function(xs, ys) {
    var xl = cljs.core.count(xs);
    var yl = cljs.core.count(ys);
    if (xl < yl) {
      return-1;
    } else {
      if (xl > yl) {
        return 1;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs, ys, xl, 0);
        } else {
          return null;
        }
      }
    }
  };
  var compare_indexed__4 = function(xs, ys, len, n) {
    while (true) {
      var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs, n), cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys, n));
      if (d === 0 && n + 1 < len) {
        var G__22990 = xs;
        var G__22991 = ys;
        var G__22992 = len;
        var G__22993 = n + 1;
        xs = G__22990;
        ys = G__22991;
        len = G__22992;
        n = G__22993;
        continue;
      } else {
        return d;
      }
      break;
    }
  };
  compare_indexed = function(xs, ys, len, n) {
    switch(arguments.length) {
      case 2:
        return compare_indexed__2.call(this, xs, ys);
      case 4:
        return compare_indexed__4.call(this, xs, ys, len, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
  compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
  return compare_indexed;
}();
cljs.core.fn__GT_comparator = function fn__GT_comparator(f) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f, cljs.core.compare)) {
    return cljs.core.compare;
  } else {
    return function(x, y) {
      var r = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y);
      if (typeof r === "number") {
        return r;
      } else {
        if (cljs.core.truth_(r)) {
          return-1;
        } else {
          if (cljs.core.truth_(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(y, x) : f.call(null, y, x))) {
            return 1;
          } else {
            return 0;
          }
        }
      }
    };
  }
};
cljs.core.sort = function() {
  var sort = null;
  var sort__1 = function(coll) {
    return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare, coll);
  };
  var sort__2 = function(comp, coll) {
    if (cljs.core.seq(coll)) {
      var a = cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.to_array.call(null, coll);
      goog.array.stableSort(a, cljs.core.fn__GT_comparator(comp));
      return cljs.core.seq(a);
    } else {
      return cljs.core.List.EMPTY;
    }
  };
  sort = function(comp, coll) {
    switch(arguments.length) {
      case 1:
        return sort__1.call(this, comp);
      case 2:
        return sort__2.call(this, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
  sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
  return sort;
}();
cljs.core.sort_by = function() {
  var sort_by = null;
  var sort_by__2 = function(keyfn, coll) {
    return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn, cljs.core.compare, coll);
  };
  var sort_by__3 = function(keyfn, comp, coll) {
    return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(function(x, y) {
      return cljs.core.fn__GT_comparator(comp).call(null, keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(x) : keyfn.call(null, x), keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(y) : keyfn.call(null, y));
    }, coll);
  };
  sort_by = function(keyfn, comp, coll) {
    switch(arguments.length) {
      case 2:
        return sort_by__2.call(this, keyfn, comp);
      case 3:
        return sort_by__3.call(this, keyfn, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
  sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
  return sort_by;
}();
cljs.core.seq_reduce = function() {
  var seq_reduce = null;
  var seq_reduce__2 = function(f, coll) {
    var temp__4090__auto__ = cljs.core.seq(coll);
    if (temp__4090__auto__) {
      var s = temp__4090__auto__;
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f, cljs.core.first(s), cljs.core.next(s)) : cljs.core.reduce.call(null, f, cljs.core.first(s), cljs.core.next(s));
    } else {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    }
  };
  var seq_reduce__3 = function(f, val, coll) {
    var val__$1 = val;
    var coll__$1 = cljs.core.seq(coll);
    while (true) {
      if (coll__$1) {
        var nval = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(val__$1, cljs.core.first(coll__$1)) : f.call(null, val__$1, cljs.core.first(coll__$1));
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(nval) : cljs.core.deref.call(null, nval);
        } else {
          var G__22994 = nval;
          var G__22995 = cljs.core.next(coll__$1);
          val__$1 = G__22994;
          coll__$1 = G__22995;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  seq_reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return seq_reduce__2.call(this, f, val);
      case 3:
        return seq_reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
  seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
  return seq_reduce;
}();
cljs.core.shuffle = function shuffle(coll) {
  var a = cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.to_array.call(null, coll);
  goog.array.shuffle(a);
  return cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(a) : cljs.core.vec.call(null, a);
};
cljs.core.reduce = function() {
  var reduce = null;
  var reduce__2 = function(f, coll) {
    if (function() {
      var G__22998 = coll;
      if (G__22998) {
        var bit__4045__auto__ = G__22998.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__4045__auto__ || G__22998.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(null, f);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
            return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll);
            } else {
              return null;
            }
          }
        }
      }
    }
  };
  var reduce__3 = function(f, val, coll) {
    if (function() {
      var G__22999 = coll;
      if (G__22999) {
        var bit__4045__auto__ = G__22999.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__4045__auto__ || G__22999.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(null, f, val);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
            return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, val, coll);
            } else {
              return null;
            }
          }
        }
      }
    }
  };
  reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return reduce__2.call(this, f, val);
      case 3:
        return reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
  reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
  return reduce;
}();
cljs.core.reduce_kv = function reduce_kv(f, init, coll) {
  if (!(coll == null)) {
    return cljs.core._kv_reduce(coll, f, init);
  } else {
    return init;
  }
};
cljs.core._PLUS_ = function() {
  var _PLUS_ = null;
  var _PLUS___0 = function() {
    return 0;
  };
  var _PLUS___1 = function(x) {
    return x;
  };
  var _PLUS___2 = function(x, y) {
    return x + y;
  };
  var _PLUS___3 = function() {
    var G__23000__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_, x + y, more);
    };
    var G__23000 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__23000__delegate.call(this, x, y, more);
    };
    G__23000.cljs$lang$maxFixedArity = 2;
    G__23000.cljs$lang$applyTo = function(arglist__23001) {
      var x = cljs.core.first(arglist__23001);
      arglist__23001 = cljs.core.next(arglist__23001);
      var y = cljs.core.first(arglist__23001);
      var more = cljs.core.rest(arglist__23001);
      return G__23000__delegate(x, y, more);
    };
    G__23000.cljs$core$IFn$_invoke$arity$variadic = G__23000__delegate;
    return G__23000;
  }();
  _PLUS_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _PLUS___0.call(this);
      case 1:
        return _PLUS___1.call(this, x);
      case 2:
        return _PLUS___2.call(this, x, y);
      default:
        return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _PLUS_.cljs$lang$maxFixedArity = 2;
  _PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
  _PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
  _PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
  _PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
  _PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
  return _PLUS_;
}();
cljs.core._ = function() {
  var _ = null;
  var ___1 = function(x) {
    return-x;
  };
  var ___2 = function(x, y) {
    return x - y;
  };
  var ___3 = function() {
    var G__23002__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_, x - y, more);
    };
    var G__23002 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__23002__delegate.call(this, x, y, more);
    };
    G__23002.cljs$lang$maxFixedArity = 2;
    G__23002.cljs$lang$applyTo = function(arglist__23003) {
      var x = cljs.core.first(arglist__23003);
      arglist__23003 = cljs.core.next(arglist__23003);
      var y = cljs.core.first(arglist__23003);
      var more = cljs.core.rest(arglist__23003);
      return G__23002__delegate(x, y, more);
    };
    G__23002.cljs$core$IFn$_invoke$arity$variadic = G__23002__delegate;
    return G__23002;
  }();
  _ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return ___1.call(this, x);
      case 2:
        return ___2.call(this, x, y);
      default:
        return ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _.cljs$lang$maxFixedArity = 2;
  _.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
  _.cljs$core$IFn$_invoke$arity$1 = ___1;
  _.cljs$core$IFn$_invoke$arity$2 = ___2;
  _.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _;
}();
cljs.core._STAR_ = function() {
  var _STAR_ = null;
  var _STAR___0 = function() {
    return 1;
  };
  var _STAR___1 = function(x) {
    return x;
  };
  var _STAR___2 = function(x, y) {
    return x * y;
  };
  var _STAR___3 = function() {
    var G__23004__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_, x * y, more);
    };
    var G__23004 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__23004__delegate.call(this, x, y, more);
    };
    G__23004.cljs$lang$maxFixedArity = 2;
    G__23004.cljs$lang$applyTo = function(arglist__23005) {
      var x = cljs.core.first(arglist__23005);
      arglist__23005 = cljs.core.next(arglist__23005);
      var y = cljs.core.first(arglist__23005);
      var more = cljs.core.rest(arglist__23005);
      return G__23004__delegate(x, y, more);
    };
    G__23004.cljs$core$IFn$_invoke$arity$variadic = G__23004__delegate;
    return G__23004;
  }();
  _STAR_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _STAR___0.call(this);
      case 1:
        return _STAR___1.call(this, x);
      case 2:
        return _STAR___2.call(this, x, y);
      default:
        return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _STAR_.cljs$lang$maxFixedArity = 2;
  _STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
  _STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
  _STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
  _STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
  _STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
  return _STAR_;
}();
cljs.core._SLASH_ = function() {
  var _SLASH_ = null;
  var _SLASH___1 = function(x) {
    return _SLASH_.cljs$core$IFn$_invoke$arity$2(1, x);
  };
  var _SLASH___2 = function(x, y) {
    return x / y;
  };
  var _SLASH___3 = function() {
    var G__23006__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_, _SLASH_.cljs$core$IFn$_invoke$arity$2(x, y), more);
    };
    var G__23006 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__23006__delegate.call(this, x, y, more);
    };
    G__23006.cljs$lang$maxFixedArity = 2;
    G__23006.cljs$lang$applyTo = function(arglist__23007) {
      var x = cljs.core.first(arglist__23007);
      arglist__23007 = cljs.core.next(arglist__23007);
      var y = cljs.core.first(arglist__23007);
      var more = cljs.core.rest(arglist__23007);
      return G__23006__delegate(x, y, more);
    };
    G__23006.cljs$core$IFn$_invoke$arity$variadic = G__23006__delegate;
    return G__23006;
  }();
  _SLASH_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _SLASH___1.call(this, x);
      case 2:
        return _SLASH___2.call(this, x, y);
      default:
        return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _SLASH_.cljs$lang$maxFixedArity = 2;
  _SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
  _SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
  _SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
  _SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
  return _SLASH_;
}();
cljs.core._LT_ = function() {
  var _LT_ = null;
  var _LT___1 = function(x) {
    return true;
  };
  var _LT___2 = function(x, y) {
    return x < y;
  };
  var _LT___3 = function() {
    var G__23008__delegate = function(x, y, more) {
      while (true) {
        if (x < y) {
          if (cljs.core.next(more)) {
            var G__23009 = y;
            var G__23010 = cljs.core.first(more);
            var G__23011 = cljs.core.next(more);
            x = G__23009;
            y = G__23010;
            more = G__23011;
            continue;
          } else {
            return y < cljs.core.first(more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__23008 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__23008__delegate.call(this, x, y, more);
    };
    G__23008.cljs$lang$maxFixedArity = 2;
    G__23008.cljs$lang$applyTo = function(arglist__23012) {
      var x = cljs.core.first(arglist__23012);
      arglist__23012 = cljs.core.next(arglist__23012);
      var y = cljs.core.first(arglist__23012);
      var more = cljs.core.rest(arglist__23012);
      return G__23008__delegate(x, y, more);
    };
    G__23008.cljs$core$IFn$_invoke$arity$variadic = G__23008__delegate;
    return G__23008;
  }();
  _LT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT___1.call(this, x);
      case 2:
        return _LT___2.call(this, x, y);
      default:
        return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT_.cljs$lang$maxFixedArity = 2;
  _LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
  _LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
  _LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
  _LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT_;
}();
cljs.core._LT__EQ_ = function() {
  var _LT__EQ_ = null;
  var _LT__EQ___1 = function(x) {
    return true;
  };
  var _LT__EQ___2 = function(x, y) {
    return x <= y;
  };
  var _LT__EQ___3 = function() {
    var G__23013__delegate = function(x, y, more) {
      while (true) {
        if (x <= y) {
          if (cljs.core.next(more)) {
            var G__23014 = y;
            var G__23015 = cljs.core.first(more);
            var G__23016 = cljs.core.next(more);
            x = G__23014;
            y = G__23015;
            more = G__23016;
            continue;
          } else {
            return y <= cljs.core.first(more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__23013 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__23013__delegate.call(this, x, y, more);
    };
    G__23013.cljs$lang$maxFixedArity = 2;
    G__23013.cljs$lang$applyTo = function(arglist__23017) {
      var x = cljs.core.first(arglist__23017);
      arglist__23017 = cljs.core.next(arglist__23017);
      var y = cljs.core.first(arglist__23017);
      var more = cljs.core.rest(arglist__23017);
      return G__23013__delegate(x, y, more);
    };
    G__23013.cljs$core$IFn$_invoke$arity$variadic = G__23013__delegate;
    return G__23013;
  }();
  _LT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT__EQ___1.call(this, x);
      case 2:
        return _LT__EQ___2.call(this, x, y);
      default:
        return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT__EQ_.cljs$lang$maxFixedArity = 2;
  _LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT__EQ_;
}();
cljs.core._GT_ = function() {
  var _GT_ = null;
  var _GT___1 = function(x) {
    return true;
  };
  var _GT___2 = function(x, y) {
    return x > y;
  };
  var _GT___3 = function() {
    var G__23018__delegate = function(x, y, more) {
      while (true) {
        if (x > y) {
          if (cljs.core.next(more)) {
            var G__23019 = y;
            var G__23020 = cljs.core.first(more);
            var G__23021 = cljs.core.next(more);
            x = G__23019;
            y = G__23020;
            more = G__23021;
            continue;
          } else {
            return y > cljs.core.first(more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__23018 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__23018__delegate.call(this, x, y, more);
    };
    G__23018.cljs$lang$maxFixedArity = 2;
    G__23018.cljs$lang$applyTo = function(arglist__23022) {
      var x = cljs.core.first(arglist__23022);
      arglist__23022 = cljs.core.next(arglist__23022);
      var y = cljs.core.first(arglist__23022);
      var more = cljs.core.rest(arglist__23022);
      return G__23018__delegate(x, y, more);
    };
    G__23018.cljs$core$IFn$_invoke$arity$variadic = G__23018__delegate;
    return G__23018;
  }();
  _GT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT___1.call(this, x);
      case 2:
        return _GT___2.call(this, x, y);
      default:
        return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT_.cljs$lang$maxFixedArity = 2;
  _GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
  _GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
  _GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
  _GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT_;
}();
cljs.core._GT__EQ_ = function() {
  var _GT__EQ_ = null;
  var _GT__EQ___1 = function(x) {
    return true;
  };
  var _GT__EQ___2 = function(x, y) {
    return x >= y;
  };
  var _GT__EQ___3 = function() {
    var G__23023__delegate = function(x, y, more) {
      while (true) {
        if (x >= y) {
          if (cljs.core.next(more)) {
            var G__23024 = y;
            var G__23025 = cljs.core.first(more);
            var G__23026 = cljs.core.next(more);
            x = G__23024;
            y = G__23025;
            more = G__23026;
            continue;
          } else {
            return y >= cljs.core.first(more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__23023 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__23023__delegate.call(this, x, y, more);
    };
    G__23023.cljs$lang$maxFixedArity = 2;
    G__23023.cljs$lang$applyTo = function(arglist__23027) {
      var x = cljs.core.first(arglist__23027);
      arglist__23027 = cljs.core.next(arglist__23027);
      var y = cljs.core.first(arglist__23027);
      var more = cljs.core.rest(arglist__23027);
      return G__23023__delegate(x, y, more);
    };
    G__23023.cljs$core$IFn$_invoke$arity$variadic = G__23023__delegate;
    return G__23023;
  }();
  _GT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT__EQ___1.call(this, x);
      case 2:
        return _GT__EQ___2.call(this, x, y);
      default:
        return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT__EQ_.cljs$lang$maxFixedArity = 2;
  _GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT__EQ_;
}();
cljs.core.dec = function dec(x) {
  return x - 1;
};
cljs.core.max = function() {
  var max = null;
  var max__1 = function(x) {
    return x;
  };
  var max__2 = function(x, y) {
    var x__3715__auto__ = x;
    var y__3716__auto__ = y;
    return x__3715__auto__ > y__3716__auto__ ? x__3715__auto__ : y__3716__auto__;
  };
  var max__3 = function() {
    var G__23028__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max, function() {
        var x__3715__auto__ = x;
        var y__3716__auto__ = y;
        return x__3715__auto__ > y__3716__auto__ ? x__3715__auto__ : y__3716__auto__;
      }(), more);
    };
    var G__23028 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__23028__delegate.call(this, x, y, more);
    };
    G__23028.cljs$lang$maxFixedArity = 2;
    G__23028.cljs$lang$applyTo = function(arglist__23029) {
      var x = cljs.core.first(arglist__23029);
      arglist__23029 = cljs.core.next(arglist__23029);
      var y = cljs.core.first(arglist__23029);
      var more = cljs.core.rest(arglist__23029);
      return G__23028__delegate(x, y, more);
    };
    G__23028.cljs$core$IFn$_invoke$arity$variadic = G__23028__delegate;
    return G__23028;
  }();
  max = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return max__1.call(this, x);
      case 2:
        return max__2.call(this, x, y);
      default:
        return max__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max.cljs$lang$maxFixedArity = 2;
  max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
  max.cljs$core$IFn$_invoke$arity$1 = max__1;
  max.cljs$core$IFn$_invoke$arity$2 = max__2;
  max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
  return max;
}();
cljs.core.min = function() {
  var min = null;
  var min__1 = function(x) {
    return x;
  };
  var min__2 = function(x, y) {
    var x__3722__auto__ = x;
    var y__3723__auto__ = y;
    return x__3722__auto__ < y__3723__auto__ ? x__3722__auto__ : y__3723__auto__;
  };
  var min__3 = function() {
    var G__23030__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min, function() {
        var x__3722__auto__ = x;
        var y__3723__auto__ = y;
        return x__3722__auto__ < y__3723__auto__ ? x__3722__auto__ : y__3723__auto__;
      }(), more);
    };
    var G__23030 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__23030__delegate.call(this, x, y, more);
    };
    G__23030.cljs$lang$maxFixedArity = 2;
    G__23030.cljs$lang$applyTo = function(arglist__23031) {
      var x = cljs.core.first(arglist__23031);
      arglist__23031 = cljs.core.next(arglist__23031);
      var y = cljs.core.first(arglist__23031);
      var more = cljs.core.rest(arglist__23031);
      return G__23030__delegate(x, y, more);
    };
    G__23030.cljs$core$IFn$_invoke$arity$variadic = G__23030__delegate;
    return G__23030;
  }();
  min = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return min__1.call(this, x);
      case 2:
        return min__2.call(this, x, y);
      default:
        return min__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min.cljs$lang$maxFixedArity = 2;
  min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
  min.cljs$core$IFn$_invoke$arity$1 = min__1;
  min.cljs$core$IFn$_invoke$arity$2 = min__2;
  min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
  return min;
}();
cljs.core.byte$ = function byte$(x) {
  return x;
};
cljs.core.char$ = function char$(x) {
  if (typeof x === "number") {
    return String.fromCharCode(x);
  } else {
    if (typeof x === "string" && x.length === 1) {
      return x;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw new Error("Argument to char must be a character or number");
      } else {
        return null;
      }
    }
  }
};
cljs.core.short$ = function short$(x) {
  return x;
};
cljs.core.float$ = function float$(x) {
  return x;
};
cljs.core.double$ = function double$(x) {
  return x;
};
cljs.core.unchecked_byte = function unchecked_byte(x) {
  return x;
};
cljs.core.unchecked_char = function unchecked_char(x) {
  return x;
};
cljs.core.unchecked_short = function unchecked_short(x) {
  return x;
};
cljs.core.unchecked_float = function unchecked_float(x) {
  return x;
};
cljs.core.unchecked_double = function unchecked_double(x) {
  return x;
};
cljs.core.unchecked_add = function() {
  var unchecked_add = null;
  var unchecked_add__0 = function() {
    return 0;
  };
  var unchecked_add__1 = function(x) {
    return x;
  };
  var unchecked_add__2 = function(x, y) {
    return x + y;
  };
  var unchecked_add__3 = function() {
    var G__23032__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add, x + y, more);
    };
    var G__23032 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__23032__delegate.call(this, x, y, more);
    };
    G__23032.cljs$lang$maxFixedArity = 2;
    G__23032.cljs$lang$applyTo = function(arglist__23033) {
      var x = cljs.core.first(arglist__23033);
      arglist__23033 = cljs.core.next(arglist__23033);
      var y = cljs.core.first(arglist__23033);
      var more = cljs.core.rest(arglist__23033);
      return G__23032__delegate(x, y, more);
    };
    G__23032.cljs$core$IFn$_invoke$arity$variadic = G__23032__delegate;
    return G__23032;
  }();
  unchecked_add = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add__0.call(this);
      case 1:
        return unchecked_add__1.call(this, x);
      case 2:
        return unchecked_add__2.call(this, x, y);
      default:
        return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add.cljs$lang$maxFixedArity = 2;
  unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
  unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
  unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
  unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
  unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add;
}();
cljs.core.unchecked_add_int = function() {
  var unchecked_add_int = null;
  var unchecked_add_int__0 = function() {
    return 0;
  };
  var unchecked_add_int__1 = function(x) {
    return x;
  };
  var unchecked_add_int__2 = function(x, y) {
    return x + y;
  };
  var unchecked_add_int__3 = function() {
    var G__23034__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int, x + y, more);
    };
    var G__23034 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__23034__delegate.call(this, x, y, more);
    };
    G__23034.cljs$lang$maxFixedArity = 2;
    G__23034.cljs$lang$applyTo = function(arglist__23035) {
      var x = cljs.core.first(arglist__23035);
      arglist__23035 = cljs.core.next(arglist__23035);
      var y = cljs.core.first(arglist__23035);
      var more = cljs.core.rest(arglist__23035);
      return G__23034__delegate(x, y, more);
    };
    G__23034.cljs$core$IFn$_invoke$arity$variadic = G__23034__delegate;
    return G__23034;
  }();
  unchecked_add_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add_int__0.call(this);
      case 1:
        return unchecked_add_int__1.call(this, x);
      case 2:
        return unchecked_add_int__2.call(this, x, y);
      default:
        return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add_int.cljs$lang$maxFixedArity = 2;
  unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add_int;
}();
cljs.core.unchecked_dec = function unchecked_dec(x) {
  return x - 1;
};
cljs.core.unchecked_dec_int = function unchecked_dec_int(x) {
  return x - 1;
};
cljs.core.unchecked_divide_int = function() {
  var unchecked_divide_int = null;
  var unchecked_divide_int__1 = function(x) {
    return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(1, x);
  };
  var unchecked_divide_int__2 = function(x, y) {
    return x / y;
  };
  var unchecked_divide_int__3 = function() {
    var G__23036__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int, unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x, y), more);
    };
    var G__23036 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__23036__delegate.call(this, x, y, more);
    };
    G__23036.cljs$lang$maxFixedArity = 2;
    G__23036.cljs$lang$applyTo = function(arglist__23037) {
      var x = cljs.core.first(arglist__23037);
      arglist__23037 = cljs.core.next(arglist__23037);
      var y = cljs.core.first(arglist__23037);
      var more = cljs.core.rest(arglist__23037);
      return G__23036__delegate(x, y, more);
    };
    G__23036.cljs$core$IFn$_invoke$arity$variadic = G__23036__delegate;
    return G__23036;
  }();
  unchecked_divide_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_divide_int__1.call(this, x);
      case 2:
        return unchecked_divide_int__2.call(this, x, y);
      default:
        return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_divide_int.cljs$lang$maxFixedArity = 2;
  unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_divide_int;
}();
cljs.core.unchecked_inc = function unchecked_inc(x) {
  return x + 1;
};
cljs.core.unchecked_inc_int = function unchecked_inc_int(x) {
  return x + 1;
};
cljs.core.unchecked_multiply = function() {
  var unchecked_multiply = null;
  var unchecked_multiply__0 = function() {
    return 1;
  };
  var unchecked_multiply__1 = function(x) {
    return x;
  };
  var unchecked_multiply__2 = function(x, y) {
    return x * y;
  };
  var unchecked_multiply__3 = function() {
    var G__23038__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply, x * y, more);
    };
    var G__23038 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__23038__delegate.call(this, x, y, more);
    };
    G__23038.cljs$lang$maxFixedArity = 2;
    G__23038.cljs$lang$applyTo = function(arglist__23039) {
      var x = cljs.core.first(arglist__23039);
      arglist__23039 = cljs.core.next(arglist__23039);
      var y = cljs.core.first(arglist__23039);
      var more = cljs.core.rest(arglist__23039);
      return G__23038__delegate(x, y, more);
    };
    G__23038.cljs$core$IFn$_invoke$arity$variadic = G__23038__delegate;
    return G__23038;
  }();
  unchecked_multiply = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply__0.call(this);
      case 1:
        return unchecked_multiply__1.call(this, x);
      case 2:
        return unchecked_multiply__2.call(this, x, y);
      default:
        return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply.cljs$lang$maxFixedArity = 2;
  unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply;
}();
cljs.core.unchecked_multiply_int = function() {
  var unchecked_multiply_int = null;
  var unchecked_multiply_int__0 = function() {
    return 1;
  };
  var unchecked_multiply_int__1 = function(x) {
    return x;
  };
  var unchecked_multiply_int__2 = function(x, y) {
    return x * y;
  };
  var unchecked_multiply_int__3 = function() {
    var G__23040__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int, x * y, more);
    };
    var G__23040 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__23040__delegate.call(this, x, y, more);
    };
    G__23040.cljs$lang$maxFixedArity = 2;
    G__23040.cljs$lang$applyTo = function(arglist__23041) {
      var x = cljs.core.first(arglist__23041);
      arglist__23041 = cljs.core.next(arglist__23041);
      var y = cljs.core.first(arglist__23041);
      var more = cljs.core.rest(arglist__23041);
      return G__23040__delegate(x, y, more);
    };
    G__23040.cljs$core$IFn$_invoke$arity$variadic = G__23040__delegate;
    return G__23040;
  }();
  unchecked_multiply_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply_int__0.call(this);
      case 1:
        return unchecked_multiply_int__1.call(this, x);
      case 2:
        return unchecked_multiply_int__2.call(this, x, y);
      default:
        return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
  unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply_int;
}();
cljs.core.unchecked_negate = function unchecked_negate(x) {
  return-x;
};
cljs.core.unchecked_negate_int = function unchecked_negate_int(x) {
  return-x;
};
cljs.core.unchecked_remainder_int = function unchecked_remainder_int(x, n) {
  return cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(x, n) : cljs.core.mod.call(null, x, n);
};
cljs.core.unchecked_substract = function() {
  var unchecked_substract = null;
  var unchecked_substract__1 = function(x) {
    return-x;
  };
  var unchecked_substract__2 = function(x, y) {
    return x - y;
  };
  var unchecked_substract__3 = function() {
    var G__23042__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_substract, x - y, more);
    };
    var G__23042 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__23042__delegate.call(this, x, y, more);
    };
    G__23042.cljs$lang$maxFixedArity = 2;
    G__23042.cljs$lang$applyTo = function(arglist__23043) {
      var x = cljs.core.first(arglist__23043);
      arglist__23043 = cljs.core.next(arglist__23043);
      var y = cljs.core.first(arglist__23043);
      var more = cljs.core.rest(arglist__23043);
      return G__23042__delegate(x, y, more);
    };
    G__23042.cljs$core$IFn$_invoke$arity$variadic = G__23042__delegate;
    return G__23042;
  }();
  unchecked_substract = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_substract__1.call(this, x);
      case 2:
        return unchecked_substract__2.call(this, x, y);
      default:
        return unchecked_substract__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_substract.cljs$lang$maxFixedArity = 2;
  unchecked_substract.cljs$lang$applyTo = unchecked_substract__3.cljs$lang$applyTo;
  unchecked_substract.cljs$core$IFn$_invoke$arity$1 = unchecked_substract__1;
  unchecked_substract.cljs$core$IFn$_invoke$arity$2 = unchecked_substract__2;
  unchecked_substract.cljs$core$IFn$_invoke$arity$variadic = unchecked_substract__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_substract;
}();
cljs.core.unchecked_substract_int = function() {
  var unchecked_substract_int = null;
  var unchecked_substract_int__1 = function(x) {
    return-x;
  };
  var unchecked_substract_int__2 = function(x, y) {
    return x - y;
  };
  var unchecked_substract_int__3 = function() {
    var G__23044__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_substract_int, x - y, more);
    };
    var G__23044 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__23044__delegate.call(this, x, y, more);
    };
    G__23044.cljs$lang$maxFixedArity = 2;
    G__23044.cljs$lang$applyTo = function(arglist__23045) {
      var x = cljs.core.first(arglist__23045);
      arglist__23045 = cljs.core.next(arglist__23045);
      var y = cljs.core.first(arglist__23045);
      var more = cljs.core.rest(arglist__23045);
      return G__23044__delegate(x, y, more);
    };
    G__23044.cljs$core$IFn$_invoke$arity$variadic = G__23044__delegate;
    return G__23044;
  }();
  unchecked_substract_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_substract_int__1.call(this, x);
      case 2:
        return unchecked_substract_int__2.call(this, x, y);
      default:
        return unchecked_substract_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_substract_int.cljs$lang$maxFixedArity = 2;
  unchecked_substract_int.cljs$lang$applyTo = unchecked_substract_int__3.cljs$lang$applyTo;
  unchecked_substract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_substract_int__1;
  unchecked_substract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_substract_int__2;
  unchecked_substract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_substract_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_substract_int;
}();
cljs.core.fix = function fix(q) {
  if (q >= 0) {
    return Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(q) : Math.floor.call(null, q);
  } else {
    return Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(q) : Math.ceil.call(null, q);
  }
};
cljs.core.int$ = function int$(x) {
  return x | 0;
};
cljs.core.unchecked_int = function unchecked_int(x) {
  return cljs.core.fix(x);
};
cljs.core.long$ = function long$(x) {
  return cljs.core.fix(x);
};
cljs.core.unchecked_long = function unchecked_long(x) {
  return cljs.core.fix(x);
};
cljs.core.booleans = function booleans(x) {
  return x;
};
cljs.core.bytes = function bytes(x) {
  return x;
};
cljs.core.chars = function chars(x) {
  return x;
};
cljs.core.shorts = function shorts(x) {
  return x;
};
cljs.core.ints = function ints(x) {
  return x;
};
cljs.core.floats = function floats(x) {
  return x;
};
cljs.core.doubles = function doubles(x) {
  return x;
};
cljs.core.longs = function longs(x) {
  return x;
};
cljs.core.js_mod = function js_mod(n, d) {
  return n % d;
};
cljs.core.mod = function mod(n, d) {
  return(n % d + d) % d;
};
cljs.core.quot = function quot(n, d) {
  var rem = n % d;
  return cljs.core.fix((n - rem) / d);
};
cljs.core.rem = function rem(n, d) {
  var q = cljs.core.quot(n, d);
  return n - d * q;
};
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null);
  };
  var rand__1 = function(n) {
    return n * rand.cljs$core$IFn$_invoke$arity$0();
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand;
}();
cljs.core.rand_int = function rand_int(n) {
  return cljs.core.fix(cljs.core.rand.cljs$core$IFn$_invoke$arity$1(n));
};
cljs.core.bit_xor = function bit_xor(x, y) {
  return x ^ y;
};
cljs.core.bit_and = function bit_and(x, y) {
  return x & y;
};
cljs.core.bit_or = function bit_or(x, y) {
  return x | y;
};
cljs.core.bit_and_not = function bit_and_not(x, y) {
  return x & ~y;
};
cljs.core.bit_clear = function bit_clear(x, n) {
  return x & ~(1 << n);
};
cljs.core.bit_flip = function bit_flip(x, n) {
  return x ^ 1 << n;
};
cljs.core.bit_not = function bit_not(x) {
  return~x;
};
cljs.core.bit_set = function bit_set(x, n) {
  return x | 1 << n;
};
cljs.core.bit_test = function bit_test(x, n) {
  return(x & 1 << n) != 0;
};
cljs.core.bit_shift_left = function bit_shift_left(x, n) {
  return x << n;
};
cljs.core.bit_shift_right = function bit_shift_right(x, n) {
  return x >> n;
};
cljs.core.bit_shift_right_zero_fill = function bit_shift_right_zero_fill(x, n) {
  return x >>> n;
};
cljs.core.unsigned_bit_shift_right = function unsigned_bit_shift_right(x, n) {
  return x >>> n;
};
cljs.core.bit_count = function bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return(v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24;
};
cljs.core._EQ__EQ_ = function() {
  var _EQ__EQ_ = null;
  var _EQ__EQ___1 = function(x) {
    return true;
  };
  var _EQ__EQ___2 = function(x, y) {
    return cljs.core._equiv(x, y);
  };
  var _EQ__EQ___3 = function() {
    var G__23046__delegate = function(x, y, more) {
      while (true) {
        if (_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
          if (cljs.core.next(more)) {
            var G__23047 = y;
            var G__23048 = cljs.core.first(more);
            var G__23049 = cljs.core.next(more);
            x = G__23047;
            y = G__23048;
            more = G__23049;
            continue;
          } else {
            return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y, cljs.core.first(more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__23046 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__23046__delegate.call(this, x, y, more);
    };
    G__23046.cljs$lang$maxFixedArity = 2;
    G__23046.cljs$lang$applyTo = function(arglist__23050) {
      var x = cljs.core.first(arglist__23050);
      arglist__23050 = cljs.core.next(arglist__23050);
      var y = cljs.core.first(arglist__23050);
      var more = cljs.core.rest(arglist__23050);
      return G__23046__delegate(x, y, more);
    };
    G__23046.cljs$core$IFn$_invoke$arity$variadic = G__23046__delegate;
    return G__23046;
  }();
  _EQ__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ__EQ___1.call(this, x);
      case 2:
        return _EQ__EQ___2.call(this, x, y);
      default:
        return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ__EQ_.cljs$lang$maxFixedArity = 2;
  _EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ__EQ_;
}();
cljs.core.pos_QMARK_ = function pos_QMARK_(n) {
  return n > 0;
};
cljs.core.zero_QMARK_ = function zero_QMARK_(n) {
  return n === 0;
};
cljs.core.neg_QMARK_ = function neg_QMARK_(x) {
  return x < 0;
};
cljs.core.nthnext = function nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq(coll);
  while (true) {
    if (xs && n__$1 > 0) {
      var G__23051 = n__$1 - 1;
      var G__23052 = cljs.core.next(xs);
      n__$1 = G__23051;
      xs = G__23052;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.str = function() {
  var str = null;
  var str__0 = function() {
    return "";
  };
  var str__1 = function(x) {
    if (x == null) {
      return "";
    } else {
      return x.toString();
    }
  };
  var str__2 = function() {
    var G__23053__delegate = function(x, ys) {
      var sb = new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x));
      var more = ys;
      while (true) {
        if (cljs.core.truth_(more)) {
          var G__23054 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
          var G__23055 = cljs.core.next(more);
          sb = G__23054;
          more = G__23055;
          continue;
        } else {
          return sb.toString();
        }
        break;
      }
    };
    var G__23053 = function(x, var_args) {
      var ys = null;
      if (arguments.length > 1) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__23053__delegate.call(this, x, ys);
    };
    G__23053.cljs$lang$maxFixedArity = 1;
    G__23053.cljs$lang$applyTo = function(arglist__23056) {
      var x = cljs.core.first(arglist__23056);
      var ys = cljs.core.rest(arglist__23056);
      return G__23053__delegate(x, ys);
    };
    G__23053.cljs$core$IFn$_invoke$arity$variadic = G__23053__delegate;
    return G__23053;
  }();
  str = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str__0.call(this);
      case 1:
        return str__1.call(this, x);
      default:
        return str__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  str.cljs$lang$maxFixedArity = 1;
  str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
  str.cljs$core$IFn$_invoke$arity$0 = str__0;
  str.cljs$core$IFn$_invoke$arity$1 = str__1;
  str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
  return str;
}();
cljs.core.subs = function() {
  var subs = null;
  var subs__2 = function(s, start) {
    return s.substring(start);
  };
  var subs__3 = function(s, start, end) {
    return s.substring(start, end);
  };
  subs = function(s, start, end) {
    switch(arguments.length) {
      case 2:
        return subs__2.call(this, s, start);
      case 3:
        return subs__3.call(this, s, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
  subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
  return subs;
}();
cljs.core.equiv_sequential = function equiv_sequential(x, y) {
  return cljs.core.boolean$(cljs.core.sequential_QMARK_(y) ? function() {
    var xs = cljs.core.seq(x);
    var ys = cljs.core.seq(y);
    while (true) {
      if (xs == null) {
        return ys == null;
      } else {
        if (ys == null) {
          return false;
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs), cljs.core.first(ys))) {
            var G__23057 = cljs.core.next(xs);
            var G__23058 = cljs.core.next(ys);
            xs = G__23057;
            ys = G__23058;
            continue;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return false;
            } else {
              return null;
            }
          }
        }
      }
      break;
    }
  }() : null);
};
cljs.core.hash_combine = function hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);
};
cljs.core.hash_coll = function hash_coll(coll) {
  if (cljs.core.seq(coll)) {
    var res = cljs.core.hash(cljs.core.first(coll));
    var s = cljs.core.next(coll);
    while (true) {
      if (s == null) {
        return res;
      } else {
        var G__23059 = cljs.core.hash_combine(res, cljs.core.hash(cljs.core.first(s)));
        var G__23060 = cljs.core.next(s);
        res = G__23059;
        s = G__23060;
        continue;
      }
      break;
    }
  } else {
    return 0;
  }
};
cljs.core.hash_imap = function hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq(m);
  while (true) {
    if (s) {
      var e = cljs.core.first(s);
      var G__23061 = (h + (cljs.core.hash(cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.key.call(null, e)) ^ cljs.core.hash(cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.val.call(null, e)))) % 4503599627370496;
      var G__23062 = cljs.core.next(s);
      h = G__23061;
      s = G__23062;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.hash_iset = function hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq(s);
  while (true) {
    if (s__$1) {
      var e = cljs.core.first(s__$1);
      var G__23063 = (h + cljs.core.hash(e)) % 4503599627370496;
      var G__23064 = cljs.core.next(s__$1);
      h = G__23063;
      s__$1 = G__23064;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.extend_object_BANG_ = function extend_object_BANG_(obj, fn_map) {
  var seq__23071_23077 = cljs.core.seq(fn_map);
  var chunk__23072_23078 = null;
  var count__23073_23079 = 0;
  var i__23074_23080 = 0;
  while (true) {
    if (i__23074_23080 < count__23073_23079) {
      var vec__23075_23081 = chunk__23072_23078.cljs$core$IIndexed$_nth$arity$2(null, i__23074_23080);
      var key_name_23082 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23075_23081, 0, null);
      var f_23083 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23075_23081, 1, null);
      var str_name_23084 = cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(key_name_23082) : cljs.core.name.call(null, key_name_23082);
      obj[str_name_23084] = f_23083;
      var G__23085 = seq__23071_23077;
      var G__23086 = chunk__23072_23078;
      var G__23087 = count__23073_23079;
      var G__23088 = i__23074_23080 + 1;
      seq__23071_23077 = G__23085;
      chunk__23072_23078 = G__23086;
      count__23073_23079 = G__23087;
      i__23074_23080 = G__23088;
      continue;
    } else {
      var temp__4092__auto___23089 = cljs.core.seq(seq__23071_23077);
      if (temp__4092__auto___23089) {
        var seq__23071_23090__$1 = temp__4092__auto___23089;
        if (cljs.core.chunked_seq_QMARK_(seq__23071_23090__$1)) {
          var c__4150__auto___23091 = cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(seq__23071_23090__$1) : cljs.core.chunk_first.call(null, seq__23071_23090__$1);
          var G__23092 = cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(seq__23071_23090__$1) : cljs.core.chunk_rest.call(null, seq__23071_23090__$1);
          var G__23093 = c__4150__auto___23091;
          var G__23094 = cljs.core.count(c__4150__auto___23091);
          var G__23095 = 0;
          seq__23071_23077 = G__23092;
          chunk__23072_23078 = G__23093;
          count__23073_23079 = G__23094;
          i__23074_23080 = G__23095;
          continue;
        } else {
          var vec__23076_23096 = cljs.core.first(seq__23071_23090__$1);
          var key_name_23097 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23076_23096, 0, null);
          var f_23098 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23076_23096, 1, null);
          var str_name_23099 = cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(key_name_23097) : cljs.core.name.call(null, key_name_23097);
          obj[str_name_23099] = f_23098;
          var G__23100 = cljs.core.next(seq__23071_23090__$1);
          var G__23101 = null;
          var G__23102 = 0;
          var G__23103 = 0;
          seq__23071_23077 = G__23100;
          chunk__23072_23078 = G__23101;
          count__23073_23079 = G__23102;
          i__23074_23080 = G__23103;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return obj;
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65937646;
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core/List");
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3819__auto__ = self__.__hash;
  if (!(h__3819__auto__ == null)) {
    return h__3819__auto__;
  } else {
    var h__3819__auto____$1 = cljs.core.hash_coll(coll__$1);
    self__.__hash = h__3819__auto____$1;
    return h__3819__auto____$1;
  }
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return null;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, coll__$1, self__.count + 1, null);
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._rest(coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(meta__$1, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$ICloneable$ = true;
cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.List(self__.meta, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.__GT_List = function __GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash);
};
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65937614;
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core/EmptyList");
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, null, 1, null);
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.EmptyList(meta__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ICloneable$ = true;
cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.EmptyList(self__.meta);
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.__GT_EmptyList = function __GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta);
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.reversible_QMARK_ = function reversible_QMARK_(coll) {
  var G__23105 = coll;
  if (G__23105) {
    var bit__4052__auto__ = G__23105.cljs$lang$protocol_mask$partition0$ & 134217728;
    if (bit__4052__auto__ || G__23105.cljs$core$IReversible$) {
      return true;
    } else {
      if (!G__23105.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, G__23105);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, G__23105);
  }
};
cljs.core.rseq = function rseq(coll) {
  return cljs.core._rseq(coll);
};
cljs.core.reverse = function reverse(coll) {
  if (cljs.core.reversible_QMARK_(coll)) {
    return cljs.core.rseq(coll);
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, coll);
  }
};
cljs.core.list = function() {
  var list__delegate = function(xs) {
    var arr = xs instanceof cljs.core.IndexedSeq && xs.i === 0 ? xs.arr : function() {
      var arr = [];
      var xs__$1 = xs;
      while (true) {
        if (!(xs__$1 == null)) {
          arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));
          var G__23106 = xs__$1.cljs$core$INext$_next$arity$1(null);
          xs__$1 = G__23106;
          continue;
        } else {
          return arr;
        }
        break;
      }
    }();
    var i = arr.length;
    var r = cljs.core.List.EMPTY;
    while (true) {
      if (i > 0) {
        var G__23107 = i - 1;
        var G__23108 = r.cljs$core$ICollection$_conj$arity$2(null, arr[i - 1]);
        i = G__23107;
        r = G__23108;
        continue;
      } else {
        return r;
      }
      break;
    }
  };
  var list = function(var_args) {
    var xs = null;
    if (arguments.length > 0) {
      xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return list__delegate.call(this, xs);
  };
  list.cljs$lang$maxFixedArity = 0;
  list.cljs$lang$applyTo = function(arglist__23109) {
    var xs = cljs.core.seq(arglist__23109);
    return list__delegate(xs);
  };
  list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
  return list;
}();
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65929452;
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core/Cons");
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3819__auto__ = self__.__hash;
  if (!(h__3819__auto__ == null)) {
    return h__3819__auto__;
  } else {
    var h__3819__auto____$1 = cljs.core.hash_coll(coll__$1);
    self__.__hash = h__3819__auto____$1;
    return h__3819__auto____$1;
  }
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core.seq(self__.rest);
  }
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(null, o, coll__$1, self__.__hash);
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(meta__$1, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$ICloneable$ = true;
cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Cons(self__.meta, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_Cons = function __GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash);
};
cljs.core.cons = function cons(x, coll) {
  if (function() {
    var or__3408__auto__ = coll == null;
    if (or__3408__auto__) {
      return or__3408__auto__;
    } else {
      var G__23113 = coll;
      if (G__23113) {
        var bit__4045__auto__ = G__23113.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4045__auto__ || G__23113.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null);
  } else {
    return new cljs.core.Cons(null, x, cljs.core.seq(coll), null);
  }
};
cljs.core.list_QMARK_ = function list_QMARK_(x) {
  var G__23115 = x;
  if (G__23115) {
    var bit__4052__auto__ = G__23115.cljs$lang$protocol_mask$partition0$ & 33554432;
    if (bit__4052__auto__ || G__23115.cljs$core$IList$) {
      return true;
    } else {
      if (!G__23115.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IList, G__23115);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IList, G__23115);
  }
};
cljs.core.Keyword = function(ns, name, fqn, _hash) {
  this.ns = ns;
  this.name = name;
  this.fqn = fqn;
  this._hash = _hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core/Keyword");
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, [cljs.core.str(":"), cljs.core.str(self__.fqn)].join(""));
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__._hash == null) {
    self__._hash = cljs.core.hash_combine(cljs.core.hash(self__.ns), cljs.core.hash(self__.name)) + 2654435769;
    return self__._hash;
  } else {
    return self__._hash;
  }
};
cljs.core.Keyword.prototype.call = function() {
  var G__23117 = null;
  var G__23117__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
  };
  var G__23117__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
  };
  G__23117 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__23117__2.call(this, self__, coll);
      case 3:
        return G__23117__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__23117;
}();
cljs.core.Keyword.prototype.apply = function(self__, args23116) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args23116)));
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Keyword) {
    return self__.fqn === other.fqn;
  } else {
    return false;
  }
};
cljs.core.Keyword.prototype.cljs$core$ICloneable$ = true;
cljs.core.Keyword.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Keyword(self__.ns, self__.name, self__.fqn, self__._hash);
};
cljs.core.Keyword.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return[cljs.core.str(":"), cljs.core.str(self__.fqn)].join("");
};
cljs.core.__GT_Keyword = function __GT_Keyword(ns, name, fqn, _hash) {
  return new cljs.core.Keyword(ns, name, fqn, _hash);
};
cljs.core.keyword_QMARK_ = function keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword;
};
cljs.core.keyword_identical_QMARK_ = function keyword_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Keyword && y instanceof cljs.core.Keyword) {
      return x.fqn === y.fqn;
    } else {
      return false;
    }
  }
};
cljs.core.namespace = function namespace(x) {
  if (function() {
    var G__23119 = x;
    if (G__23119) {
      var bit__4045__auto__ = G__23119.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4045__auto__ || G__23119.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(null);
  } else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.keyword = function() {
  var keyword = null;
  var keyword__1 = function(name) {
    if (name instanceof cljs.core.Keyword) {
      return name;
    } else {
      if (name instanceof cljs.core.Symbol) {
        return new cljs.core.Keyword(cljs.core.namespace(name), cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(name) : cljs.core.name.call(null, name), name.str, null);
      } else {
        if (typeof name === "string") {
          var parts = name.split("/");
          if (parts.length === 2) {
            return new cljs.core.Keyword(parts[0], parts[1], name, null);
          } else {
            return new cljs.core.Keyword(null, parts[0], name, null);
          }
        } else {
          return null;
        }
      }
    }
  };
  var keyword__2 = function(ns, name) {
    return new cljs.core.Keyword(ns, name, [cljs.core.str(cljs.core.truth_(ns) ? [cljs.core.str(ns), cljs.core.str("/")].join("") : null), cljs.core.str(name)].join(""), null);
  };
  keyword = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return keyword__1.call(this, ns);
      case 2:
        return keyword__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
  keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
  return keyword;
}();
cljs.core.LazySeq = function(meta, fn, s, __hash) {
  this.meta = meta;
  this.fn = fn;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core/LazySeq");
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3819__auto__ = self__.__hash;
  if (!(h__3819__auto__ == null)) {
    return h__3819__auto__;
  } else {
    var h__3819__auto____$1 = cljs.core.hash_coll(coll__$1);
    self__.__hash = h__3819__auto____$1;
    return h__3819__auto____$1;
  }
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.next(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.LazySeq.prototype.sval = function() {
  var self__ = this;
  var coll = this;
  if (self__.fn == null) {
    return self__.s;
  } else {
    self__.s = self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null);
    self__.fn = null;
    return self__.s;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.sval();
  if (self__.s == null) {
    return null;
  } else {
    var ls = self__.s;
    while (true) {
      if (ls instanceof cljs.core.LazySeq) {
        var G__23120 = ls.sval();
        ls = G__23120;
        continue;
      } else {
        self__.s = ls;
        return cljs.core.seq(self__.s);
      }
      break;
    }
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (!(self__.s == null)) {
    return cljs.core.rest(self__.s);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.LazySeq(meta__$1, self__.fn, self__.s, self__.__hash);
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_LazySeq = function __GT_LazySeq(meta, fn, s, __hash) {
  return new cljs.core.LazySeq(meta, fn, s, __hash);
};
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core/ChunkBuffer");
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end;
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1;
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret;
};
cljs.core.__GT_ChunkBuffer = function __GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end);
};
cljs.core.chunk_buffer = function chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0);
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 524306;
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core/ArrayChunk");
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.off], self__.off + 1);
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.off);
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  } else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end);
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  var coll__$1 = this;
  return self__.arr[self__.off + i];
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (i >= 0 && i < self__.end - self__.off) {
    return self__.arr[self__.off + i];
  } else {
    return not_found;
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end - self__.off;
};
cljs.core.__GT_ArrayChunk = function __GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk = function() {
  var array_chunk = null;
  var array_chunk__1 = function(arr) {
    return new cljs.core.ArrayChunk(arr, 0, arr.length);
  };
  var array_chunk__2 = function(arr, off) {
    return new cljs.core.ArrayChunk(arr, off, arr.length);
  };
  var array_chunk__3 = function(arr, off, end) {
    return new cljs.core.ArrayChunk(arr, off, end);
  };
  array_chunk = function(arr, off, end) {
    switch(arguments.length) {
      case 1:
        return array_chunk__1.call(this, arr);
      case 2:
        return array_chunk__2.call(this, arr, off);
      case 3:
        return array_chunk__3.call(this, arr, off, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
  array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
  array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
  return array_chunk;
}();
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core/ChunkedCons");
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3819__auto__ = self__.__hash;
  if (!(h__3819__auto__ == null)) {
    return h__3819__auto__;
  } else {
    var h__3819__auto____$1 = cljs.core.hash_coll(coll__$1);
    self__.__hash = h__3819__auto____$1;
    return h__3819__auto____$1;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, self__.meta, null);
  } else {
    var more__$1 = cljs.core._seq(self__.more);
    if (more__$1 == null) {
      return null;
    } else {
      return more__$1;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, this$__$1);
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk, 0);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, self__.meta, null);
  } else {
    if (self__.more == null) {
      return cljs.core.List.EMPTY;
    } else {
      return self__.more;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return null;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ChunkedCons(self__.chunk, self__.more, m, self__.__hash);
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.chunk;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.more;
  }
};
cljs.core.__GT_ChunkedCons = function __GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash);
};
cljs.core.chunk_cons = function chunk_cons(chunk, rest) {
  if (cljs.core._count(chunk) === 0) {
    return rest;
  } else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null);
  }
};
cljs.core.chunk_append = function chunk_append(b, x) {
  return b.add(x);
};
cljs.core.chunk = function chunk(b) {
  return b.chunk();
};
cljs.core.chunk_first = function chunk_first(s) {
  return cljs.core._chunked_first(s);
};
cljs.core.chunk_rest = function chunk_rest(s) {
  return cljs.core._chunked_rest(s);
};
cljs.core.chunk_next = function chunk_next(s) {
  if (function() {
    var G__23122 = s;
    if (G__23122) {
      var bit__4045__auto__ = G__23122.cljs$lang$protocol_mask$partition1$ & 1024;
      if (bit__4045__auto__ || G__23122.cljs$core$IChunkedNext$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._chunked_next(s);
  } else {
    return cljs.core.seq(cljs.core._chunked_rest(s));
  }
};
cljs.core.to_array = function to_array(s) {
  var ary = [];
  var s__$1 = s;
  while (true) {
    if (cljs.core.seq(s__$1)) {
      ary.push(cljs.core.first(s__$1));
      var G__23123 = cljs.core.next(s__$1);
      s__$1 = G__23123;
      continue;
    } else {
      return ary;
    }
    break;
  }
};
cljs.core.to_array_2d = function to_array_2d(coll) {
  var ret = new Array(cljs.core.count(coll));
  var i_23124 = 0;
  var xs_23125 = cljs.core.seq(coll);
  while (true) {
    if (xs_23125) {
      ret[i_23124] = cljs.core.to_array(cljs.core.first(xs_23125));
      var G__23126 = i_23124 + 1;
      var G__23127 = cljs.core.next(xs_23125);
      i_23124 = G__23126;
      xs_23125 = G__23127;
      continue;
    } else {
    }
    break;
  }
  return ret;
};
cljs.core.int_array = function() {
  var int_array = null;
  var int_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
    } else {
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
    }
  };
  var int_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_(init_val_or_seq)) {
      var s = cljs.core.seq(init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first(s__$1);
          var G__23128 = i + 1;
          var G__23129 = cljs.core.next(s__$1);
          i = G__23128;
          s__$1 = G__23129;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4250__auto___23130 = size;
      var i_23131 = 0;
      while (true) {
        if (i_23131 < n__4250__auto___23130) {
          a[i_23131] = init_val_or_seq;
          var G__23132 = i_23131 + 1;
          i_23131 = G__23132;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  int_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return int_array__1.call(this, size);
      case 2:
        return int_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
  int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
  return int_array;
}();
cljs.core.long_array = function() {
  var long_array = null;
  var long_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
    } else {
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
    }
  };
  var long_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_(init_val_or_seq)) {
      var s = cljs.core.seq(init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first(s__$1);
          var G__23133 = i + 1;
          var G__23134 = cljs.core.next(s__$1);
          i = G__23133;
          s__$1 = G__23134;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4250__auto___23135 = size;
      var i_23136 = 0;
      while (true) {
        if (i_23136 < n__4250__auto___23135) {
          a[i_23136] = init_val_or_seq;
          var G__23137 = i_23136 + 1;
          i_23136 = G__23137;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  long_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return long_array__1.call(this, size);
      case 2:
        return long_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
  long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
  return long_array;
}();
cljs.core.double_array = function() {
  var double_array = null;
  var double_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
    } else {
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
    }
  };
  var double_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_(init_val_or_seq)) {
      var s = cljs.core.seq(init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first(s__$1);
          var G__23138 = i + 1;
          var G__23139 = cljs.core.next(s__$1);
          i = G__23138;
          s__$1 = G__23139;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4250__auto___23140 = size;
      var i_23141 = 0;
      while (true) {
        if (i_23141 < n__4250__auto___23140) {
          a[i_23141] = init_val_or_seq;
          var G__23142 = i_23141 + 1;
          i_23141 = G__23142;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  double_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return double_array__1.call(this, size);
      case 2:
        return double_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
  double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
  return double_array;
}();
cljs.core.object_array = function() {
  var object_array = null;
  var object_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
    } else {
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
    }
  };
  var object_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_(init_val_or_seq)) {
      var s = cljs.core.seq(init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first(s__$1);
          var G__23143 = i + 1;
          var G__23144 = cljs.core.next(s__$1);
          i = G__23143;
          s__$1 = G__23144;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4250__auto___23145 = size;
      var i_23146 = 0;
      while (true) {
        if (i_23146 < n__4250__auto___23145) {
          a[i_23146] = init_val_or_seq;
          var G__23147 = i_23146 + 1;
          i_23146 = G__23147;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  object_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return object_array__1.call(this, size);
      case 2:
        return object_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
  object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
  return object_array;
}();
cljs.core.bounded_count = function bounded_count(s, n) {
  if (cljs.core.counted_QMARK_(s)) {
    return cljs.core.count(s);
  } else {
    var s__$1 = s;
    var i = n;
    var sum = 0;
    while (true) {
      if (i > 0 && cljs.core.seq(s__$1)) {
        var G__23148 = cljs.core.next(s__$1);
        var G__23149 = i - 1;
        var G__23150 = sum + 1;
        s__$1 = G__23148;
        i = G__23149;
        sum = G__23150;
        continue;
      } else {
        return sum;
      }
      break;
    }
  }
};
cljs.core.spread = function spread(arglist) {
  if (arglist == null) {
    return null;
  } else {
    if (cljs.core.next(arglist) == null) {
      return cljs.core.seq(cljs.core.first(arglist));
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core.cons(cljs.core.first(arglist), spread(cljs.core.next(arglist)));
      } else {
        return null;
      }
    }
  }
};
cljs.core.concat = function() {
  var concat = null;
  var concat__0 = function() {
    return new cljs.core.LazySeq(null, function() {
      return null;
    }, null, null);
  };
  var concat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return x;
    }, null, null);
  };
  var concat__2 = function(x, y) {
    return new cljs.core.LazySeq(null, function() {
      var s = cljs.core.seq(x);
      if (s) {
        if (cljs.core.chunked_seq_QMARK_(s)) {
          return cljs.core.chunk_cons(cljs.core.chunk_first(s), concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s), y));
        } else {
          return cljs.core.cons(cljs.core.first(s), concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s), y));
        }
      } else {
        return y;
      }
    }, null, null);
  };
  var concat__3 = function() {
    var G__23151__delegate = function(x, y, zs) {
      var cat = function cat(xys, zs__$1) {
        return new cljs.core.LazySeq(null, function() {
          var xys__$1 = cljs.core.seq(xys);
          if (xys__$1) {
            if (cljs.core.chunked_seq_QMARK_(xys__$1)) {
              return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1), cat(cljs.core.chunk_rest(xys__$1), zs__$1));
            } else {
              return cljs.core.cons(cljs.core.first(xys__$1), cat(cljs.core.rest(xys__$1), zs__$1));
            }
          } else {
            if (cljs.core.truth_(zs__$1)) {
              return cat(cljs.core.first(zs__$1), cljs.core.next(zs__$1));
            } else {
              return null;
            }
          }
        }, null, null);
      };
      return cat(concat.cljs$core$IFn$_invoke$arity$2(x, y), zs);
    };
    var G__23151 = function(x, y, var_args) {
      var zs = null;
      if (arguments.length > 2) {
        zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__23151__delegate.call(this, x, y, zs);
    };
    G__23151.cljs$lang$maxFixedArity = 2;
    G__23151.cljs$lang$applyTo = function(arglist__23152) {
      var x = cljs.core.first(arglist__23152);
      arglist__23152 = cljs.core.next(arglist__23152);
      var y = cljs.core.first(arglist__23152);
      var zs = cljs.core.rest(arglist__23152);
      return G__23151__delegate(x, y, zs);
    };
    G__23151.cljs$core$IFn$_invoke$arity$variadic = G__23151__delegate;
    return G__23151;
  }();
  concat = function(x, y, var_args) {
    var zs = var_args;
    switch(arguments.length) {
      case 0:
        return concat__0.call(this);
      case 1:
        return concat__1.call(this, x);
      case 2:
        return concat__2.call(this, x, y);
      default:
        return concat__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  concat.cljs$lang$maxFixedArity = 2;
  concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
  concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
  concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
  concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
  concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
  return concat;
}();
cljs.core.list_STAR_ = function() {
  var list_STAR_ = null;
  var list_STAR___1 = function(args) {
    return cljs.core.seq(args);
  };
  var list_STAR___2 = function(a, args) {
    return cljs.core.cons(a, args);
  };
  var list_STAR___3 = function(a, b, args) {
    return cljs.core.cons(a, cljs.core.cons(b, args));
  };
  var list_STAR___4 = function(a, b, c, args) {
    return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, args)));
  };
  var list_STAR___5 = function() {
    var G__23153__delegate = function(a, b, c, d, more) {
      return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(more)))));
    };
    var G__23153 = function(a, b, c, d, var_args) {
      var more = null;
      if (arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__23153__delegate.call(this, a, b, c, d, more);
    };
    G__23153.cljs$lang$maxFixedArity = 4;
    G__23153.cljs$lang$applyTo = function(arglist__23154) {
      var a = cljs.core.first(arglist__23154);
      arglist__23154 = cljs.core.next(arglist__23154);
      var b = cljs.core.first(arglist__23154);
      arglist__23154 = cljs.core.next(arglist__23154);
      var c = cljs.core.first(arglist__23154);
      arglist__23154 = cljs.core.next(arglist__23154);
      var d = cljs.core.first(arglist__23154);
      var more = cljs.core.rest(arglist__23154);
      return G__23153__delegate(a, b, c, d, more);
    };
    G__23153.cljs$core$IFn$_invoke$arity$variadic = G__23153__delegate;
    return G__23153;
  }();
  list_STAR_ = function(a, b, c, d, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return list_STAR___1.call(this, a);
      case 2:
        return list_STAR___2.call(this, a, b);
      case 3:
        return list_STAR___3.call(this, a, b, c);
      case 4:
        return list_STAR___4.call(this, a, b, c, d);
      default:
        return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a, b, c, d, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  list_STAR_.cljs$lang$maxFixedArity = 4;
  list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
  list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
  list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
  list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
  list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
  list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
  return list_STAR_;
}();
cljs.core.transient$ = function transient$(coll) {
  return cljs.core._as_transient(coll);
};
cljs.core.persistent_BANG_ = function persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_(tcoll);
};
cljs.core.conj_BANG_ = function conj_BANG_(tcoll, val) {
  return cljs.core._conj_BANG_(tcoll, val);
};
cljs.core.assoc_BANG_ = function assoc_BANG_(tcoll, key, val) {
  return cljs.core._assoc_BANG_(tcoll, key, val);
};
cljs.core.dissoc_BANG_ = function dissoc_BANG_(tcoll, key) {
  return cljs.core._dissoc_BANG_(tcoll, key);
};
cljs.core.pop_BANG_ = function pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_(tcoll);
};
cljs.core.disj_BANG_ = function disj_BANG_(tcoll, val) {
  return cljs.core._disjoin_BANG_(tcoll, val);
};
cljs.core.apply_to = function apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq(args);
  if (argc === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var a = cljs.core._first(args__$1);
    var args__$2 = cljs.core._rest(args__$1);
    if (argc === 1) {
      if (f.cljs$core$IFn$_invoke$arity$1) {
        return f.cljs$core$IFn$_invoke$arity$1(a);
      } else {
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(a) : f.call(null, a);
      }
    } else {
      var b = cljs.core._first(args__$2);
      var args__$3 = cljs.core._rest(args__$2);
      if (argc === 2) {
        if (f.cljs$core$IFn$_invoke$arity$2) {
          return f.cljs$core$IFn$_invoke$arity$2(a, b);
        } else {
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(a, b) : f.call(null, a, b);
        }
      } else {
        var c = cljs.core._first(args__$3);
        var args__$4 = cljs.core._rest(args__$3);
        if (argc === 3) {
          if (f.cljs$core$IFn$_invoke$arity$3) {
            return f.cljs$core$IFn$_invoke$arity$3(a, b, c);
          } else {
            return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(a, b, c) : f.call(null, a, b, c);
          }
        } else {
          var d = cljs.core._first(args__$4);
          var args__$5 = cljs.core._rest(args__$4);
          if (argc === 4) {
            if (f.cljs$core$IFn$_invoke$arity$4) {
              return f.cljs$core$IFn$_invoke$arity$4(a, b, c, d);
            } else {
              return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : f.call(null, a, b, c, d);
            }
          } else {
            var e = cljs.core._first(args__$5);
            var args__$6 = cljs.core._rest(args__$5);
            if (argc === 5) {
              if (f.cljs$core$IFn$_invoke$arity$5) {
                return f.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e);
              } else {
                return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : f.call(null, a, b, c, d, e);
              }
            } else {
              var f__$1 = cljs.core._first(args__$6);
              var args__$7 = cljs.core._rest(args__$6);
              if (argc === 6) {
                if (f__$1.cljs$core$IFn$_invoke$arity$6) {
                  return f__$1.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f__$1);
                } else {
                  return f__$1.cljs$core$IFn$_invoke$arity$6 ? f__$1.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f__$1) : f__$1.call(null, a, b, c, d, e, f__$1);
                }
              } else {
                var g = cljs.core._first(args__$7);
                var args__$8 = cljs.core._rest(args__$7);
                if (argc === 7) {
                  if (f__$1.cljs$core$IFn$_invoke$arity$7) {
                    return f__$1.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f__$1, g);
                  } else {
                    return f__$1.cljs$core$IFn$_invoke$arity$7 ? f__$1.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f__$1, g) : f__$1.call(null, a, b, c, d, e, f__$1, g);
                  }
                } else {
                  var h = cljs.core._first(args__$8);
                  var args__$9 = cljs.core._rest(args__$8);
                  if (argc === 8) {
                    if (f__$1.cljs$core$IFn$_invoke$arity$8) {
                      return f__$1.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f__$1, g, h);
                    } else {
                      return f__$1.cljs$core$IFn$_invoke$arity$8 ? f__$1.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f__$1, g, h) : f__$1.call(null, a, b, c, d, e, f__$1, g, h);
                    }
                  } else {
                    var i = cljs.core._first(args__$9);
                    var args__$10 = cljs.core._rest(args__$9);
                    if (argc === 9) {
                      if (f__$1.cljs$core$IFn$_invoke$arity$9) {
                        return f__$1.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f__$1, g, h, i);
                      } else {
                        return f__$1.cljs$core$IFn$_invoke$arity$9 ? f__$1.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f__$1, g, h, i) : f__$1.call(null, a, b, c, d, e, f__$1, g, h, i);
                      }
                    } else {
                      var j = cljs.core._first(args__$10);
                      var args__$11 = cljs.core._rest(args__$10);
                      if (argc === 10) {
                        if (f__$1.cljs$core$IFn$_invoke$arity$10) {
                          return f__$1.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f__$1, g, h, i, j);
                        } else {
                          return f__$1.cljs$core$IFn$_invoke$arity$10 ? f__$1.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f__$1, g, h, i, j) : f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j);
                        }
                      } else {
                        var k = cljs.core._first(args__$11);
                        var args__$12 = cljs.core._rest(args__$11);
                        if (argc === 11) {
                          if (f__$1.cljs$core$IFn$_invoke$arity$11) {
                            return f__$1.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f__$1, g, h, i, j, k);
                          } else {
                            return f__$1.cljs$core$IFn$_invoke$arity$11 ? f__$1.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f__$1, g, h, i, j, k) : f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k);
                          }
                        } else {
                          var l = cljs.core._first(args__$12);
                          var args__$13 = cljs.core._rest(args__$12);
                          if (argc === 12) {
                            if (f__$1.cljs$core$IFn$_invoke$arity$12) {
                              return f__$1.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f__$1, g, h, i, j, k, l);
                            } else {
                              return f__$1.cljs$core$IFn$_invoke$arity$12 ? f__$1.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f__$1, g, h, i, j, k, l) : f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l);
                            }
                          } else {
                            var m = cljs.core._first(args__$13);
                            var args__$14 = cljs.core._rest(args__$13);
                            if (argc === 13) {
                              if (f__$1.cljs$core$IFn$_invoke$arity$13) {
                                return f__$1.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f__$1, g, h, i, j, k, l, m);
                              } else {
                                return f__$1.cljs$core$IFn$_invoke$arity$13 ? f__$1.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f__$1, g, h, i, j, k, l, m) : f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m);
                              }
                            } else {
                              var n = cljs.core._first(args__$14);
                              var args__$15 = cljs.core._rest(args__$14);
                              if (argc === 14) {
                                if (f__$1.cljs$core$IFn$_invoke$arity$14) {
                                  return f__$1.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n);
                                } else {
                                  return f__$1.cljs$core$IFn$_invoke$arity$14 ? f__$1.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n) : f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n);
                                }
                              } else {
                                var o = cljs.core._first(args__$15);
                                var args__$16 = cljs.core._rest(args__$15);
                                if (argc === 15) {
                                  if (f__$1.cljs$core$IFn$_invoke$arity$15) {
                                    return f__$1.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o);
                                  } else {
                                    return f__$1.cljs$core$IFn$_invoke$arity$15 ? f__$1.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o) : f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o);
                                  }
                                } else {
                                  var p = cljs.core._first(args__$16);
                                  var args__$17 = cljs.core._rest(args__$16);
                                  if (argc === 16) {
                                    if (f__$1.cljs$core$IFn$_invoke$arity$16) {
                                      return f__$1.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p);
                                    } else {
                                      return f__$1.cljs$core$IFn$_invoke$arity$16 ? f__$1.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p) : f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p);
                                    }
                                  } else {
                                    var q = cljs.core._first(args__$17);
                                    var args__$18 = cljs.core._rest(args__$17);
                                    if (argc === 17) {
                                      if (f__$1.cljs$core$IFn$_invoke$arity$17) {
                                        return f__$1.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q);
                                      } else {
                                        return f__$1.cljs$core$IFn$_invoke$arity$17 ? f__$1.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q) : f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q);
                                      }
                                    } else {
                                      var r = cljs.core._first(args__$18);
                                      var args__$19 = cljs.core._rest(args__$18);
                                      if (argc === 18) {
                                        if (f__$1.cljs$core$IFn$_invoke$arity$18) {
                                          return f__$1.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r);
                                        } else {
                                          return f__$1.cljs$core$IFn$_invoke$arity$18 ? f__$1.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r) : f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r);
                                        }
                                      } else {
                                        var s = cljs.core._first(args__$19);
                                        var args__$20 = cljs.core._rest(args__$19);
                                        if (argc === 19) {
                                          if (f__$1.cljs$core$IFn$_invoke$arity$19) {
                                            return f__$1.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s);
                                          } else {
                                            return f__$1.cljs$core$IFn$_invoke$arity$19 ? f__$1.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s) : f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s);
                                          }
                                        } else {
                                          var t = cljs.core._first(args__$20);
                                          var args__$21 = cljs.core._rest(args__$20);
                                          if (argc === 20) {
                                            if (f__$1.cljs$core$IFn$_invoke$arity$20) {
                                              return f__$1.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
                                            } else {
                                              return f__$1.cljs$core$IFn$_invoke$arity$20 ? f__$1.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
                                            }
                                          } else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function() {
  var apply = null;
  var apply__2 = function(f, args) {
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count(args, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to(f, bc, args);
      } else {
        return f.cljs$lang$applyTo(args);
      }
    } else {
      return f.apply(f, cljs.core.to_array(args));
    }
  };
  var apply__3 = function(f, x, args) {
    var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to(f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array(arglist));
    }
  };
  var apply__4 = function(f, x, y, args) {
    var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x, y, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to(f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array(arglist));
    }
  };
  var apply__5 = function(f, x, y, z, args) {
    var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x, y, z, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to(f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array(arglist));
    }
  };
  var apply__6 = function() {
    var G__23155__delegate = function(f, a, b, c, d, args) {
      var arglist = cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(args)))));
      var fixed_arity = f.cljs$lang$maxFixedArity;
      if (f.cljs$lang$applyTo) {
        var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
        if (bc <= fixed_arity) {
          return cljs.core.apply_to(f, bc, arglist);
        } else {
          return f.cljs$lang$applyTo(arglist);
        }
      } else {
        return f.apply(f, cljs.core.to_array(arglist));
      }
    };
    var G__23155 = function(f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 5) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0);
      }
      return G__23155__delegate.call(this, f, a, b, c, d, args);
    };
    G__23155.cljs$lang$maxFixedArity = 5;
    G__23155.cljs$lang$applyTo = function(arglist__23156) {
      var f = cljs.core.first(arglist__23156);
      arglist__23156 = cljs.core.next(arglist__23156);
      var a = cljs.core.first(arglist__23156);
      arglist__23156 = cljs.core.next(arglist__23156);
      var b = cljs.core.first(arglist__23156);
      arglist__23156 = cljs.core.next(arglist__23156);
      var c = cljs.core.first(arglist__23156);
      arglist__23156 = cljs.core.next(arglist__23156);
      var d = cljs.core.first(arglist__23156);
      var args = cljs.core.rest(arglist__23156);
      return G__23155__delegate(f, a, b, c, d, args);
    };
    G__23155.cljs$core$IFn$_invoke$arity$variadic = G__23155__delegate;
    return G__23155;
  }();
  apply = function(f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return apply__2.call(this, f, a);
      case 3:
        return apply__3.call(this, f, a, b);
      case 4:
        return apply__4.call(this, f, a, b, c);
      case 5:
        return apply__5.call(this, f, a, b, c, d);
      default:
        return apply__6.cljs$core$IFn$_invoke$arity$variadic(f, a, b, c, d, cljs.core.array_seq(arguments, 5));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  apply.cljs$lang$maxFixedArity = 5;
  apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
  apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
  apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
  apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
  apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
  apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
  return apply;
}();
cljs.core.vary_meta = function() {
  var vary_meta = null;
  var vary_meta__2 = function(obj, f) {
    return cljs.core.with_meta(obj, f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(cljs.core.meta(obj)) : f.call(null, cljs.core.meta(obj)));
  };
  var vary_meta__3 = function(obj, f, a) {
    return cljs.core.with_meta(obj, f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(cljs.core.meta(obj), a) : f.call(null, cljs.core.meta(obj), a));
  };
  var vary_meta__4 = function(obj, f, a, b) {
    return cljs.core.with_meta(obj, f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(cljs.core.meta(obj), a, b) : f.call(null, cljs.core.meta(obj), a, b));
  };
  var vary_meta__5 = function(obj, f, a, b, c) {
    return cljs.core.with_meta(obj, f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(cljs.core.meta(obj), a, b, c) : f.call(null, cljs.core.meta(obj), a, b, c));
  };
  var vary_meta__6 = function(obj, f, a, b, c, d) {
    return cljs.core.with_meta(obj, f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(cljs.core.meta(obj), a, b, c, d) : f.call(null, cljs.core.meta(obj), a, b, c, d));
  };
  var vary_meta__7 = function() {
    var G__23157__delegate = function(obj, f, a, b, c, d, args) {
      return cljs.core.with_meta(obj, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.meta(obj), a, b, c, cljs.core.array_seq([d, args], 0)));
    };
    var G__23157 = function(obj, f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 6) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 6), 0);
      }
      return G__23157__delegate.call(this, obj, f, a, b, c, d, args);
    };
    G__23157.cljs$lang$maxFixedArity = 6;
    G__23157.cljs$lang$applyTo = function(arglist__23158) {
      var obj = cljs.core.first(arglist__23158);
      arglist__23158 = cljs.core.next(arglist__23158);
      var f = cljs.core.first(arglist__23158);
      arglist__23158 = cljs.core.next(arglist__23158);
      var a = cljs.core.first(arglist__23158);
      arglist__23158 = cljs.core.next(arglist__23158);
      var b = cljs.core.first(arglist__23158);
      arglist__23158 = cljs.core.next(arglist__23158);
      var c = cljs.core.first(arglist__23158);
      arglist__23158 = cljs.core.next(arglist__23158);
      var d = cljs.core.first(arglist__23158);
      var args = cljs.core.rest(arglist__23158);
      return G__23157__delegate(obj, f, a, b, c, d, args);
    };
    G__23157.cljs$core$IFn$_invoke$arity$variadic = G__23157__delegate;
    return G__23157;
  }();
  vary_meta = function(obj, f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return vary_meta__2.call(this, obj, f);
      case 3:
        return vary_meta__3.call(this, obj, f, a);
      case 4:
        return vary_meta__4.call(this, obj, f, a, b);
      case 5:
        return vary_meta__5.call(this, obj, f, a, b, c);
      case 6:
        return vary_meta__6.call(this, obj, f, a, b, c, d);
      default:
        return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj, f, a, b, c, d, cljs.core.array_seq(arguments, 6));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  vary_meta.cljs$lang$maxFixedArity = 6;
  vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
  vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
  vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
  vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
  vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
  vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
  vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
  return vary_meta;
}();
cljs.core.not_EQ_ = function() {
  var not_EQ_ = null;
  var not_EQ___1 = function(x) {
    return false;
  };
  var not_EQ___2 = function(x, y) {
    return!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
  };
  var not_EQ___3 = function() {
    var G__23159__delegate = function(x, y, more) {
      return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_, x, y, more));
    };
    var G__23159 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__23159__delegate.call(this, x, y, more);
    };
    G__23159.cljs$lang$maxFixedArity = 2;
    G__23159.cljs$lang$applyTo = function(arglist__23160) {
      var x = cljs.core.first(arglist__23160);
      arglist__23160 = cljs.core.next(arglist__23160);
      var y = cljs.core.first(arglist__23160);
      var more = cljs.core.rest(arglist__23160);
      return G__23159__delegate(x, y, more);
    };
    G__23159.cljs$core$IFn$_invoke$arity$variadic = G__23159__delegate;
    return G__23159;
  }();
  not_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return not_EQ___1.call(this, x);
      case 2:
        return not_EQ___2.call(this, x, y);
      default:
        return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  not_EQ_.cljs$lang$maxFixedArity = 2;
  not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
  not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
  not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
  not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return not_EQ_;
}();
cljs.core.not_empty = function not_empty(coll) {
  if (cljs.core.seq(coll)) {
    return coll;
  } else {
    return null;
  }
};
cljs.core.every_QMARK_ = function every_QMARK_(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll) == null) {
      return true;
    } else {
      if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(cljs.core.first(coll)) : pred.call(null, cljs.core.first(coll)))) {
        var G__23161 = pred;
        var G__23162 = cljs.core.next(coll);
        pred = G__23161;
        coll = G__23162;
        continue;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return false;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.not_every_QMARK_ = function not_every_QMARK_(pred, coll) {
  return!cljs.core.every_QMARK_(pred, coll);
};
cljs.core.some = function some(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll)) {
      var or__3408__auto__ = pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(cljs.core.first(coll)) : pred.call(null, cljs.core.first(coll));
      if (cljs.core.truth_(or__3408__auto__)) {
        return or__3408__auto__;
      } else {
        var G__23163 = pred;
        var G__23164 = cljs.core.next(coll);
        pred = G__23163;
        coll = G__23164;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.not_any_QMARK_ = function not_any_QMARK_(pred, coll) {
  return cljs.core.not(cljs.core.some(pred, coll));
};
cljs.core.even_QMARK_ = function even_QMARK_(n) {
  if (cljs.core.integer_QMARK_(n)) {
    return(n & 1) === 0;
  } else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function odd_QMARK_(n) {
  return!cljs.core.even_QMARK_(n);
};
cljs.core.identity = function identity(x) {
  return x;
};
cljs.core.complement = function complement(f) {
  return function() {
    var G__23165 = null;
    var G__23165__0 = function() {
      return cljs.core.not(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
    };
    var G__23165__1 = function(x) {
      return cljs.core.not(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x));
    };
    var G__23165__2 = function(x, y) {
      return cljs.core.not(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y));
    };
    var G__23165__3 = function() {
      var G__23166__delegate = function(x, y, zs) {
        return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f, x, y, zs));
      };
      var G__23166 = function(x, y, var_args) {
        var zs = null;
        if (arguments.length > 2) {
          zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
        }
        return G__23166__delegate.call(this, x, y, zs);
      };
      G__23166.cljs$lang$maxFixedArity = 2;
      G__23166.cljs$lang$applyTo = function(arglist__23167) {
        var x = cljs.core.first(arglist__23167);
        arglist__23167 = cljs.core.next(arglist__23167);
        var y = cljs.core.first(arglist__23167);
        var zs = cljs.core.rest(arglist__23167);
        return G__23166__delegate(x, y, zs);
      };
      G__23166.cljs$core$IFn$_invoke$arity$variadic = G__23166__delegate;
      return G__23166;
    }();
    G__23165 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__23165__0.call(this);
        case 1:
          return G__23165__1.call(this, x);
        case 2:
          return G__23165__2.call(this, x, y);
        default:
          return G__23165__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__23165.cljs$lang$maxFixedArity = 2;
    G__23165.cljs$lang$applyTo = G__23165__3.cljs$lang$applyTo;
    return G__23165;
  }();
};
cljs.core.constantly = function constantly(x) {
  return function() {
    var G__23168__delegate = function(args) {
      return x;
    };
    var G__23168 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__23168__delegate.call(this, args);
    };
    G__23168.cljs$lang$maxFixedArity = 0;
    G__23168.cljs$lang$applyTo = function(arglist__23169) {
      var args = cljs.core.seq(arglist__23169);
      return G__23168__delegate(args);
    };
    G__23168.cljs$core$IFn$_invoke$arity$variadic = G__23168__delegate;
    return G__23168;
  }();
};
cljs.core.comp = function() {
  var comp = null;
  var comp__0 = function() {
    return cljs.core.identity;
  };
  var comp__1 = function(f) {
    return f;
  };
  var comp__2 = function(f, g) {
    return function() {
      var G__23170 = null;
      var G__23170__0 = function() {
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null)) : f.call(null, g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
      };
      var G__23170__1 = function(x) {
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null, x)) : f.call(null, g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null, x));
      };
      var G__23170__2 = function(x, y) {
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(x, y) : g.call(null, x, y)) : f.call(null, g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(x, y) : g.call(null, x, y));
      };
      var G__23170__3 = function(x, y, z) {
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(x, y, z) : g.call(null, x, y, z)) : f.call(null, g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(x, y, z) : g.call(null, x, y, z));
      };
      var G__23170__4 = function() {
        var G__23171__delegate = function(x, y, z, args) {
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args)) : f.call(null, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args));
        };
        var G__23171 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__23171__delegate.call(this, x, y, z, args);
        };
        G__23171.cljs$lang$maxFixedArity = 3;
        G__23171.cljs$lang$applyTo = function(arglist__23172) {
          var x = cljs.core.first(arglist__23172);
          arglist__23172 = cljs.core.next(arglist__23172);
          var y = cljs.core.first(arglist__23172);
          arglist__23172 = cljs.core.next(arglist__23172);
          var z = cljs.core.first(arglist__23172);
          var args = cljs.core.rest(arglist__23172);
          return G__23171__delegate(x, y, z, args);
        };
        G__23171.cljs$core$IFn$_invoke$arity$variadic = G__23171__delegate;
        return G__23171;
      }();
      G__23170 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__23170__0.call(this);
          case 1:
            return G__23170__1.call(this, x);
          case 2:
            return G__23170__2.call(this, x, y);
          case 3:
            return G__23170__3.call(this, x, y, z);
          default:
            return G__23170__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__23170.cljs$lang$maxFixedArity = 3;
      G__23170.cljs$lang$applyTo = G__23170__4.cljs$lang$applyTo;
      return G__23170;
    }();
  };
  var comp__3 = function(f, g, h) {
    return function() {
      var G__23173 = null;
      var G__23173__0 = function() {
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null)) : g.call(null, h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null))) : f.call(null, g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null)) : g.call(null, 
        h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null)));
      };
      var G__23173__1 = function(x) {
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(x) : h.call(null, x)) : g.call(null, h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(x) : h.call(null, x))) : f.call(null, g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(x) : h.call(null, 
        x)) : g.call(null, h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(x) : h.call(null, x)));
      };
      var G__23173__2 = function(x, y) {
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(x, y) : h.call(null, x, y)) : g.call(null, h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(x, y) : h.call(null, x, y))) : f.call(null, g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(x, 
        y) : h.call(null, x, y)) : g.call(null, h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(x, y) : h.call(null, x, y)));
      };
      var G__23173__3 = function(x, y, z) {
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(x, y, z) : h.call(null, x, y, z)) : g.call(null, h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(x, y, z) : h.call(null, x, y, z))) : f.call(null, g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(x, 
        y, z) : h.call(null, x, y, z)) : g.call(null, h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(x, y, z) : h.call(null, x, y, z)));
      };
      var G__23173__4 = function() {
        var G__23174__delegate = function(x, y, z, args) {
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args)) : g.call(null, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args))) : f.call(null, g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args)) : g.call(null, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, 
          x, y, z, args)));
        };
        var G__23174 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__23174__delegate.call(this, x, y, z, args);
        };
        G__23174.cljs$lang$maxFixedArity = 3;
        G__23174.cljs$lang$applyTo = function(arglist__23175) {
          var x = cljs.core.first(arglist__23175);
          arglist__23175 = cljs.core.next(arglist__23175);
          var y = cljs.core.first(arglist__23175);
          arglist__23175 = cljs.core.next(arglist__23175);
          var z = cljs.core.first(arglist__23175);
          var args = cljs.core.rest(arglist__23175);
          return G__23174__delegate(x, y, z, args);
        };
        G__23174.cljs$core$IFn$_invoke$arity$variadic = G__23174__delegate;
        return G__23174;
      }();
      G__23173 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__23173__0.call(this);
          case 1:
            return G__23173__1.call(this, x);
          case 2:
            return G__23173__2.call(this, x, y);
          case 3:
            return G__23173__3.call(this, x, y, z);
          default:
            return G__23173__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__23173.cljs$lang$maxFixedArity = 3;
      G__23173.cljs$lang$applyTo = G__23173__4.cljs$lang$applyTo;
      return G__23173;
    }();
  };
  var comp__4 = function() {
    var G__23176__delegate = function(f1, f2, f3, fs) {
      var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1, f2, f3, fs));
      return function() {
        var G__23177__delegate = function(args) {
          var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1), args);
          var fs__$2 = cljs.core.next(fs__$1);
          while (true) {
            if (fs__$2) {
              var G__23178 = cljs.core.first(fs__$2).call(null, ret);
              var G__23179 = cljs.core.next(fs__$2);
              ret = G__23178;
              fs__$2 = G__23179;
              continue;
            } else {
              return ret;
            }
            break;
          }
        };
        var G__23177 = function(var_args) {
          var args = null;
          if (arguments.length > 0) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
          }
          return G__23177__delegate.call(this, args);
        };
        G__23177.cljs$lang$maxFixedArity = 0;
        G__23177.cljs$lang$applyTo = function(arglist__23180) {
          var args = cljs.core.seq(arglist__23180);
          return G__23177__delegate(args);
        };
        G__23177.cljs$core$IFn$_invoke$arity$variadic = G__23177__delegate;
        return G__23177;
      }();
    };
    var G__23176 = function(f1, f2, f3, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__23176__delegate.call(this, f1, f2, f3, fs);
    };
    G__23176.cljs$lang$maxFixedArity = 3;
    G__23176.cljs$lang$applyTo = function(arglist__23181) {
      var f1 = cljs.core.first(arglist__23181);
      arglist__23181 = cljs.core.next(arglist__23181);
      var f2 = cljs.core.first(arglist__23181);
      arglist__23181 = cljs.core.next(arglist__23181);
      var f3 = cljs.core.first(arglist__23181);
      var fs = cljs.core.rest(arglist__23181);
      return G__23176__delegate(f1, f2, f3, fs);
    };
    G__23176.cljs$core$IFn$_invoke$arity$variadic = G__23176__delegate;
    return G__23176;
  }();
  comp = function(f1, f2, f3, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 0:
        return comp__0.call(this);
      case 1:
        return comp__1.call(this, f1);
      case 2:
        return comp__2.call(this, f1, f2);
      case 3:
        return comp__3.call(this, f1, f2, f3);
      default:
        return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1, f2, f3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  comp.cljs$lang$maxFixedArity = 3;
  comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
  comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
  comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
  comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
  comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
  comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
  return comp;
}();
cljs.core.partial = function() {
  var partial = null;
  var partial__1 = function(f) {
    return f;
  };
  var partial__2 = function(f, arg1) {
    return function() {
      var G__23182__delegate = function(args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, arg1, args);
      };
      var G__23182 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__23182__delegate.call(this, args);
      };
      G__23182.cljs$lang$maxFixedArity = 0;
      G__23182.cljs$lang$applyTo = function(arglist__23183) {
        var args = cljs.core.seq(arglist__23183);
        return G__23182__delegate(args);
      };
      G__23182.cljs$core$IFn$_invoke$arity$variadic = G__23182__delegate;
      return G__23182;
    }();
  };
  var partial__3 = function(f, arg1, arg2) {
    return function() {
      var G__23184__delegate = function(args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f, arg1, arg2, args);
      };
      var G__23184 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__23184__delegate.call(this, args);
      };
      G__23184.cljs$lang$maxFixedArity = 0;
      G__23184.cljs$lang$applyTo = function(arglist__23185) {
        var args = cljs.core.seq(arglist__23185);
        return G__23184__delegate(args);
      };
      G__23184.cljs$core$IFn$_invoke$arity$variadic = G__23184__delegate;
      return G__23184;
    }();
  };
  var partial__4 = function(f, arg1, arg2, arg3) {
    return function() {
      var G__23186__delegate = function(args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, arg1, arg2, arg3, args);
      };
      var G__23186 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__23186__delegate.call(this, args);
      };
      G__23186.cljs$lang$maxFixedArity = 0;
      G__23186.cljs$lang$applyTo = function(arglist__23187) {
        var args = cljs.core.seq(arglist__23187);
        return G__23186__delegate(args);
      };
      G__23186.cljs$core$IFn$_invoke$arity$variadic = G__23186__delegate;
      return G__23186;
    }();
  };
  var partial__5 = function() {
    var G__23188__delegate = function(f, arg1, arg2, arg3, more) {
      return function() {
        var G__23189__delegate = function(args) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, arg1, arg2, arg3, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more, args));
        };
        var G__23189 = function(var_args) {
          var args = null;
          if (arguments.length > 0) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
          }
          return G__23189__delegate.call(this, args);
        };
        G__23189.cljs$lang$maxFixedArity = 0;
        G__23189.cljs$lang$applyTo = function(arglist__23190) {
          var args = cljs.core.seq(arglist__23190);
          return G__23189__delegate(args);
        };
        G__23189.cljs$core$IFn$_invoke$arity$variadic = G__23189__delegate;
        return G__23189;
      }();
    };
    var G__23188 = function(f, arg1, arg2, arg3, var_args) {
      var more = null;
      if (arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__23188__delegate.call(this, f, arg1, arg2, arg3, more);
    };
    G__23188.cljs$lang$maxFixedArity = 4;
    G__23188.cljs$lang$applyTo = function(arglist__23191) {
      var f = cljs.core.first(arglist__23191);
      arglist__23191 = cljs.core.next(arglist__23191);
      var arg1 = cljs.core.first(arglist__23191);
      arglist__23191 = cljs.core.next(arglist__23191);
      var arg2 = cljs.core.first(arglist__23191);
      arglist__23191 = cljs.core.next(arglist__23191);
      var arg3 = cljs.core.first(arglist__23191);
      var more = cljs.core.rest(arglist__23191);
      return G__23188__delegate(f, arg1, arg2, arg3, more);
    };
    G__23188.cljs$core$IFn$_invoke$arity$variadic = G__23188__delegate;
    return G__23188;
  }();
  partial = function(f, arg1, arg2, arg3, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return partial__1.call(this, f);
      case 2:
        return partial__2.call(this, f, arg1);
      case 3:
        return partial__3.call(this, f, arg1, arg2);
      case 4:
        return partial__4.call(this, f, arg1, arg2, arg3);
      default:
        return partial__5.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partial.cljs$lang$maxFixedArity = 4;
  partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
  partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
  partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
  partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
  partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
  partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
  return partial;
}();
cljs.core.fnil = function() {
  var fnil = null;
  var fnil__2 = function(f, x) {
    return function() {
      var G__23192 = null;
      var G__23192__1 = function(a) {
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(a == null ? x : a) : f.call(null, a == null ? x : a);
      };
      var G__23192__2 = function(a, b) {
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(a == null ? x : a, b) : f.call(null, a == null ? x : a, b);
      };
      var G__23192__3 = function(a, b, c) {
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(a == null ? x : a, b, c) : f.call(null, a == null ? x : a, b, c);
      };
      var G__23192__4 = function() {
        var G__23193__delegate = function(a, b, c, ds) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b, c, ds);
        };
        var G__23193 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__23193__delegate.call(this, a, b, c, ds);
        };
        G__23193.cljs$lang$maxFixedArity = 3;
        G__23193.cljs$lang$applyTo = function(arglist__23194) {
          var a = cljs.core.first(arglist__23194);
          arglist__23194 = cljs.core.next(arglist__23194);
          var b = cljs.core.first(arglist__23194);
          arglist__23194 = cljs.core.next(arglist__23194);
          var c = cljs.core.first(arglist__23194);
          var ds = cljs.core.rest(arglist__23194);
          return G__23193__delegate(a, b, c, ds);
        };
        G__23193.cljs$core$IFn$_invoke$arity$variadic = G__23193__delegate;
        return G__23193;
      }();
      G__23192 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 1:
            return G__23192__1.call(this, a);
          case 2:
            return G__23192__2.call(this, a, b);
          case 3:
            return G__23192__3.call(this, a, b, c);
          default:
            return G__23192__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__23192.cljs$lang$maxFixedArity = 3;
      G__23192.cljs$lang$applyTo = G__23192__4.cljs$lang$applyTo;
      return G__23192;
    }();
  };
  var fnil__3 = function(f, x, y) {
    return function() {
      var G__23195 = null;
      var G__23195__2 = function(a, b) {
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(a == null ? x : a, b == null ? y : b) : f.call(null, a == null ? x : a, b == null ? y : b);
      };
      var G__23195__3 = function(a, b, c) {
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(a == null ? x : a, b == null ? y : b, c) : f.call(null, a == null ? x : a, b == null ? y : b, c);
      };
      var G__23195__4 = function() {
        var G__23196__delegate = function(a, b, c, ds) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c, ds);
        };
        var G__23196 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__23196__delegate.call(this, a, b, c, ds);
        };
        G__23196.cljs$lang$maxFixedArity = 3;
        G__23196.cljs$lang$applyTo = function(arglist__23197) {
          var a = cljs.core.first(arglist__23197);
          arglist__23197 = cljs.core.next(arglist__23197);
          var b = cljs.core.first(arglist__23197);
          arglist__23197 = cljs.core.next(arglist__23197);
          var c = cljs.core.first(arglist__23197);
          var ds = cljs.core.rest(arglist__23197);
          return G__23196__delegate(a, b, c, ds);
        };
        G__23196.cljs$core$IFn$_invoke$arity$variadic = G__23196__delegate;
        return G__23196;
      }();
      G__23195 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__23195__2.call(this, a, b);
          case 3:
            return G__23195__3.call(this, a, b, c);
          default:
            return G__23195__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__23195.cljs$lang$maxFixedArity = 3;
      G__23195.cljs$lang$applyTo = G__23195__4.cljs$lang$applyTo;
      return G__23195;
    }();
  };
  var fnil__4 = function(f, x, y, z) {
    return function() {
      var G__23198 = null;
      var G__23198__2 = function(a, b) {
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(a == null ? x : a, b == null ? y : b) : f.call(null, a == null ? x : a, b == null ? y : b);
      };
      var G__23198__3 = function(a, b, c) {
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(a == null ? x : a, b == null ? y : b, c == null ? z : c) : f.call(null, a == null ? x : a, b == null ? y : b, c == null ? z : c);
      };
      var G__23198__4 = function() {
        var G__23199__delegate = function(a, b, c, ds) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds);
        };
        var G__23199 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__23199__delegate.call(this, a, b, c, ds);
        };
        G__23199.cljs$lang$maxFixedArity = 3;
        G__23199.cljs$lang$applyTo = function(arglist__23200) {
          var a = cljs.core.first(arglist__23200);
          arglist__23200 = cljs.core.next(arglist__23200);
          var b = cljs.core.first(arglist__23200);
          arglist__23200 = cljs.core.next(arglist__23200);
          var c = cljs.core.first(arglist__23200);
          var ds = cljs.core.rest(arglist__23200);
          return G__23199__delegate(a, b, c, ds);
        };
        G__23199.cljs$core$IFn$_invoke$arity$variadic = G__23199__delegate;
        return G__23199;
      }();
      G__23198 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__23198__2.call(this, a, b);
          case 3:
            return G__23198__3.call(this, a, b, c);
          default:
            return G__23198__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__23198.cljs$lang$maxFixedArity = 3;
      G__23198.cljs$lang$applyTo = G__23198__4.cljs$lang$applyTo;
      return G__23198;
    }();
  };
  fnil = function(f, x, y, z) {
    switch(arguments.length) {
      case 2:
        return fnil__2.call(this, f, x);
      case 3:
        return fnil__3.call(this, f, x, y);
      case 4:
        return fnil__4.call(this, f, x, y, z);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
  fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
  fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
  return fnil;
}();
cljs.core.map_indexed = function map_indexed(f, coll) {
  var mapi = function mapi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq(coll__$1);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__4250__auto___23201 = size;
          var i_23202 = 0;
          while (true) {
            if (i_23202 < n__4250__auto___23201) {
              cljs.core.chunk_append(b, f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(idx + i_23202, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_23202)) : f.call(null, idx + i_23202, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_23202)));
              var G__23203 = i_23202 + 1;
              i_23202 = G__23203;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), mapi(idx + size, cljs.core.chunk_rest(s)));
        } else {
          return cljs.core.cons(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(idx, cljs.core.first(s)) : f.call(null, idx, cljs.core.first(s)), mapi(idx + 1, cljs.core.rest(s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return mapi(0, coll);
};
cljs.core.keep = function keep(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq(coll);
    if (temp__4092__auto__) {
      var s = temp__4092__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__4250__auto___23204 = size;
        var i_23205 = 0;
        while (true) {
          if (i_23205 < n__4250__auto___23204) {
            var x_23206 = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_23205)) : f.call(null, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_23205));
            if (x_23206 == null) {
            } else {
              cljs.core.chunk_append(b, x_23206);
            }
            var G__23207 = i_23205 + 1;
            i_23205 = G__23207;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), keep(f, cljs.core.chunk_rest(s)));
      } else {
        var x = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(cljs.core.first(s)) : f.call(null, cljs.core.first(s));
        if (x == null) {
          return keep(f, cljs.core.rest(s));
        } else {
          return cljs.core.cons(x, keep(f, cljs.core.rest(s)));
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.keep_indexed = function keep_indexed(f, coll) {
  var keepi = function keepi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq(coll__$1);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__4250__auto___23208 = size;
          var i_23209 = 0;
          while (true) {
            if (i_23209 < n__4250__auto___23208) {
              var x_23210 = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(idx + i_23209, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_23209)) : f.call(null, idx + i_23209, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_23209));
              if (x_23210 == null) {
              } else {
                cljs.core.chunk_append(b, x_23210);
              }
              var G__23211 = i_23209 + 1;
              i_23209 = G__23211;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), keepi(idx + size, cljs.core.chunk_rest(s)));
        } else {
          var x = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(idx, cljs.core.first(s)) : f.call(null, idx, cljs.core.first(s));
          if (x == null) {
            return keepi(idx + 1, cljs.core.rest(s));
          } else {
            return cljs.core.cons(x, keepi(idx + 1, cljs.core.rest(s)));
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return keepi(0, coll);
};
cljs.core.every_pred = function() {
  var every_pred = null;
  var every_pred__1 = function(p) {
    return function() {
      var ep1 = null;
      var ep1__0 = function() {
        return true;
      };
      var ep1__1 = function(x) {
        return cljs.core.boolean$(p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x));
      };
      var ep1__2 = function(x, y) {
        return cljs.core.boolean$(function() {
          var and__3396__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
          if (cljs.core.truth_(and__3396__auto__)) {
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
          } else {
            return and__3396__auto__;
          }
        }());
      };
      var ep1__3 = function(x, y, z) {
        return cljs.core.boolean$(function() {
          var and__3396__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
          if (cljs.core.truth_(and__3396__auto__)) {
            var and__3396__auto____$1 = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
            if (cljs.core.truth_(and__3396__auto____$1)) {
              return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(z) : p.call(null, z);
            } else {
              return and__3396__auto____$1;
            }
          } else {
            return and__3396__auto__;
          }
        }());
      };
      var ep1__4 = function() {
        var G__23218__delegate = function(x, y, z, args) {
          return cljs.core.boolean$(ep1.cljs$core$IFn$_invoke$arity$3(x, y, z) && cljs.core.every_QMARK_(p, args));
        };
        var G__23218 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__23218__delegate.call(this, x, y, z, args);
        };
        G__23218.cljs$lang$maxFixedArity = 3;
        G__23218.cljs$lang$applyTo = function(arglist__23219) {
          var x = cljs.core.first(arglist__23219);
          arglist__23219 = cljs.core.next(arglist__23219);
          var y = cljs.core.first(arglist__23219);
          arglist__23219 = cljs.core.next(arglist__23219);
          var z = cljs.core.first(arglist__23219);
          var args = cljs.core.rest(arglist__23219);
          return G__23218__delegate(x, y, z, args);
        };
        G__23218.cljs$core$IFn$_invoke$arity$variadic = G__23218__delegate;
        return G__23218;
      }();
      ep1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep1__0.call(this);
          case 1:
            return ep1__1.call(this, x);
          case 2:
            return ep1__2.call(this, x, y);
          case 3:
            return ep1__3.call(this, x, y, z);
          default:
            return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep1.cljs$lang$maxFixedArity = 3;
      ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
      ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
      ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
      ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
      ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
      ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep1;
    }();
  };
  var every_pred__2 = function(p1, p2) {
    return function() {
      var ep2 = null;
      var ep2__0 = function() {
        return true;
      };
      var ep2__1 = function(x) {
        return cljs.core.boolean$(function() {
          var and__3396__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
          if (cljs.core.truth_(and__3396__auto__)) {
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          } else {
            return and__3396__auto__;
          }
        }());
      };
      var ep2__2 = function(x, y) {
        return cljs.core.boolean$(function() {
          var and__3396__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
          if (cljs.core.truth_(and__3396__auto__)) {
            var and__3396__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
            if (cljs.core.truth_(and__3396__auto____$1)) {
              var and__3396__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
              if (cljs.core.truth_(and__3396__auto____$2)) {
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
              } else {
                return and__3396__auto____$2;
              }
            } else {
              return and__3396__auto____$1;
            }
          } else {
            return and__3396__auto__;
          }
        }());
      };
      var ep2__3 = function(x, y, z) {
        return cljs.core.boolean$(function() {
          var and__3396__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
          if (cljs.core.truth_(and__3396__auto__)) {
            var and__3396__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
            if (cljs.core.truth_(and__3396__auto____$1)) {
              var and__3396__auto____$2 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
              if (cljs.core.truth_(and__3396__auto____$2)) {
                var and__3396__auto____$3 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
                if (cljs.core.truth_(and__3396__auto____$3)) {
                  var and__3396__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
                  if (cljs.core.truth_(and__3396__auto____$4)) {
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
                  } else {
                    return and__3396__auto____$4;
                  }
                } else {
                  return and__3396__auto____$3;
                }
              } else {
                return and__3396__auto____$2;
              }
            } else {
              return and__3396__auto____$1;
            }
          } else {
            return and__3396__auto__;
          }
        }());
      };
      var ep2__4 = function() {
        var G__23220__delegate = function(x, y, z, args) {
          return cljs.core.boolean$(ep2.cljs$core$IFn$_invoke$arity$3(x, y, z) && cljs.core.every_QMARK_(function(p1__23212_SHARP_) {
            var and__3396__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__23212_SHARP_) : p1.call(null, p1__23212_SHARP_);
            if (cljs.core.truth_(and__3396__auto__)) {
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__23212_SHARP_) : p2.call(null, p1__23212_SHARP_);
            } else {
              return and__3396__auto__;
            }
          }, args));
        };
        var G__23220 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__23220__delegate.call(this, x, y, z, args);
        };
        G__23220.cljs$lang$maxFixedArity = 3;
        G__23220.cljs$lang$applyTo = function(arglist__23221) {
          var x = cljs.core.first(arglist__23221);
          arglist__23221 = cljs.core.next(arglist__23221);
          var y = cljs.core.first(arglist__23221);
          arglist__23221 = cljs.core.next(arglist__23221);
          var z = cljs.core.first(arglist__23221);
          var args = cljs.core.rest(arglist__23221);
          return G__23220__delegate(x, y, z, args);
        };
        G__23220.cljs$core$IFn$_invoke$arity$variadic = G__23220__delegate;
        return G__23220;
      }();
      ep2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep2__0.call(this);
          case 1:
            return ep2__1.call(this, x);
          case 2:
            return ep2__2.call(this, x, y);
          case 3:
            return ep2__3.call(this, x, y, z);
          default:
            return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep2.cljs$lang$maxFixedArity = 3;
      ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
      ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
      ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
      ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
      ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
      ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep2;
    }();
  };
  var every_pred__3 = function(p1, p2, p3) {
    return function() {
      var ep3 = null;
      var ep3__0 = function() {
        return true;
      };
      var ep3__1 = function(x) {
        return cljs.core.boolean$(function() {
          var and__3396__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
          if (cljs.core.truth_(and__3396__auto__)) {
            var and__3396__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
            if (cljs.core.truth_(and__3396__auto____$1)) {
              return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
            } else {
              return and__3396__auto____$1;
            }
          } else {
            return and__3396__auto__;
          }
        }());
      };
      var ep3__2 = function(x, y) {
        return cljs.core.boolean$(function() {
          var and__3396__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
          if (cljs.core.truth_(and__3396__auto__)) {
            var and__3396__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
            if (cljs.core.truth_(and__3396__auto____$1)) {
              var and__3396__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
              if (cljs.core.truth_(and__3396__auto____$2)) {
                var and__3396__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
                if (cljs.core.truth_(and__3396__auto____$3)) {
                  var and__3396__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
                  if (cljs.core.truth_(and__3396__auto____$4)) {
                    return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
                  } else {
                    return and__3396__auto____$4;
                  }
                } else {
                  return and__3396__auto____$3;
                }
              } else {
                return and__3396__auto____$2;
              }
            } else {
              return and__3396__auto____$1;
            }
          } else {
            return and__3396__auto__;
          }
        }());
      };
      var ep3__3 = function(x, y, z) {
        return cljs.core.boolean$(function() {
          var and__3396__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
          if (cljs.core.truth_(and__3396__auto__)) {
            var and__3396__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
            if (cljs.core.truth_(and__3396__auto____$1)) {
              var and__3396__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
              if (cljs.core.truth_(and__3396__auto____$2)) {
                var and__3396__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
                if (cljs.core.truth_(and__3396__auto____$3)) {
                  var and__3396__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
                  if (cljs.core.truth_(and__3396__auto____$4)) {
                    var and__3396__auto____$5 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
                    if (cljs.core.truth_(and__3396__auto____$5)) {
                      var and__3396__auto____$6 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
                      if (cljs.core.truth_(and__3396__auto____$6)) {
                        var and__3396__auto____$7 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
                        if (cljs.core.truth_(and__3396__auto____$7)) {
                          return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(z) : p3.call(null, z);
                        } else {
                          return and__3396__auto____$7;
                        }
                      } else {
                        return and__3396__auto____$6;
                      }
                    } else {
                      return and__3396__auto____$5;
                    }
                  } else {
                    return and__3396__auto____$4;
                  }
                } else {
                  return and__3396__auto____$3;
                }
              } else {
                return and__3396__auto____$2;
              }
            } else {
              return and__3396__auto____$1;
            }
          } else {
            return and__3396__auto__;
          }
        }());
      };
      var ep3__4 = function() {
        var G__23222__delegate = function(x, y, z, args) {
          return cljs.core.boolean$(ep3.cljs$core$IFn$_invoke$arity$3(x, y, z) && cljs.core.every_QMARK_(function(p1__23213_SHARP_) {
            var and__3396__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__23213_SHARP_) : p1.call(null, p1__23213_SHARP_);
            if (cljs.core.truth_(and__3396__auto__)) {
              var and__3396__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__23213_SHARP_) : p2.call(null, p1__23213_SHARP_);
              if (cljs.core.truth_(and__3396__auto____$1)) {
                return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(p1__23213_SHARP_) : p3.call(null, p1__23213_SHARP_);
              } else {
                return and__3396__auto____$1;
              }
            } else {
              return and__3396__auto__;
            }
          }, args));
        };
        var G__23222 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__23222__delegate.call(this, x, y, z, args);
        };
        G__23222.cljs$lang$maxFixedArity = 3;
        G__23222.cljs$lang$applyTo = function(arglist__23223) {
          var x = cljs.core.first(arglist__23223);
          arglist__23223 = cljs.core.next(arglist__23223);
          var y = cljs.core.first(arglist__23223);
          arglist__23223 = cljs.core.next(arglist__23223);
          var z = cljs.core.first(arglist__23223);
          var args = cljs.core.rest(arglist__23223);
          return G__23222__delegate(x, y, z, args);
        };
        G__23222.cljs$core$IFn$_invoke$arity$variadic = G__23222__delegate;
        return G__23222;
      }();
      ep3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep3__0.call(this);
          case 1:
            return ep3__1.call(this, x);
          case 2:
            return ep3__2.call(this, x, y);
          case 3:
            return ep3__3.call(this, x, y, z);
          default:
            return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep3.cljs$lang$maxFixedArity = 3;
      ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
      ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
      ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
      ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
      ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
      ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep3;
    }();
  };
  var every_pred__4 = function() {
    var G__23224__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
      return function() {
        var epn = null;
        var epn__0 = function() {
          return true;
        };
        var epn__1 = function(x) {
          return cljs.core.every_QMARK_(function(p1__23214_SHARP_) {
            return p1__23214_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__23214_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__23214_SHARP_.call(null, x);
          }, ps__$1);
        };
        var epn__2 = function(x, y) {
          return cljs.core.every_QMARK_(function(p1__23215_SHARP_) {
            var and__3396__auto__ = p1__23215_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__23215_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__23215_SHARP_.call(null, x);
            if (cljs.core.truth_(and__3396__auto__)) {
              return p1__23215_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__23215_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__23215_SHARP_.call(null, y);
            } else {
              return and__3396__auto__;
            }
          }, ps__$1);
        };
        var epn__3 = function(x, y, z) {
          return cljs.core.every_QMARK_(function(p1__23216_SHARP_) {
            var and__3396__auto__ = p1__23216_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__23216_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__23216_SHARP_.call(null, x);
            if (cljs.core.truth_(and__3396__auto__)) {
              var and__3396__auto____$1 = p1__23216_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__23216_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__23216_SHARP_.call(null, y);
              if (cljs.core.truth_(and__3396__auto____$1)) {
                return p1__23216_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__23216_SHARP_.cljs$core$IFn$_invoke$arity$1(z) : p1__23216_SHARP_.call(null, z);
              } else {
                return and__3396__auto____$1;
              }
            } else {
              return and__3396__auto__;
            }
          }, ps__$1);
        };
        var epn__4 = function() {
          var G__23225__delegate = function(x, y, z, args) {
            return cljs.core.boolean$(epn.cljs$core$IFn$_invoke$arity$3(x, y, z) && cljs.core.every_QMARK_(function(p1__23217_SHARP_) {
              return cljs.core.every_QMARK_(p1__23217_SHARP_, args);
            }, ps__$1));
          };
          var G__23225 = function(x, y, z, var_args) {
            var args = null;
            if (arguments.length > 3) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
            }
            return G__23225__delegate.call(this, x, y, z, args);
          };
          G__23225.cljs$lang$maxFixedArity = 3;
          G__23225.cljs$lang$applyTo = function(arglist__23226) {
            var x = cljs.core.first(arglist__23226);
            arglist__23226 = cljs.core.next(arglist__23226);
            var y = cljs.core.first(arglist__23226);
            arglist__23226 = cljs.core.next(arglist__23226);
            var z = cljs.core.first(arglist__23226);
            var args = cljs.core.rest(arglist__23226);
            return G__23225__delegate(x, y, z, args);
          };
          G__23225.cljs$core$IFn$_invoke$arity$variadic = G__23225__delegate;
          return G__23225;
        }();
        epn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return epn__0.call(this);
            case 1:
              return epn__1.call(this, x);
            case 2:
              return epn__2.call(this, x, y);
            case 3:
              return epn__3.call(this, x, y, z);
            default:
              return epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        epn.cljs$lang$maxFixedArity = 3;
        epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
        epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
        epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
        epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
        epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
        epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
        return epn;
      }();
    };
    var G__23224 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__23224__delegate.call(this, p1, p2, p3, ps);
    };
    G__23224.cljs$lang$maxFixedArity = 3;
    G__23224.cljs$lang$applyTo = function(arglist__23227) {
      var p1 = cljs.core.first(arglist__23227);
      arglist__23227 = cljs.core.next(arglist__23227);
      var p2 = cljs.core.first(arglist__23227);
      arglist__23227 = cljs.core.next(arglist__23227);
      var p3 = cljs.core.first(arglist__23227);
      var ps = cljs.core.rest(arglist__23227);
      return G__23224__delegate(p1, p2, p3, ps);
    };
    G__23224.cljs$core$IFn$_invoke$arity$variadic = G__23224__delegate;
    return G__23224;
  }();
  every_pred = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return every_pred__1.call(this, p1);
      case 2:
        return every_pred__2.call(this, p1, p2);
      case 3:
        return every_pred__3.call(this, p1, p2, p3);
      default:
        return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  every_pred.cljs$lang$maxFixedArity = 3;
  every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
  every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
  every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
  every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
  every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
  return every_pred;
}();
cljs.core.some_fn = function() {
  var some_fn = null;
  var some_fn__1 = function(p) {
    return function() {
      var sp1 = null;
      var sp1__0 = function() {
        return null;
      };
      var sp1__1 = function(x) {
        return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
      };
      var sp1__2 = function(x, y) {
        var or__3408__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
        if (cljs.core.truth_(or__3408__auto__)) {
          return or__3408__auto__;
        } else {
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
        }
      };
      var sp1__3 = function(x, y, z) {
        var or__3408__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
        if (cljs.core.truth_(or__3408__auto__)) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
          if (cljs.core.truth_(or__3408__auto____$1)) {
            return or__3408__auto____$1;
          } else {
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(z) : p.call(null, z);
          }
        }
      };
      var sp1__4 = function() {
        var G__23234__delegate = function(x, y, z, args) {
          var or__3408__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(or__3408__auto__)) {
            return or__3408__auto__;
          } else {
            return cljs.core.some(p, args);
          }
        };
        var G__23234 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__23234__delegate.call(this, x, y, z, args);
        };
        G__23234.cljs$lang$maxFixedArity = 3;
        G__23234.cljs$lang$applyTo = function(arglist__23235) {
          var x = cljs.core.first(arglist__23235);
          arglist__23235 = cljs.core.next(arglist__23235);
          var y = cljs.core.first(arglist__23235);
          arglist__23235 = cljs.core.next(arglist__23235);
          var z = cljs.core.first(arglist__23235);
          var args = cljs.core.rest(arglist__23235);
          return G__23234__delegate(x, y, z, args);
        };
        G__23234.cljs$core$IFn$_invoke$arity$variadic = G__23234__delegate;
        return G__23234;
      }();
      sp1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp1__0.call(this);
          case 1:
            return sp1__1.call(this, x);
          case 2:
            return sp1__2.call(this, x, y);
          case 3:
            return sp1__3.call(this, x, y, z);
          default:
            return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp1.cljs$lang$maxFixedArity = 3;
      sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
      sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
      sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
      sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
      sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
      sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp1;
    }();
  };
  var some_fn__2 = function(p1, p2) {
    return function() {
      var sp2 = null;
      var sp2__0 = function() {
        return null;
      };
      var sp2__1 = function(x) {
        var or__3408__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(or__3408__auto__)) {
          return or__3408__auto__;
        } else {
          return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        }
      };
      var sp2__2 = function(x, y) {
        var or__3408__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(or__3408__auto__)) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
          if (cljs.core.truth_(or__3408__auto____$1)) {
            return or__3408__auto____$1;
          } else {
            var or__3408__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
            if (cljs.core.truth_(or__3408__auto____$2)) {
              return or__3408__auto____$2;
            } else {
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
            }
          }
        }
      };
      var sp2__3 = function(x, y, z) {
        var or__3408__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(or__3408__auto__)) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
          if (cljs.core.truth_(or__3408__auto____$1)) {
            return or__3408__auto____$1;
          } else {
            var or__3408__auto____$2 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
            if (cljs.core.truth_(or__3408__auto____$2)) {
              return or__3408__auto____$2;
            } else {
              var or__3408__auto____$3 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
              if (cljs.core.truth_(or__3408__auto____$3)) {
                return or__3408__auto____$3;
              } else {
                var or__3408__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
                if (cljs.core.truth_(or__3408__auto____$4)) {
                  return or__3408__auto____$4;
                } else {
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
                }
              }
            }
          }
        }
      };
      var sp2__4 = function() {
        var G__23236__delegate = function(x, y, z, args) {
          var or__3408__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(or__3408__auto__)) {
            return or__3408__auto__;
          } else {
            return cljs.core.some(function(p1__23228_SHARP_) {
              var or__3408__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__23228_SHARP_) : p1.call(null, p1__23228_SHARP_);
              if (cljs.core.truth_(or__3408__auto____$1)) {
                return or__3408__auto____$1;
              } else {
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__23228_SHARP_) : p2.call(null, p1__23228_SHARP_);
              }
            }, args);
          }
        };
        var G__23236 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__23236__delegate.call(this, x, y, z, args);
        };
        G__23236.cljs$lang$maxFixedArity = 3;
        G__23236.cljs$lang$applyTo = function(arglist__23237) {
          var x = cljs.core.first(arglist__23237);
          arglist__23237 = cljs.core.next(arglist__23237);
          var y = cljs.core.first(arglist__23237);
          arglist__23237 = cljs.core.next(arglist__23237);
          var z = cljs.core.first(arglist__23237);
          var args = cljs.core.rest(arglist__23237);
          return G__23236__delegate(x, y, z, args);
        };
        G__23236.cljs$core$IFn$_invoke$arity$variadic = G__23236__delegate;
        return G__23236;
      }();
      sp2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp2__0.call(this);
          case 1:
            return sp2__1.call(this, x);
          case 2:
            return sp2__2.call(this, x, y);
          case 3:
            return sp2__3.call(this, x, y, z);
          default:
            return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp2.cljs$lang$maxFixedArity = 3;
      sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
      sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
      sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
      sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
      sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
      sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp2;
    }();
  };
  var some_fn__3 = function(p1, p2, p3) {
    return function() {
      var sp3 = null;
      var sp3__0 = function() {
        return null;
      };
      var sp3__1 = function(x) {
        var or__3408__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(or__3408__auto__)) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(or__3408__auto____$1)) {
            return or__3408__auto____$1;
          } else {
            return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
          }
        }
      };
      var sp3__2 = function(x, y) {
        var or__3408__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(or__3408__auto__)) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(or__3408__auto____$1)) {
            return or__3408__auto____$1;
          } else {
            var or__3408__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
            if (cljs.core.truth_(or__3408__auto____$2)) {
              return or__3408__auto____$2;
            } else {
              var or__3408__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
              if (cljs.core.truth_(or__3408__auto____$3)) {
                return or__3408__auto____$3;
              } else {
                var or__3408__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
                if (cljs.core.truth_(or__3408__auto____$4)) {
                  return or__3408__auto____$4;
                } else {
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
                }
              }
            }
          }
        }
      };
      var sp3__3 = function(x, y, z) {
        var or__3408__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(or__3408__auto__)) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(or__3408__auto____$1)) {
            return or__3408__auto____$1;
          } else {
            var or__3408__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
            if (cljs.core.truth_(or__3408__auto____$2)) {
              return or__3408__auto____$2;
            } else {
              var or__3408__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
              if (cljs.core.truth_(or__3408__auto____$3)) {
                return or__3408__auto____$3;
              } else {
                var or__3408__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
                if (cljs.core.truth_(or__3408__auto____$4)) {
                  return or__3408__auto____$4;
                } else {
                  var or__3408__auto____$5 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
                  if (cljs.core.truth_(or__3408__auto____$5)) {
                    return or__3408__auto____$5;
                  } else {
                    var or__3408__auto____$6 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
                    if (cljs.core.truth_(or__3408__auto____$6)) {
                      return or__3408__auto____$6;
                    } else {
                      var or__3408__auto____$7 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
                      if (cljs.core.truth_(or__3408__auto____$7)) {
                        return or__3408__auto____$7;
                      } else {
                        return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(z) : p3.call(null, z);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      var sp3__4 = function() {
        var G__23238__delegate = function(x, y, z, args) {
          var or__3408__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(or__3408__auto__)) {
            return or__3408__auto__;
          } else {
            return cljs.core.some(function(p1__23229_SHARP_) {
              var or__3408__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__23229_SHARP_) : p1.call(null, p1__23229_SHARP_);
              if (cljs.core.truth_(or__3408__auto____$1)) {
                return or__3408__auto____$1;
              } else {
                var or__3408__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__23229_SHARP_) : p2.call(null, p1__23229_SHARP_);
                if (cljs.core.truth_(or__3408__auto____$2)) {
                  return or__3408__auto____$2;
                } else {
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(p1__23229_SHARP_) : p3.call(null, p1__23229_SHARP_);
                }
              }
            }, args);
          }
        };
        var G__23238 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__23238__delegate.call(this, x, y, z, args);
        };
        G__23238.cljs$lang$maxFixedArity = 3;
        G__23238.cljs$lang$applyTo = function(arglist__23239) {
          var x = cljs.core.first(arglist__23239);
          arglist__23239 = cljs.core.next(arglist__23239);
          var y = cljs.core.first(arglist__23239);
          arglist__23239 = cljs.core.next(arglist__23239);
          var z = cljs.core.first(arglist__23239);
          var args = cljs.core.rest(arglist__23239);
          return G__23238__delegate(x, y, z, args);
        };
        G__23238.cljs$core$IFn$_invoke$arity$variadic = G__23238__delegate;
        return G__23238;
      }();
      sp3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp3__0.call(this);
          case 1:
            return sp3__1.call(this, x);
          case 2:
            return sp3__2.call(this, x, y);
          case 3:
            return sp3__3.call(this, x, y, z);
          default:
            return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp3.cljs$lang$maxFixedArity = 3;
      sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
      sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
      sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
      sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
      sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
      sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp3;
    }();
  };
  var some_fn__4 = function() {
    var G__23240__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
      return function() {
        var spn = null;
        var spn__0 = function() {
          return null;
        };
        var spn__1 = function(x) {
          return cljs.core.some(function(p1__23230_SHARP_) {
            return p1__23230_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__23230_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__23230_SHARP_.call(null, x);
          }, ps__$1);
        };
        var spn__2 = function(x, y) {
          return cljs.core.some(function(p1__23231_SHARP_) {
            var or__3408__auto__ = p1__23231_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__23231_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__23231_SHARP_.call(null, x);
            if (cljs.core.truth_(or__3408__auto__)) {
              return or__3408__auto__;
            } else {
              return p1__23231_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__23231_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__23231_SHARP_.call(null, y);
            }
          }, ps__$1);
        };
        var spn__3 = function(x, y, z) {
          return cljs.core.some(function(p1__23232_SHARP_) {
            var or__3408__auto__ = p1__23232_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__23232_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__23232_SHARP_.call(null, x);
            if (cljs.core.truth_(or__3408__auto__)) {
              return or__3408__auto__;
            } else {
              var or__3408__auto____$1 = p1__23232_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__23232_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__23232_SHARP_.call(null, y);
              if (cljs.core.truth_(or__3408__auto____$1)) {
                return or__3408__auto____$1;
              } else {
                return p1__23232_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__23232_SHARP_.cljs$core$IFn$_invoke$arity$1(z) : p1__23232_SHARP_.call(null, z);
              }
            }
          }, ps__$1);
        };
        var spn__4 = function() {
          var G__23241__delegate = function(x, y, z, args) {
            var or__3408__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x, y, z);
            if (cljs.core.truth_(or__3408__auto__)) {
              return or__3408__auto__;
            } else {
              return cljs.core.some(function(p1__23233_SHARP_) {
                return cljs.core.some(p1__23233_SHARP_, args);
              }, ps__$1);
            }
          };
          var G__23241 = function(x, y, z, var_args) {
            var args = null;
            if (arguments.length > 3) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
            }
            return G__23241__delegate.call(this, x, y, z, args);
          };
          G__23241.cljs$lang$maxFixedArity = 3;
          G__23241.cljs$lang$applyTo = function(arglist__23242) {
            var x = cljs.core.first(arglist__23242);
            arglist__23242 = cljs.core.next(arglist__23242);
            var y = cljs.core.first(arglist__23242);
            arglist__23242 = cljs.core.next(arglist__23242);
            var z = cljs.core.first(arglist__23242);
            var args = cljs.core.rest(arglist__23242);
            return G__23241__delegate(x, y, z, args);
          };
          G__23241.cljs$core$IFn$_invoke$arity$variadic = G__23241__delegate;
          return G__23241;
        }();
        spn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return spn__0.call(this);
            case 1:
              return spn__1.call(this, x);
            case 2:
              return spn__2.call(this, x, y);
            case 3:
              return spn__3.call(this, x, y, z);
            default:
              return spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        spn.cljs$lang$maxFixedArity = 3;
        spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
        spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
        spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
        spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
        spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
        spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
        return spn;
      }();
    };
    var G__23240 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__23240__delegate.call(this, p1, p2, p3, ps);
    };
    G__23240.cljs$lang$maxFixedArity = 3;
    G__23240.cljs$lang$applyTo = function(arglist__23243) {
      var p1 = cljs.core.first(arglist__23243);
      arglist__23243 = cljs.core.next(arglist__23243);
      var p2 = cljs.core.first(arglist__23243);
      arglist__23243 = cljs.core.next(arglist__23243);
      var p3 = cljs.core.first(arglist__23243);
      var ps = cljs.core.rest(arglist__23243);
      return G__23240__delegate(p1, p2, p3, ps);
    };
    G__23240.cljs$core$IFn$_invoke$arity$variadic = G__23240__delegate;
    return G__23240;
  }();
  some_fn = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return some_fn__1.call(this, p1);
      case 2:
        return some_fn__2.call(this, p1, p2);
      case 3:
        return some_fn__3.call(this, p1, p2, p3);
      default:
        return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  some_fn.cljs$lang$maxFixedArity = 3;
  some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
  some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
  some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
  some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
  some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
  return some_fn;
}();
cljs.core.map = function() {
  var map = null;
  var map__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq(coll);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__4250__auto___23245 = size;
          var i_23246 = 0;
          while (true) {
            if (i_23246 < n__4250__auto___23245) {
              cljs.core.chunk_append(b, f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_23246)) : f.call(null, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_23246)));
              var G__23247 = i_23246 + 1;
              i_23246 = G__23247;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
        } else {
          return cljs.core.cons(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(cljs.core.first(s)) : f.call(null, cljs.core.first(s)), map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var map__3 = function(f, c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq(c1);
      var s2 = cljs.core.seq(c2);
      if (s1 && s2) {
        return cljs.core.cons(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(cljs.core.first(s1), cljs.core.first(s2)) : f.call(null, cljs.core.first(s1), cljs.core.first(s2)), map.cljs$core$IFn$_invoke$arity$3(f, cljs.core.rest(s1), cljs.core.rest(s2)));
      } else {
        return null;
      }
    }, null, null);
  };
  var map__4 = function(f, c1, c2, c3) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq(c1);
      var s2 = cljs.core.seq(c2);
      var s3 = cljs.core.seq(c3);
      if (s1 && (s2 && s3)) {
        return cljs.core.cons(f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(cljs.core.first(s1), cljs.core.first(s2), cljs.core.first(s3)) : f.call(null, cljs.core.first(s1), cljs.core.first(s2), cljs.core.first(s3)), map.cljs$core$IFn$_invoke$arity$4(f, cljs.core.rest(s1), cljs.core.rest(s2), cljs.core.rest(s3)));
      } else {
        return null;
      }
    }, null, null);
  };
  var map__5 = function() {
    var G__23248__delegate = function(f, c1, c2, c3, colls) {
      var step = function step(cs) {
        return new cljs.core.LazySeq(null, function() {
          var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cs);
          if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
            return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
          } else {
            return null;
          }
        }, null, null);
      };
      return map.cljs$core$IFn$_invoke$arity$2(function(p1__23244_SHARP_) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, p1__23244_SHARP_);
      }, step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c3, cljs.core.array_seq([c2, c1], 0))));
    };
    var G__23248 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__23248__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__23248.cljs$lang$maxFixedArity = 4;
    G__23248.cljs$lang$applyTo = function(arglist__23249) {
      var f = cljs.core.first(arglist__23249);
      arglist__23249 = cljs.core.next(arglist__23249);
      var c1 = cljs.core.first(arglist__23249);
      arglist__23249 = cljs.core.next(arglist__23249);
      var c2 = cljs.core.first(arglist__23249);
      arglist__23249 = cljs.core.next(arglist__23249);
      var c3 = cljs.core.first(arglist__23249);
      var colls = cljs.core.rest(arglist__23249);
      return G__23248__delegate(f, c1, c2, c3, colls);
    };
    G__23248.cljs$core$IFn$_invoke$arity$variadic = G__23248__delegate;
    return G__23248;
  }();
  map = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, c1);
      case 3:
        return map__3.call(this, f, c1, c2);
      case 4:
        return map__4.call(this, f, c1, c2, c3);
      default:
        return map__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$lang$maxFixedArity = 4;
  map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  map.cljs$core$IFn$_invoke$arity$4 = map__4;
  map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
  return map;
}();
cljs.core.take = function take(n, coll) {
  return new cljs.core.LazySeq(null, function() {
    if (n > 0) {
      var temp__4092__auto__ = cljs.core.seq(coll);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        return cljs.core.cons(cljs.core.first(s), take(n - 1, cljs.core.rest(s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.drop = function drop(n, coll) {
  var step = function(n__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq(coll__$1);
      if (n__$1 > 0 && s) {
        var G__23250 = n__$1 - 1;
        var G__23251 = cljs.core.rest(s);
        n__$1 = G__23250;
        coll__$1 = G__23251;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function() {
    return step(n, coll);
  }, null, null);
};
cljs.core.drop_last = function() {
  var drop_last = null;
  var drop_last__1 = function(s) {
    return drop_last.cljs$core$IFn$_invoke$arity$2(1, s);
  };
  var drop_last__2 = function(n, s) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$3(function(x, _) {
      return x;
    }, s, cljs.core.drop(n, s));
  };
  drop_last = function(n, s) {
    switch(arguments.length) {
      case 1:
        return drop_last__1.call(this, n);
      case 2:
        return drop_last__2.call(this, n, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
  drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
  return drop_last;
}();
cljs.core.take_last = function take_last(n, coll) {
  var s = cljs.core.seq(coll);
  var lead = cljs.core.seq(cljs.core.drop(n, coll));
  while (true) {
    if (lead) {
      var G__23252 = cljs.core.next(s);
      var G__23253 = cljs.core.next(lead);
      s = G__23252;
      lead = G__23253;
      continue;
    } else {
      return s;
    }
    break;
  }
};
cljs.core.drop_while = function drop_while(pred, coll) {
  var step = function(pred__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq(coll__$1);
      if (cljs.core.truth_(function() {
        var and__3396__auto__ = s;
        if (and__3396__auto__) {
          return pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(cljs.core.first(s)) : pred__$1.call(null, cljs.core.first(s));
        } else {
          return and__3396__auto__;
        }
      }())) {
        var G__23254 = pred__$1;
        var G__23255 = cljs.core.rest(s);
        pred__$1 = G__23254;
        coll__$1 = G__23255;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function() {
    return step(pred, coll);
  }, null, null);
};
cljs.core.cycle = function cycle(coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq(coll);
    if (temp__4092__auto__) {
      var s = temp__4092__auto__;
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s, cycle(s));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.split_at = function split_at(n, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take(n, coll), cljs.core.drop(n, coll)], null);
};
cljs.core.repeat = function() {
  var repeat = null;
  var repeat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(x, repeat.cljs$core$IFn$_invoke$arity$1(x));
    }, null, null);
  };
  var repeat__2 = function(n, x) {
    return cljs.core.take(n, repeat.cljs$core$IFn$_invoke$arity$1(x));
  };
  repeat = function(n, x) {
    switch(arguments.length) {
      case 1:
        return repeat__1.call(this, n);
      case 2:
        return repeat__2.call(this, n, x);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
  repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
  return repeat;
}();
cljs.core.replicate = function replicate(n, x) {
  return cljs.core.take(n, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
};
cljs.core.repeatedly = function() {
  var repeatedly = null;
  var repeatedly__1 = function(f) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), repeatedly.cljs$core$IFn$_invoke$arity$1(f));
    }, null, null);
  };
  var repeatedly__2 = function(n, f) {
    return cljs.core.take(n, repeatedly.cljs$core$IFn$_invoke$arity$1(f));
  };
  repeatedly = function(n, f) {
    switch(arguments.length) {
      case 1:
        return repeatedly__1.call(this, n);
      case 2:
        return repeatedly__2.call(this, n, f);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
  repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
  return repeatedly;
}();
cljs.core.iterate = function iterate(f, x) {
  return cljs.core.cons(x, new cljs.core.LazySeq(null, function() {
    return iterate(f, f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x));
  }, null, null));
};
cljs.core.interleave = function() {
  var interleave = null;
  var interleave__2 = function(c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq(c1);
      var s2 = cljs.core.seq(c2);
      if (s1 && s2) {
        return cljs.core.cons(cljs.core.first(s1), cljs.core.cons(cljs.core.first(s2), interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1), cljs.core.rest(s2))));
      } else {
        return null;
      }
    }, null, null);
  };
  var interleave__3 = function() {
    var G__23256__delegate = function(c1, c2, colls) {
      return new cljs.core.LazySeq(null, function() {
        var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c2, cljs.core.array_seq([c1], 0)));
        if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
          return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
        } else {
          return null;
        }
      }, null, null);
    };
    var G__23256 = function(c1, c2, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__23256__delegate.call(this, c1, c2, colls);
    };
    G__23256.cljs$lang$maxFixedArity = 2;
    G__23256.cljs$lang$applyTo = function(arglist__23257) {
      var c1 = cljs.core.first(arglist__23257);
      arglist__23257 = cljs.core.next(arglist__23257);
      var c2 = cljs.core.first(arglist__23257);
      var colls = cljs.core.rest(arglist__23257);
      return G__23256__delegate(c1, c2, colls);
    };
    G__23256.cljs$core$IFn$_invoke$arity$variadic = G__23256__delegate;
    return G__23256;
  }();
  interleave = function(c1, c2, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return interleave__2.call(this, c1, c2);
      default:
        return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1, c2, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  interleave.cljs$lang$maxFixedArity = 2;
  interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
  interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
  interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
  return interleave;
}();
cljs.core.interpose = function interpose(sep, coll) {
  return cljs.core.drop(1, cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep), coll));
};
cljs.core.flatten1 = function flatten1(colls) {
  var cat = function cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4090__auto__ = cljs.core.seq(coll);
      if (temp__4090__auto__) {
        var coll__$1 = temp__4090__auto__;
        return cljs.core.cons(cljs.core.first(coll__$1), cat(cljs.core.rest(coll__$1), colls__$1));
      } else {
        if (cljs.core.seq(colls__$1)) {
          return cat(cljs.core.first(colls__$1), cljs.core.rest(colls__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat(null, colls);
};
cljs.core.mapcat = function() {
  var mapcat = null;
  var mapcat__2 = function(f, coll) {
    return cljs.core.flatten1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(f, coll));
  };
  var mapcat__3 = function() {
    var G__23258__delegate = function(f, coll, colls) {
      return cljs.core.flatten1(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.map, f, coll, colls));
    };
    var G__23258 = function(f, coll, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__23258__delegate.call(this, f, coll, colls);
    };
    G__23258.cljs$lang$maxFixedArity = 2;
    G__23258.cljs$lang$applyTo = function(arglist__23259) {
      var f = cljs.core.first(arglist__23259);
      arglist__23259 = cljs.core.next(arglist__23259);
      var coll = cljs.core.first(arglist__23259);
      var colls = cljs.core.rest(arglist__23259);
      return G__23258__delegate(f, coll, colls);
    };
    G__23258.cljs$core$IFn$_invoke$arity$variadic = G__23258__delegate;
    return G__23258;
  }();
  mapcat = function(f, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapcat__2.call(this, f, coll);
      default:
        return mapcat__3.cljs$core$IFn$_invoke$arity$variadic(f, coll, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat.cljs$lang$maxFixedArity = 2;
  mapcat.cljs$lang$applyTo = mapcat__3.cljs$lang$applyTo;
  mapcat.cljs$core$IFn$_invoke$arity$2 = mapcat__2;
  mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__3.cljs$core$IFn$_invoke$arity$variadic;
  return mapcat;
}();
cljs.core.filter = function filter(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq(coll);
    if (temp__4092__auto__) {
      var s = temp__4092__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__4250__auto___23260 = size;
        var i_23261 = 0;
        while (true) {
          if (i_23261 < n__4250__auto___23260) {
            if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_23261)) : pred.call(null, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_23261)))) {
              cljs.core.chunk_append(b, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_23261));
            } else {
            }
            var G__23262 = i_23261 + 1;
            i_23261 = G__23262;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), filter(pred, cljs.core.chunk_rest(s)));
      } else {
        var f = cljs.core.first(s);
        var r = cljs.core.rest(s);
        if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(f) : pred.call(null, f))) {
          return cljs.core.cons(f, filter(pred, r));
        } else {
          return filter(pred, r);
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.remove = function remove(pred, coll) {
  return cljs.core.filter(cljs.core.complement(pred), coll);
};
cljs.core.tree_seq = function tree_seq(branch_QMARK_, children, root) {
  var walk = function walk(node) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(node, cljs.core.truth_(branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(node) : branch_QMARK_.call(null, node)) ? cljs.core.mapcat.cljs$core$IFn$_invoke$arity$2(walk, children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(node) : children.call(null, node)) : null);
    }, null, null);
  };
  return walk(root);
};
cljs.core.flatten = function flatten(x) {
  return cljs.core.filter(function(p1__23263_SHARP_) {
    return!cljs.core.sequential_QMARK_(p1__23263_SHARP_);
  }, cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_, cljs.core.seq, x)));
};
cljs.core.into = function into(to, from) {
  if (!(to == null)) {
    if (function() {
      var G__23265 = to;
      if (G__23265) {
        var bit__4045__auto__ = G__23265.cljs$lang$protocol_mask$partition1$ & 4;
        if (bit__4045__auto__ || G__23265.cljs$core$IEditableCollection$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core.transient$(to), from));
    } else {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, to, from);
    }
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, from);
  }
};
cljs.core.mapv = function() {
  var mapv = null;
  var mapv__2 = function(f, coll) {
    return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
      return cljs.core.conj_BANG_(v, f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(o) : f.call(null, o));
    }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
  };
  var mapv__3 = function(f, c1, c2) {
    return cljs.core.into(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$3(f, c1, c2));
  };
  var mapv__4 = function(f, c1, c2, c3) {
    return cljs.core.into(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$4(f, c1, c2, c3));
  };
  var mapv__5 = function() {
    var G__23266__delegate = function(f, c1, c2, c3, colls) {
      return cljs.core.into(cljs.core.PersistentVector.EMPTY, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map, f, c1, c2, c3, cljs.core.array_seq([colls], 0)));
    };
    var G__23266 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__23266__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__23266.cljs$lang$maxFixedArity = 4;
    G__23266.cljs$lang$applyTo = function(arglist__23267) {
      var f = cljs.core.first(arglist__23267);
      arglist__23267 = cljs.core.next(arglist__23267);
      var c1 = cljs.core.first(arglist__23267);
      arglist__23267 = cljs.core.next(arglist__23267);
      var c2 = cljs.core.first(arglist__23267);
      arglist__23267 = cljs.core.next(arglist__23267);
      var c3 = cljs.core.first(arglist__23267);
      var colls = cljs.core.rest(arglist__23267);
      return G__23266__delegate(f, c1, c2, c3, colls);
    };
    G__23266.cljs$core$IFn$_invoke$arity$variadic = G__23266__delegate;
    return G__23266;
  }();
  mapv = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapv__2.call(this, f, c1);
      case 3:
        return mapv__3.call(this, f, c1, c2);
      case 4:
        return mapv__4.call(this, f, c1, c2, c3);
      default:
        return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapv.cljs$lang$maxFixedArity = 4;
  mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
  mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
  mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
  mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
  mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
  return mapv;
}();
cljs.core.filterv = function filterv(pred, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
    if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(o) : pred.call(null, o))) {
      return cljs.core.conj_BANG_(v, o);
    } else {
      return v;
    }
  }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.partition = function() {
  var partition = null;
  var partition__2 = function(n, coll) {
    return partition.cljs$core$IFn$_invoke$arity$3(n, n, coll);
  };
  var partition__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq(coll);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        var p = cljs.core.take(n, s);
        if (n === cljs.core.count(p)) {
          return cljs.core.cons(p, partition.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop(step, s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var partition__4 = function(n, step, pad, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq(coll);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        var p = cljs.core.take(n, s);
        if (n === cljs.core.count(p)) {
          return cljs.core.cons(p, partition.cljs$core$IFn$_invoke$arity$4(n, step, pad, cljs.core.drop(step, s)));
        } else {
          return cljs.core._conj(cljs.core.List.EMPTY, cljs.core.take(n, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p, pad)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  partition = function(n, step, pad, coll) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, step);
      case 3:
        return partition__3.call(this, n, step, pad);
      case 4:
        return partition__4.call(this, n, step, pad, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
  partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
  partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
  return partition;
}();
cljs.core.get_in = function() {
  var get_in = null;
  var get_in__2 = function(m, ks) {
    return get_in.cljs$core$IFn$_invoke$arity$3(m, ks, null);
  };
  var get_in__3 = function(m, ks, not_found) {
    var sentinel = cljs.core.lookup_sentinel;
    var m__$1 = m;
    var ks__$1 = cljs.core.seq(ks);
    while (true) {
      if (ks__$1) {
        if (!function() {
          var G__23269 = m__$1;
          if (G__23269) {
            var bit__4052__auto__ = G__23269.cljs$lang$protocol_mask$partition0$ & 256;
            if (bit__4052__auto__ || G__23269.cljs$core$ILookup$) {
              return true;
            } else {
              if (!G__23269.cljs$lang$protocol_mask$partition0$) {
                return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, G__23269);
              } else {
                return false;
              }
            }
          } else {
            return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, G__23269);
          }
        }()) {
          return not_found;
        } else {
          var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1, cljs.core.first(ks__$1), sentinel);
          if (sentinel === m__$2) {
            return not_found;
          } else {
            var G__23270 = sentinel;
            var G__23271 = m__$2;
            var G__23272 = cljs.core.next(ks__$1);
            sentinel = G__23270;
            m__$1 = G__23271;
            ks__$1 = G__23272;
            continue;
          }
        }
      } else {
        return m__$1;
      }
      break;
    }
  };
  get_in = function(m, ks, not_found) {
    switch(arguments.length) {
      case 2:
        return get_in__2.call(this, m, ks);
      case 3:
        return get_in__3.call(this, m, ks, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
  get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
  return get_in;
}();
cljs.core.assoc_in = function assoc_in(m, p__23273, v) {
  var vec__23275 = p__23273;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23275, 0, null);
  var ks = cljs.core.nthnext(vec__23275, 1);
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, v));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
  }
};
cljs.core.update_in = function() {
  var update_in = null;
  var update_in__3 = function(m, p__23276, f) {
    var vec__23286 = p__23276;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23286, 0, null);
    var ks = cljs.core.nthnext(vec__23286, 1);
    if (ks) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f));
    } else {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k)) : f.call(null, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k)));
    }
  };
  var update_in__4 = function(m, p__23277, f, a) {
    var vec__23287 = p__23277;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23287, 0, null);
    var ks = cljs.core.nthnext(vec__23287, 1);
    if (ks) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a));
    } else {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), a) : f.call(null, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), a));
    }
  };
  var update_in__5 = function(m, p__23278, f, a, b) {
    var vec__23288 = p__23278;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23288, 0, null);
    var ks = cljs.core.nthnext(vec__23288, 1);
    if (ks) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b));
    } else {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), a, b) : f.call(null, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), a, b));
    }
  };
  var update_in__6 = function(m, p__23279, f, a, b, c) {
    var vec__23289 = p__23279;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23289, 0, null);
    var ks = cljs.core.nthnext(vec__23289, 1);
    if (ks) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b, c));
    } else {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), a, b, c) : f.call(null, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), a, b, c));
    }
  };
  var update_in__7 = function() {
    var G__23291__delegate = function(m, p__23280, f, a, b, c, args) {
      var vec__23290 = p__23280;
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23290, 0, null);
      var ks = cljs.core.nthnext(vec__23290, 1);
      if (ks) {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, cljs.core.array_seq([b, c, args], 0)));
      } else {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), a, b, c, cljs.core.array_seq([args], 0)));
      }
    };
    var G__23291 = function(m, p__23280, f, a, b, c, var_args) {
      var args = null;
      if (arguments.length > 6) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 6), 0);
      }
      return G__23291__delegate.call(this, m, p__23280, f, a, b, c, args);
    };
    G__23291.cljs$lang$maxFixedArity = 6;
    G__23291.cljs$lang$applyTo = function(arglist__23292) {
      var m = cljs.core.first(arglist__23292);
      arglist__23292 = cljs.core.next(arglist__23292);
      var p__23280 = cljs.core.first(arglist__23292);
      arglist__23292 = cljs.core.next(arglist__23292);
      var f = cljs.core.first(arglist__23292);
      arglist__23292 = cljs.core.next(arglist__23292);
      var a = cljs.core.first(arglist__23292);
      arglist__23292 = cljs.core.next(arglist__23292);
      var b = cljs.core.first(arglist__23292);
      arglist__23292 = cljs.core.next(arglist__23292);
      var c = cljs.core.first(arglist__23292);
      var args = cljs.core.rest(arglist__23292);
      return G__23291__delegate(m, p__23280, f, a, b, c, args);
    };
    G__23291.cljs$core$IFn$_invoke$arity$variadic = G__23291__delegate;
    return G__23291;
  }();
  update_in = function(m, p__23280, f, a, b, c, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 3:
        return update_in__3.call(this, m, p__23280, f);
      case 4:
        return update_in__4.call(this, m, p__23280, f, a);
      case 5:
        return update_in__5.call(this, m, p__23280, f, a, b);
      case 6:
        return update_in__6.call(this, m, p__23280, f, a, b, c);
      default:
        return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m, p__23280, f, a, b, c, cljs.core.array_seq(arguments, 6));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_in.cljs$lang$maxFixedArity = 6;
  update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
  update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
  update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
  update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
  update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
  update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
  return update_in;
}();
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr;
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__3973__auto__, writer__3974__auto__, opts__3975__auto__) {
  return cljs.core._write(writer__3974__auto__, "cljs.core/VectorNode");
};
cljs.core.__GT_VectorNode = function __GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr);
};
cljs.core.pv_fresh_node = function pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
};
cljs.core.pv_aget = function pv_aget(node, idx) {
  return node.arr[idx];
};
cljs.core.pv_aset = function pv_aset(node, idx, val) {
  return node.arr[idx] = val;
};
cljs.core.pv_clone_node = function pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, cljs.core.aclone(node.arr));
};
cljs.core.tail_off = function tail_off(pv) {
  var cnt = pv.cnt;
  if (cnt < 32) {
    return 0;
  } else {
    return cnt - 1 >>> 5 << 5;
  }
};
cljs.core.new_path = function new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while (true) {
    if (ll === 0) {
      return ret;
    } else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node(edit);
      var _ = cljs.core.pv_aset(r, 0, embed);
      var G__23293 = ll - 5;
      var G__23294 = r;
      ll = G__23293;
      ret = G__23294;
      continue;
    }
    break;
  }
};
cljs.core.push_tail = function push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node(parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if (5 === level) {
    cljs.core.pv_aset(ret, subidx, tailnode);
    return ret;
  } else {
    var child = cljs.core.pv_aget(parent, subidx);
    if (!(child == null)) {
      var node_to_insert = push_tail(pv, level - 5, child, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    } else {
      var node_to_insert = cljs.core.new_path(null, level - 5, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    }
  }
};
cljs.core.vector_index_out_of_bounds = function vector_index_out_of_bounds(i, cnt) {
  throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(cnt)].join(""));
};
cljs.core.array_for = function array_for(pv, i) {
  if (0 <= i && i < pv.cnt) {
    if (i >= cljs.core.tail_off(pv)) {
      return pv.tail;
    } else {
      var node = pv.root;
      var level = pv.shift;
      while (true) {
        if (level > 0) {
          var G__23295 = cljs.core.pv_aget(node, i >>> level & 31);
          var G__23296 = level - 5;
          node = G__23295;
          level = G__23296;
          continue;
        } else {
          return node.arr;
        }
        break;
      }
    }
  } else {
    return cljs.core.vector_index_out_of_bounds(i, pv.cnt);
  }
};
cljs.core.do_assoc = function do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node(node);
  if (level === 0) {
    cljs.core.pv_aset(ret, i & 31, val);
    return ret;
  } else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset(ret, subidx, do_assoc(pv, level - 5, cljs.core.pv_aget(node, subidx), i, val));
    return ret;
  }
};
cljs.core.pop_tail = function pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = pop_tail(pv, level - 5, cljs.core.pv_aget(node, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, new_child);
      return ret;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var ret = cljs.core.pv_clone_node(node);
        cljs.core.pv_aset(ret, subidx, null);
        return ret;
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 167668511;
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core/PersistentVector");
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(self__.root) : cljs.core.tv_editable_root.call(null, self__.root), cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(self__.tail) : cljs.core.tv_editable_tail.call(null, self__.tail));
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3819__auto__ = self__.__hash;
  if (!(h__3819__auto__ == null)) {
    return h__3819__auto__;
  } else {
    var h__3819__auto____$1 = cljs.core.hash_coll(coll__$1);
    self__.__hash = h__3819__auto____$1;
    return h__3819__auto____$1;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= k && k < self__.cnt) {
    if (cljs.core.tail_off(coll__$1) <= k) {
      var new_tail = cljs.core.aclone(self__.tail);
      new_tail[k & 31] = v;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null);
    } else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc(coll__$1, self__.shift, self__.root, k, v), self__.tail, null);
    }
  } else {
    if (k === self__.cnt) {
      return cljs.core._conj(coll__$1, v);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw new Error([cljs.core.str("Index "), cljs.core.str(k), cljs.core.str(" out of bounds  [0,"), cljs.core.str(self__.cnt), cljs.core.str("]")].join(""));
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__23298 = null;
  var G__23298__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__23298__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__23298 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__23298__2.call(this, self__, k);
      case 3:
        return G__23298__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__23298;
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args23297) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args23297)));
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var step_init = [0, init];
  var i = 0;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.array_for(v__$1, i);
      var len = arr.length;
      var init__$1 = function() {
        var j = 0;
        var init__$1 = step_init[1];
        while (true) {
          if (j < len) {
            var init__$2 = f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(init__$1, j + i, arr[j]) : f.call(null, init__$1, j + i, arr[j]);
            if (cljs.core.reduced_QMARK_(init__$2)) {
              return init__$2;
            } else {
              var G__23299 = j + 1;
              var G__23300 = init__$2;
              j = G__23299;
              init__$1 = G__23300;
              continue;
            }
          } else {
            step_init[0] = len;
            step_init[1] = init__$1;
            return init__$1;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$1)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$1) : cljs.core.deref.call(null, init__$1);
      } else {
        var G__23301 = i + step_init[0];
        i = G__23301;
        continue;
      }
    } else {
      return step_init[1];
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt - cljs.core.tail_off(coll__$1) < 32) {
    var len = self__.tail.length;
    var new_tail = new Array(len + 1);
    var n__4250__auto___23302 = len;
    var i_23303 = 0;
    while (true) {
      if (i_23303 < n__4250__auto___23302) {
        new_tail[i_23303] = self__.tail[i_23303];
        var G__23304 = i_23303 + 1;
        i_23303 = G__23304;
        continue;
      } else {
      }
      break;
    }
    new_tail[len] = o;
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null);
  } else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node(null);
      cljs.core.pv_aset(n_r, 0, self__.root);
      cljs.core.pv_aset(n_r, 1, cljs.core.new_path(null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r;
    }() : cljs.core.push_tail(coll__$1, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null);
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return new cljs.core.RSeq(coll__$1, self__.cnt - 1, null);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, 0);
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, 1);
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1, f);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(v__$1, f, start);
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    return null;
  } else {
    if (self__.cnt < 32) {
      return cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1(self__.tail);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$3(coll__$1, 0, 0) : cljs.core.chunked_seq.call(null, coll__$1, 0, 0);
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, self__.cnt - 1);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  } else {
    if (1 === self__.cnt) {
      return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
    } else {
      if (1 < self__.cnt - cljs.core.tail_off(coll__$1)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var new_tail = cljs.core.array_for(coll__$1, self__.cnt - 2);
          var nr = cljs.core.pop_tail(coll__$1, self__.shift, self__.root);
          var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
          var cnt_1 = self__.cnt - 1;
          if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
            return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget(new_root, 0), new_tail, null);
          } else {
            return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null);
          }
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._assoc(coll__$1, n, val);
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(meta__$1, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICloneable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_for(coll__$1, n)[n & 31];
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, n);
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.__GT_PersistentVector = function __GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash);
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], 0);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : cljs.core.aclone(xs);
  if (l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null);
  } else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
    while (true) {
      if (i < l) {
        var G__23305 = i + 1;
        var G__23306 = cljs.core.conj_BANG_(out, xs__$1[i]);
        i = G__23305;
        out = G__23306;
        continue;
      } else {
        return cljs.core.persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.vec = function vec(coll) {
  return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core._as_transient(cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.vector = function() {
  var vector__delegate = function(args) {
    if (args instanceof cljs.core.IndexedSeq && args.i === 0) {
      return cljs.core.PersistentVector.fromArray.cljs$core$IFn$_invoke$arity$2 ? cljs.core.PersistentVector.fromArray.cljs$core$IFn$_invoke$arity$2(args.arr, true) : cljs.core.PersistentVector.fromArray.call(null, args.arr, true);
    } else {
      return cljs.core.vec(args);
    }
  };
  var vector = function(var_args) {
    var args = null;
    if (arguments.length > 0) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return vector__delegate.call(this, args);
  };
  vector.cljs$lang$maxFixedArity = 0;
  vector.cljs$lang$applyTo = function(arglist__23307) {
    var args = cljs.core.seq(arglist__23307);
    return vector__delegate(args);
  };
  vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
  return vector;
}();
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32243948;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core/ChunkedSeq");
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3819__auto__ = self__.__hash;
  if (!(h__3819__auto__ == null)) {
    return h__3819__auto__;
  } else {
    var h__3819__auto____$1 = cljs.core.hash_coll(coll__$1);
    self__.__hash = h__3819__auto____$1;
    return h__3819__auto____$1;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(self__.vec, self__.node, self__.i, self__.off + 1) : cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off + 1);
    if (s == null) {
      return null;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_next(coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(self__.vec, self__.i + self__.off, cljs.core.count(self__.vec)) : cljs.core.subvec.call(null, self__.vec, self__.i + self__.off, cljs.core.count(self__.vec)), f);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(self__.vec, self__.i + self__.off, cljs.core.count(self__.vec)) : cljs.core.subvec.call(null, self__.vec, self__.i + self__.off, cljs.core.count(self__.vec)), f, start);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.node[self__.off];
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(self__.vec, self__.node, self__.i, self__.off + 1) : cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off + 1);
    if (s == null) {
      return cljs.core.List.EMPTY;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_rest(coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var l = self__.node.length;
  var s = self__.i + l < cljs.core._count(self__.vec) ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$3(self__.vec, self__.i + l, 0) : cljs.core.chunked_seq.call(null, self__.vec, self__.i + l, 0) : null;
  if (s == null) {
    return null;
  } else {
    return s;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(self__.vec, self__.node, self__.i, self__.off, m) : cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off, m);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node, self__.off);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var l = self__.node.length;
  var s = self__.i + l < cljs.core._count(self__.vec) ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$3(self__.vec, self__.i + l, 0) : cljs.core.chunked_seq.call(null, self__.vec, self__.i + l, 0) : null;
  if (s == null) {
    return cljs.core.List.EMPTY;
  } else {
    return s;
  }
};
cljs.core.__GT_ChunkedSeq = function __GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash);
};
cljs.core.chunked_seq = function() {
  var chunked_seq = null;
  var chunked_seq__3 = function(vec, i, off) {
    return new cljs.core.ChunkedSeq(vec, cljs.core.array_for(vec, i), i, off, null, null);
  };
  var chunked_seq__4 = function(vec, node, i, off) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, null, null);
  };
  var chunked_seq__5 = function(vec, node, i, off, meta) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null);
  };
  chunked_seq = function(vec, node, i, off, meta) {
    switch(arguments.length) {
      case 3:
        return chunked_seq__3.call(this, vec, node, i);
      case 4:
        return chunked_seq__4.call(this, vec, node, i, off);
      case 5:
        return chunked_seq__5.call(this, vec, node, i, off, meta);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
  chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
  chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
  return chunked_seq;
}();
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32400159;
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core/Subvec");
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3819__auto__ = self__.__hash;
  if (!(h__3819__auto__ == null)) {
    return h__3819__auto__;
  } else {
    var h__3819__auto____$1 = cljs.core.hash_coll(coll__$1);
    self__.__hash = h__3819__auto____$1;
    return h__3819__auto____$1;
  }
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var coll__$1 = this;
  var v_pos = self__.start + key;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v, v_pos, val), self__.start, function() {
    var x__3715__auto__ = self__.end;
    var y__3716__auto__ = v_pos + 1;
    return x__3715__auto__ > y__3716__auto__ ? x__3715__auto__ : y__3716__auto__;
  }(), null) : cljs.core.build_subvec.call(null, self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v, v_pos, val), self__.start, function() {
    var x__3715__auto__ = self__.end;
    var y__3716__auto__ = v_pos + 1;
    return x__3715__auto__ > y__3716__auto__ ? x__3715__auto__ : y__3716__auto__;
  }(), null);
};
cljs.core.Subvec.prototype.call = function() {
  var G__23309 = null;
  var G__23309__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__23309__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__23309 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__23309__2.call(this, self__, k);
      case 3:
        return G__23309__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__23309;
}();
cljs.core.Subvec.prototype.apply = function(self__, args23308) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args23308)));
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(self__.meta, cljs.core._assoc_n(self__.v, self__.end, o), self__.start, self__.end + 1, null) : cljs.core.build_subvec.call(null, self__.meta, cljs.core._assoc_n(self__.v, self__.end, o), self__.start, self__.end + 1, null);
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1, f);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1, f, start__$1);
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var subvec_seq = function subvec_seq(i) {
    if (i === self__.end) {
      return null;
    } else {
      return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, i), new cljs.core.LazySeq(null, function() {
        return subvec_seq(i + 1);
      }, null, null));
    }
  };
  return subvec_seq(self__.start);
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.end - self__.start;
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.end - 1);
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  } else {
    return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(self__.meta, self__.v, self__.start, self__.end - 1, null) : cljs.core.build_subvec.call(null, self__.meta, self__.v, self__.start, self__.end - 1, null);
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._assoc(coll__$1, n, val);
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(meta__$1, self__.v, self__.start, self__.end, self__.__hash) : cljs.core.build_subvec.call(null, meta__$1, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICloneable$ = true;
cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Subvec(self__.meta, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return cljs.core.vector_index_out_of_bounds(n, self__.end - self__.start);
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.start + n);
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return not_found;
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v, self__.start + n, not_found);
  }
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.__GT_Subvec = function __GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash);
};
cljs.core.build_subvec = function build_subvec(meta, v, start, end, __hash) {
  while (true) {
    if (v instanceof cljs.core.Subvec) {
      var G__23310 = meta;
      var G__23311 = v.v;
      var G__23312 = v.start + start;
      var G__23313 = v.start + end;
      var G__23314 = __hash;
      meta = G__23310;
      v = G__23311;
      start = G__23312;
      end = G__23313;
      __hash = G__23314;
      continue;
    } else {
      var c = cljs.core.count(v);
      if (start < 0 || (end < 0 || (start > c || end > c))) {
        throw new Error("Index out of bounds");
      } else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash);
    }
    break;
  }
};
cljs.core.subvec = function() {
  var subvec = null;
  var subvec__2 = function(v, start) {
    return subvec.cljs$core$IFn$_invoke$arity$3(v, start, cljs.core.count(v));
  };
  var subvec__3 = function(v, start, end) {
    return cljs.core.build_subvec(null, v, start, end, null);
  };
  subvec = function(v, start, end) {
    switch(arguments.length) {
      case 2:
        return subvec__2.call(this, v, start);
      case 3:
        return subvec__3.call(this, v, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
  subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
  return subvec;
}();
cljs.core.tv_ensure_editable = function tv_ensure_editable(edit, node) {
  if (edit === node.edit) {
    return node;
  } else {
    return new cljs.core.VectorNode(edit, cljs.core.aclone(node.arr));
  }
};
cljs.core.tv_editable_root = function tv_editable_root(node) {
  return new cljs.core.VectorNode(function() {
    var obj23318 = {};
    return obj23318;
  }(), cljs.core.aclone(node.arr));
};
cljs.core.tv_editable_tail = function tv_editable_tail(tl) {
  var ret = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  cljs.core.array_copy(tl, 0, ret, 0, tl.length);
  return ret;
};
cljs.core.tv_push_tail = function tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable(tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset(ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget(ret, subidx);
    if (!(child == null)) {
      return tv_push_tail(tv, level - 5, child, tail_node);
    } else {
      return cljs.core.new_path(tv.root.edit, level - 5, tail_node);
    }
  }());
  return ret;
};
cljs.core.tv_pop_tail = function tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = tv_pop_tail(tv, level - 5, cljs.core.pv_aget(node__$1, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, new_child);
      return node__$1;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        cljs.core.pv_aset(node__$1, subidx, null);
        return node__$1;
      } else {
        return null;
      }
    }
  }
};
cljs.core.editable_array_for = function editable_array_for(tv, i) {
  if (0 <= i && i < tv.cnt) {
    if (i >= cljs.core.tail_off(tv)) {
      return tv.tail;
    } else {
      var root = tv.root;
      var node = root;
      var level = tv.shift;
      while (true) {
        if (level > 0) {
          var G__23319 = cljs.core.tv_ensure_editable(root.edit, cljs.core.pv_aget(node, i >>> level & 31));
          var G__23320 = level - 5;
          node = G__23319;
          level = G__23320;
          continue;
        } else {
          return node.arr;
        }
        break;
      }
    }
  } else {
    throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in transient vector of length "), cljs.core.str(tv.cnt)].join(""));
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition0$ = 275;
  this.cljs$lang$protocol_mask$partition1$ = 88;
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core/TransientVector");
};
cljs.core.TransientVector.prototype.call = function() {
  var G__23322 = null;
  var G__23322__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__23322__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__23322 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__23322__2.call(this, self__, k);
      case 3:
        return G__23322__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__23322;
}();
cljs.core.TransientVector.prototype.apply = function(self__, args23321) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args23321)));
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return cljs.core.array_for(coll__$1, n)[n & 31];
  } else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, n);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return self__.cnt;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (0 <= n && n < self__.cnt) {
      if (cljs.core.tail_off(tcoll__$1) <= n) {
        self__.tail[n & 31] = val;
        return tcoll__$1;
      } else {
        var new_root = function go(level, node) {
          var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit, node);
          if (level === 0) {
            cljs.core.pv_aset(node__$1, n & 31, val);
            return node__$1;
          } else {
            var subidx = n >>> level & 31;
            cljs.core.pv_aset(node__$1, subidx, go(level - 5, cljs.core.pv_aget(node__$1, subidx)));
            return node__$1;
          }
        }.call(null, self__.shift, self__.root);
        self__.root = new_root;
        return tcoll__$1;
      }
    } else {
      if (n === self__.cnt) {
        return cljs.core._conj_BANG_(tcoll__$1, val);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(self__.cnt)].join(""));
        } else {
          return null;
        }
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    } else {
      if (1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll__$1;
      } else {
        if ((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll__$1;
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var new_tail = cljs.core.editable_array_for(tcoll__$1, self__.cnt - 2);
            var new_root = function() {
              var nr = cljs.core.tv_pop_tail(tcoll__$1, self__.shift, self__.root);
              if (!(nr == null)) {
                return nr;
              } else {
                return new cljs.core.VectorNode(self__.root.edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
              }
            }();
            if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
              var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit, cljs.core.pv_aget(new_root, 0));
              self__.root = new_root__$1;
              self__.shift = self__.shift - 5;
              self__.cnt = self__.cnt - 1;
              self__.tail = new_tail;
              return tcoll__$1;
            } else {
              self__.root = new_root;
              self__.cnt = self__.cnt - 1;
              self__.tail = new_tail;
              return tcoll__$1;
            }
          } else {
            return null;
          }
        }
      }
    }
  } else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._assoc_n_BANG_(tcoll__$1, key, val);
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt - cljs.core.tail_off(tcoll__$1) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll__$1;
    } else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      new_tail[0] = o;
      self__.tail = new_tail;
      if (self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path(self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      } else {
        var new_root = cljs.core.tv_push_tail(tcoll__$1, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off(tcoll__$1);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy(self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.__GT_TransientVector = function __GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail);
};
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572;
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core/PersistentQueueSeq");
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3819__auto__ = self__.__hash;
  if (!(h__3819__auto__ == null)) {
    return h__3819__auto__;
  } else {
    var h__3819__auto____$1 = cljs.core.hash_coll(coll__$1);
    self__.__hash = h__3819__auto____$1;
    return h__3819__auto____$1;
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__4090__auto__ = cljs.core.next(self__.front);
  if (temp__4090__auto__) {
    var f1 = temp__4090__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null);
  } else {
    if (self__.rear == null) {
      return cljs.core._empty(coll__$1);
    } else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null);
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueSeq(meta__$1, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_PersistentQueueSeq = function __GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash);
};
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31858766;
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core/PersistentQueue");
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3819__auto__ = self__.__hash;
  if (!(h__3819__auto__ == null)) {
    return h__3819__auto__;
  } else {
    var h__3819__auto____$1 = cljs.core.hash_coll(coll__$1);
    self__.__hash = h__3819__auto____$1;
    return h__3819__auto____$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
      var or__3408__auto__ = self__.rear;
      if (cljs.core.truth_(or__3408__auto__)) {
        return or__3408__auto__;
      } else {
        return cljs.core.PersistentVector.EMPTY;
      }
    }(), o), null);
  } else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front, o), cljs.core.PersistentVector.EMPTY, null);
  }
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var rear__$1 = cljs.core.seq(self__.rear);
  if (cljs.core.truth_(function() {
    var or__3408__auto__ = self__.front;
    if (cljs.core.truth_(or__3408__auto__)) {
      return or__3408__auto__;
    } else {
      return rear__$1;
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq(rear__$1), null);
  } else {
    return null;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    var temp__4090__auto__ = cljs.core.next(self__.front);
    if (temp__4090__auto__) {
      var f1 = temp__4090__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null);
    } else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq(self__.rear), cljs.core.PersistentVector.EMPTY, null);
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.rest(cljs.core.seq(coll__$1));
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(meta__$1, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(self__.meta, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.PersistentQueue.EMPTY;
};
cljs.core.__GT_PersistentQueue = function __GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash);
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, 0);
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2097152;
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core/NeverEquiv");
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return false;
};
cljs.core.__GT_NeverEquiv = function __GT_NeverEquiv() {
  return new cljs.core.NeverEquiv;
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function equiv_map(x, y) {
  return cljs.core.boolean$(cljs.core.map_QMARK_(y) ? cljs.core.count(x) === cljs.core.count(y) ? cljs.core.every_QMARK_(cljs.core.identity, cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(xkv) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y, cljs.core.first(xkv), cljs.core.never_equiv), cljs.core.second(xkv));
  }, x)) : null : null);
};
cljs.core.scan_array = function scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while (true) {
    if (i < len) {
      if (k === array[i]) {
        return i;
      } else {
        var G__23323 = i + incr;
        i = G__23323;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.obj_map_compare_keys = function obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash(a);
  var b__$1 = cljs.core.hash(b);
  if (a__$1 < b__$1) {
    return-1;
  } else {
    if (a__$1 > b__$1) {
      return 1;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return 0;
      } else {
        return null;
      }
    }
  }
};
cljs.core.obj_map__GT_hash_map = function obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta(m);
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var k__$1 = ks[i];
      var G__23324 = i + 1;
      var G__23325 = cljs.core.assoc_BANG_(out, k__$1, so[k__$1]);
      i = G__23324;
      out = G__23325;
      continue;
    } else {
      return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_(out, k, v)), mm);
    }
    break;
  }
};
cljs.core.obj_clone = function obj_clone(obj, ks) {
  var new_obj = function() {
    var obj23329 = {};
    return obj23329;
  }();
  var l = ks.length;
  var i_23330 = 0;
  while (true) {
    if (i_23330 < l) {
      var k_23331 = ks[i_23330];
      new_obj[k_23331] = obj[k_23331];
      var G__23332 = i_23330 + 1;
      i_23330 = G__23332;
      continue;
    } else {
    }
    break;
  }
  return new_obj;
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core/ObjMap");
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.transient$(cljs.core.into(cljs.core.PersistentHashMap.EMPTY, coll__$1));
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3819__auto__ = self__.__hash;
  if (!(h__3819__auto__ == null)) {
    return h__3819__auto__;
  } else {
    var h__3819__auto____$1 = cljs.core.hash_imap(coll__$1);
    self__.__hash = h__3819__auto____$1;
    return h__3819__auto____$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    return self__.strobj[k];
  } else {
    return not_found;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k)) {
    if (self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD || self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD) {
      return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
    } else {
      if (!(cljs.core.scan_array(1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        new_strobj[k] = v;
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null);
      } else {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        var new_keys = cljs.core.aclone(self__.keys);
        new_strobj[k] = v;
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
      }
    }
  } else {
    return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__23335 = null;
  var G__23335__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__23335__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__23335 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__23335__2.call(this, self__, k);
      case 3:
        return G__23335__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__23335;
}();
cljs.core.ObjMap.prototype.apply = function(self__, args23334) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args23334)));
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while (true) {
    if (cljs.core.seq(keys__$1)) {
      var k = cljs.core.first(keys__$1);
      var init__$2 = f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(init__$1, k, self__.strobj[k]) : f.call(null, init__$1, k, self__.strobj[k]);
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__23336 = cljs.core.rest(keys__$1);
        var G__23337 = init__$2;
        keys__$1 = G__23336;
        init__$1 = G__23337;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.keys.length > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__23333_SHARP_) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__23333_SHARP_, self__.strobj[p1__23333_SHARP_]], null);
    }, self__.keys.sort(cljs.core.obj_map_compare_keys));
  } else {
    return null;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.keys.length;
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ObjMap(meta__$1, self__.keys, self__.strobj, self__.update_count, self__.__hash);
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.ObjMap.EMPTY, self__.meta);
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    var new_keys = cljs.core.aclone(self__.keys);
    var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array(1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
  } else {
    return coll__$1;
  }
};
cljs.core.__GT_ObjMap = function __GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash);
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], function() {
  var obj23339 = {};
  return obj23339;
}(), 0, 0);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null);
};
cljs.core.array_map_index_of_nil_QMARK_ = function array_map_index_of_nil_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (arr[i] == null) {
        return i;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__23340 = i + 2;
          i = G__23340;
          continue;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_keyword_QMARK_ = function array_map_index_of_keyword_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.fqn;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Keyword && kstr === k_SINGLEQUOTE_.fqn;
      }()) {
        return i;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__23341 = i + 2;
          i = G__23341;
          continue;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_symbol_QMARK_ = function array_map_index_of_symbol_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Symbol && kstr === k_SINGLEQUOTE_.str;
      }()) {
        return i;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__23342 = i + 2;
          i = G__23342;
          continue;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_identical_QMARK_ = function array_map_index_of_identical_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (k === arr[i]) {
        return i;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__23343 = i + 2;
          i = G__23343;
          continue;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_equiv_QMARK_ = function array_map_index_of_equiv_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, arr[i])) {
        return i;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__23344 = i + 2;
          i = G__23344;
          continue;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.array_map_index_of = function array_map_index_of(m, k) {
  var arr = m.arr;
  if (k instanceof cljs.core.Keyword) {
    return cljs.core.array_map_index_of_keyword_QMARK_(arr, m, k);
  } else {
    if (goog.isString(k) || typeof k === "number") {
      return cljs.core.array_map_index_of_identical_QMARK_(arr, m, k);
    } else {
      if (k instanceof cljs.core.Symbol) {
        return cljs.core.array_map_index_of_symbol_QMARK_(arr, m, k);
      } else {
        if (k == null) {
          return cljs.core.array_map_index_of_nil_QMARK_(arr, m, k);
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            return cljs.core.array_map_index_of_equiv_QMARK_(arr, m, k);
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.core.array_map_extend_kv = function array_map_extend_kv(m, k, v) {
  var arr = m.arr;
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_23345 = 0;
  while (true) {
    if (i_23345 < l) {
      narr[i_23345] = arr[i_23345];
      var G__23346 = i_23345 + 1;
      i_23345 = G__23346;
      continue;
    } else {
    }
    break;
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr;
};
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core/PersistentArrayMapSeq");
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll(coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return(self__.arr.length - self__.i) / 2;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.__GT_PersistentArrayMapSeq = function __GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
};
cljs.core.persistent_array_map_seq = function persistent_array_map_seq(arr, i, _meta) {
  if (i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core/PersistentArrayMap");
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientArrayMap(function() {
    var obj23349 = {};
    return obj23349;
  }(), self__.arr.length, cljs.core.aclone(self__.arr));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3819__auto__ = self__.__hash;
  if (!(h__3819__auto__ == null)) {
    return h__3819__auto__;
  } else {
    var h__3819__auto____$1 = cljs.core.hash_imap(coll__$1);
    self__.__hash = h__3819__auto____$1;
    return h__3819__auto____$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    return not_found;
  } else {
    return self__.arr[idx + 1];
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    if (self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv(coll__$1, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null);
    } else {
      return cljs.core._with_meta(cljs.core._assoc(cljs.core.into(cljs.core.PersistentHashMap.EMPTY, coll__$1), k, v), self__.meta);
    }
  } else {
    if (v === self__.arr[idx + 1]) {
      return coll__$1;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var arr__$1 = function() {
          var G__23350 = cljs.core.aclone(self__.arr);
          G__23350[idx + 1] = v;
          return G__23350;
        }();
        return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null);
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(cljs.core.array_map_index_of(coll__$1, k) === -1);
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__23351 = null;
  var G__23351__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__23351__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__23351 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__23351__2.call(this, self__, k);
      case 3:
        return G__23351__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__23351;
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args23347) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args23347)));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(init__$1, self__.arr[i], self__.arr[i + 1]) : f.call(null, init__$1, self__.arr[i], self__.arr[i + 1]);
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__23352 = i + 2;
        var G__23353 = init__$2;
        i = G__23352;
        init__$1 = G__23353;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.persistent_array_map_seq(self__.arr, 0, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMap(meta__$1, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY, self__.meta);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if (new_len === 0) {
      return cljs.core._empty(coll__$1);
    } else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while (true) {
        if (s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null);
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, self__.arr[s])) {
            var G__23354 = s + 2;
            var G__23355 = d;
            s = G__23354;
            d = G__23355;
            continue;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              new_arr[d] = self__.arr[s];
              new_arr[d + 1] = self__.arr[s + 1];
              var G__23356 = s + 2;
              var G__23357 = d + 2;
              s = G__23356;
              d = G__23357;
              continue;
            } else {
              return null;
            }
          }
        }
        break;
      }
    }
  } else {
    return coll__$1;
  }
};
cljs.core.__GT_PersistentArrayMap = function __GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash);
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], null);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone, no_check) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  if (no_check) {
    var cnt = arr__$1.length / 2;
    return new cljs.core.PersistentArrayMap(null, cnt, arr__$1, null);
  } else {
    var len = arr__$1.length;
    var i = 0;
    var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__23358 = i + 2;
        var G__23359 = cljs.core._assoc_BANG_(ret, arr__$1[i], arr__$1[i + 1]);
        i = G__23358;
        ret = G__23359;
        continue;
      } else {
        return cljs.core._persistent_BANG_(ret);
      }
      break;
    }
  }
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core/TransientArrayMap");
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__23360_23362 = self__.arr;
      G__23360_23362.pop();
      G__23360_23362.pop();
      self__.len = self__.len - 2;
    } else {
    }
    return tcoll__$1;
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx === -1) {
      if (self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll__$1;
      } else {
        return cljs.core.assoc_BANG_(cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(self__.len, self__.arr) : cljs.core.array__GT_transient_hash_map.call(null, self__.len, self__.arr), key, val);
      }
    } else {
      if (val === self__.arr[idx + 1]) {
        return tcoll__$1;
      } else {
        self__.arr[idx + 1] = val;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    if (function() {
      var G__23361 = o;
      if (G__23361) {
        var bit__4052__auto__ = G__23361.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4052__auto__ || G__23361.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__23361.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__23361);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__23361);
      }
    }()) {
      return cljs.core._assoc_BANG_(tcoll__$1, cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(o) : cljs.core.key.call(null, o), cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(o) : cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq(o);
      var tcoll__$2 = tcoll__$1;
      while (true) {
        var temp__4090__auto__ = cljs.core.first(es);
        if (cljs.core.truth_(temp__4090__auto__)) {
          var e = temp__4090__auto__;
          var G__23363 = cljs.core.next(es);
          var G__23364 = cljs.core._assoc_BANG_(tcoll__$2, cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.key.call(null, e), cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.val.call(null, e));
          es = G__23363;
          tcoll__$2 = G__23364;
          continue;
        } else {
          return tcoll__$2;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot(self__.len, 2), self__.arr, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1, k, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, k);
    if (idx === -1) {
      return not_found;
    } else {
      return self__.arr[idx + 1];
    }
  } else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    return cljs.core.quot(self__.len, 2);
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.__GT_TransientArrayMap = function __GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr);
};
cljs.core.array__GT_transient_hash_map = function array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while (true) {
    if (i < len) {
      var G__23365 = cljs.core.assoc_BANG_(out, arr[i], arr[i + 1]);
      var G__23366 = i + 2;
      out = G__23365;
      i = G__23366;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.Box = function(val) {
  this.val = val;
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__3973__auto__, writer__3974__auto__, opts__3975__auto__) {
  return cljs.core._write(writer__3974__auto__, "cljs.core/Box");
};
cljs.core.__GT_Box = function __GT_Box(val) {
  return new cljs.core.Box(val);
};
cljs.core.key_test = function key_test(key, other) {
  if (key === other) {
    return true;
  } else {
    if (cljs.core.keyword_identical_QMARK_(key, other)) {
      return true;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key, other);
      } else {
        return null;
      }
    }
  }
};
cljs.core.mask = function mask(hash, shift) {
  return hash >>> shift & 31;
};
cljs.core.clone_and_set = function() {
  var clone_and_set = null;
  var clone_and_set__3 = function(arr, i, a) {
    var G__23369 = cljs.core.aclone(arr);
    G__23369[i] = a;
    return G__23369;
  };
  var clone_and_set__5 = function(arr, i, a, j, b) {
    var G__23370 = cljs.core.aclone(arr);
    G__23370[i] = a;
    G__23370[j] = b;
    return G__23370;
  };
  clone_and_set = function(arr, i, a, j, b) {
    switch(arguments.length) {
      case 3:
        return clone_and_set__3.call(this, arr, i, a);
      case 5:
        return clone_and_set__5.call(this, arr, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
  clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
  return clone_and_set;
}();
cljs.core.remove_pair = function remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy(arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy(arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr;
};
cljs.core.bitmap_indexed_node_index = function bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count(bitmap & bit - 1);
};
cljs.core.bitpos = function bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31);
};
cljs.core.edit_and_set = function() {
  var edit_and_set = null;
  var edit_and_set__4 = function(inode, edit, i, a) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    return editable;
  };
  var edit_and_set__6 = function(inode, edit, i, a, j, b) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    editable.arr[j] = b;
    return editable;
  };
  edit_and_set = function(inode, edit, i, a, j, b) {
    switch(arguments.length) {
      case 4:
        return edit_and_set__4.call(this, inode, edit, i, a);
      case 6:
        return edit_and_set__6.call(this, inode, edit, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
  edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
  return edit_and_set;
}();
cljs.core.inode_kv_reduce = function inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if (!(k == null)) {
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(init__$1, k, arr[i + 1]) : f.call(null, init__$1, k, arr[i + 1]);
        } else {
          var node = arr[i + 1];
          if (!(node == null)) {
            return node.kv_reduce(f, init__$1);
          } else {
            return init__$1;
          }
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__23371 = i + 2;
        var G__23372 = init__$2;
        i = G__23371;
        init__$1 = G__23372;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr;
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core/BitmapIndexedNode");
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if (self__.bitmap === bit) {
    return null;
  } else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy(earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable;
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward(earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable;
    } else {
      if (n >= 16) {
        var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_23373 = 0;
        var j_23374 = 0;
        while (true) {
          if (i_23373 < 32) {
            if ((self__.bitmap >>> i_23373 & 1) === 0) {
              var G__23375 = i_23373 + 1;
              var G__23376 = j_23374;
              i_23373 = G__23375;
              j_23374 = G__23376;
              continue;
            } else {
              nodes[i_23373] = !(self__.arr[j_23374] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash(self__.arr[j_23374]), self__.arr[j_23374], self__.arr[j_23374 + 1], added_leaf_QMARK_) : self__.arr[j_23374 + 1];
              var G__23377 = i_23373 + 1;
              var G__23378 = j_23374 + 2;
              i_23373 = G__23377;
              j_23374 = G__23378;
              continue;
            }
          } else {
          }
          break;
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var new_arr = new Array(2 * (n + 4));
          cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
          new_arr[2 * idx] = key;
          new_arr[2 * idx + 1] = val;
          cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
          added_leaf_QMARK_.val = true;
          var editable = inode.ensure_editable(edit__$1);
          editable.arr = new_arr;
          editable.bitmap = editable.bitmap | bit;
          return editable;
        } else {
          return null;
        }
      }
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, val);
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          added_leaf_QMARK_.val = true;
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(edit__$1, shift + 5, key_or_nil, val_or_node, hash, key, val) : cljs.core.create_node.call(null, edit__$1, shift + 5, key_or_nil, val_or_node, hash, key, val));
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(self__.arr) : cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return inode.edit_and_remove_pair(edit__$1, bit, idx);
            } else {
              return null;
            }
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        removed_leaf_QMARK_[0] = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return inode;
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var n = cljs.core.bit_count(self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr);
  }
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil, val_or_node], null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return not_found;
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
            } else {
              return null;
            }
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return inode;
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (n >= 16) {
      var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_23379 = 0;
      var j_23380 = 0;
      while (true) {
        if (i_23379 < 32) {
          if ((self__.bitmap >>> i_23379 & 1) === 0) {
            var G__23381 = i_23379 + 1;
            var G__23382 = j_23380;
            i_23379 = G__23381;
            j_23380 = G__23382;
            continue;
          } else {
            nodes[i_23379] = !(self__.arr[j_23380] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash(self__.arr[j_23380]), self__.arr[j_23380], self__.arr[j_23380 + 1], added_leaf_QMARK_) : self__.arr[j_23380 + 1];
            var G__23383 = i_23379 + 1;
            var G__23384 = j_23380 + 2;
            i_23379 = G__23383;
            j_23380 = G__23384;
            continue;
          }
        } else {
        }
        break;
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes);
    } else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr);
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, val));
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          added_leaf_QMARK_.val = true;
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(shift + 5, key_or_nil, val_or_node, hash, key, val) : cljs.core.create_node.call(null, shift + 5, key_or_nil, val_or_node, hash, key, val)));
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return val_or_node;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return not_found;
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.__GT_BitmapIndexedNode = function __GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr);
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, []);
cljs.core.pack_array_node = function pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = 2 * (array_node.cnt - 1);
  var new_arr = new Array(len);
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while (true) {
    if (i < len) {
      if (!(i === idx) && !(arr[i] == null)) {
        new_arr[j] = arr[i];
        var G__23385 = i + 1;
        var G__23386 = j + 2;
        var G__23387 = bitmap | 1 << i;
        i = G__23385;
        j = G__23386;
        bitmap = G__23387;
        continue;
      } else {
        var G__23388 = i + 1;
        var G__23389 = j;
        var G__23390 = bitmap;
        i = G__23388;
        j = G__23389;
        bitmap = G__23390;
        continue;
      }
    } else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr);
    }
    break;
  }
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core/ArrayNode");
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable;
  } else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(self__.arr) : cljs.core.create_array_node_seq.call(null, self__.arr);
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return inode;
  } else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, edit__$1, idx);
        } else {
          var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable;
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    return new cljs.core.ArrayNode(e, self__.cnt, cljs.core.aclone(self__.arr));
  }
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var node = self__.arr[i];
      if (!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if (cljs.core.reduced_QMARK_(init__$2)) {
          return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
        } else {
          var G__23391 = i + 1;
          var G__23392 = init__$2;
          i = G__23391;
          init__$1 = G__23392;
          continue;
        }
      } else {
        var G__23393 = i + 1;
        var G__23394 = init__$1;
        i = G__23393;
        init__$1 = G__23394;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, null, idx);
        } else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
        } else {
          return null;
        }
      }
    }
  } else {
    return inode;
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)));
  } else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
    }
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.__GT_ArrayNode = function __GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr);
};
cljs.core.hash_collision_node_find_index = function hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while (true) {
    if (i < lim) {
      if (cljs.core.key_test(key, arr[i])) {
        return i;
      } else {
        var G__23395 = i + 2;
        i = G__23395;
        continue;
      }
    } else {
      return-1;
    }
    break;
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core/HashCollisionNode");
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      if (self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable;
      } else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr);
      }
    } else {
      if (self__.arr[idx + 1] === val) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx + 1, val);
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(self__.arr) : cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    removed_leaf_QMARK_[0] = true;
    if (self__.cnt === 1) {
      return null;
    } else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable;
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr);
  }
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[idx], self__.arr[idx + 1]], null);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found;
      } else {
        return null;
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    if (self__.cnt === 1) {
      return null;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair(self__.arr, cljs.core.quot(idx, 2)));
      } else {
        return null;
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      var len = 2 * self__.cnt;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr);
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[idx], val)) {
        return inode;
      } else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx + 1, val));
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return self__.arr[idx + 1];
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found;
      } else {
        return null;
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode;
  } else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array);
  }
};
cljs.core.__GT_HashCollisionNode = function __GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr);
};
cljs.core.create_node = function() {
  var create_node = null;
  var create_node__6 = function(shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash(key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  var create_node__7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash(key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  create_node = function(edit, shift, key1, val1, key2hash, key2, val2) {
    switch(arguments.length) {
      case 6:
        return create_node__6.call(this, edit, shift, key1, val1, key2hash, key2);
      case 7:
        return create_node__7.call(this, edit, shift, key1, val1, key2hash, key2, val2);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
  create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
  return create_node;
}();
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core/NodeSeq");
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3819__auto__ = self__.__hash;
  if (!(h__3819__auto__ == null)) {
    return h__3819__auto__;
  } else {
    var h__3819__auto____$1 = cljs.core.hash_coll(coll__$1);
    self__.__hash = h__3819__auto____$1;
    return h__3819__auto____$1;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.nodes[self__.i], self__.nodes[self__.i + 1]], null);
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(self__.nodes, self__.i + 2, null) : cljs.core.create_inode_seq.call(null, self__.nodes, self__.i + 2, null);
  } else {
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(self__.nodes, self__.i, cljs.core.next(self__.s)) : cljs.core.create_inode_seq.call(null, self__.nodes, self__.i, cljs.core.next(self__.s));
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_NodeSeq = function __GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.create_inode_seq = function() {
  var create_inode_seq = null;
  var create_inode_seq__1 = function(nodes) {
    return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes, 0, null);
  };
  var create_inode_seq__3 = function(nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          if (!(nodes[j] == null)) {
            return new cljs.core.NodeSeq(null, nodes, j, null, null);
          } else {
            var temp__4090__auto__ = nodes[j + 1];
            if (cljs.core.truth_(temp__4090__auto__)) {
              var node = temp__4090__auto__;
              var temp__4090__auto____$1 = node.inode_seq();
              if (cljs.core.truth_(temp__4090__auto____$1)) {
                var node_seq = temp__4090__auto____$1;
                return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null);
              } else {
                var G__23396 = j + 2;
                j = G__23396;
                continue;
              }
            } else {
              var G__23397 = j + 2;
              j = G__23397;
              continue;
            }
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.NodeSeq(null, nodes, i, s, null);
    }
  };
  create_inode_seq = function(nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_inode_seq__1.call(this, nodes);
      case 3:
        return create_inode_seq__3.call(this, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
  create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
  return create_inode_seq;
}();
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core/ArrayNodeSeq");
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3819__auto__ = self__.__hash;
  if (!(h__3819__auto__ == null)) {
    return h__3819__auto__;
  } else {
    var h__3819__auto____$1 = cljs.core.hash_coll(coll__$1);
    self__.__hash = h__3819__auto____$1;
    return h__3819__auto____$1;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.s);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null, self__.nodes, self__.i, cljs.core.next(self__.s)) : cljs.core.create_array_node_seq.call(null, null, self__.nodes, self__.i, cljs.core.next(self__.s));
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_ArrayNodeSeq = function __GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.create_array_node_seq = function() {
  var create_array_node_seq = null;
  var create_array_node_seq__1 = function(nodes) {
    return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null, nodes, 0, null);
  };
  var create_array_node_seq__4 = function(meta, nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          var temp__4090__auto__ = nodes[j];
          if (cljs.core.truth_(temp__4090__auto__)) {
            var nj = temp__4090__auto__;
            var temp__4090__auto____$1 = nj.inode_seq();
            if (cljs.core.truth_(temp__4090__auto____$1)) {
              var ns = temp__4090__auto____$1;
              return new cljs.core.ArrayNodeSeq(meta, nodes, j + 1, ns, null);
            } else {
              var G__23398 = j + 1;
              j = G__23398;
              continue;
            }
          } else {
            var G__23399 = j + 1;
            j = G__23399;
            continue;
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null);
    }
  };
  create_array_node_seq = function(meta, nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_array_node_seq__1.call(this, meta);
      case 4:
        return create_array_node_seq__4.call(this, meta, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
  create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
  return create_array_node_seq;
}();
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core/PersistentHashMap");
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashMap(function() {
    var obj23402 = {};
    return obj23402;
  }(), self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3819__auto__ = self__.__hash;
  if (!(h__3819__auto__ == null)) {
    return h__3819__auto__;
  } else {
    var h__3819__auto____$1 = cljs.core.hash_imap(coll__$1);
    self__.__hash = h__3819__auto____$1;
    return h__3819__auto____$1;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_ && v === self__.nil_val) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null);
    }
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
    if (new_root === self__.root) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    return self__.has_nil_QMARK_;
  } else {
    if (self__.root == null) {
      return false;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return!(self__.root.inode_lookup(0, cljs.core.hash(k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel);
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__23403 = null;
  var G__23403__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__23403__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__23403 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__23403__2.call(this, self__, k);
      case 3:
        return G__23403__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__23403;
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args23400) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args23400)));
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var init__$1 = self__.has_nil_QMARK_ ? f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(init, null, self__.nil_val) : f.call(null, init, null, self__.nil_val) : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$1) : cljs.core.deref.call(null, init__$1);
  } else {
    if (!(self__.root == null)) {
      return self__.root.kv_reduce(f, init__$1);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return init__$1;
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if (self__.has_nil_QMARK_) {
      return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, self__.nil_val], null), s);
    } else {
      return s;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashMap(meta__$1, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashMap(self__.meta, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY, self__.meta);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null);
    } else {
      return coll__$1;
    }
  } else {
    if (self__.root == null) {
      return coll__$1;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var new_root = self__.root.inode_without(0, cljs.core.hash(k), k);
        if (new_root === self__.root) {
          return coll__$1;
        } else {
          return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
        }
      } else {
        return null;
      }
    }
  }
};
cljs.core.__GT_PersistentHashMap = function __GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash);
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, 0);
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__23404 = i + 1;
      var G__23405 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null, ks[i], vs[i]);
      i = G__23404;
      out = G__23405;
      continue;
    } else {
      return cljs.core.persistent_BANG_(out);
    }
    break;
  }
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core/TransientHashMap");
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.without_BANG_(key);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.assoc_BANG_(key, val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.conj_BANG_(val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.persistent_BANG_();
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return null;
    }
  } else {
    if (self__.root == null) {
      return null;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.edit) {
    return self__.count;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (function() {
      var G__23406 = o;
      if (G__23406) {
        var bit__4052__auto__ = G__23406.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4052__auto__ || G__23406.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__23406.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__23406);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__23406);
      }
    }()) {
      return tcoll.assoc_BANG_(cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(o) : cljs.core.key.call(null, o), cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(o) : cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq(o);
      var tcoll__$1 = tcoll;
      while (true) {
        var temp__4090__auto__ = cljs.core.first(es);
        if (cljs.core.truth_(temp__4090__auto__)) {
          var e = temp__4090__auto__;
          var G__23407 = cljs.core.next(es);
          var G__23408 = tcoll__$1.assoc_BANG_(cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.key.call(null, e), cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.val.call(null, e));
          es = G__23407;
          tcoll__$1 = G__23408;
          continue;
        } else {
          return tcoll__$1;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.nil_val === v) {
      } else {
        self__.nil_val = v;
      }
      if (self__.has_nil_QMARK_) {
      } else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true;
      }
      return tcoll;
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
      if (node === self__.root) {
      } else {
        self__.root = node;
      }
      if (added_leaf_QMARK_.val) {
        self__.count = self__.count + 1;
      } else {
      }
      return tcoll;
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll;
      } else {
        return tcoll;
      }
    } else {
      if (self__.root == null) {
        return tcoll;
      } else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash(k), k, removed_leaf_QMARK_);
        if (node === self__.root) {
        } else {
          self__.root = node;
        }
        if (cljs.core.truth_(removed_leaf_QMARK_[0])) {
          self__.count = self__.count - 1;
        } else {
        }
        return tcoll;
      }
    }
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.__GT_TransientHashMap = function __GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val);
};
cljs.core.tree_map_seq_push = function tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while (true) {
    if (!(t == null)) {
      var G__23409 = ascending_QMARK_ ? t.left : t.right;
      var G__23410 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1, t);
      t = G__23409;
      stack__$1 = G__23410;
      continue;
    } else {
      return stack__$1;
    }
    break;
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374862;
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core/PersistentTreeMapSeq");
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3819__auto__ = self__.__hash;
  if (!(h__3819__auto__ == null)) {
    return h__3819__auto__;
  } else {
    var h__3819__auto____$1 = cljs.core.hash_coll(coll__$1);
    self__.__hash = h__3819__auto____$1;
    return h__3819__auto____$1;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt < 0) {
    return cljs.core.count(cljs.core.next(coll__$1)) + 1;
  } else {
    return self__.cnt;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.peek(self__.stack);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first(self__.stack);
  var next_stack = cljs.core.tree_map_seq_push(self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next(self__.stack), self__.ascending_QMARK_);
  if (!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMapSeq(meta__$1, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_PersistentTreeMapSeq = function __GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash);
};
cljs.core.create_tree_map_seq = function create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push(tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null);
};
cljs.core.balance_left = function balance_left(key, val, ins, right) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null);
    } else {
      if (ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return new cljs.core.BlackNode(key, val, ins, right, null);
        } else {
          return null;
        }
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, ins, right, null);
  }
};
cljs.core.balance_right = function balance_right(key, val, left, ins) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null);
    } else {
      if (ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return new cljs.core.BlackNode(key, val, left, ins, null);
        } else {
          return null;
        }
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, left, ins, null);
  }
};
cljs.core.balance_left_del = function balance_left_del(key, val, del, right) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null);
  } else {
    if (right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right(key, val, del, right.redden());
    } else {
      if (right instanceof cljs.core.RedNode && right.left instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right(right.key, right.val, right.left.right, right.right.redden()), null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          throw new Error("red-black tree invariant violation");
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.balance_right_del = function balance_right_del(key, val, left, del) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null);
  } else {
    if (left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left(key, val, left.redden(), del);
    } else {
      if (left instanceof cljs.core.RedNode && left.right instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left(left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          throw new Error("red-black tree invariant violation");
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? tree_map_kv_reduce(node.left, f, init) : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$1) : cljs.core.deref.call(null, init__$1);
  } else {
    var init__$2 = f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(init__$1, node.key, node.val) : f.call(null, init__$1, node.key, node.val);
    if (cljs.core.reduced_QMARK_(init__$2)) {
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
    } else {
      var init__$3 = !(node.right == null) ? tree_map_kv_reduce(node.right, f, init__$2) : init__$2;
      if (cljs.core.reduced_QMARK_(init__$3)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$3) : cljs.core.deref.call(null, init__$3);
      } else {
        return init__$3;
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core/BlackNode");
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3819__auto__ = self__.__hash;
  if (!(h__3819__auto__ == null)) {
    return h__3819__auto__;
  } else {
    var h__3819__auto____$1 = cljs.core.hash_coll(coll__$1);
    self__.__hash = h__3819__auto____$1;
    return h__3819__auto____$1;
  }
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, null);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.BlackNode.prototype.call = function() {
  var G__23412 = null;
  var G__23412__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__23412__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__23412 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__23412__2.call(this, self__, k);
      case 3:
        return G__23412__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__23412;
}();
cljs.core.BlackNode.prototype.apply = function(self__, args23411) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args23411)));
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node);
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del(self__.key, self__.val, self__.left, del);
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del(self__.key, self__.val, del, self__.right);
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node);
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node;
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return null;
      } else {
        return null;
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found;
      } else {
        return null;
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.__GT_BlackNode = function __GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash);
};
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core/RedNode");
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3819__auto__ = self__.__hash;
  if (!(h__3819__auto__ == null)) {
    return h__3819__auto__;
  } else {
    var h__3819__auto____$1 = cljs.core.hash_coll(coll__$1);
    self__.__hash = h__3819__auto____$1;
    return h__3819__auto____$1;
  }
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.RedNode.prototype.call = function() {
  var G__23414 = null;
  var G__23414__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__23414__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__23414 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__23414__2.call(this, self__, k);
      case 3:
        return G__23414__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__23414;
}();
cljs.core.RedNode.prototype.apply = function(self__, args23413) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args23413)));
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null);
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null);
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null);
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null);
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null);
  } else {
    if (self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
      } else {
        return null;
      }
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null);
  } else {
    if (self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
      } else {
        return null;
      }
    }
  }
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return null;
      } else {
        return null;
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found;
      } else {
        return null;
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.__GT_RedNode = function __GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash);
};
cljs.core.tree_map_add = function tree_map_add(comp, tree, k, v, found) {
  if (tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null);
  } else {
    var c = comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(k, tree.key) : comp.call(null, k, tree.key);
    if (c === 0) {
      found[0] = tree;
      return null;
    } else {
      if (c < 0) {
        var ins = tree_map_add(comp, tree.left, k, v, found);
        if (!(ins == null)) {
          return tree.add_left(ins);
        } else {
          return null;
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var ins = tree_map_add(comp, tree.right, k, v, found);
          if (!(ins == null)) {
            return tree.add_right(ins);
          } else {
            return null;
          }
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_append = function tree_map_append(left, right) {
  if (left == null) {
    return right;
  } else {
    if (right == null) {
      return left;
    } else {
      if (left instanceof cljs.core.RedNode) {
        if (right instanceof cljs.core.RedNode) {
          var app = tree_map_append(left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.RedNode(left.key, left.val, left.left, app.left, null), new cljs.core.RedNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app, right.right, null), null);
          }
        } else {
          return new cljs.core.RedNode(left.key, left.val, left.left, tree_map_append(left.right, right), null);
        }
      } else {
        if (right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, tree_map_append(left, right.left), right.right, null);
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var app = tree_map_append(left.right, right.left);
            if (app instanceof cljs.core.RedNode) {
              return new cljs.core.RedNode(app.key, app.val, new cljs.core.BlackNode(left.key, left.val, left.left, app.left, null), new cljs.core.BlackNode(right.key, right.val, app.right, right.right, null), null);
            } else {
              return cljs.core.balance_left_del(left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app, right.right, null));
            }
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function tree_map_remove(comp, tree, k, found) {
  if (!(tree == null)) {
    var c = comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(k, tree.key) : comp.call(null, k, tree.key);
    if (c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append(tree.left, tree.right);
    } else {
      if (c < 0) {
        var del = tree_map_remove(comp, tree.left, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del(tree.key, tree.val, del, tree.right);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null);
          }
        } else {
          return null;
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var del = tree_map_remove(comp, tree.right, k, found);
          if (!(del == null) || !(found[0] == null)) {
            if (tree.right instanceof cljs.core.BlackNode) {
              return cljs.core.balance_right_del(tree.key, tree.val, tree.left, del);
            } else {
              return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null);
            }
          } else {
            return null;
          }
        } else {
          return null;
        }
      }
    }
  } else {
    return null;
  }
};
cljs.core.tree_map_replace = function tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(k, tk) : comp.call(null, k, tk);
  if (c === 0) {
    return tree.replace(tk, v, tree.left, tree.right);
  } else {
    if (c < 0) {
      return tree.replace(tk, tree.val, tree_map_replace(comp, tree.left, k, v), tree.right);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return tree.replace(tk, tree.val, tree.left, tree_map_replace(comp, tree.right, k, v));
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 418776847;
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core/PersistentTreeMap");
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3819__auto__ = self__.__hash;
  if (!(h__3819__auto__ == null)) {
    return h__3819__auto__;
  } else {
    var h__3819__auto____$1 = cljs.core.hash_imap(coll__$1);
    self__.__hash = h__3819__auto____$1;
    return h__3819__auto____$1;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = coll__$1.entry_at(k);
  if (!(n == null)) {
    return n.val;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_add(self__.comp, self__.tree, k, v, found);
  if (t == null) {
    var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v, found_node.val)) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace(self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(coll__$1.entry_at(k) == null);
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__23416 = null;
  var G__23416__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__23416__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__23416 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__23416__2.call(this, self__, k);
      case 3:
        return G__23416__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__23416;
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args23415) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args23415)));
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.tree == null)) {
    return cljs.core.tree_map_kv_reduce(self__.tree, f, init);
  } else {
    return init;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, false, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while (true) {
    if (!(t == null)) {
      var c = self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(k, t.key) : self__.comp.call(null, k, t.key);
      if (c === 0) {
        return t;
      } else {
        if (c < 0) {
          var G__23417 = t.left;
          t = G__23417;
          continue;
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var G__23418 = t.right;
            t = G__23418;
            continue;
          } else {
            return null;
          }
        }
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, ascending_QMARK_, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while (true) {
      if (!(t == null)) {
        var c = self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(k, t.key) : self__.comp.call(null, k, t.key);
        if (c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t), ascending_QMARK_, -1, null);
        } else {
          if (cljs.core.truth_(ascending_QMARK_)) {
            if (c < 0) {
              var G__23419 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__23420 = t.left;
              stack = G__23419;
              t = G__23420;
              continue;
            } else {
              var G__23421 = stack;
              var G__23422 = t.right;
              stack = G__23421;
              t = G__23422;
              continue;
            }
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              if (c > 0) {
                var G__23423 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
                var G__23424 = t.right;
                stack = G__23423;
                t = G__23424;
                continue;
              } else {
                var G__23425 = stack;
                var G__23426 = t.left;
                stack = G__23425;
                t = G__23426;
                continue;
              }
            } else {
              return null;
            }
          }
        }
      } else {
        if (stack == null) {
          return null;
        } else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null);
        }
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(entry) : cljs.core.key.call(null, entry);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.comp;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, true, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, meta__$1, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, self__.meta, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentTreeMap.EMPTY, self__.meta);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_remove(self__.comp, self__.tree, k, found);
  if (t == null) {
    if (cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0) == null) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null);
  }
};
cljs.core.__GT_PersistentTreeMap = function __GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash);
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, 0);
cljs.core.hash_map = function() {
  var hash_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq(keyvals);
    var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
    while (true) {
      if (in$) {
        var G__23427 = cljs.core.nnext(in$);
        var G__23428 = cljs.core.assoc_BANG_(out, cljs.core.first(in$), cljs.core.second(in$));
        in$ = G__23427;
        out = G__23428;
        continue;
      } else {
        return cljs.core.persistent_BANG_(out);
      }
      break;
    }
  };
  var hash_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return hash_map__delegate.call(this, keyvals);
  };
  hash_map.cljs$lang$maxFixedArity = 0;
  hash_map.cljs$lang$applyTo = function(arglist__23429) {
    var keyvals = cljs.core.seq(arglist__23429);
    return hash_map__delegate(keyvals);
  };
  hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
  return hash_map;
}();
cljs.core.array_map = function() {
  var array_map__delegate = function(keyvals) {
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot(cljs.core.count(keyvals), 2), cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array, keyvals), null);
  };
  var array_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return array_map__delegate.call(this, keyvals);
  };
  array_map.cljs$lang$maxFixedArity = 0;
  array_map.cljs$lang$applyTo = function(arglist__23430) {
    var keyvals = cljs.core.seq(arglist__23430);
    return array_map__delegate(keyvals);
  };
  array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
  return array_map;
}();
cljs.core.obj_map = function() {
  var obj_map__delegate = function(keyvals) {
    var ks = [];
    var obj = function() {
      var obj23434 = {};
      return obj23434;
    }();
    var kvs = cljs.core.seq(keyvals);
    while (true) {
      if (kvs) {
        ks.push(cljs.core.first(kvs));
        obj[cljs.core.first(kvs)] = cljs.core.second(kvs);
        var G__23435 = cljs.core.nnext(kvs);
        kvs = G__23435;
        continue;
      } else {
        return cljs.core.ObjMap.fromObject.cljs$core$IFn$_invoke$arity$2 ? cljs.core.ObjMap.fromObject.cljs$core$IFn$_invoke$arity$2(ks, obj) : cljs.core.ObjMap.fromObject.call(null, ks, obj);
      }
      break;
    }
  };
  var obj_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return obj_map__delegate.call(this, keyvals);
  };
  obj_map.cljs$lang$maxFixedArity = 0;
  obj_map.cljs$lang$applyTo = function(arglist__23436) {
    var keyvals = cljs.core.seq(arglist__23436);
    return obj_map__delegate(keyvals);
  };
  obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
  return obj_map;
}();
cljs.core.sorted_map = function() {
  var sorted_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq(keyvals);
    var out = cljs.core.PersistentTreeMap.EMPTY;
    while (true) {
      if (in$) {
        var G__23437 = cljs.core.nnext(in$);
        var G__23438 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
        in$ = G__23437;
        out = G__23438;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var sorted_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return sorted_map__delegate.call(this, keyvals);
  };
  sorted_map.cljs$lang$maxFixedArity = 0;
  sorted_map.cljs$lang$applyTo = function(arglist__23439) {
    var keyvals = cljs.core.seq(arglist__23439);
    return sorted_map__delegate(keyvals);
  };
  sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
  return sorted_map;
}();
cljs.core.sorted_map_by = function() {
  var sorted_map_by__delegate = function(comparator, keyvals) {
    var in$ = cljs.core.seq(keyvals);
    var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator), null, 0, null, 0);
    while (true) {
      if (in$) {
        var G__23440 = cljs.core.nnext(in$);
        var G__23441 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
        in$ = G__23440;
        out = G__23441;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var sorted_map_by = function(comparator, var_args) {
    var keyvals = null;
    if (arguments.length > 1) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sorted_map_by__delegate.call(this, comparator, keyvals);
  };
  sorted_map_by.cljs$lang$maxFixedArity = 1;
  sorted_map_by.cljs$lang$applyTo = function(arglist__23442) {
    var comparator = cljs.core.first(arglist__23442);
    var keyvals = cljs.core.rest(arglist__23442);
    return sorted_map_by__delegate(comparator, keyvals);
  };
  sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
  return sorted_map_by;
}();
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core/KeySeq");
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll(coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__23443 = self__.mseq;
    if (G__23443) {
      var bit__4052__auto__ = G__23443.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4052__auto__ || G__23443.cljs$core$INext$) {
        return true;
      } else {
        if (!G__23443.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__23443);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__23443);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.KeySeq(nseq, self__._meta);
  }
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_key$arity$1(null);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__23444 = self__.mseq;
    if (G__23444) {
      var bit__4052__auto__ = G__23444.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4052__auto__ || G__23444.cljs$core$INext$) {
        return true;
      } else {
        if (!G__23444.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__23444);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__23444);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.KeySeq(self__.mseq, new_meta);
};
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.__GT_KeySeq = function __GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta);
};
cljs.core.keys = function keys(hash_map) {
  var temp__4092__auto__ = cljs.core.seq(hash_map);
  if (temp__4092__auto__) {
    var mseq = temp__4092__auto__;
    return new cljs.core.KeySeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.key = function key(map_entry) {
  return cljs.core._key(map_entry);
};
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core/ValSeq");
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll(coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__23445 = self__.mseq;
    if (G__23445) {
      var bit__4052__auto__ = G__23445.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4052__auto__ || G__23445.cljs$core$INext$) {
        return true;
      } else {
        if (!G__23445.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__23445);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__23445);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.ValSeq(nseq, self__._meta);
  }
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_val$arity$1(null);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__23446 = self__.mseq;
    if (G__23446) {
      var bit__4052__auto__ = G__23446.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4052__auto__ || G__23446.cljs$core$INext$) {
        return true;
      } else {
        if (!G__23446.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__23446);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__23446);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ValSeq(self__.mseq, new_meta);
};
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.__GT_ValSeq = function __GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta);
};
cljs.core.vals = function vals(hash_map) {
  var temp__4092__auto__ = cljs.core.seq(hash_map);
  if (temp__4092__auto__) {
    var mseq = temp__4092__auto__;
    return new cljs.core.ValSeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.val = function val(map_entry) {
  return cljs.core._val(map_entry);
};
cljs.core.merge = function() {
  var merge__delegate = function(maps) {
    if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(function(p1__23447_SHARP_, p2__23448_SHARP_) {
        return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
          var or__3408__auto__ = p1__23447_SHARP_;
          if (cljs.core.truth_(or__3408__auto__)) {
            return or__3408__auto__;
          } else {
            return cljs.core.PersistentArrayMap.EMPTY;
          }
        }(), p2__23448_SHARP_);
      }, maps);
    } else {
      return null;
    }
  };
  var merge = function(var_args) {
    var maps = null;
    if (arguments.length > 0) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return merge__delegate.call(this, maps);
  };
  merge.cljs$lang$maxFixedArity = 0;
  merge.cljs$lang$applyTo = function(arglist__23449) {
    var maps = cljs.core.seq(arglist__23449);
    return merge__delegate(maps);
  };
  merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
  return merge;
}();
cljs.core.merge_with = function() {
  var merge_with__delegate = function(f, maps) {
    if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
      var merge_entry = function(m, e) {
        var k = cljs.core.first(e);
        var v = cljs.core.second(e);
        if (cljs.core.contains_QMARK_(m, k)) {
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), v) : f.call(null, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), v));
        } else {
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
        }
      };
      var merge2 = function(merge_entry) {
        return function(m1, m2) {
          return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry, function() {
            var or__3408__auto__ = m1;
            if (cljs.core.truth_(or__3408__auto__)) {
              return or__3408__auto__;
            } else {
              return cljs.core.PersistentArrayMap.EMPTY;
            }
          }(), cljs.core.seq(m2));
        };
      }(merge_entry);
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2, maps);
    } else {
      return null;
    }
  };
  var merge_with = function(f, var_args) {
    var maps = null;
    if (arguments.length > 1) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return merge_with__delegate.call(this, f, maps);
  };
  merge_with.cljs$lang$maxFixedArity = 1;
  merge_with.cljs$lang$applyTo = function(arglist__23450) {
    var f = cljs.core.first(arglist__23450);
    var maps = cljs.core.rest(arglist__23450);
    return merge_with__delegate(f, maps);
  };
  merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
  return merge_with;
}();
cljs.core.select_keys = function select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq(keyseq);
  while (true) {
    if (keys) {
      var key = cljs.core.first(keys);
      var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map, key, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", 4155500789));
      var G__23451 = cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", 4155500789)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, key, entry) : ret;
      var G__23452 = cljs.core.next(keys);
      ret = G__23451;
      keys = G__23452;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 15077647;
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core/PersistentHashSet");
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3819__auto__ = self__.__hash;
  if (!(h__3819__auto__ == null)) {
    return h__3819__auto__;
  } else {
    var h__3819__auto____$1 = cljs.core.hash_iset(coll__$1);
    self__.__hash = h__3819__auto____$1;
    return h__3819__auto____$1;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, v, null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._contains_key_QMARK_(self__.hash_map, v)) {
    return v;
  } else {
    return not_found;
  }
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__23455 = null;
  var G__23455__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__23455__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__23455 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__23455__2.call(this, self__, k);
      case 3:
        return G__23455__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__23455;
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args23454) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args23454)));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map, o, null), null);
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc(self__.hash_map, v), null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._count(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_(other) && (cljs.core.count(coll__$1) === cljs.core.count(other) && cljs.core.every_QMARK_(function(p1__23453_SHARP_) {
    return cljs.core.contains_QMARK_(coll__$1, p1__23453_SHARP_);
  }, other));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(meta__$1, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY, self__.meta);
};
cljs.core.__GT_PersistentHashSet = function __GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash);
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, 0);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if (len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : cljs.core.aclone(items);
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__23456 = i + 1;
        var G__23457 = cljs.core._assoc_BANG_(out, items[i], null);
        i = G__23456;
        out = G__23457;
        continue;
      } else {
        return new cljs.core.PersistentHashSet(null, cljs.core._persistent_BANG_(out), null);
      }
      break;
    }
  } else {
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < len) {
        var G__23458 = i + 1;
        var G__23459 = cljs.core._conj_BANG_(out, items[i]);
        i = G__23458;
        out = G__23459;
        continue;
      } else {
        return cljs.core._persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 136;
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core/TransientHashSet");
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__23461 = null;
  var G__23461__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null;
    } else {
      return k;
    }
  };
  var G__23461__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found;
    } else {
      return k;
    }
  };
  G__23461 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__23461__2.call(this, self__, k);
      case 3:
        return G__23461__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__23461;
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args23460) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args23460)));
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return null;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1, v, null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return v;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core.count(self__.transient_map);
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.dissoc_BANG_(self__.transient_map, v);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.assoc_BANG_(self__.transient_map, o, null);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_(self__.transient_map), null);
};
cljs.core.__GT_TransientHashSet = function __GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map);
};
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 417730831;
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core/PersistentTreeSet");
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3819__auto__ = self__.__hash;
  if (!(h__3819__auto__ == null)) {
    return h__3819__auto__;
  } else {
    var h__3819__auto____$1 = cljs.core.hash_iset(coll__$1);
    self__.__hash = h__3819__auto____$1;
    return h__3819__auto____$1;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, v, null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = self__.tree_map.entry_at(v);
  if (!(n == null)) {
    return n.key;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__23464 = null;
  var G__23464__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__23464__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__23464 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__23464__2.call(this, self__, k);
      case 3:
        return G__23464__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__23464;
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args23463) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args23463)));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map, o, null), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.count(self__.tree_map) > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core.rseq(self__.tree_map));
  } else {
    return null;
  }
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq(self__.tree_map, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq_from(self__.tree_map, k, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return entry;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._comparator(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map, v), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.count(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_(other) && (cljs.core.count(coll__$1) === cljs.core.count(other) && cljs.core.every_QMARK_(function(p1__23462_SHARP_) {
    return cljs.core.contains_QMARK_(coll__$1, p1__23462_SHARP_);
  }, other));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(meta__$1, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentTreeSet.EMPTY, self__.meta);
};
cljs.core.__GT_PersistentTreeSet = function __GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash);
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, 0);
cljs.core.set_from_indexed_seq = function set_from_indexed_seq(iseq) {
  var arr = iseq.arr;
  var ret = function() {
    var a__4244__auto__ = arr;
    var i = 0;
    var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < a__4244__auto__.length) {
        var G__23465 = i + 1;
        var G__23466 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, arr[i]);
        i = G__23465;
        res = G__23466;
        continue;
      } else {
        return res;
      }
      break;
    }
  }();
  return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
};
cljs.core.set = function set(coll) {
  var in$ = cljs.core.seq(coll);
  if (in$ == null) {
    return cljs.core.PersistentHashSet.EMPTY;
  } else {
    if (in$ instanceof cljs.core.IndexedSeq && in$.i === 0) {
      return cljs.core.set_from_indexed_seq(in$);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var in$__$1 = in$;
        var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
        while (true) {
          if (!(in$__$1 == null)) {
            var G__23467 = in$__$1.cljs$core$INext$_next$arity$1(null);
            var G__23468 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, in$__$1.cljs$core$ISeq$_first$arity$1(null));
            in$__$1 = G__23467;
            out = G__23468;
            continue;
          } else {
            return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
          }
          break;
        }
      } else {
        return null;
      }
    }
  }
};
cljs.core.hash_set = function() {
  var hash_set = null;
  var hash_set__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY;
  };
  var hash_set__1 = function() {
    var G__23469__delegate = function(keys) {
      return cljs.core.set(keys);
    };
    var G__23469 = function(var_args) {
      var keys = null;
      if (arguments.length > 0) {
        keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__23469__delegate.call(this, keys);
    };
    G__23469.cljs$lang$maxFixedArity = 0;
    G__23469.cljs$lang$applyTo = function(arglist__23470) {
      var keys = cljs.core.seq(arglist__23470);
      return G__23469__delegate(keys);
    };
    G__23469.cljs$core$IFn$_invoke$arity$variadic = G__23469__delegate;
    return G__23469;
  }();
  hash_set = function(var_args) {
    var keys = var_args;
    switch(arguments.length) {
      case 0:
        return hash_set__0.call(this);
      default:
        return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(arguments, 0));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  hash_set.cljs$lang$maxFixedArity = 0;
  hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
  hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
  hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
  return hash_set;
}();
cljs.core.sorted_set = function() {
  var sorted_set__delegate = function(keys) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys);
  };
  var sorted_set = function(var_args) {
    var keys = null;
    if (arguments.length > 0) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return sorted_set__delegate.call(this, keys);
  };
  sorted_set.cljs$lang$maxFixedArity = 0;
  sorted_set.cljs$lang$applyTo = function(arglist__23471) {
    var keys = cljs.core.seq(arglist__23471);
    return sorted_set__delegate(keys);
  };
  sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
  return sorted_set;
}();
cljs.core.sorted_set_by = function() {
  var sorted_set_by__delegate = function(comparator, keys) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by(comparator), 0), keys);
  };
  var sorted_set_by = function(comparator, var_args) {
    var keys = null;
    if (arguments.length > 1) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sorted_set_by__delegate.call(this, comparator, keys);
  };
  sorted_set_by.cljs$lang$maxFixedArity = 1;
  sorted_set_by.cljs$lang$applyTo = function(arglist__23472) {
    var comparator = cljs.core.first(arglist__23472);
    var keys = cljs.core.rest(arglist__23472);
    return sorted_set_by__delegate(comparator, keys);
  };
  sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
  return sorted_set_by;
}();
cljs.core.replace = function replace(smap, coll) {
  if (cljs.core.vector_QMARK_(coll)) {
    var n = cljs.core.count(coll);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, i) {
      var temp__4090__auto__ = cljs.core.find(smap, cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v, i));
      if (cljs.core.truth_(temp__4090__auto__)) {
        var e = temp__4090__auto__;
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v, i, cljs.core.second(e));
      } else {
        return v;
      }
    }, coll, cljs.core.take(n, cljs.core.iterate(cljs.core.inc, 0)));
  } else {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__23473_SHARP_) {
      var temp__4090__auto__ = cljs.core.find(smap, p1__23473_SHARP_);
      if (cljs.core.truth_(temp__4090__auto__)) {
        var e = temp__4090__auto__;
        return cljs.core.second(e);
      } else {
        return p1__23473_SHARP_;
      }
    }, coll);
  }
};
cljs.core.distinct = function distinct(coll) {
  var step = function step(xs, seen) {
    return new cljs.core.LazySeq(null, function() {
      return function(p__23480, seen__$1) {
        while (true) {
          var vec__23481 = p__23480;
          var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23481, 0, null);
          var xs__$1 = vec__23481;
          var temp__4092__auto__ = cljs.core.seq(xs__$1);
          if (temp__4092__auto__) {
            var s = temp__4092__auto__;
            if (cljs.core.contains_QMARK_(seen__$1, f)) {
              var G__23482 = cljs.core.rest(s);
              var G__23483 = seen__$1;
              p__23480 = G__23482;
              seen__$1 = G__23483;
              continue;
            } else {
              return cljs.core.cons(f, step(cljs.core.rest(s), cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1, f)));
            }
          } else {
            return null;
          }
          break;
        }
      }.call(null, xs, seen);
    }, null, null);
  };
  return step(coll, cljs.core.PersistentHashSet.EMPTY);
};
cljs.core.butlast = function butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while (true) {
    if (cljs.core.next(s__$1)) {
      var G__23484 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret, cljs.core.first(s__$1));
      var G__23485 = cljs.core.next(s__$1);
      ret = G__23484;
      s__$1 = G__23485;
      continue;
    } else {
      return cljs.core.seq(ret);
    }
    break;
  }
};
cljs.core.name = function name(x) {
  if (function() {
    var G__23487 = x;
    if (G__23487) {
      var bit__4045__auto__ = G__23487.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4045__auto__ || G__23487.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(null);
  } else {
    if (typeof x === "string") {
      return x;
    } else {
      throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
    }
  }
};
cljs.core.zipmap = function zipmap(keys, vals) {
  var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq(keys);
  var vs = cljs.core.seq(vals);
  while (true) {
    if (ks && vs) {
      var G__23488 = cljs.core.assoc_BANG_(map, cljs.core.first(ks), cljs.core.first(vs));
      var G__23489 = cljs.core.next(ks);
      var G__23490 = cljs.core.next(vs);
      map = G__23488;
      ks = G__23489;
      vs = G__23490;
      continue;
    } else {
      return cljs.core.persistent_BANG_(map);
    }
    break;
  }
};
cljs.core.max_key = function() {
  var max_key = null;
  var max_key__2 = function(k, x) {
    return x;
  };
  var max_key__3 = function(k, x, y) {
    if ((k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(x) : k.call(null, x)) > (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(y) : k.call(null, y))) {
      return x;
    } else {
      return y;
    }
  };
  var max_key__4 = function() {
    var G__23493__delegate = function(k, x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__23491_SHARP_, p2__23492_SHARP_) {
        return max_key.cljs$core$IFn$_invoke$arity$3(k, p1__23491_SHARP_, p2__23492_SHARP_);
      }, max_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
    };
    var G__23493 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__23493__delegate.call(this, k, x, y, more);
    };
    G__23493.cljs$lang$maxFixedArity = 3;
    G__23493.cljs$lang$applyTo = function(arglist__23494) {
      var k = cljs.core.first(arglist__23494);
      arglist__23494 = cljs.core.next(arglist__23494);
      var x = cljs.core.first(arglist__23494);
      arglist__23494 = cljs.core.next(arglist__23494);
      var y = cljs.core.first(arglist__23494);
      var more = cljs.core.rest(arglist__23494);
      return G__23493__delegate(k, x, y, more);
    };
    G__23493.cljs$core$IFn$_invoke$arity$variadic = G__23493__delegate;
    return G__23493;
  }();
  max_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return max_key__2.call(this, k, x);
      case 3:
        return max_key__3.call(this, k, x, y);
      default:
        return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max_key.cljs$lang$maxFixedArity = 3;
  max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
  max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
  max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
  max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return max_key;
}();
cljs.core.min_key = function() {
  var min_key = null;
  var min_key__2 = function(k, x) {
    return x;
  };
  var min_key__3 = function(k, x, y) {
    if ((k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(x) : k.call(null, x)) < (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(y) : k.call(null, y))) {
      return x;
    } else {
      return y;
    }
  };
  var min_key__4 = function() {
    var G__23497__delegate = function(k, x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__23495_SHARP_, p2__23496_SHARP_) {
        return min_key.cljs$core$IFn$_invoke$arity$3(k, p1__23495_SHARP_, p2__23496_SHARP_);
      }, min_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
    };
    var G__23497 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__23497__delegate.call(this, k, x, y, more);
    };
    G__23497.cljs$lang$maxFixedArity = 3;
    G__23497.cljs$lang$applyTo = function(arglist__23498) {
      var k = cljs.core.first(arglist__23498);
      arglist__23498 = cljs.core.next(arglist__23498);
      var x = cljs.core.first(arglist__23498);
      arglist__23498 = cljs.core.next(arglist__23498);
      var y = cljs.core.first(arglist__23498);
      var more = cljs.core.rest(arglist__23498);
      return G__23497__delegate(k, x, y, more);
    };
    G__23497.cljs$core$IFn$_invoke$arity$variadic = G__23497__delegate;
    return G__23497;
  }();
  min_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return min_key__2.call(this, k, x);
      case 3:
        return min_key__3.call(this, k, x, y);
      default:
        return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min_key.cljs$lang$maxFixedArity = 3;
  min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
  min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
  min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
  min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return min_key;
}();
cljs.core.partition_all = function() {
  var partition_all = null;
  var partition_all__2 = function(n, coll) {
    return partition_all.cljs$core$IFn$_invoke$arity$3(n, n, coll);
  };
  var partition_all__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq(coll);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        return cljs.core.cons(cljs.core.take(n, s), partition_all.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop(step, s)));
      } else {
        return null;
      }
    }, null, null);
  };
  partition_all = function(n, step, coll) {
    switch(arguments.length) {
      case 2:
        return partition_all__2.call(this, n, step);
      case 3:
        return partition_all__3.call(this, n, step, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
  partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
  return partition_all;
}();
cljs.core.take_while = function take_while(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq(coll);
    if (temp__4092__auto__) {
      var s = temp__4092__auto__;
      if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(cljs.core.first(s)) : pred.call(null, cljs.core.first(s)))) {
        return cljs.core.cons(cljs.core.first(s), take_while(pred, cljs.core.rest(s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.mk_bound_fn = function mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp = cljs.core._comparator(sc);
    return test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(cljs.core._entry_key(sc, e), key) : comp.call(null, cljs.core._entry_key(sc, e), key), 0) : test.call(null, comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(cljs.core._entry_key(sc, e), key) : comp.call(null, cljs.core._entry_key(sc, e), key), 0);
  };
};
cljs.core.subseq = function() {
  var subseq = null;
  var subseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn(sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_], true).call(null, test))) {
      var temp__4092__auto__ = cljs.core._sorted_seq_from(sc, key, true);
      if (cljs.core.truth_(temp__4092__auto__)) {
        var vec__23501 = temp__4092__auto__;
        var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23501, 0, null);
        var s = vec__23501;
        if (cljs.core.truth_(include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(e) : include.call(null, e))) {
          return s;
        } else {
          return cljs.core.next(s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while(include, cljs.core._sorted_seq(sc, true));
    }
  };
  var subseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4092__auto__ = cljs.core._sorted_seq_from(sc, start_key, true);
    if (cljs.core.truth_(temp__4092__auto__)) {
      var vec__23502 = temp__4092__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23502, 0, null);
      var s = vec__23502;
      return cljs.core.take_while(cljs.core.mk_bound_fn(sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn(sc, start_test, start_key).call(null, e)) ? s : cljs.core.next(s));
    } else {
      return null;
    }
  };
  subseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return subseq__3.call(this, sc, start_test, start_key);
      case 5:
        return subseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
  subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
  return subseq;
}();
cljs.core.rsubseq = function() {
  var rsubseq = null;
  var rsubseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn(sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_], true).call(null, test))) {
      var temp__4092__auto__ = cljs.core._sorted_seq_from(sc, key, false);
      if (cljs.core.truth_(temp__4092__auto__)) {
        var vec__23505 = temp__4092__auto__;
        var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23505, 0, null);
        var s = vec__23505;
        if (cljs.core.truth_(include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(e) : include.call(null, e))) {
          return s;
        } else {
          return cljs.core.next(s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while(include, cljs.core._sorted_seq(sc, false));
    }
  };
  var rsubseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4092__auto__ = cljs.core._sorted_seq_from(sc, end_key, false);
    if (cljs.core.truth_(temp__4092__auto__)) {
      var vec__23506 = temp__4092__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23506, 0, null);
      var s = vec__23506;
      return cljs.core.take_while(cljs.core.mk_bound_fn(sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn(sc, end_test, end_key).call(null, e)) ? s : cljs.core.next(s));
    } else {
      return null;
    }
  };
  rsubseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return rsubseq__3.call(this, sc, start_test, start_key);
      case 5:
        return rsubseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
  rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
  return rsubseq;
}();
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32375006;
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core/Range");
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var h__3819__auto__ = self__.__hash;
  if (!(h__3819__auto__ == null)) {
    return h__3819__auto__;
  } else {
    var h__3819__auto____$1 = cljs.core.hash_coll(rng__$1);
    self__.__hash = h__3819__auto____$1;
    return h__3819__auto____$1;
  }
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start + self__.step < self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  } else {
    if (self__.start + self__.step > self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.cons(o, rng__$1);
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1, f);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, s) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(rng__$1, f, s);
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start < self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  } else {
    if (self__.start > self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core.not(cljs.core._seq(rng__$1))) {
    return 0;
  } else {
    return Math.ceil((self__.end - self__.start) / self__.step);
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core._seq(rng__$1) == null) {
    return null;
  } else {
    return self__.start;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (!(cljs.core._seq(rng__$1) == null)) {
    return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.equiv_sequential(rng__$1, other);
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta__$1) {
  var self__ = this;
  var rng__$1 = this;
  return new cljs.core.Range(meta__$1, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$ICloneable$ = true;
cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Range(self__.meta, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.meta;
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count(rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count(rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      return not_found;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_Range = function __GT_Range(meta, start, end, step, __hash) {
  return new cljs.core.Range(meta, start, end, step, __hash);
};
cljs.core.range = function() {
  var range = null;
  var range__0 = function() {
    return range.cljs$core$IFn$_invoke$arity$3(0, Number.MAX_VALUE, 1);
  };
  var range__1 = function(end) {
    return range.cljs$core$IFn$_invoke$arity$3(0, end, 1);
  };
  var range__2 = function(start, end) {
    return range.cljs$core$IFn$_invoke$arity$3(start, end, 1);
  };
  var range__3 = function(start, end, step) {
    return new cljs.core.Range(null, start, end, step, null);
  };
  range = function(start, end, step) {
    switch(arguments.length) {
      case 0:
        return range__0.call(this);
      case 1:
        return range__1.call(this, start);
      case 2:
        return range__2.call(this, start, end);
      case 3:
        return range__3.call(this, start, end, step);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  range.cljs$core$IFn$_invoke$arity$0 = range__0;
  range.cljs$core$IFn$_invoke$arity$1 = range__1;
  range.cljs$core$IFn$_invoke$arity$2 = range__2;
  range.cljs$core$IFn$_invoke$arity$3 = range__3;
  return range;
}();
cljs.core.take_nth = function take_nth(n, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq(coll);
    if (temp__4092__auto__) {
      var s = temp__4092__auto__;
      return cljs.core.cons(cljs.core.first(s), take_nth(n, cljs.core.drop(n, s)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.split_with = function split_with(pred, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while(pred, coll), cljs.core.drop_while(pred, coll)], null);
};
cljs.core.partition_by = function partition_by(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq(coll);
    if (temp__4092__auto__) {
      var s = temp__4092__auto__;
      var fst = cljs.core.first(s);
      var fv = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(fst) : f.call(null, fst);
      var run = cljs.core.cons(fst, cljs.core.take_while(function(fst, fv) {
        return function(p1__23507_SHARP_) {
          return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv, f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(p1__23507_SHARP_) : f.call(null, p1__23507_SHARP_));
        };
      }(fst, fv), cljs.core.next(s)));
      return cljs.core.cons(run, partition_by(f, cljs.core.seq(cljs.core.drop(cljs.core.count(run), s))));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.frequencies = function frequencies(coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(counts, x) {
    return cljs.core.assoc_BANG_(counts, x, cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts, x, 0) + 1);
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.reductions = function() {
  var reductions = null;
  var reductions__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4090__auto__ = cljs.core.seq(coll);
      if (temp__4090__auto__) {
        var s = temp__4090__auto__;
        return reductions.cljs$core$IFn$_invoke$arity$3(f, cljs.core.first(s), cljs.core.rest(s));
      } else {
        return cljs.core._conj(cljs.core.List.EMPTY, f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
      }
    }, null, null);
  };
  var reductions__3 = function(f, init, coll) {
    return cljs.core.cons(init, new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq(coll);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        return reductions.cljs$core$IFn$_invoke$arity$3(f, f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(init, cljs.core.first(s)) : f.call(null, init, cljs.core.first(s)), cljs.core.rest(s));
      } else {
        return null;
      }
    }, null, null));
  };
  reductions = function(f, init, coll) {
    switch(arguments.length) {
      case 2:
        return reductions__2.call(this, f, init);
      case 3:
        return reductions__3.call(this, f, init, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
  reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
  return reductions;
}();
cljs.core.juxt = function() {
  var juxt = null;
  var juxt__1 = function(f) {
    return function() {
      var G__23518 = null;
      var G__23518__0 = function() {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null)], null);
      };
      var G__23518__1 = function(x) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x)], null);
      };
      var G__23518__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y)], null);
      };
      var G__23518__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(x, y, z) : f.call(null, x, y, z)], null);
      };
      var G__23518__4 = function() {
        var G__23519__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args)], null);
        };
        var G__23519 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__23519__delegate.call(this, x, y, z, args);
        };
        G__23519.cljs$lang$maxFixedArity = 3;
        G__23519.cljs$lang$applyTo = function(arglist__23520) {
          var x = cljs.core.first(arglist__23520);
          arglist__23520 = cljs.core.next(arglist__23520);
          var y = cljs.core.first(arglist__23520);
          arglist__23520 = cljs.core.next(arglist__23520);
          var z = cljs.core.first(arglist__23520);
          var args = cljs.core.rest(arglist__23520);
          return G__23519__delegate(x, y, z, args);
        };
        G__23519.cljs$core$IFn$_invoke$arity$variadic = G__23519__delegate;
        return G__23519;
      }();
      G__23518 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__23518__0.call(this);
          case 1:
            return G__23518__1.call(this, x);
          case 2:
            return G__23518__2.call(this, x, y);
          case 3:
            return G__23518__3.call(this, x, y, z);
          default:
            return G__23518__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__23518.cljs$lang$maxFixedArity = 3;
      G__23518.cljs$lang$applyTo = G__23518__4.cljs$lang$applyTo;
      return G__23518;
    }();
  };
  var juxt__2 = function(f, g) {
    return function() {
      var G__23521 = null;
      var G__23521__0 = function() {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null)], null);
      };
      var G__23521__1 = function(x) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x), g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null, x)], null);
      };
      var G__23521__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y), g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(x, y) : g.call(null, x, y)], null);
      };
      var G__23521__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(x, y, z) : f.call(null, x, y, z), g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(x, y, z) : g.call(null, x, y, z)], null);
      };
      var G__23521__4 = function() {
        var G__23522__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args)], null);
        };
        var G__23522 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__23522__delegate.call(this, x, y, z, args);
        };
        G__23522.cljs$lang$maxFixedArity = 3;
        G__23522.cljs$lang$applyTo = function(arglist__23523) {
          var x = cljs.core.first(arglist__23523);
          arglist__23523 = cljs.core.next(arglist__23523);
          var y = cljs.core.first(arglist__23523);
          arglist__23523 = cljs.core.next(arglist__23523);
          var z = cljs.core.first(arglist__23523);
          var args = cljs.core.rest(arglist__23523);
          return G__23522__delegate(x, y, z, args);
        };
        G__23522.cljs$core$IFn$_invoke$arity$variadic = G__23522__delegate;
        return G__23522;
      }();
      G__23521 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__23521__0.call(this);
          case 1:
            return G__23521__1.call(this, x);
          case 2:
            return G__23521__2.call(this, x, y);
          case 3:
            return G__23521__3.call(this, x, y, z);
          default:
            return G__23521__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__23521.cljs$lang$maxFixedArity = 3;
      G__23521.cljs$lang$applyTo = G__23521__4.cljs$lang$applyTo;
      return G__23521;
    }();
  };
  var juxt__3 = function(f, g, h) {
    return function() {
      var G__23524 = null;
      var G__23524__0 = function() {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null), h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null)], null);
      };
      var G__23524__1 = function(x) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x), g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null, x), h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(x) : h.call(null, x)], null);
      };
      var G__23524__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y), g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(x, y) : g.call(null, x, y), h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(x, y) : h.call(null, x, y)], null);
      };
      var G__23524__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(x, y, z) : f.call(null, x, y, z), g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(x, y, z) : g.call(null, x, y, z), h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(x, y, z) : h.call(null, x, y, z)], null);
      };
      var G__23524__4 = function() {
        var G__23525__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args)], null);
        };
        var G__23525 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__23525__delegate.call(this, x, y, z, args);
        };
        G__23525.cljs$lang$maxFixedArity = 3;
        G__23525.cljs$lang$applyTo = function(arglist__23526) {
          var x = cljs.core.first(arglist__23526);
          arglist__23526 = cljs.core.next(arglist__23526);
          var y = cljs.core.first(arglist__23526);
          arglist__23526 = cljs.core.next(arglist__23526);
          var z = cljs.core.first(arglist__23526);
          var args = cljs.core.rest(arglist__23526);
          return G__23525__delegate(x, y, z, args);
        };
        G__23525.cljs$core$IFn$_invoke$arity$variadic = G__23525__delegate;
        return G__23525;
      }();
      G__23524 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__23524__0.call(this);
          case 1:
            return G__23524__1.call(this, x);
          case 2:
            return G__23524__2.call(this, x, y);
          case 3:
            return G__23524__3.call(this, x, y, z);
          default:
            return G__23524__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__23524.cljs$lang$maxFixedArity = 3;
      G__23524.cljs$lang$applyTo = G__23524__4.cljs$lang$applyTo;
      return G__23524;
    }();
  };
  var juxt__4 = function() {
    var G__23527__delegate = function(f, g, h, fs) {
      var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f, g, h, fs);
      return function() {
        var G__23528 = null;
        var G__23528__0 = function() {
          return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__23508_SHARP_, p2__23509_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__23508_SHARP_, p2__23509_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__23509_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__23509_SHARP_.call(null));
          }, cljs.core.PersistentVector.EMPTY, fs__$1);
        };
        var G__23528__1 = function(x) {
          return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__23510_SHARP_, p2__23511_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__23510_SHARP_, p2__23511_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__23511_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p2__23511_SHARP_.call(null, x));
          }, cljs.core.PersistentVector.EMPTY, fs__$1);
        };
        var G__23528__2 = function(x, y) {
          return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__23512_SHARP_, p2__23513_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__23512_SHARP_, p2__23513_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__23513_SHARP_.cljs$core$IFn$_invoke$arity$2(x, y) : p2__23513_SHARP_.call(null, x, y));
          }, cljs.core.PersistentVector.EMPTY, fs__$1);
        };
        var G__23528__3 = function(x, y, z) {
          return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__23514_SHARP_, p2__23515_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__23514_SHARP_, p2__23515_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__23515_SHARP_.cljs$core$IFn$_invoke$arity$3(x, y, z) : p2__23515_SHARP_.call(null, x, y, z));
          }, cljs.core.PersistentVector.EMPTY, fs__$1);
        };
        var G__23528__4 = function() {
          var G__23529__delegate = function(x, y, z, args) {
            return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__23516_SHARP_, p2__23517_SHARP_) {
              return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__23516_SHARP_, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__23517_SHARP_, x, y, z, args));
            }, cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__23529 = function(x, y, z, var_args) {
            var args = null;
            if (arguments.length > 3) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
            }
            return G__23529__delegate.call(this, x, y, z, args);
          };
          G__23529.cljs$lang$maxFixedArity = 3;
          G__23529.cljs$lang$applyTo = function(arglist__23530) {
            var x = cljs.core.first(arglist__23530);
            arglist__23530 = cljs.core.next(arglist__23530);
            var y = cljs.core.first(arglist__23530);
            arglist__23530 = cljs.core.next(arglist__23530);
            var z = cljs.core.first(arglist__23530);
            var args = cljs.core.rest(arglist__23530);
            return G__23529__delegate(x, y, z, args);
          };
          G__23529.cljs$core$IFn$_invoke$arity$variadic = G__23529__delegate;
          return G__23529;
        }();
        G__23528 = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return G__23528__0.call(this);
            case 1:
              return G__23528__1.call(this, x);
            case 2:
              return G__23528__2.call(this, x, y);
            case 3:
              return G__23528__3.call(this, x, y, z);
            default:
              return G__23528__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__23528.cljs$lang$maxFixedArity = 3;
        G__23528.cljs$lang$applyTo = G__23528__4.cljs$lang$applyTo;
        return G__23528;
      }();
    };
    var G__23527 = function(f, g, h, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__23527__delegate.call(this, f, g, h, fs);
    };
    G__23527.cljs$lang$maxFixedArity = 3;
    G__23527.cljs$lang$applyTo = function(arglist__23531) {
      var f = cljs.core.first(arglist__23531);
      arglist__23531 = cljs.core.next(arglist__23531);
      var g = cljs.core.first(arglist__23531);
      arglist__23531 = cljs.core.next(arglist__23531);
      var h = cljs.core.first(arglist__23531);
      var fs = cljs.core.rest(arglist__23531);
      return G__23527__delegate(f, g, h, fs);
    };
    G__23527.cljs$core$IFn$_invoke$arity$variadic = G__23527__delegate;
    return G__23527;
  }();
  juxt = function(f, g, h, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 1:
        return juxt__1.call(this, f);
      case 2:
        return juxt__2.call(this, f, g);
      case 3:
        return juxt__3.call(this, f, g, h);
      default:
        return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f, g, h, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  juxt.cljs$lang$maxFixedArity = 3;
  juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
  juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
  juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
  juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
  juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
  return juxt;
}();
cljs.core.dorun = function() {
  var dorun = null;
  var dorun__1 = function(coll) {
    while (true) {
      if (cljs.core.seq(coll)) {
        var G__23532 = cljs.core.next(coll);
        coll = G__23532;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  var dorun__2 = function(n, coll) {
    while (true) {
      if (cljs.core.seq(coll) && n > 0) {
        var G__23533 = n - 1;
        var G__23534 = cljs.core.next(coll);
        n = G__23533;
        coll = G__23534;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  dorun = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return dorun__1.call(this, n);
      case 2:
        return dorun__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
  dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
  return dorun;
}();
cljs.core.doall = function() {
  var doall = null;
  var doall__1 = function(coll) {
    cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);
    return coll;
  };
  var doall__2 = function(n, coll) {
    cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n, coll);
    return coll;
  };
  doall = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return doall__1.call(this, n);
      case 2:
        return doall__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
  doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
  return doall;
}();
cljs.core.regexp_QMARK_ = function regexp_QMARK_(o) {
  return o instanceof RegExp;
};
cljs.core.re_matches = function re_matches(re, s) {
  var matches = re.exec(s);
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches), s)) {
    if (cljs.core.count(matches) === 1) {
      return cljs.core.first(matches);
    } else {
      return cljs.core.vec(matches);
    }
  } else {
    return null;
  }
};
cljs.core.re_find = function re_find(re, s) {
  var matches = re.exec(s);
  if (matches == null) {
    return null;
  } else {
    if (cljs.core.count(matches) === 1) {
      return cljs.core.first(matches);
    } else {
      return cljs.core.vec(matches);
    }
  }
};
cljs.core.re_seq = function re_seq(re, s) {
  var match_data = cljs.core.re_find(re, s);
  var match_idx = s.search(re);
  var match_str = cljs.core.coll_QMARK_(match_data) ? cljs.core.first(match_data) : match_data;
  var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, match_idx + cljs.core.count(match_str));
  if (cljs.core.truth_(match_data)) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(match_data, cljs.core.seq(post_match) ? re_seq(re, post_match) : null);
    }, null, null);
  } else {
    return null;
  }
};
cljs.core.re_pattern = function re_pattern(s) {
  var vec__23536 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/, s);
  var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23536, 0, null);
  var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23536, 1, null);
  var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23536, 2, null);
  return new RegExp(pattern, flags);
};
cljs.core.pr_sequential_writer = function pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  var _STAR_print_level_STAR_23538 = cljs.core._STAR_print_level_STAR_;
  try {
    cljs.core._STAR_print_level_STAR_ = cljs.core._STAR_print_level_STAR_ == null ? null : cljs.core._STAR_print_level_STAR_ - 1;
    if (!(cljs.core._STAR_print_level_STAR_ == null) && cljs.core._STAR_print_level_STAR_ < 0) {
      return cljs.core._write(writer, "#");
    } else {
      cljs.core._write(writer, begin);
      if (cljs.core.seq(coll)) {
        print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(cljs.core.first(coll), writer, opts) : print_one.call(null, cljs.core.first(coll), writer, opts);
      } else {
      }
      var coll_23539__$1 = cljs.core.next(coll);
      var n_23540 = (new cljs.core.Keyword(null, "print-length", "print-length", 3960797560)).cljs$core$IFn$_invoke$arity$1(opts);
      while (true) {
        if (coll_23539__$1 && (n_23540 == null || !(n_23540 === 0))) {
          cljs.core._write(writer, sep);
          print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(cljs.core.first(coll_23539__$1), writer, opts) : print_one.call(null, cljs.core.first(coll_23539__$1), writer, opts);
          var G__23541 = cljs.core.next(coll_23539__$1);
          var G__23542 = n_23540 - 1;
          coll_23539__$1 = G__23541;
          n_23540 = G__23542;
          continue;
        } else {
        }
        break;
      }
      if (cljs.core.truth_((new cljs.core.Keyword(null, "print-length", "print-length", 3960797560)).cljs$core$IFn$_invoke$arity$1(opts))) {
        cljs.core._write(writer, sep);
        print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3("...", writer, opts) : print_one.call(null, "...", writer, opts);
      } else {
      }
      return cljs.core._write(writer, end);
    }
  } finally {
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_23538;
  }
};
cljs.core.write_all = function() {
  var write_all__delegate = function(writer, ss) {
    var seq__23547 = cljs.core.seq(ss);
    var chunk__23548 = null;
    var count__23549 = 0;
    var i__23550 = 0;
    while (true) {
      if (i__23550 < count__23549) {
        var s = chunk__23548.cljs$core$IIndexed$_nth$arity$2(null, i__23550);
        cljs.core._write(writer, s);
        var G__23551 = seq__23547;
        var G__23552 = chunk__23548;
        var G__23553 = count__23549;
        var G__23554 = i__23550 + 1;
        seq__23547 = G__23551;
        chunk__23548 = G__23552;
        count__23549 = G__23553;
        i__23550 = G__23554;
        continue;
      } else {
        var temp__4092__auto__ = cljs.core.seq(seq__23547);
        if (temp__4092__auto__) {
          var seq__23547__$1 = temp__4092__auto__;
          if (cljs.core.chunked_seq_QMARK_(seq__23547__$1)) {
            var c__4150__auto__ = cljs.core.chunk_first(seq__23547__$1);
            var G__23555 = cljs.core.chunk_rest(seq__23547__$1);
            var G__23556 = c__4150__auto__;
            var G__23557 = cljs.core.count(c__4150__auto__);
            var G__23558 = 0;
            seq__23547 = G__23555;
            chunk__23548 = G__23556;
            count__23549 = G__23557;
            i__23550 = G__23558;
            continue;
          } else {
            var s = cljs.core.first(seq__23547__$1);
            cljs.core._write(writer, s);
            var G__23559 = cljs.core.next(seq__23547__$1);
            var G__23560 = null;
            var G__23561 = 0;
            var G__23562 = 0;
            seq__23547 = G__23559;
            chunk__23548 = G__23560;
            count__23549 = G__23561;
            i__23550 = G__23562;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  };
  var write_all = function(writer, var_args) {
    var ss = null;
    if (arguments.length > 1) {
      ss = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return write_all__delegate.call(this, writer, ss);
  };
  write_all.cljs$lang$maxFixedArity = 1;
  write_all.cljs$lang$applyTo = function(arglist__23563) {
    var writer = cljs.core.first(arglist__23563);
    var ss = cljs.core.rest(arglist__23563);
    return write_all__delegate(writer, ss);
  };
  write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
  return write_all;
}();
cljs.core.string_print = function string_print(x) {
  cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null;
};
cljs.core.flush = function flush() {
  return null;
};
cljs.core.char_escapes = function() {
  var obj23565 = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
  return obj23565;
}();
cljs.core.quote_string = function quote_string(s) {
  return[cljs.core.str('"'), cljs.core.str(s.replace(RegExp('[\\\\"\b\f\n\r\t]', "g"), function(match) {
    return cljs.core.char_escapes[match];
  })), cljs.core.str('"')].join("");
};
cljs.core.pr_writer = function pr_writer(obj, writer, opts) {
  if (obj == null) {
    return cljs.core._write(writer, "nil");
  } else {
    if (void 0 === obj) {
      return cljs.core._write(writer, "#\x3cundefined\x3e");
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        if (cljs.core.truth_(function() {
          var and__3396__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "meta", "meta", 1017252215));
          if (cljs.core.truth_(and__3396__auto__)) {
            var and__3396__auto____$1 = function() {
              var G__23571 = obj;
              if (G__23571) {
                var bit__4052__auto__ = G__23571.cljs$lang$protocol_mask$partition0$ & 131072;
                if (bit__4052__auto__ || G__23571.cljs$core$IMeta$) {
                  return true;
                } else {
                  if (!G__23571.cljs$lang$protocol_mask$partition0$) {
                    return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__23571);
                  } else {
                    return false;
                  }
                }
              } else {
                return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__23571);
              }
            }();
            if (and__3396__auto____$1) {
              return cljs.core.meta(obj);
            } else {
              return and__3396__auto____$1;
            }
          } else {
            return and__3396__auto__;
          }
        }())) {
          cljs.core._write(writer, "^");
          pr_writer(cljs.core.meta(obj), writer, opts);
          cljs.core._write(writer, " ");
        } else {
        }
        if (obj == null) {
          return cljs.core._write(writer, "nil");
        } else {
          if (obj.cljs$lang$type) {
            return obj.cljs$lang$ctorPrWriter(obj, writer, opts);
          } else {
            if (function() {
              var G__23572 = obj;
              if (G__23572) {
                var bit__4045__auto__ = G__23572.cljs$lang$protocol_mask$partition0$ & 2147483648;
                if (bit__4045__auto__ || G__23572.cljs$core$IPrintWithWriter$) {
                  return true;
                } else {
                  return false;
                }
              } else {
                return false;
              }
            }()) {
              return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, opts);
            } else {
              if (cljs.core.type(obj) === Boolean || typeof obj === "number") {
                return cljs.core._write(writer, [cljs.core.str(obj)].join(""));
              } else {
                if (cljs.core.object_QMARK_(obj)) {
                  cljs.core._write(writer, "#js ");
                  return cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(k) {
                    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k), obj[k]], null);
                  }, cljs.core.js_keys(obj)), pr_writer, writer, opts) : cljs.core.print_map.call(null, cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(k) {
                    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k), obj[k]], null);
                  }, cljs.core.js_keys(obj)), pr_writer, writer, opts);
                } else {
                  if (obj instanceof Array) {
                    return cljs.core.pr_sequential_writer(writer, pr_writer, "#js [", " ", "]", opts, obj);
                  } else {
                    if (goog.isString(obj)) {
                      if (cljs.core.truth_((new cljs.core.Keyword(null, "readably", "readably", 4441712502)).cljs$core$IFn$_invoke$arity$1(opts))) {
                        return cljs.core._write(writer, cljs.core.quote_string(obj));
                      } else {
                        return cljs.core._write(writer, obj);
                      }
                    } else {
                      if (cljs.core.fn_QMARK_(obj)) {
                        return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#\x3c", [cljs.core.str(obj)].join(""), "\x3e"], 0));
                      } else {
                        if (obj instanceof Date) {
                          var normalize = function(n, len) {
                            var ns = [cljs.core.str(n)].join("");
                            while (true) {
                              if (cljs.core.count(ns) < len) {
                                var G__23574 = [cljs.core.str("0"), cljs.core.str(ns)].join("");
                                ns = G__23574;
                                continue;
                              } else {
                                return ns;
                              }
                              break;
                            }
                          };
                          return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(['#inst "', [cljs.core.str(obj.getUTCFullYear())].join(""), "-", normalize(obj.getUTCMonth() + 1, 2), "-", normalize(obj.getUTCDate(), 2), "T", normalize(obj.getUTCHours(), 2), ":", normalize(obj.getUTCMinutes(), 2), ":", normalize(obj.getUTCSeconds(), 2), ".", normalize(obj.getUTCMilliseconds(), 3), "-", '00:00"'], 0));
                        } else {
                          if (cljs.core.regexp_QMARK_(obj)) {
                            return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(['#"', obj.source, '"'], 0));
                          } else {
                            if (function() {
                              var G__23573 = obj;
                              if (G__23573) {
                                var bit__4052__auto__ = G__23573.cljs$lang$protocol_mask$partition0$ & 2147483648;
                                if (bit__4052__auto__ || G__23573.cljs$core$IPrintWithWriter$) {
                                  return true;
                                } else {
                                  if (!G__23573.cljs$lang$protocol_mask$partition0$) {
                                    return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter, G__23573);
                                  } else {
                                    return false;
                                  }
                                }
                              } else {
                                return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter, G__23573);
                              }
                            }()) {
                              return cljs.core._pr_writer(obj, writer, opts);
                            } else {
                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#\x3c", [cljs.core.str(obj)].join(""), "\x3e"], 0));
                              } else {
                                return null;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      } else {
        return null;
      }
    }
  }
};
cljs.core.pr_seq_writer = function pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer(cljs.core.first(objs), writer, opts);
  var seq__23579 = cljs.core.seq(cljs.core.next(objs));
  var chunk__23580 = null;
  var count__23581 = 0;
  var i__23582 = 0;
  while (true) {
    if (i__23582 < count__23581) {
      var obj = chunk__23580.cljs$core$IIndexed$_nth$arity$2(null, i__23582);
      cljs.core._write(writer, " ");
      cljs.core.pr_writer(obj, writer, opts);
      var G__23583 = seq__23579;
      var G__23584 = chunk__23580;
      var G__23585 = count__23581;
      var G__23586 = i__23582 + 1;
      seq__23579 = G__23583;
      chunk__23580 = G__23584;
      count__23581 = G__23585;
      i__23582 = G__23586;
      continue;
    } else {
      var temp__4092__auto__ = cljs.core.seq(seq__23579);
      if (temp__4092__auto__) {
        var seq__23579__$1 = temp__4092__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__23579__$1)) {
          var c__4150__auto__ = cljs.core.chunk_first(seq__23579__$1);
          var G__23587 = cljs.core.chunk_rest(seq__23579__$1);
          var G__23588 = c__4150__auto__;
          var G__23589 = cljs.core.count(c__4150__auto__);
          var G__23590 = 0;
          seq__23579 = G__23587;
          chunk__23580 = G__23588;
          count__23581 = G__23589;
          i__23582 = G__23590;
          continue;
        } else {
          var obj = cljs.core.first(seq__23579__$1);
          cljs.core._write(writer, " ");
          cljs.core.pr_writer(obj, writer, opts);
          var G__23591 = cljs.core.next(seq__23579__$1);
          var G__23592 = null;
          var G__23593 = 0;
          var G__23594 = 0;
          seq__23579 = G__23591;
          chunk__23580 = G__23592;
          count__23581 = G__23593;
          i__23582 = G__23594;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.pr_sb_with_opts = function pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer(objs, writer, opts);
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return sb;
};
cljs.core.pr_str_with_opts = function pr_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "";
  } else {
    return[cljs.core.str(cljs.core.pr_sb_with_opts(objs, opts))].join("");
  }
};
cljs.core.prn_str_with_opts = function prn_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "\n";
  } else {
    var sb = cljs.core.pr_sb_with_opts(objs, opts);
    sb.append("\n");
    return[cljs.core.str(sb)].join("");
  }
};
cljs.core.pr_with_opts = function pr_with_opts(objs, opts) {
  return cljs.core.string_print(cljs.core.pr_str_with_opts(objs, opts));
};
cljs.core.newline = function newline(opts) {
  cljs.core.string_print("\n");
  if (cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", 4338025857)))) {
    return cljs.core.flush();
  } else {
    return null;
  }
};
cljs.core.pr_str = function() {
  var pr_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts(objs, cljs.core.pr_opts());
  };
  var pr_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return pr_str__delegate.call(this, objs);
  };
  pr_str.cljs$lang$maxFixedArity = 0;
  pr_str.cljs$lang$applyTo = function(arglist__23595) {
    var objs = cljs.core.seq(arglist__23595);
    return pr_str__delegate(objs);
  };
  pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
  return pr_str;
}();
cljs.core.prn_str = function() {
  var prn_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts(objs, cljs.core.pr_opts());
  };
  var prn_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return prn_str__delegate.call(this, objs);
  };
  prn_str.cljs$lang$maxFixedArity = 0;
  prn_str.cljs$lang$applyTo = function(arglist__23596) {
    var objs = cljs.core.seq(arglist__23596);
    return prn_str__delegate(objs);
  };
  prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
  return prn_str;
}();
cljs.core.pr = function() {
  var pr__delegate = function(objs) {
    return cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
  };
  var pr = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return pr__delegate.call(this, objs);
  };
  pr.cljs$lang$maxFixedArity = 0;
  pr.cljs$lang$applyTo = function(arglist__23597) {
    var objs = cljs.core.seq(arglist__23597);
    return pr__delegate(objs);
  };
  pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
  return pr;
}();
cljs.core.print = function() {
  var cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false));
  };
  var cljs_core_print = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return cljs_core_print__delegate.call(this, objs);
  };
  cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs_core_print.cljs$lang$applyTo = function(arglist__23598) {
    var objs = cljs.core.seq(arglist__23598);
    return cljs_core_print__delegate(objs);
  };
  cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
  return cljs_core_print;
}();
cljs.core.print_str = function() {
  var print_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false));
  };
  var print_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return print_str__delegate.call(this, objs);
  };
  print_str.cljs$lang$maxFixedArity = 0;
  print_str.cljs$lang$applyTo = function(arglist__23599) {
    var objs = cljs.core.seq(arglist__23599);
    return print_str__delegate(objs);
  };
  print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
  return print_str;
}();
cljs.core.println = function() {
  var println__delegate = function(objs) {
    cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false));
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline(cljs.core.pr_opts());
    } else {
      return null;
    }
  };
  var println = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return println__delegate.call(this, objs);
  };
  println.cljs$lang$maxFixedArity = 0;
  println.cljs$lang$applyTo = function(arglist__23600) {
    var objs = cljs.core.seq(arglist__23600);
    return println__delegate(objs);
  };
  println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
  return println;
}();
cljs.core.println_str = function() {
  var println_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false));
  };
  var println_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return println_str__delegate.call(this, objs);
  };
  println_str.cljs$lang$maxFixedArity = 0;
  println_str.cljs$lang$applyTo = function(arglist__23601) {
    var objs = cljs.core.seq(arglist__23601);
    return println_str__delegate(objs);
  };
  println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
  return println_str;
}();
cljs.core.prn = function() {
  var prn__delegate = function(objs) {
    cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline(cljs.core.pr_opts());
    } else {
      return null;
    }
  };
  var prn = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return prn__delegate.call(this, objs);
  };
  prn.cljs$lang$maxFixedArity = 0;
  prn.cljs$lang$applyTo = function(arglist__23602) {
    var objs = cljs.core.seq(arglist__23602);
    return prn__delegate(objs);
  };
  prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
  return prn;
}();
cljs.core.print_map = function print_map(m, print_one, writer, opts) {
  return cljs.core.pr_sequential_writer(writer, function(e, w, opts__$1) {
    print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(cljs.core.key(e), w, opts__$1) : print_one.call(null, cljs.core.key(e), w, opts__$1);
    cljs.core._write(w, " ");
    return print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(cljs.core.val(e), w, opts__$1) : print_one.call(null, cljs.core.val(e), w, opts__$1);
  }, "{", ", ", "}", opts, cljs.core.seq(m));
};
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq(coll__$1));
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core._write(writer, "()");
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
};
cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;
cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_symbols(x__$1, y);
};
cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;
cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_symbols(x__$1, y);
};
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition0$ = 2153938944;
  this.cljs$lang$protocol_mask$partition1$ = 2;
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core/Atom");
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  var seq__23603 = cljs.core.seq(self__.watches);
  var chunk__23604 = null;
  var count__23605 = 0;
  var i__23606 = 0;
  while (true) {
    if (i__23606 < count__23605) {
      var vec__23607 = chunk__23604.cljs$core$IIndexed$_nth$arity$2(null, i__23606);
      var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23607, 0, null);
      var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23607, 1, null);
      f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(key, this$__$1, oldval, newval) : f.call(null, key, this$__$1, oldval, newval);
      var G__23609 = seq__23603;
      var G__23610 = chunk__23604;
      var G__23611 = count__23605;
      var G__23612 = i__23606 + 1;
      seq__23603 = G__23609;
      chunk__23604 = G__23610;
      count__23605 = G__23611;
      i__23606 = G__23612;
      continue;
    } else {
      var temp__4092__auto__ = cljs.core.seq(seq__23603);
      if (temp__4092__auto__) {
        var seq__23603__$1 = temp__4092__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__23603__$1)) {
          var c__4150__auto__ = cljs.core.chunk_first(seq__23603__$1);
          var G__23613 = cljs.core.chunk_rest(seq__23603__$1);
          var G__23614 = c__4150__auto__;
          var G__23615 = cljs.core.count(c__4150__auto__);
          var G__23616 = 0;
          seq__23603 = G__23613;
          chunk__23604 = G__23614;
          count__23605 = G__23615;
          i__23606 = G__23616;
          continue;
        } else {
          var vec__23608 = cljs.core.first(seq__23603__$1);
          var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23608, 0, null);
          var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23608, 1, null);
          f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(key, this$__$1, oldval, newval) : f.call(null, key, this$__$1, oldval, newval);
          var G__23617 = cljs.core.next(seq__23603__$1);
          var G__23618 = null;
          var G__23619 = 0;
          var G__23620 = 0;
          seq__23603 = G__23617;
          chunk__23604 = G__23618;
          count__23605 = G__23619;
          i__23606 = G__23620;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches, key, f);
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches, key);
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var self__ = this;
  var a__$1 = this;
  cljs.core._write(writer, "#\x3cAtom: ");
  cljs.core.pr_writer(self__.state, writer, opts);
  return cljs.core._write(writer, "\x3e");
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
cljs.core.__GT_Atom = function __GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches);
};
cljs.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new cljs.core.Atom(x, null, null, null);
  };
  var atom__2 = function() {
    var G__23624__delegate = function(x, p__23621) {
      var map__23623 = p__23621;
      var map__23623__$1 = cljs.core.seq_QMARK_(map__23623) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__23623) : map__23623;
      var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23623__$1, new cljs.core.Keyword(null, "validator", "validator", 4199087812));
      var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23623__$1, new cljs.core.Keyword(null, "meta", "meta", 1017252215));
      return new cljs.core.Atom(x, meta, validator, null);
    };
    var G__23624 = function(x, var_args) {
      var p__23621 = null;
      if (arguments.length > 1) {
        p__23621 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__23624__delegate.call(this, x, p__23621);
    };
    G__23624.cljs$lang$maxFixedArity = 1;
    G__23624.cljs$lang$applyTo = function(arglist__23625) {
      var x = cljs.core.first(arglist__23625);
      var p__23621 = cljs.core.rest(arglist__23625);
      return G__23624__delegate(x, p__23621);
    };
    G__23624.cljs$core$IFn$_invoke$arity$variadic = G__23624__delegate;
    return G__23624;
  }();
  atom = function(x, var_args) {
    var p__23621 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
  atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
  return atom;
}();
cljs.core.reset_BANG_ = function reset_BANG_(a, new_value) {
  var validate_23626 = a.validator;
  if (validate_23626 == null) {
  } else {
    if (cljs.core.truth_(validate_23626.cljs$core$IFn$_invoke$arity$1 ? validate_23626.cljs$core$IFn$_invoke$arity$1(new_value) : validate_23626.call(null, new_value))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "validate", "validate", 1233162959, null), new cljs.core.Symbol(null, "new-value", "new-value", 972165309, null))], 0)))].join(""));
    }
  }
  var old_value_23627 = a.state;
  a.state = new_value;
  if (a.watches == null) {
  } else {
    cljs.core._notify_watches(a, old_value_23627, new_value);
  }
  return new_value;
};
cljs.core.swap_BANG_ = function() {
  var swap_BANG_ = null;
  var swap_BANG___2 = function(a, f) {
    return cljs.core.reset_BANG_(a, f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(a.state) : f.call(null, a.state));
  };
  var swap_BANG___3 = function(a, f, x) {
    return cljs.core.reset_BANG_(a, f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(a.state, x) : f.call(null, a.state, x));
  };
  var swap_BANG___4 = function(a, f, x, y) {
    return cljs.core.reset_BANG_(a, f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(a.state, x, y) : f.call(null, a.state, x, y));
  };
  var swap_BANG___5 = function(a, f, x, y, z) {
    return cljs.core.reset_BANG_(a, f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(a.state, x, y, z) : f.call(null, a.state, x, y, z));
  };
  var swap_BANG___6 = function() {
    var G__23628__delegate = function(a, f, x, y, z, more) {
      return cljs.core.reset_BANG_(a, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, a.state, x, y, z, cljs.core.array_seq([more], 0)));
    };
    var G__23628 = function(a, f, x, y, z, var_args) {
      var more = null;
      if (arguments.length > 5) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0);
      }
      return G__23628__delegate.call(this, a, f, x, y, z, more);
    };
    G__23628.cljs$lang$maxFixedArity = 5;
    G__23628.cljs$lang$applyTo = function(arglist__23629) {
      var a = cljs.core.first(arglist__23629);
      arglist__23629 = cljs.core.next(arglist__23629);
      var f = cljs.core.first(arglist__23629);
      arglist__23629 = cljs.core.next(arglist__23629);
      var x = cljs.core.first(arglist__23629);
      arglist__23629 = cljs.core.next(arglist__23629);
      var y = cljs.core.first(arglist__23629);
      arglist__23629 = cljs.core.next(arglist__23629);
      var z = cljs.core.first(arglist__23629);
      var more = cljs.core.rest(arglist__23629);
      return G__23628__delegate(a, f, x, y, z, more);
    };
    G__23628.cljs$core$IFn$_invoke$arity$variadic = G__23628__delegate;
    return G__23628;
  }();
  swap_BANG_ = function(a, f, x, y, z, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return swap_BANG___2.call(this, a, f);
      case 3:
        return swap_BANG___3.call(this, a, f, x);
      case 4:
        return swap_BANG___4.call(this, a, f, x, y);
      case 5:
        return swap_BANG___5.call(this, a, f, x, y, z);
      default:
        return swap_BANG___6.cljs$core$IFn$_invoke$arity$variadic(a, f, x, y, z, cljs.core.array_seq(arguments, 5));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  swap_BANG_.cljs$lang$maxFixedArity = 5;
  swap_BANG_.cljs$lang$applyTo = swap_BANG___6.cljs$lang$applyTo;
  swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
  swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
  swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
  swap_BANG_.cljs$core$IFn$_invoke$arity$5 = swap_BANG___5;
  swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___6.cljs$core$IFn$_invoke$arity$variadic;
  return swap_BANG_;
}();
cljs.core.compare_and_set_BANG_ = function compare_and_set_BANG_(a, oldval, newval) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.state, oldval)) {
    cljs.core.reset_BANG_(a, newval);
    return true;
  } else {
    return false;
  }
};
cljs.core.deref = function deref(o) {
  return cljs.core._deref(o);
};
cljs.core.set_validator_BANG_ = function set_validator_BANG_(iref, val) {
  return iref.validator = val;
};
cljs.core.get_validator = function get_validator(iref) {
  return iref.validator;
};
cljs.core.alter_meta_BANG_ = function() {
  var alter_meta_BANG___delegate = function(iref, f, args) {
    return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, iref.meta, args);
  };
  var alter_meta_BANG_ = function(iref, f, var_args) {
    var args = null;
    if (arguments.length > 2) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return alter_meta_BANG___delegate.call(this, iref, f, args);
  };
  alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
  alter_meta_BANG_.cljs$lang$applyTo = function(arglist__23630) {
    var iref = cljs.core.first(arglist__23630);
    arglist__23630 = cljs.core.next(arglist__23630);
    var f = cljs.core.first(arglist__23630);
    var args = cljs.core.rest(arglist__23630);
    return alter_meta_BANG___delegate(iref, f, args);
  };
  alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
  return alter_meta_BANG_;
}();
cljs.core.reset_meta_BANG_ = function reset_meta_BANG_(iref, m) {
  return iref.meta = m;
};
cljs.core.add_watch = function add_watch(iref, key, f) {
  return cljs.core._add_watch(iref, key, f);
};
cljs.core.remove_watch = function remove_watch(iref, key) {
  return cljs.core._remove_watch(iref, key);
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function() {
  var gensym = null;
  var gensym__0 = function() {
    return gensym.cljs$core$IFn$_invoke$arity$1("G__");
  };
  var gensym__1 = function(prefix_string) {
    if (cljs.core.gensym_counter == null) {
      cljs.core.gensym_counter = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(0);
    } else {
    }
    return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter, cljs.core.inc))].join(""));
  };
  gensym = function(prefix_string) {
    switch(arguments.length) {
      case 0:
        return gensym__0.call(this);
      case 1:
        return gensym__1.call(this, prefix_string);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
  gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
  return gensym;
}();
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(state, f) {
  this.state = state;
  this.f = f;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core/Delay");
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var self__ = this;
  var d__$1 = this;
  return(new cljs.core.Keyword(null, "done", "done", 1016993524)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(self__.state));
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return(new cljs.core.Keyword(null, "value", "value", 1125876963)).cljs$core$IFn$_invoke$arity$1(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.state, function(p__23631) {
    var map__23632 = p__23631;
    var map__23632__$1 = cljs.core.seq_QMARK_(map__23632) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__23632) : map__23632;
    var curr_state = map__23632__$1;
    var done = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23632__$1, new cljs.core.Keyword(null, "done", "done", 1016993524));
    if (cljs.core.truth_(done)) {
      return curr_state;
    } else {
      return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "done", "done", 1016993524), true, new cljs.core.Keyword(null, "value", "value", 1125876963), self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null)], null);
    }
  }));
};
cljs.core.__GT_Delay = function __GT_Delay(state, f) {
  return new cljs.core.Delay(state, f);
};
cljs.core.delay_QMARK_ = function delay_QMARK_(x) {
  return x instanceof cljs.core.Delay;
};
cljs.core.force = function force(x) {
  if (cljs.core.delay_QMARK_(x)) {
    return cljs.core.deref(x);
  } else {
    return x;
  }
};
cljs.core.realized_QMARK_ = function realized_QMARK_(d) {
  return cljs.core._realized_QMARK_(d);
};
cljs.core.IEncodeJS = function() {
  var obj23634 = {};
  return obj23634;
}();
cljs.core._clj__GT_js = function _clj__GT_js(x) {
  if (function() {
    var and__3396__auto__ = x;
    if (and__3396__auto__) {
      return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
  } else {
    var x__4029__auto__ = x == null ? null : x;
    return function() {
      var or__3408__auto__ = cljs.core._clj__GT_js[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._clj__GT_js["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEncodeJS.-clj-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._key__GT_js = function _key__GT_js(x) {
  if (function() {
    var and__3396__auto__ = x;
    if (and__3396__auto__) {
      return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
  } else {
    var x__4029__auto__ = x == null ? null : x;
    return function() {
      var or__3408__auto__ = cljs.core._key__GT_js[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._key__GT_js["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEncodeJS.-key-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.key__GT_js = function key__GT_js(k) {
  if (function() {
    var G__23636 = k;
    if (G__23636) {
      var bit__4052__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3408__auto__ = bit__4052__auto__;
        if (cljs.core.truth_(or__3408__auto__)) {
          return or__3408__auto__;
        } else {
          return G__23636.cljs$core$IEncodeJS$;
        }
      }())) {
        return true;
      } else {
        if (!G__23636.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__23636);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__23636);
    }
  }()) {
    return cljs.core._clj__GT_js(k);
  } else {
    if (typeof k === "string" || (typeof k === "number" || (k instanceof cljs.core.Keyword || k instanceof cljs.core.Symbol))) {
      return cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(k) : cljs.core.clj__GT_js.call(null, k);
    } else {
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
    }
  }
};
cljs.core.clj__GT_js = function clj__GT_js(x) {
  if (x == null) {
    return null;
  } else {
    if (function() {
      var G__23650 = x;
      if (G__23650) {
        var bit__4052__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3408__auto__ = bit__4052__auto__;
          if (cljs.core.truth_(or__3408__auto__)) {
            return or__3408__auto__;
          } else {
            return G__23650.cljs$core$IEncodeJS$;
          }
        }())) {
          return true;
        } else {
          if (!G__23650.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__23650);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__23650);
      }
    }()) {
      return cljs.core._clj__GT_js(x);
    } else {
      if (x instanceof cljs.core.Keyword) {
        return cljs.core.name(x);
      } else {
        if (x instanceof cljs.core.Symbol) {
          return[cljs.core.str(x)].join("");
        } else {
          if (cljs.core.map_QMARK_(x)) {
            var m = function() {
              var obj23652 = {};
              return obj23652;
            }();
            var seq__23653_23663 = cljs.core.seq(x);
            var chunk__23654_23664 = null;
            var count__23655_23665 = 0;
            var i__23656_23666 = 0;
            while (true) {
              if (i__23656_23666 < count__23655_23665) {
                var vec__23657_23667 = chunk__23654_23664.cljs$core$IIndexed$_nth$arity$2(null, i__23656_23666);
                var k_23668 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23657_23667, 0, null);
                var v_23669 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23657_23667, 1, null);
                m[cljs.core.key__GT_js(k_23668)] = clj__GT_js(v_23669);
                var G__23670 = seq__23653_23663;
                var G__23671 = chunk__23654_23664;
                var G__23672 = count__23655_23665;
                var G__23673 = i__23656_23666 + 1;
                seq__23653_23663 = G__23670;
                chunk__23654_23664 = G__23671;
                count__23655_23665 = G__23672;
                i__23656_23666 = G__23673;
                continue;
              } else {
                var temp__4092__auto___23674 = cljs.core.seq(seq__23653_23663);
                if (temp__4092__auto___23674) {
                  var seq__23653_23675__$1 = temp__4092__auto___23674;
                  if (cljs.core.chunked_seq_QMARK_(seq__23653_23675__$1)) {
                    var c__4150__auto___23676 = cljs.core.chunk_first(seq__23653_23675__$1);
                    var G__23677 = cljs.core.chunk_rest(seq__23653_23675__$1);
                    var G__23678 = c__4150__auto___23676;
                    var G__23679 = cljs.core.count(c__4150__auto___23676);
                    var G__23680 = 0;
                    seq__23653_23663 = G__23677;
                    chunk__23654_23664 = G__23678;
                    count__23655_23665 = G__23679;
                    i__23656_23666 = G__23680;
                    continue;
                  } else {
                    var vec__23658_23681 = cljs.core.first(seq__23653_23675__$1);
                    var k_23682 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23658_23681, 0, null);
                    var v_23683 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23658_23681, 1, null);
                    m[cljs.core.key__GT_js(k_23682)] = clj__GT_js(v_23683);
                    var G__23684 = cljs.core.next(seq__23653_23675__$1);
                    var G__23685 = null;
                    var G__23686 = 0;
                    var G__23687 = 0;
                    seq__23653_23663 = G__23684;
                    chunk__23654_23664 = G__23685;
                    count__23655_23665 = G__23686;
                    i__23656_23666 = G__23687;
                    continue;
                  }
                } else {
                }
              }
              break;
            }
            return m;
          } else {
            if (cljs.core.coll_QMARK_(x)) {
              var arr = [];
              var seq__23659_23688 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js, x));
              var chunk__23660_23689 = null;
              var count__23661_23690 = 0;
              var i__23662_23691 = 0;
              while (true) {
                if (i__23662_23691 < count__23661_23690) {
                  var x_23692__$1 = chunk__23660_23689.cljs$core$IIndexed$_nth$arity$2(null, i__23662_23691);
                  arr.push(x_23692__$1);
                  var G__23693 = seq__23659_23688;
                  var G__23694 = chunk__23660_23689;
                  var G__23695 = count__23661_23690;
                  var G__23696 = i__23662_23691 + 1;
                  seq__23659_23688 = G__23693;
                  chunk__23660_23689 = G__23694;
                  count__23661_23690 = G__23695;
                  i__23662_23691 = G__23696;
                  continue;
                } else {
                  var temp__4092__auto___23697 = cljs.core.seq(seq__23659_23688);
                  if (temp__4092__auto___23697) {
                    var seq__23659_23698__$1 = temp__4092__auto___23697;
                    if (cljs.core.chunked_seq_QMARK_(seq__23659_23698__$1)) {
                      var c__4150__auto___23699 = cljs.core.chunk_first(seq__23659_23698__$1);
                      var G__23700 = cljs.core.chunk_rest(seq__23659_23698__$1);
                      var G__23701 = c__4150__auto___23699;
                      var G__23702 = cljs.core.count(c__4150__auto___23699);
                      var G__23703 = 0;
                      seq__23659_23688 = G__23700;
                      chunk__23660_23689 = G__23701;
                      count__23661_23690 = G__23702;
                      i__23662_23691 = G__23703;
                      continue;
                    } else {
                      var x_23704__$1 = cljs.core.first(seq__23659_23698__$1);
                      arr.push(x_23704__$1);
                      var G__23705 = cljs.core.next(seq__23659_23698__$1);
                      var G__23706 = null;
                      var G__23707 = 0;
                      var G__23708 = 0;
                      seq__23659_23688 = G__23705;
                      chunk__23660_23689 = G__23706;
                      count__23661_23690 = G__23707;
                      i__23662_23691 = G__23708;
                      continue;
                    }
                  } else {
                  }
                }
                break;
              }
              return arr;
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return x;
              } else {
                return null;
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.IEncodeClojure = function() {
  var obj23710 = {};
  return obj23710;
}();
cljs.core._js__GT_clj = function _js__GT_clj(x, options) {
  if (function() {
    var and__3396__auto__ = x;
    if (and__3396__auto__) {
      return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options);
  } else {
    var x__4029__auto__ = x == null ? null : x;
    return function() {
      var or__3408__auto__ = cljs.core._js__GT_clj[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._js__GT_clj["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEncodeClojure.-js-\x3eclj", x);
        }
      }
    }().call(null, x, options);
  }
};
cljs.core.js__GT_clj = function() {
  var js__GT_clj = null;
  var js__GT_clj__1 = function(x) {
    return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 4191781672), false], null)], 0));
  };
  var js__GT_clj__2 = function() {
    var G__23731__delegate = function(x, opts) {
      if (function() {
        var G__23721 = x;
        if (G__23721) {
          var bit__4052__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__3408__auto__ = bit__4052__auto__;
            if (cljs.core.truth_(or__3408__auto__)) {
              return or__3408__auto__;
            } else {
              return G__23721.cljs$core$IEncodeClojure$;
            }
          }())) {
            return true;
          } else {
            if (!G__23721.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, G__23721);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, G__23721);
        }
      }()) {
        return cljs.core._js__GT_clj(x, cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map, opts));
      } else {
        if (cljs.core.seq(opts)) {
          var map__23722 = opts;
          var map__23722__$1 = cljs.core.seq_QMARK_(map__23722) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__23722) : map__23722;
          var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23722__$1, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 4191781672));
          var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
          var f = function(map__23722, map__23722__$1, keywordize_keys, keyfn) {
            return function thisfn(x__$1) {
              if (cljs.core.seq_QMARK_(x__$1)) {
                return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn, x__$1));
              } else {
                if (cljs.core.coll_QMARK_(x__$1)) {
                  return cljs.core.into(cljs.core.empty(x__$1), cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn, x__$1));
                } else {
                  if (x__$1 instanceof Array) {
                    return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn, x__$1));
                  } else {
                    if (cljs.core.type(x__$1) === Object) {
                      return cljs.core.into(cljs.core.PersistentArrayMap.EMPTY, function() {
                        var iter__4119__auto__ = function(map__23722, map__23722__$1, keywordize_keys, keyfn) {
                          return function iter__23727(s__23728) {
                            return new cljs.core.LazySeq(null, function(map__23722, map__23722__$1, keywordize_keys, keyfn) {
                              return function() {
                                var s__23728__$1 = s__23728;
                                while (true) {
                                  var temp__4092__auto__ = cljs.core.seq(s__23728__$1);
                                  if (temp__4092__auto__) {
                                    var s__23728__$2 = temp__4092__auto__;
                                    if (cljs.core.chunked_seq_QMARK_(s__23728__$2)) {
                                      var c__4117__auto__ = cljs.core.chunk_first(s__23728__$2);
                                      var size__4118__auto__ = cljs.core.count(c__4117__auto__);
                                      var b__23730 = cljs.core.chunk_buffer(size__4118__auto__);
                                      if (function() {
                                        var i__23729 = 0;
                                        while (true) {
                                          if (i__23729 < size__4118__auto__) {
                                            var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4117__auto__, i__23729);
                                            cljs.core.chunk_append(b__23730, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(k) : keyfn.call(null, k), thisfn(x__$1[k])], null));
                                            var G__23732 = i__23729 + 1;
                                            i__23729 = G__23732;
                                            continue;
                                          } else {
                                            return true;
                                          }
                                          break;
                                        }
                                      }()) {
                                        return cljs.core.chunk_cons(cljs.core.chunk(b__23730), iter__23727(cljs.core.chunk_rest(s__23728__$2)));
                                      } else {
                                        return cljs.core.chunk_cons(cljs.core.chunk(b__23730), null);
                                      }
                                    } else {
                                      var k = cljs.core.first(s__23728__$2);
                                      return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(k) : keyfn.call(null, k), thisfn(x__$1[k])], null), iter__23727(cljs.core.rest(s__23728__$2)));
                                    }
                                  } else {
                                    return null;
                                  }
                                  break;
                                }
                              };
                            }(map__23722, map__23722__$1, keywordize_keys, keyfn), null, null);
                          };
                        }(map__23722, map__23722__$1, keywordize_keys, keyfn);
                        return iter__4119__auto__(cljs.core.js_keys(x__$1));
                      }());
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        return x__$1;
                      } else {
                        return null;
                      }
                    }
                  }
                }
              }
            };
          }(map__23722, map__23722__$1, keywordize_keys, keyfn);
          return f(x);
        } else {
          return null;
        }
      }
    };
    var G__23731 = function(x, var_args) {
      var opts = null;
      if (arguments.length > 1) {
        opts = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__23731__delegate.call(this, x, opts);
    };
    G__23731.cljs$lang$maxFixedArity = 1;
    G__23731.cljs$lang$applyTo = function(arglist__23733) {
      var x = cljs.core.first(arglist__23733);
      var opts = cljs.core.rest(arglist__23733);
      return G__23731__delegate(x, opts);
    };
    G__23731.cljs$core$IFn$_invoke$arity$variadic = G__23731__delegate;
    return G__23731;
  }();
  js__GT_clj = function(x, var_args) {
    var opts = var_args;
    switch(arguments.length) {
      case 1:
        return js__GT_clj__1.call(this, x);
      default:
        return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js__GT_clj.cljs$lang$maxFixedArity = 1;
  js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
  js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
  js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
  return js__GT_clj;
}();
cljs.core.memoize = function memoize(f) {
  var mem = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);
  return function() {
    var G__23734__delegate = function(args) {
      var temp__4090__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(mem), args);
      if (cljs.core.truth_(temp__4090__auto__)) {
        var v = temp__4090__auto__;
        return v;
      } else {
        var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
        cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem, cljs.core.assoc, args, ret);
        return ret;
      }
    };
    var G__23734 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__23734__delegate.call(this, args);
    };
    G__23734.cljs$lang$maxFixedArity = 0;
    G__23734.cljs$lang$applyTo = function(arglist__23735) {
      var args = cljs.core.seq(arglist__23735);
      return G__23734__delegate(args);
    };
    G__23734.cljs$core$IFn$_invoke$arity$variadic = G__23734__delegate;
    return G__23734;
  }();
};
cljs.core.trampoline = function() {
  var trampoline = null;
  var trampoline__1 = function(f) {
    while (true) {
      var ret = f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      if (cljs.core.fn_QMARK_(ret)) {
        var G__23736 = ret;
        f = G__23736;
        continue;
      } else {
        return ret;
      }
      break;
    }
  };
  var trampoline__2 = function() {
    var G__23737__delegate = function(f, args) {
      return trampoline.cljs$core$IFn$_invoke$arity$1(function() {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
      });
    };
    var G__23737 = function(f, var_args) {
      var args = null;
      if (arguments.length > 1) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__23737__delegate.call(this, f, args);
    };
    G__23737.cljs$lang$maxFixedArity = 1;
    G__23737.cljs$lang$applyTo = function(arglist__23738) {
      var f = cljs.core.first(arglist__23738);
      var args = cljs.core.rest(arglist__23738);
      return G__23737__delegate(f, args);
    };
    G__23737.cljs$core$IFn$_invoke$arity$variadic = G__23737__delegate;
    return G__23737;
  }();
  trampoline = function(f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return trampoline__1.call(this, f);
      default:
        return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  trampoline.cljs$lang$maxFixedArity = 1;
  trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
  trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
  trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
  return trampoline;
}();
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return rand.cljs$core$IFn$_invoke$arity$1(1);
  };
  var rand__1 = function(n) {
    return(Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null)) * n;
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand;
}();
cljs.core.rand_int = function rand_int(n) {
  return Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1((Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null)) * n) : Math.floor.call(null, (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null)) * n);
};
cljs.core.rand_nth = function rand_nth(coll) {
  return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll, cljs.core.rand_int(cljs.core.count(coll)));
};
cljs.core.group_by = function group_by(f, coll) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(ret, x) {
    var k = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x);
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.PersistentVector.EMPTY), x));
  }, cljs.core.PersistentArrayMap.EMPTY, coll);
};
cljs.core.make_hierarchy = function make_hierarchy() {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", 4515496059), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "descendants", "descendants", 768214664), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442), cljs.core.PersistentArrayMap.EMPTY], null);
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function get_global_hierarchy() {
  if (cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.make_hierarchy());
  } else {
  }
  return cljs.core._global_hierarchy;
};
cljs.core.swap_global_hierarchy_BANG_ = function() {
  var swap_global_hierarchy_BANG___delegate = function(f, args) {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_, cljs.core.get_global_hierarchy(), f, args);
  };
  var swap_global_hierarchy_BANG_ = function(f, var_args) {
    var args = null;
    if (arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return swap_global_hierarchy_BANG___delegate.call(this, f, args);
  };
  swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
  swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(arglist__23739) {
    var f = cljs.core.first(arglist__23739);
    var args = cljs.core.rest(arglist__23739);
    return swap_global_hierarchy_BANG___delegate(f, args);
  };
  swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
  return swap_global_hierarchy_BANG_;
}();
cljs.core.isa_QMARK_ = function() {
  var isa_QMARK_ = null;
  var isa_QMARK___2 = function(child, parent) {
    return isa_QMARK_.cljs$core$IFn$_invoke$arity$3(cljs.core.deref(cljs.core.get_global_hierarchy()), child, parent);
  };
  var isa_QMARK___3 = function(h, child, parent) {
    var or__3408__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child, parent);
    if (or__3408__auto__) {
      return or__3408__auto__;
    } else {
      var or__3408__auto____$1 = cljs.core.contains_QMARK_((new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).cljs$core$IFn$_invoke$arity$1(h).call(null, child), parent);
      if (or__3408__auto____$1) {
        return or__3408__auto____$1;
      } else {
        var and__3396__auto__ = cljs.core.vector_QMARK_(parent);
        if (and__3396__auto__) {
          var and__3396__auto____$1 = cljs.core.vector_QMARK_(child);
          if (and__3396__auto____$1) {
            var and__3396__auto____$2 = cljs.core.count(parent) === cljs.core.count(child);
            if (and__3396__auto____$2) {
              var ret = true;
              var i = 0;
              while (true) {
                if (!ret || i === cljs.core.count(parent)) {
                  return ret;
                } else {
                  var G__23740 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h, child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(i) : child.call(null, i), parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(i) : parent.call(null, i));
                  var G__23741 = i + 1;
                  ret = G__23740;
                  i = G__23741;
                  continue;
                }
                break;
              }
            } else {
              return and__3396__auto____$2;
            }
          } else {
            return and__3396__auto____$1;
          }
        } else {
          return and__3396__auto__;
        }
      }
    }
  };
  isa_QMARK_ = function(h, child, parent) {
    switch(arguments.length) {
      case 2:
        return isa_QMARK___2.call(this, h, child);
      case 3:
        return isa_QMARK___3.call(this, h, child, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
  isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
  return isa_QMARK_;
}();
cljs.core.parents = function() {
  var parents = null;
  var parents__1 = function(tag) {
    return parents.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.core.get_global_hierarchy()), tag);
  };
  var parents__2 = function(h, tag) {
    return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "parents", "parents", 4515496059)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  parents = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, h);
      case 2:
        return parents__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
  parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
  return parents;
}();
cljs.core.ancestors = function() {
  var ancestors = null;
  var ancestors__1 = function(tag) {
    return ancestors.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.core.get_global_hierarchy()), tag);
  };
  var ancestors__2 = function(h, tag) {
    return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  ancestors = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return ancestors__1.call(this, h);
      case 2:
        return ancestors__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
  ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
  return ancestors;
}();
cljs.core.descendants = function() {
  var descendants = null;
  var descendants__1 = function(tag) {
    return descendants.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.core.get_global_hierarchy()), tag);
  };
  var descendants__2 = function(h, tag) {
    return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "descendants", "descendants", 768214664)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  descendants = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return descendants__1.call(this, h);
      case 2:
        return descendants__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
  descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
  return descendants;
}();
cljs.core.derive = function() {
  var derive = null;
  var derive__2 = function(tag, parent) {
    if (cljs.core.truth_(cljs.core.namespace(parent))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "namespace", "namespace", -388313324, null), new cljs.core.Symbol(null, "parent", "parent", 1659011683, null))], 0)))].join(""));
    }
    cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive, cljs.core.array_seq([tag, parent], 0));
    return null;
  };
  var derive__3 = function(h, tag, parent) {
    if (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag, parent)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "not\x3d", "not\x3d", -1637144189, null), new cljs.core.Symbol(null, "tag", "tag", -1640416941, null), new cljs.core.Symbol(null, "parent", "parent", 1659011683, null))], 0)))].join(""));
    }
    var tp = (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).cljs$core$IFn$_invoke$arity$1(h);
    var td = (new cljs.core.Keyword(null, "descendants", "descendants", 768214664)).cljs$core$IFn$_invoke$arity$1(h);
    var ta = (new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).cljs$core$IFn$_invoke$arity$1(h);
    var tf = function(tp, td, ta) {
      return function(m, source, sources, target, targets) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(tp, td, ta) {
          return function(ret, k) {
            return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons(target, targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(target) : targets.call(null, target))));
          };
        }(tp, td, ta), m, cljs.core.cons(source, sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(source) : sources.call(null, source)));
      };
    }(tp, td, ta);
    var or__3408__auto__ = cljs.core.contains_QMARK_(tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(tag) : tp.call(null, tag), parent) ? null : function() {
      if (cljs.core.contains_QMARK_(ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(tag) : ta.call(null, tag), parent)) {
        throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
      } else {
      }
      if (cljs.core.contains_QMARK_(ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(parent) : ta.call(null, parent), tag)) {
        throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
      } else {
      }
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", 4515496059), cljs.core.assoc.cljs$core$IFn$_invoke$arity$3((new cljs.core.Keyword(null, "parents", "parents", 4515496059)).cljs$core$IFn$_invoke$arity$1(h), tag, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442), tf((new cljs.core.Keyword(null, 
      "ancestors", "ancestors", 889955442)).cljs$core$IFn$_invoke$arity$1(h), tag, td, parent, ta), new cljs.core.Keyword(null, "descendants", "descendants", 768214664), tf((new cljs.core.Keyword(null, "descendants", "descendants", 768214664)).cljs$core$IFn$_invoke$arity$1(h), parent, ta, tag, td)], null);
    }();
    if (cljs.core.truth_(or__3408__auto__)) {
      return or__3408__auto__;
    } else {
      return h;
    }
  };
  derive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return derive__2.call(this, h, tag);
      case 3:
        return derive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
  derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
  return derive;
}();
cljs.core.underive = function() {
  var underive = null;
  var underive__2 = function(tag, parent) {
    cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive, cljs.core.array_seq([tag, parent], 0));
    return null;
  };
  var underive__3 = function(h, tag, parent) {
    var parentMap = (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).cljs$core$IFn$_invoke$arity$1(h);
    var childsParents = cljs.core.truth_(parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(tag) : parentMap.call(null, tag)) ? cljs.core.disj.cljs$core$IFn$_invoke$arity$2(parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(tag) : parentMap.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
    var newParents = cljs.core.truth_(cljs.core.not_empty(childsParents)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap, tag, childsParents) : cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap, tag);
    var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(parentMap, childsParents, newParents) {
      return function(p1__23742_SHARP_) {
        return cljs.core.cons(cljs.core.first(p1__23742_SHARP_), cljs.core.interpose(cljs.core.first(p1__23742_SHARP_), cljs.core.second(p1__23742_SHARP_)));
      };
    }(parentMap, childsParents, newParents), cljs.core.seq(newParents)));
    if (cljs.core.contains_QMARK_(parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(tag) : parentMap.call(null, tag), parent)) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__23743_SHARP_, p2__23744_SHARP_) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive, p1__23743_SHARP_, p2__23744_SHARP_);
      }, cljs.core.make_hierarchy(), cljs.core.partition.cljs$core$IFn$_invoke$arity$2(2, deriv_seq));
    } else {
      return h;
    }
  };
  underive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return underive__2.call(this, h, tag);
      case 3:
        return underive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
  underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
  return underive;
}();
cljs.core.reset_cache = function reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache, function(_) {
    return cljs.core.deref(method_table);
  });
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy, function(_) {
    return cljs.core.deref(hierarchy);
  });
};
cljs.core.prefers_STAR_ = function prefers_STAR_(x, y, prefer_table) {
  var xprefs = cljs.core.deref(prefer_table).call(null, x);
  var or__3408__auto__ = cljs.core.truth_(function() {
    var and__3396__auto__ = xprefs;
    if (cljs.core.truth_(and__3396__auto__)) {
      return xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(y) : xprefs.call(null, y);
    } else {
      return and__3396__auto__;
    }
  }()) ? true : null;
  if (cljs.core.truth_(or__3408__auto__)) {
    return or__3408__auto__;
  } else {
    var or__3408__auto____$1 = function() {
      var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
      while (true) {
        if (cljs.core.count(ps) > 0) {
          if (cljs.core.truth_(prefers_STAR_(x, cljs.core.first(ps), prefer_table))) {
          } else {
          }
          var G__23745 = cljs.core.rest(ps);
          ps = G__23745;
          continue;
        } else {
          return null;
        }
        break;
      }
    }();
    if (cljs.core.truth_(or__3408__auto____$1)) {
      return or__3408__auto____$1;
    } else {
      var or__3408__auto____$2 = function() {
        var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
        while (true) {
          if (cljs.core.count(ps) > 0) {
            if (cljs.core.truth_(prefers_STAR_(cljs.core.first(ps), y, prefer_table))) {
            } else {
            }
            var G__23746 = cljs.core.rest(ps);
            ps = G__23746;
            continue;
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(or__3408__auto____$2)) {
        return or__3408__auto____$2;
      } else {
        return false;
      }
    }
  }
};
cljs.core.dominates = function dominates(x, y, prefer_table) {
  var or__3408__auto__ = cljs.core.prefers_STAR_(x, y, prefer_table);
  if (cljs.core.truth_(or__3408__auto__)) {
    return or__3408__auto__;
  } else {
    return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x, y);
  }
};
cljs.core.find_and_cache_best_method = function find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(be, p__23749) {
    var vec__23750 = p__23749;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23750, 0, null);
    var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23750, 1, null);
    var e = vec__23750;
    if (cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(cljs.core.deref(hierarchy), dispatch_val, k)) {
      var be2 = cljs.core.truth_(function() {
        var or__3408__auto__ = be == null;
        if (or__3408__auto__) {
          return or__3408__auto__;
        } else {
          return cljs.core.dominates(k, cljs.core.first(be), prefer_table);
        }
      }()) ? e : be;
      if (cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2), k, prefer_table))) {
      } else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -\x3e "), cljs.core.str(k), cljs.core.str(" and "), cljs.core.str(cljs.core.first(be2)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2;
    } else {
      return be;
    }
  }, null, cljs.core.deref(method_table));
  if (cljs.core.truth_(best_entry)) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cached_hierarchy), cljs.core.deref(hierarchy))) {
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache, cljs.core.assoc, dispatch_val, cljs.core.second(best_entry));
      return cljs.core.second(best_entry);
    } else {
      cljs.core.reset_cache(method_cache, method_table, cached_hierarchy, hierarchy);
      return find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
    }
  } else {
    return null;
  }
};
cljs.core.IMultiFn = function() {
  var obj23752 = {};
  return obj23752;
}();
cljs.core._reset = function _reset(mf) {
  if (function() {
    var and__3396__auto__ = mf;
    if (and__3396__auto__) {
      return mf.cljs$core$IMultiFn$_reset$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
  } else {
    var x__4029__auto__ = mf == null ? null : mf;
    return function() {
      var or__3408__auto__ = cljs.core._reset[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._reset["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._add_method = function _add_method(mf, dispatch_val, method) {
  if (function() {
    var and__3396__auto__ = mf;
    if (and__3396__auto__) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method);
  } else {
    var x__4029__auto__ = mf == null ? null : mf;
    return function() {
      var or__3408__auto__ = cljs.core._add_method[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._add_method["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method);
  }
};
cljs.core._remove_method = function _remove_method(mf, dispatch_val) {
  if (function() {
    var and__3396__auto__ = mf;
    if (and__3396__auto__) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val);
  } else {
    var x__4029__auto__ = mf == null ? null : mf;
    return function() {
      var or__3408__auto__ = cljs.core._remove_method[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._remove_method["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._prefer_method = function _prefer_method(mf, dispatch_val, dispatch_val_y) {
  if (function() {
    var and__3396__auto__ = mf;
    if (and__3396__auto__) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y);
  } else {
    var x__4029__auto__ = mf == null ? null : mf;
    return function() {
      var or__3408__auto__ = cljs.core._prefer_method[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._prefer_method["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y);
  }
};
cljs.core._get_method = function _get_method(mf, dispatch_val) {
  if (function() {
    var and__3396__auto__ = mf;
    if (and__3396__auto__) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val);
  } else {
    var x__4029__auto__ = mf == null ? null : mf;
    return function() {
      var or__3408__auto__ = cljs.core._get_method[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._get_method["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._methods = function _methods(mf) {
  if (function() {
    var and__3396__auto__ = mf;
    if (and__3396__auto__) {
      return mf.cljs$core$IMultiFn$_methods$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
  } else {
    var x__4029__auto__ = mf == null ? null : mf;
    return function() {
      var or__3408__auto__ = cljs.core._methods[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._methods["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._prefers = function _prefers(mf) {
  if (function() {
    var and__3396__auto__ = mf;
    if (and__3396__auto__) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
  } else {
    var x__4029__auto__ = mf == null ? null : mf;
    return function() {
      var or__3408__auto__ = cljs.core._prefers[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._prefers["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._dispatch = function _dispatch(mf, args) {
  if (function() {
    var and__3396__auto__ = mf;
    if (and__3396__auto__) {
      return mf.cljs$core$IMultiFn$_dispatch$arity$2;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_dispatch$arity$2(mf, args);
  } else {
    var x__4029__auto__ = mf == null ? null : mf;
    return function() {
      var or__3408__auto__ = cljs.core._dispatch[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._dispatch["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-dispatch", mf);
        }
      }
    }().call(null, mf, args);
  }
};
cljs.core.do_dispatch = function do_dispatch(mf, name, dispatch_fn, args) {
  var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(dispatch_fn, args);
  var target_fn = cljs.core._get_method(mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val)].join(""));
  }
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(target_fn, args);
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194304;
  this.cljs$lang$protocol_mask$partition1$ = 256;
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core/MultiFn");
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table, function(mf__$2) {
    return cljs.core.PersistentArrayMap.EMPTY;
  });
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache, function(mf__$2) {
    return cljs.core.PersistentArrayMap.EMPTY;
  });
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$2) {
    return cljs.core.PersistentArrayMap.EMPTY;
  });
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy, function(mf__$2) {
    return null;
  });
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(self__.cached_hierarchy), cljs.core.deref(self__.hierarchy))) {
  } else {
    cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  }
  var temp__4090__auto__ = cljs.core.deref(self__.method_cache).call(null, dispatch_val);
  if (cljs.core.truth_(temp__4090__auto__)) {
    var target_fn = temp__4090__auto__;
    return target_fn;
  } else {
    var temp__4090__auto____$1 = cljs.core.find_and_cache_best_method(self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy);
    if (cljs.core.truth_(temp__4090__auto____$1)) {
      var target_fn = temp__4090__auto____$1;
      return target_fn;
    } else {
      return cljs.core.deref(self__.method_table).call(null, self__.default_dispatch_val);
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(self__.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  } else {
  }
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(old) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y));
  });
  return cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref(self__.method_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref(self__.prefer_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch$arity$2 = function(mf, args) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.do_dispatch(mf__$1, self__.name, self__.dispatch_fn, args);
};
cljs.core.__GT_MultiFn = function __GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
};
cljs.core.MultiFn.prototype.call = function() {
  var G__23753__delegate = function(_, args) {
    var self = this;
    return cljs.core._dispatch(self, args);
  };
  var G__23753 = function(_, var_args) {
    var args = null;
    if (arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return G__23753__delegate.call(this, _, args);
  };
  G__23753.cljs$lang$maxFixedArity = 1;
  G__23753.cljs$lang$applyTo = function(arglist__23754) {
    var _ = cljs.core.first(arglist__23754);
    var args = cljs.core.rest(arglist__23754);
    return G__23753__delegate(_, args);
  };
  G__23753.cljs$core$IFn$_invoke$arity$variadic = G__23753__delegate;
  return G__23753;
}();
cljs.core.MultiFn.prototype.apply = function(_, args) {
  var self = this;
  return cljs.core._dispatch(self, args);
};
cljs.core.remove_all_methods = function remove_all_methods(multifn) {
  return cljs.core._reset(multifn);
};
cljs.core.remove_method = function remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method(multifn, dispatch_val);
};
cljs.core.prefer_method = function prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method(multifn, dispatch_val_x, dispatch_val_y);
};
cljs.core.methods$ = function methods$(multifn) {
  return cljs.core._methods(multifn);
};
cljs.core.get_method = function get_method(multifn, dispatch_val) {
  return cljs.core._get_method(multifn, dispatch_val);
};
cljs.core.prefers = function prefers(multifn) {
  return cljs.core._prefers(multifn);
};
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104;
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core/UUID");
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.string.hashCode(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0)));
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  var ___$2 = this;
  return cljs.core._write(writer, [cljs.core.str('#uuid "'), cljs.core.str(self__.uuid), cljs.core.str('"')].join(""));
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return other instanceof cljs.core.UUID && self__.uuid === other.uuid;
};
cljs.core.UUID.prototype.cljs$core$ICloneable$ = true;
cljs.core.UUID.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.UUID(self__.uuid);
};
cljs.core.__GT_UUID = function __GT_UUID(uuid) {
  return new cljs.core.UUID(uuid);
};
cljs.core.ExceptionInfo = function(message, data, cause) {
  this.message = message;
  this.data = data;
  this.cause = cause;
};
cljs.core.ExceptionInfo.cljs$lang$type = true;
cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";
cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = function(this__3973__auto__, writer__3974__auto__, opts__3975__auto__) {
  return cljs.core._write(writer__3974__auto__, "cljs.core/ExceptionInfo");
};
cljs.core.__GT_ExceptionInfo = function __GT_ExceptionInfo(message, data, cause) {
  return new cljs.core.ExceptionInfo(message, data, cause);
};
cljs.core.ExceptionInfo.prototype = new Error;
cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;
cljs.core.ex_info = function() {
  var ex_info = null;
  var ex_info__2 = function(msg, map) {
    return new cljs.core.ExceptionInfo(msg, map, null);
  };
  var ex_info__3 = function(msg, map, cause) {
    return new cljs.core.ExceptionInfo(msg, map, cause);
  };
  ex_info = function(msg, map, cause) {
    switch(arguments.length) {
      case 2:
        return ex_info__2.call(this, msg, map);
      case 3:
        return ex_info__3.call(this, msg, map, cause);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
  ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
  return ex_info;
}();
cljs.core.ex_data = function ex_data(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.data;
  } else {
    return null;
  }
};
cljs.core.ex_message = function ex_message(ex) {
  if (ex instanceof Error) {
    return ex.message;
  } else {
    return null;
  }
};
cljs.core.ex_cause = function ex_cause(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause;
  } else {
    return null;
  }
};
cljs.core.comparator = function comparator(pred) {
  return function(x, y) {
    if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(x, y) : pred.call(null, x, y))) {
      return-1;
    } else {
      if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(y, x) : pred.call(null, y, x))) {
        return 1;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return 0;
        } else {
          return null;
        }
      }
    }
  };
};
cljs.core.special_symbol_QMARK_ = function special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null, "deftype*", "deftype*", -978581244, null), null, new cljs.core.Symbol(null, "new", "new", -1640422567, null), null, new cljs.core.Symbol(null, "quote", "quote", -1532577739, null), null, new cljs.core.Symbol(null, "\x26", "\x26", -1640531489, null), null, new cljs.core.Symbol(null, "set!", "set!", -1637004872, null), null, new cljs.core.Symbol(null, "recur", 
  "recur", -1532142362, null), null, new cljs.core.Symbol(null, ".", ".", -1640531481, null), null, new cljs.core.Symbol(null, "ns", "ns", -1640528002, null), null, new cljs.core.Symbol(null, "do", "do", -1640528316, null), null, new cljs.core.Symbol(null, "fn*", "fn*", -1640430053, null), null, new cljs.core.Symbol(null, "throw", "throw", -1530191713, null), null, new cljs.core.Symbol(null, "letfn*", "letfn*", 1548249632, null), null, new cljs.core.Symbol(null, "js*", "js*", -1640426054, null), 
  null, new cljs.core.Symbol(null, "defrecord*", "defrecord*", 774272013, null), null, new cljs.core.Symbol(null, "let*", "let*", -1637213400, null), null, new cljs.core.Symbol(null, "loop*", "loop*", -1537374273, null), null, new cljs.core.Symbol(null, "try", "try", -1640416396, null), null, new cljs.core.Symbol(null, "if", "if", -1640528170, null), null, new cljs.core.Symbol(null, "def", "def", -1640432194, null), null], null), null), x);
};
goog.provide("cljs.core.async.impl.protocols");
goog.require("cljs.core");
cljs.core.async.impl.protocols.MAX_QUEUE_SIZE = 1024;
cljs.core.async.impl.protocols.ReadPort = function() {
  var obj26334 = {};
  return obj26334;
}();
cljs.core.async.impl.protocols.take_BANG_ = function take_BANG_(port, fn1_handler) {
  if (function() {
    var and__3396__auto__ = port;
    if (and__3396__auto__) {
      return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2(port, fn1_handler);
  } else {
    var x__4029__auto__ = port == null ? null : port;
    return function() {
      var or__3408__auto__ = cljs.core.async.impl.protocols.take_BANG_[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core.async.impl.protocols.take_BANG_["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ReadPort.take!", port);
        }
      }
    }().call(null, port, fn1_handler);
  }
};
cljs.core.async.impl.protocols.WritePort = function() {
  var obj26336 = {};
  return obj26336;
}();
cljs.core.async.impl.protocols.put_BANG_ = function put_BANG_(port, val, fn0_handler) {
  if (function() {
    var and__3396__auto__ = port;
    if (and__3396__auto__) {
      return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3(port, val, fn0_handler);
  } else {
    var x__4029__auto__ = port == null ? null : port;
    return function() {
      var or__3408__auto__ = cljs.core.async.impl.protocols.put_BANG_[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core.async.impl.protocols.put_BANG_["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("WritePort.put!", port);
        }
      }
    }().call(null, port, val, fn0_handler);
  }
};
cljs.core.async.impl.protocols.Channel = function() {
  var obj26338 = {};
  return obj26338;
}();
cljs.core.async.impl.protocols.close_BANG_ = function close_BANG_(chan) {
  if (function() {
    var and__3396__auto__ = chan;
    if (and__3396__auto__) {
      return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1(chan);
  } else {
    var x__4029__auto__ = chan == null ? null : chan;
    return function() {
      var or__3408__auto__ = cljs.core.async.impl.protocols.close_BANG_[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core.async.impl.protocols.close_BANG_["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("Channel.close!", chan);
        }
      }
    }().call(null, chan);
  }
};
cljs.core.async.impl.protocols.Handler = function() {
  var obj26340 = {};
  return obj26340;
}();
cljs.core.async.impl.protocols.active_QMARK_ = function active_QMARK_(h) {
  if (function() {
    var and__3396__auto__ = h;
    if (and__3396__auto__) {
      return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1(h);
  } else {
    var x__4029__auto__ = h == null ? null : h;
    return function() {
      var or__3408__auto__ = cljs.core.async.impl.protocols.active_QMARK_[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core.async.impl.protocols.active_QMARK_["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("Handler.active?", h);
        }
      }
    }().call(null, h);
  }
};
cljs.core.async.impl.protocols.commit = function commit(h) {
  if (function() {
    var and__3396__auto__ = h;
    if (and__3396__auto__) {
      return h.cljs$core$async$impl$protocols$Handler$commit$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return h.cljs$core$async$impl$protocols$Handler$commit$arity$1(h);
  } else {
    var x__4029__auto__ = h == null ? null : h;
    return function() {
      var or__3408__auto__ = cljs.core.async.impl.protocols.commit[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core.async.impl.protocols.commit["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("Handler.commit", h);
        }
      }
    }().call(null, h);
  }
};
cljs.core.async.impl.protocols.Buffer = function() {
  var obj26342 = {};
  return obj26342;
}();
cljs.core.async.impl.protocols.full_QMARK_ = function full_QMARK_(b) {
  if (function() {
    var and__3396__auto__ = b;
    if (and__3396__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1(b);
  } else {
    var x__4029__auto__ = b == null ? null : b;
    return function() {
      var or__3408__auto__ = cljs.core.async.impl.protocols.full_QMARK_[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core.async.impl.protocols.full_QMARK_["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("Buffer.full?", b);
        }
      }
    }().call(null, b);
  }
};
cljs.core.async.impl.protocols.remove_BANG_ = function remove_BANG_(b) {
  if (function() {
    var and__3396__auto__ = b;
    if (and__3396__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1(b);
  } else {
    var x__4029__auto__ = b == null ? null : b;
    return function() {
      var or__3408__auto__ = cljs.core.async.impl.protocols.remove_BANG_[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core.async.impl.protocols.remove_BANG_["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("Buffer.remove!", b);
        }
      }
    }().call(null, b);
  }
};
cljs.core.async.impl.protocols.add_BANG_ = function add_BANG_(b, itm) {
  if (function() {
    var and__3396__auto__ = b;
    if (and__3396__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2(b, itm);
  } else {
    var x__4029__auto__ = b == null ? null : b;
    return function() {
      var or__3408__auto__ = cljs.core.async.impl.protocols.add_BANG_[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core.async.impl.protocols.add_BANG_["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("Buffer.add!", b);
        }
      }
    }().call(null, b, itm);
  }
};
cljs.core.async.impl.protocols.UnblockingBuffer = function() {
  var obj26344 = {};
  return obj26344;
}();
goog.provide("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.ioc_helpers.FN_IDX = 0;
cljs.core.async.impl.ioc_helpers.STATE_IDX = 1;
cljs.core.async.impl.ioc_helpers.VALUE_IDX = 2;
cljs.core.async.impl.ioc_helpers.BINDINGS_IDX = 3;
cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES = 4;
cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION = 5;
cljs.core.async.impl.ioc_helpers.USER_START_IDX = 6;
cljs.core.async.impl.ioc_helpers.aset_object = function aset_object(arr, idx, o) {
  return arr[idx][o];
};
cljs.core.async.impl.ioc_helpers.aget_object = function aget_object(arr, idx) {
  return arr[idx];
};
cljs.core.async.impl.ioc_helpers.finished_QMARK_ = function finished_QMARK_(state_array) {
  return cljs.core.keyword_identical_QMARK_(state_array[cljs.core.async.impl.ioc_helpers.STATE_IDX], new cljs.core.Keyword(null, "finished", "finished", 4635210724));
};
cljs.core.async.impl.ioc_helpers.fn_handler = function fn_handler(f) {
  if (typeof cljs.core.async.impl.ioc_helpers.t26362 !== "undefined") {
  } else {
    cljs.core.async.impl.ioc_helpers.t26362 = function(f, fn_handler, meta26363) {
      this.f = f;
      this.fn_handler = fn_handler;
      this.meta26363 = meta26363;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.impl.ioc_helpers.t26362.cljs$lang$type = true;
    cljs.core.async.impl.ioc_helpers.t26362.cljs$lang$ctorStr = "cljs.core.async.impl.ioc-helpers/t26362";
    cljs.core.async.impl.ioc_helpers.t26362.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write(writer__3971__auto__, "cljs.core.async.impl.ioc-helpers/t26362");
    };
    cljs.core.async.impl.ioc_helpers.t26362.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.impl.ioc_helpers.t26362.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.impl.ioc_helpers.t26362.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f;
    };
    cljs.core.async.impl.ioc_helpers.t26362.prototype.cljs$core$IMeta$_meta$arity$1 = function(_26364) {
      var self__ = this;
      var _26364__$1 = this;
      return self__.meta26363;
    };
    cljs.core.async.impl.ioc_helpers.t26362.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_26364, meta26363__$1) {
      var self__ = this;
      var _26364__$1 = this;
      return new cljs.core.async.impl.ioc_helpers.t26362(self__.f, self__.fn_handler, meta26363__$1);
    };
    cljs.core.async.impl.ioc_helpers.__GT_t26362 = function __GT_t26362(f__$1, fn_handler__$1, meta26363) {
      return new cljs.core.async.impl.ioc_helpers.t26362(f__$1, fn_handler__$1, meta26363);
    };
  }
  return new cljs.core.async.impl.ioc_helpers.t26362(f, fn_handler, null);
};
cljs.core.async.impl.ioc_helpers.run_state_machine = function run_state_machine(state) {
  return cljs.core.async.impl.ioc_helpers.aget_object(state, cljs.core.async.impl.ioc_helpers.FN_IDX).call(null, state);
};
cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped = function run_state_machine_wrapped(state) {
  try {
    return cljs.core.async.impl.ioc_helpers.run_state_machine(state);
  } catch (e26366) {
    if (e26366 instanceof Object) {
      var ex = e26366;
      cljs.core.async.impl.ioc_helpers.aget_object(state, cljs.core.async.impl.ioc_helpers.USER_START_IDX).cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1(null);
      throw ex;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw e26366;
      } else {
        return null;
      }
    }
  }
};
cljs.core.async.impl.ioc_helpers.take_BANG_ = function take_BANG_(state, blk, c) {
  var temp__4090__auto__ = c.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2(null, cljs.core.async.impl.ioc_helpers.fn_handler(function(x) {
    var statearr_26369_26371 = state;
    statearr_26369_26371[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = x;
    statearr_26369_26371[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state);
  }));
  if (cljs.core.truth_(temp__4090__auto__)) {
    var cb = temp__4090__auto__;
    var statearr_26370_26372 = state;
    statearr_26370_26372[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref(cb);
    statearr_26370_26372[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
  } else {
    return null;
  }
};
cljs.core.async.impl.ioc_helpers.put_BANG_ = function put_BANG_(state, blk, c, val) {
  var temp__4090__auto__ = c.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3(null, val, cljs.core.async.impl.ioc_helpers.fn_handler(function() {
    var statearr_26375_26377 = state;
    statearr_26375_26377[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = null;
    statearr_26375_26377[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state);
  }));
  if (cljs.core.truth_(temp__4090__auto__)) {
    var cb = temp__4090__auto__;
    var statearr_26376_26378 = state;
    statearr_26376_26378[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref(cb);
    statearr_26376_26378[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
  } else {
    return null;
  }
};
cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_ = function() {
  var ioc_alts_BANG___delegate = function(state, cont_block, ports, p__26379) {
    var map__26384 = p__26379;
    var map__26384__$1 = cljs.core.seq_QMARK_(map__26384) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__26384) : map__26384;
    var opts = map__26384__$1;
    var statearr_26385_26388 = state;
    statearr_26385_26388[cljs.core.async.impl.ioc_helpers.STATE_IDX] = cont_block;
    var temp__4092__auto__ = cljs.core.async.do_alts(function(val) {
      var statearr_26386_26389 = state;
      statearr_26386_26389[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = val;
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state);
    }, ports, opts);
    if (cljs.core.truth_(temp__4092__auto__)) {
      var cb = temp__4092__auto__;
      var statearr_26387_26390 = state;
      statearr_26387_26390[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref(cb);
      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
    } else {
      return null;
    }
  };
  var ioc_alts_BANG_ = function(state, cont_block, ports, var_args) {
    var p__26379 = null;
    if (arguments.length > 3) {
      p__26379 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
    }
    return ioc_alts_BANG___delegate.call(this, state, cont_block, ports, p__26379);
  };
  ioc_alts_BANG_.cljs$lang$maxFixedArity = 3;
  ioc_alts_BANG_.cljs$lang$applyTo = function(arglist__26391) {
    var state = cljs.core.first(arglist__26391);
    arglist__26391 = cljs.core.next(arglist__26391);
    var cont_block = cljs.core.first(arglist__26391);
    arglist__26391 = cljs.core.next(arglist__26391);
    var ports = cljs.core.first(arglist__26391);
    var p__26379 = cljs.core.rest(arglist__26391);
    return ioc_alts_BANG___delegate(state, cont_block, ports, p__26379);
  };
  ioc_alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = ioc_alts_BANG___delegate;
  return ioc_alts_BANG_;
}();
cljs.core.async.impl.ioc_helpers.return_chan = function return_chan(state, value) {
  var c = state[cljs.core.async.impl.ioc_helpers.USER_START_IDX];
  if (value == null) {
  } else {
    c.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3(null, value, cljs.core.async.impl.ioc_helpers.fn_handler(function() {
      return null;
    }));
  }
  c.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1(null);
  return c;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame = function(catch_block, catch_exception, finally_block, continue_block, prev, __meta, __extmap) {
  this.catch_block = catch_block;
  this.catch_exception = catch_exception;
  this.finally_block = finally_block;
  this.continue_block = continue_block;
  this.prev = prev;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  if (arguments.length > 5) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IHash$_hash$arity$1 = function(this__3983__auto__) {
  var self__ = this;
  var this__3983__auto____$1 = this;
  var h__3819__auto__ = self__.__hash;
  if (!(h__3819__auto__ == null)) {
    return h__3819__auto__;
  } else {
    var h__3819__auto____$1 = cljs.core.hash_imap(this__3983__auto____$1);
    self__.__hash = h__3819__auto____$1;
    return h__3819__auto____$1;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__3988__auto__, k__3989__auto__) {
  var self__ = this;
  var this__3988__auto____$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(this__3988__auto____$1, k__3989__auto__, null);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__3990__auto__, k26393, else__3991__auto__) {
  var self__ = this;
  var this__3990__auto____$1 = this;
  if (cljs.core.keyword_identical_QMARK_(k26393, new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893))) {
    return self__.catch_block;
  } else {
    if (cljs.core.keyword_identical_QMARK_(k26393, new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687))) {
      return self__.catch_exception;
    } else {
      if (cljs.core.keyword_identical_QMARK_(k26393, new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429))) {
        return self__.finally_block;
      } else {
        if (cljs.core.keyword_identical_QMARK_(k26393, new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097))) {
          return self__.continue_block;
        } else {
          if (cljs.core.keyword_identical_QMARK_(k26393, new cljs.core.Keyword(null, "prev", "prev", 1017353637))) {
            return self__.prev;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.__extmap, k26393, else__3991__auto__);
            } else {
              return null;
            }
          }
        }
      }
    }
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__3995__auto__, k__3996__auto__, G__26392) {
  var self__ = this;
  var this__3995__auto____$1 = this;
  var pred__26395 = cljs.core.keyword_identical_QMARK_;
  var expr__26396 = k__3996__auto__;
  if (cljs.core.truth_(pred__26395.cljs$core$IFn$_invoke$arity$2 ? pred__26395.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893), expr__26396) : pred__26395.call(null, new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893), expr__26396))) {
    return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(G__26392, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__26395.cljs$core$IFn$_invoke$arity$2 ? pred__26395.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687), expr__26396) : pred__26395.call(null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687), expr__26396))) {
      return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, G__26392, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__26395.cljs$core$IFn$_invoke$arity$2 ? pred__26395.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429), expr__26396) : pred__26395.call(null, new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429), expr__26396))) {
        return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, G__26392, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__26395.cljs$core$IFn$_invoke$arity$2 ? pred__26395.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097), expr__26396) : pred__26395.call(null, new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097), expr__26396))) {
          return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, G__26392, self__.prev, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__26395.cljs$core$IFn$_invoke$arity$2 ? pred__26395.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null, "prev", "prev", 1017353637), expr__26396) : pred__26395.call(null, new cljs.core.Keyword(null, "prev", "prev", 1017353637), expr__26396))) {
            return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, G__26392, self__.__meta, self__.__extmap, null);
          } else {
            return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.__extmap, k__3996__auto__, G__26392), null);
          }
        }
      }
    }
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4002__auto__, writer__4003__auto__, opts__4004__auto__) {
  var self__ = this;
  var this__4002__auto____$1 = this;
  var pr_pair__4005__auto__ = function(keyval__4006__auto__) {
    return cljs.core.pr_sequential_writer(writer__4003__auto__, cljs.core.pr_writer, "", " ", "", opts__4004__auto__, keyval__4006__auto__);
  };
  return cljs.core.pr_sequential_writer(writer__4003__auto__, pr_pair__4005__auto__, "#cljs.core.async.impl.ioc-helpers.ExceptionFrame{", ", ", "}", opts__4004__auto__, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893), self__.catch_block], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687), self__.catch_exception], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429), self__.finally_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097), 
  self__.continue_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prev", "prev", 1017353637), self__.prev], null)], null), self__.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__3993__auto__, entry__3994__auto__) {
  var self__ = this;
  var this__3993__auto____$1 = this;
  if (cljs.core.vector_QMARK_(entry__3994__auto__)) {
    return cljs.core._assoc(this__3993__auto____$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry__3994__auto__, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry__3994__auto__, 1));
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, this__3993__auto____$1, entry__3994__auto__);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4000__auto__) {
  var self__ = this;
  var this__4000__auto____$1 = this;
  return cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893), self__.catch_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687), self__.catch_exception], 
  null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429), self__.finally_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097), self__.continue_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prev", 
  "prev", 1017353637), self__.prev], null)], null), self__.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICounted$_count$arity$1 = function(this__3992__auto__) {
  var self__ = this;
  var this__3992__auto____$1 = this;
  return 5 + cljs.core.count(self__.__extmap);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__3984__auto__, other__3985__auto__) {
  var self__ = this;
  var this__3984__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3396__auto__ = other__3985__auto__;
    if (cljs.core.truth_(and__3396__auto__)) {
      return this__3984__auto____$1.constructor === other__3985__auto__.constructor && cljs.core.equiv_map(this__3984__auto____$1, other__3985__auto__);
    } else {
      return and__3396__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__3987__auto__, G__26392) {
  var self__ = this;
  var this__3987__auto____$1 = this;
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, G__26392, self__.__extmap, self__.__hash);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__3986__auto__) {
  var self__ = this;
  var this__3986__auto____$1 = this;
  return self__.__meta;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__3997__auto__, k__3998__auto__) {
  var self__ = this;
  var this__3997__auto____$1 = this;
  if (cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429), null, new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893), null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687), null, new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097), null, new cljs.core.Keyword(null, "prev", "prev", 1017353637), null], 
  null), null), k__3998__auto__)) {
    return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core.with_meta(cljs.core.into(cljs.core.PersistentArrayMap.EMPTY, this__3997__auto____$1), self__.__meta), k__3998__auto__);
  } else {
    return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, cljs.core.not_empty(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.__extmap, k__3998__auto__)), null);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$type = true;
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$ctorPrSeq = function(this__4022__auto__) {
  return cljs.core._conj(cljs.core.List.EMPTY, "cljs.core.async.impl.ioc-helpers/ExceptionFrame");
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$ctorPrWriter = function(this__4022__auto__, writer__4023__auto__) {
  return cljs.core._write(writer__4023__auto__, "cljs.core.async.impl.ioc-helpers/ExceptionFrame");
};
cljs.core.async.impl.ioc_helpers.__GT_ExceptionFrame = function __GT_ExceptionFrame(catch_block, catch_exception, finally_block, continue_block, prev) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(catch_block, catch_exception, finally_block, continue_block, prev);
};
cljs.core.async.impl.ioc_helpers.map__GT_ExceptionFrame = function map__GT_ExceptionFrame(G__26394) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame((new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893)).cljs$core$IFn$_invoke$arity$1(G__26394), (new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687)).cljs$core$IFn$_invoke$arity$1(G__26394), (new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429)).cljs$core$IFn$_invoke$arity$1(G__26394), (new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097)).cljs$core$IFn$_invoke$arity$1(G__26394), 
  (new cljs.core.Keyword(null, "prev", "prev", 1017353637)).cljs$core$IFn$_invoke$arity$1(G__26394), null, cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__26394, new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893), cljs.core.array_seq([new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687), new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429), new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097), new cljs.core.Keyword(null, 
  "prev", "prev", 1017353637)], 0)));
};
cljs.core.async.impl.ioc_helpers.add_exception_frame = function add_exception_frame(state, catch_block, catch_exception, finally_block, continue_block) {
  var statearr_26399 = state;
  statearr_26399[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.async.impl.ioc_helpers.__GT_ExceptionFrame(catch_block, catch_exception, finally_block, continue_block, cljs.core.async.impl.ioc_helpers.aget_object(state, cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES));
  return statearr_26399;
};
cljs.core.async.impl.ioc_helpers.process_exception = function process_exception(state) {
  while (true) {
    var exception_frame = cljs.core.async.impl.ioc_helpers.aget_object(state, cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES);
    var catch_block = (new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893)).cljs$core$IFn$_invoke$arity$1(exception_frame);
    var catch_exception = (new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687)).cljs$core$IFn$_invoke$arity$1(exception_frame);
    var exception = cljs.core.async.impl.ioc_helpers.aget_object(state, cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION);
    if (cljs.core.truth_(function() {
      var and__3396__auto__ = exception;
      if (cljs.core.truth_(and__3396__auto__)) {
        return cljs.core.not(exception_frame);
      } else {
        return and__3396__auto__;
      }
    }())) {
      throw exception;
    } else {
      if (cljs.core.truth_(function() {
        var and__3396__auto__ = exception;
        if (cljs.core.truth_(and__3396__auto__)) {
          var and__3396__auto____$1 = catch_block;
          if (cljs.core.truth_(and__3396__auto____$1)) {
            return exception instanceof catch_exception;
          } else {
            return and__3396__auto____$1;
          }
        } else {
          return and__3396__auto__;
        }
      }())) {
        var statearr_26405 = state;
        statearr_26405[cljs.core.async.impl.ioc_helpers.STATE_IDX] = catch_block;
        statearr_26405[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = exception;
        statearr_26405[cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION] = null;
        statearr_26405[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(exception_frame, new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893), null, cljs.core.array_seq([new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687), null], 0));
        return statearr_26405;
      } else {
        if (cljs.core.truth_(function() {
          var and__3396__auto__ = exception;
          if (cljs.core.truth_(and__3396__auto__)) {
            return cljs.core.not(catch_block) && cljs.core.not((new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429)).cljs$core$IFn$_invoke$arity$1(exception_frame));
          } else {
            return and__3396__auto__;
          }
        }())) {
          var statearr_26406_26410 = state;
          statearr_26406_26410[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = (new cljs.core.Keyword(null, "prev", "prev", 1017353637)).cljs$core$IFn$_invoke$arity$1(exception_frame);
          var G__26411 = state;
          state = G__26411;
          continue;
        } else {
          if (cljs.core.truth_(function() {
            var and__3396__auto__ = exception;
            if (cljs.core.truth_(and__3396__auto__)) {
              var and__3396__auto____$1 = cljs.core.not(catch_block);
              if (and__3396__auto____$1) {
                return(new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              } else {
                return and__3396__auto____$1;
              }
            } else {
              return and__3396__auto__;
            }
          }())) {
            var statearr_26407 = state;
            statearr_26407[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429)).cljs$core$IFn$_invoke$arity$1(exception_frame);
            statearr_26407[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(exception_frame, new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429), null);
            return statearr_26407;
          } else {
            if (cljs.core.truth_(function() {
              var and__3396__auto__ = cljs.core.not(exception);
              if (and__3396__auto__) {
                return(new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              } else {
                return and__3396__auto__;
              }
            }())) {
              var statearr_26408 = state;
              statearr_26408[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              statearr_26408[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(exception_frame, new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429), null);
              return statearr_26408;
            } else {
              if (cljs.core.not(exception) && cljs.core.not((new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429)).cljs$core$IFn$_invoke$arity$1(exception_frame))) {
                var statearr_26409 = state;
                statearr_26409[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097)).cljs$core$IFn$_invoke$arity$1(exception_frame);
                statearr_26409[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = (new cljs.core.Keyword(null, "prev", "prev", 1017353637)).cljs$core$IFn$_invoke$arity$1(exception_frame);
                return statearr_26409;
              } else {
                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                  if (false) {
                    return null;
                  } else {
                    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("No matching clause"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([false], 0)))].join(""));
                  }
                } else {
                  return null;
                }
              }
            }
          }
        }
      }
    }
    break;
  }
};
goog.provide("cljs.core.async.impl.buffers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.buffers.acopy = function acopy(src, src_start, dest, dest_start, len) {
  var cnt = 0;
  while (true) {
    if (cnt < len) {
      dest[dest_start + cnt] = src[src_start + cnt];
      var G__26356 = cnt + 1;
      cnt = G__26356;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.async.impl.buffers.RingBuffer = function(head, tail, length, arr) {
  this.head = head;
  this.tail = tail;
  this.length = length;
  this.arr = arr;
};
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/RingBuffer";
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core.async.impl.buffers/RingBuffer");
};
cljs.core.async.impl.buffers.RingBuffer.prototype.pop = function() {
  var self__ = this;
  var _ = this;
  if (self__.length === 0) {
    return null;
  } else {
    var x = self__.arr[self__.tail];
    self__.arr[self__.tail] = null;
    self__.tail = (self__.tail + 1) % self__.arr.length;
    self__.length = self__.length - 1;
    return x;
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unshift = function(x) {
  var self__ = this;
  var _ = this;
  self__.arr[self__.head] = x;
  self__.head = (self__.head + 1) % self__.arr.length;
  self__.length = self__.length + 1;
  return null;
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unbounded_unshift = function(x) {
  var self__ = this;
  var this$ = this;
  if (self__.length + 1 === self__.arr.length) {
    this$.resize();
  } else {
  }
  return this$.unshift(x);
};
cljs.core.async.impl.buffers.RingBuffer.prototype.resize = function() {
  var self__ = this;
  var _ = this;
  var new_arr_size = self__.arr.length * 2;
  var new_arr = new Array(new_arr_size);
  if (self__.tail < self__.head) {
    cljs.core.async.impl.buffers.acopy(self__.arr, self__.tail, new_arr, 0, self__.length);
    self__.tail = 0;
    self__.head = self__.length;
    return self__.arr = new_arr;
  } else {
    if (self__.tail > self__.head) {
      cljs.core.async.impl.buffers.acopy(self__.arr, self__.tail, new_arr, 0, self__.arr.length - self__.tail);
      cljs.core.async.impl.buffers.acopy(self__.arr, 0, new_arr, self__.arr.length - self__.tail, self__.head);
      self__.tail = 0;
      self__.head = self__.length;
      return self__.arr = new_arr;
    } else {
      if (self__.tail === self__.head) {
        self__.tail = 0;
        self__.head = 0;
        return self__.arr = new_arr;
      } else {
        return null;
      }
    }
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.cleanup = function(keep_QMARK_) {
  var self__ = this;
  var this$ = this;
  var n__4250__auto__ = self__.length;
  var x = 0;
  while (true) {
    if (x < n__4250__auto__) {
      var v_26357 = this$.pop();
      if (keep_QMARK_.cljs$core$IFn$_invoke$arity$1 ? keep_QMARK_.cljs$core$IFn$_invoke$arity$1(v_26357) : keep_QMARK_.call(null, v_26357)) {
        this$.unshift(v_26357);
      } else {
      }
      var G__26358 = x + 1;
      x = G__26358;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.async.impl.buffers.__GT_RingBuffer = function __GT_RingBuffer(head, tail, length, arr) {
  return new cljs.core.async.impl.buffers.RingBuffer(head, tail, length, arr);
};
cljs.core.async.impl.buffers.ring_buffer = function ring_buffer(n) {
  if (n > 0) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't create a ring buffer of size 0"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "\x3e", "\x3e", -1640531465, null), new cljs.core.Symbol(null, "n", "n", -1640531417, null), 0)], 0)))].join(""));
  }
  return new cljs.core.async.impl.buffers.RingBuffer(0, 0, 0, new Array(n));
};
cljs.core.async.impl.buffers.FixedBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/FixedBuffer";
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core.async.impl.buffers/FixedBuffer");
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length === self__.n;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (cljs.core.not(cljs.core.async.impl.protocols.full_QMARK_(this$__$1))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't add to a full buffer"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "not", "not", -1640422260, null), cljs.core.list(new cljs.core.Symbol("impl", "full?", "impl/full?", -1337857039, null), new cljs.core.Symbol(null, "this", "this", -1636972457, null)))], 0)))].join(""));
  }
  return self__.buf.unshift(itm);
};
cljs.core.async.impl.buffers.__GT_FixedBuffer = function __GT_FixedBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(buf, n);
};
cljs.core.async.impl.buffers.fixed_buffer = function fixed_buffer(n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(cljs.core.async.impl.buffers.ring_buffer(n), n);
};
cljs.core.async.impl.buffers.DroppingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/DroppingBuffer";
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core.async.impl.buffers/DroppingBuffer");
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.buf.length === self__.n) {
    return null;
  } else {
    return self__.buf.unshift(itm);
  }
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = true;
cljs.core.async.impl.buffers.__GT_DroppingBuffer = function __GT_DroppingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(buf, n);
};
cljs.core.async.impl.buffers.dropping_buffer = function dropping_buffer(n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(cljs.core.async.impl.buffers.ring_buffer(n), n);
};
cljs.core.async.impl.buffers.SlidingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/SlidingBuffer";
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core.async.impl.buffers/SlidingBuffer");
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.buf.length === self__.n) {
    cljs.core.async.impl.protocols.remove_BANG_(this$__$1);
  } else {
  }
  return self__.buf.unshift(itm);
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = true;
cljs.core.async.impl.buffers.__GT_SlidingBuffer = function __GT_SlidingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(buf, n);
};
cljs.core.async.impl.buffers.sliding_buffer = function sliding_buffer(n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(cljs.core.async.impl.buffers.ring_buffer(n), n);
};
goog.provide("cljs.core.async.impl.dispatch");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.buffers");
cljs.core.async.impl.dispatch.message_channel = null;
cljs.core.async.impl.dispatch.tasks = cljs.core.async.impl.buffers.ring_buffer(32);
cljs.core.async.impl.dispatch.running_QMARK_ = false;
cljs.core.async.impl.dispatch.queued_QMARK_ = false;
cljs.core.async.impl.dispatch.TASK_BATCH_SIZE = 1024;
cljs.core.async.impl.dispatch.process_messages = function process_messages() {
  cljs.core.async.impl.dispatch.running_QMARK_ = true;
  cljs.core.async.impl.dispatch.queued_QMARK_ = false;
  var count_26345 = 0;
  while (true) {
    var m_26346 = cljs.core.async.impl.dispatch.tasks.pop();
    if (m_26346 == null) {
    } else {
      m_26346.cljs$core$IFn$_invoke$arity$0 ? m_26346.cljs$core$IFn$_invoke$arity$0() : m_26346.call(null);
      if (count_26345 < cljs.core.async.impl.dispatch.TASK_BATCH_SIZE) {
        var G__26347 = count_26345 + 1;
        count_26345 = G__26347;
        continue;
      } else {
      }
    }
    break;
  }
  cljs.core.async.impl.dispatch.running_QMARK_ = false;
  if (cljs.core.async.impl.dispatch.tasks.length > 0) {
    return cljs.core.async.impl.dispatch.queue_dispatcher.cljs$core$IFn$_invoke$arity$0 ? cljs.core.async.impl.dispatch.queue_dispatcher.cljs$core$IFn$_invoke$arity$0() : cljs.core.async.impl.dispatch.queue_dispatcher.call(null);
  } else {
    return null;
  }
};
if (typeof MessageChannel !== "undefined") {
  cljs.core.async.impl.dispatch.message_channel = new MessageChannel;
  cljs.core.async.impl.dispatch.message_channel.port1.onmessage = function(msg) {
    return cljs.core.async.impl.dispatch.process_messages();
  };
} else {
}
cljs.core.async.impl.dispatch.queue_dispatcher = function queue_dispatcher() {
  if (cljs.core.truth_(function() {
    var and__3396__auto__ = cljs.core.async.impl.dispatch.queued_QMARK_;
    if (and__3396__auto__) {
      return cljs.core.async.impl.dispatch.running_QMARK_;
    } else {
      return and__3396__auto__;
    }
  }())) {
    return null;
  } else {
    cljs.core.async.impl.dispatch.queued_QMARK_ = true;
    if (typeof MessageChannel !== "undefined") {
      return cljs.core.async.impl.dispatch.message_channel.port2.postMessage(0);
    } else {
      if (typeof setImmediate !== "undefined") {
        return setImmediate(cljs.core.async.impl.dispatch.process_messages);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return setTimeout(cljs.core.async.impl.dispatch.process_messages, 0);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.async.impl.dispatch.run = function run(f) {
  cljs.core.async.impl.dispatch.tasks.unbounded_unshift(f);
  return cljs.core.async.impl.dispatch.queue_dispatcher();
};
cljs.core.async.impl.dispatch.queue_delay = function queue_delay(f, delay) {
  return setTimeout(f, delay);
};
goog.provide("cljs.core.async.impl.channels");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.channels.box = function box(val) {
  if (typeof cljs.core.async.impl.channels.t26351 !== "undefined") {
  } else {
    cljs.core.async.impl.channels.t26351 = function(val, box, meta26352) {
      this.val = val;
      this.box = box;
      this.meta26352 = meta26352;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 425984;
    };
    cljs.core.async.impl.channels.t26351.cljs$lang$type = true;
    cljs.core.async.impl.channels.t26351.cljs$lang$ctorStr = "cljs.core.async.impl.channels/t26351";
    cljs.core.async.impl.channels.t26351.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write(writer__3971__auto__, "cljs.core.async.impl.channels/t26351");
    };
    cljs.core.async.impl.channels.t26351.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.val;
    };
    cljs.core.async.impl.channels.t26351.prototype.cljs$core$IMeta$_meta$arity$1 = function(_26353) {
      var self__ = this;
      var _26353__$1 = this;
      return self__.meta26352;
    };
    cljs.core.async.impl.channels.t26351.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_26353, meta26352__$1) {
      var self__ = this;
      var _26353__$1 = this;
      return new cljs.core.async.impl.channels.t26351(self__.val, self__.box, meta26352__$1);
    };
    cljs.core.async.impl.channels.__GT_t26351 = function __GT_t26351(val__$1, box__$1, meta26352) {
      return new cljs.core.async.impl.channels.t26351(val__$1, box__$1, meta26352);
    };
  }
  return new cljs.core.async.impl.channels.t26351(val, box, null);
};
cljs.core.async.impl.channels.PutBox = function(handler, val) {
  this.handler = handler;
  this.val = val;
};
cljs.core.async.impl.channels.PutBox.cljs$lang$type = true;
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorStr = "cljs.core.async.impl.channels/PutBox";
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorPrWriter = function(this__3973__auto__, writer__3974__auto__, opts__3975__auto__) {
  return cljs.core._write(writer__3974__auto__, "cljs.core.async.impl.channels/PutBox");
};
cljs.core.async.impl.channels.__GT_PutBox = function __GT_PutBox(handler, val) {
  return new cljs.core.async.impl.channels.PutBox(handler, val);
};
cljs.core.async.impl.channels.put_active_QMARK_ = function put_active_QMARK_(box) {
  return cljs.core.async.impl.protocols.active_QMARK_(box.handler);
};
cljs.core.async.impl.channels.MAX_DIRTY = 64;
cljs.core.async.impl.channels.ManyToManyChannel = function(takes, dirty_takes, puts, dirty_puts, buf, closed) {
  this.takes = takes;
  this.dirty_takes = dirty_takes;
  this.puts = puts;
  this.dirty_puts = dirty_puts;
  this.buf = buf;
  this.closed = closed;
};
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$type = true;
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorStr = "cljs.core.async.impl.channels/ManyToManyChannel";
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core.async.impl.channels/ManyToManyChannel");
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.closed) {
    return null;
  } else {
    self__.closed = true;
    while (true) {
      var taker_26354 = self__.takes.pop();
      if (taker_26354 == null) {
      } else {
        if (taker_26354.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1(null)) {
          var take_cb_26355 = taker_26354.cljs$core$async$impl$protocols$Handler$commit$arity$1(null);
          cljs.core.async.impl.dispatch.run(function(take_cb_26355, taker_26354) {
            return function() {
              return take_cb_26355.cljs$core$IFn$_invoke$arity$1 ? take_cb_26355.cljs$core$IFn$_invoke$arity$1(null) : take_cb_26355.call(null, null);
            };
          }(take_cb_26355, taker_26354));
        } else {
        }
        continue;
      }
      break;
    }
    return null;
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(this$, handler) {
  var self__ = this;
  var this$__$1 = this;
  if (!handler.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1(null)) {
    return null;
  } else {
    if (!(self__.buf == null) && cljs.core.count(self__.buf) > 0) {
      var _ = handler.cljs$core$async$impl$protocols$Handler$commit$arity$1(null);
      return cljs.core.async.impl.channels.box(self__.buf.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1(null));
    } else {
      while (true) {
        var putter = self__.puts.pop();
        if (!(putter == null)) {
          var put_handler = putter.handler;
          var val = putter.val;
          if (put_handler.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1(null)) {
            var put_cb = put_handler.cljs$core$async$impl$protocols$Handler$commit$arity$1(null);
            var _ = handler.cljs$core$async$impl$protocols$Handler$commit$arity$1(null);
            cljs.core.async.impl.dispatch.run(put_cb);
            return cljs.core.async.impl.channels.box(val);
          } else {
            continue;
          }
        } else {
          if (self__.closed) {
            var _ = handler.cljs$core$async$impl$protocols$Handler$commit$arity$1(null);
            return cljs.core.async.impl.channels.box(null);
          } else {
            if (self__.dirty_takes > cljs.core.async.impl.channels.MAX_DIRTY) {
              self__.dirty_takes = 0;
              self__.takes.cleanup(cljs.core.async.impl.protocols.active_QMARK_);
            } else {
              self__.dirty_takes = self__.dirty_takes + 1;
            }
            if (self__.takes.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
            } else {
              throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("No more than "), cljs.core.str(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE), cljs.core.str(" pending takes are allowed on a single channel.")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", -1640531467, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", 
              1395928862, null), new cljs.core.Symbol(null, "takes", "takes", -1530407291, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", -1989946393, null))], 0)))].join(""));
            }
            self__.takes.unbounded_unshift(handler);
            return null;
          }
        }
        break;
      }
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(this$, val, handler) {
  var self__ = this;
  var this$__$1 = this;
  if (!(val == null)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't put nil in on a channel"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "not", "not", -1640422260, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", -1637150201, null), new cljs.core.Symbol(null, "val", "val", -1640415014, null)))], 0)))].join(""));
  }
  var closed__$1 = self__.closed;
  if (closed__$1 || !handler.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1(null)) {
    return cljs.core.async.impl.channels.box(null);
  } else {
    while (true) {
      var taker = self__.takes.pop();
      if (!(taker == null)) {
        if (taker.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1(null)) {
          var take_cb = taker.cljs$core$async$impl$protocols$Handler$commit$arity$1(null);
          var _ = handler.cljs$core$async$impl$protocols$Handler$commit$arity$1(null);
          cljs.core.async.impl.dispatch.run(function(take_cb, _, taker) {
            return function() {
              return take_cb.cljs$core$IFn$_invoke$arity$1 ? take_cb.cljs$core$IFn$_invoke$arity$1(val) : take_cb.call(null, val);
            };
          }(take_cb, _, taker));
          return cljs.core.async.impl.channels.box(null);
        } else {
          continue;
        }
      } else {
        if (!(self__.buf == null || self__.buf.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1(null))) {
          var _ = handler.cljs$core$async$impl$protocols$Handler$commit$arity$1(null);
          self__.buf.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2(null, val);
          return cljs.core.async.impl.channels.box(null);
        } else {
          if (self__.dirty_puts > cljs.core.async.impl.channels.MAX_DIRTY) {
            self__.dirty_puts = 0;
            self__.puts.cleanup(cljs.core.async.impl.channels.put_active_QMARK_);
          } else {
            self__.dirty_puts = self__.dirty_puts + 1;
          }
          if (self__.puts.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
          } else {
            throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("No more than "), cljs.core.str(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE), cljs.core.str(" pending puts are allowed on a single channel."), cljs.core.str(" Consider using a windowed buffer.")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", -1640531467, null), cljs.core.list(new cljs.core.Symbol(null, 
            ".-length", ".-length", 1395928862, null), new cljs.core.Symbol(null, "puts", "puts", -1637078787, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", -1989946393, null))], 0)))].join(""));
          }
          self__.puts.unbounded_unshift(new cljs.core.async.impl.channels.PutBox(handler, val));
          return null;
        }
      }
      break;
    }
  }
};
cljs.core.async.impl.channels.__GT_ManyToManyChannel = function __GT_ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed);
};
cljs.core.async.impl.channels.chan = function chan(buf) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(cljs.core.async.impl.buffers.ring_buffer(32), 0, cljs.core.async.impl.buffers.ring_buffer(32), 0, buf, null);
};
goog.provide("cljs.core.async.impl.timers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.timers.MAX_LEVEL = 15;
cljs.core.async.impl.timers.P = 1 / 2;
cljs.core.async.impl.timers.random_level = function() {
  var random_level = null;
  var random_level__0 = function() {
    return random_level.cljs$core$IFn$_invoke$arity$1(0);
  };
  var random_level__1 = function(level) {
    while (true) {
      if (Math.random() < cljs.core.async.impl.timers.P && level < cljs.core.async.impl.timers.MAX_LEVEL) {
        var G__26309 = level + 1;
        level = G__26309;
        continue;
      } else {
        return level;
      }
      break;
    }
  };
  random_level = function(level) {
    switch(arguments.length) {
      case 0:
        return random_level__0.call(this);
      case 1:
        return random_level__1.call(this, level);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  random_level.cljs$core$IFn$_invoke$arity$0 = random_level__0;
  random_level.cljs$core$IFn$_invoke$arity$1 = random_level__1;
  return random_level;
}();
cljs.core.async.impl.timers.SkipListNode = function(key, val, forward) {
  this.key = key;
  this.val = val;
  this.forward = forward;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
};
cljs.core.async.impl.timers.SkipListNode.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipListNode";
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core.async.impl.timers/SkipListNode");
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.async.impl.timers.__GT_SkipListNode = function __GT_SkipListNode(key, val, forward) {
  return new cljs.core.async.impl.timers.SkipListNode(key, val, forward);
};
cljs.core.async.impl.timers.skip_list_node = function() {
  var skip_list_node = null;
  var skip_list_node__1 = function(level) {
    return skip_list_node.cljs$core$IFn$_invoke$arity$3(null, null, level);
  };
  var skip_list_node__3 = function(k, v, level) {
    var arr = new Array(level + 1);
    var i_26310 = 0;
    while (true) {
      if (i_26310 < arr.length) {
        arr[i_26310] = null;
        var G__26311 = i_26310 + 1;
        i_26310 = G__26311;
        continue;
      } else {
      }
      break;
    }
    return new cljs.core.async.impl.timers.SkipListNode(k, v, arr);
  };
  skip_list_node = function(k, v, level) {
    switch(arguments.length) {
      case 1:
        return skip_list_node__1.call(this, k);
      case 3:
        return skip_list_node__3.call(this, k, v, level);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  skip_list_node.cljs$core$IFn$_invoke$arity$1 = skip_list_node__1;
  skip_list_node.cljs$core$IFn$_invoke$arity$3 = skip_list_node__3;
  return skip_list_node;
}();
cljs.core.async.impl.timers.least_greater_node = function() {
  var least_greater_node = null;
  var least_greater_node__3 = function(x, k, level) {
    return least_greater_node.cljs$core$IFn$_invoke$arity$4(x, k, level, null);
  };
  var least_greater_node__4 = function(x, k, level, update) {
    while (true) {
      if (!(level < 0)) {
        var x__$1 = function() {
          var x__$1 = x;
          while (true) {
            var temp__4090__auto__ = x__$1.forward[level];
            if (cljs.core.truth_(temp__4090__auto__)) {
              var x_SINGLEQUOTE_ = temp__4090__auto__;
              if (x_SINGLEQUOTE_.key < k) {
                var G__26312 = x_SINGLEQUOTE_;
                x__$1 = G__26312;
                continue;
              } else {
                return x__$1;
              }
            } else {
              return x__$1;
            }
            break;
          }
        }();
        if (update == null) {
        } else {
          update[level] = x__$1;
        }
        var G__26313 = x__$1;
        var G__26314 = k;
        var G__26315 = level - 1;
        var G__26316 = update;
        x = G__26313;
        k = G__26314;
        level = G__26315;
        update = G__26316;
        continue;
      } else {
        return x;
      }
      break;
    }
  };
  least_greater_node = function(x, k, level, update) {
    switch(arguments.length) {
      case 3:
        return least_greater_node__3.call(this, x, k, level);
      case 4:
        return least_greater_node__4.call(this, x, k, level, update);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  least_greater_node.cljs$core$IFn$_invoke$arity$3 = least_greater_node__3;
  least_greater_node.cljs$core$IFn$_invoke$arity$4 = least_greater_node__4;
  return least_greater_node;
}();
cljs.core.async.impl.timers.SkipList = function(header, level) {
  this.header = header;
  this.level = level;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
};
cljs.core.async.impl.timers.SkipList.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipList";
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write(writer__3971__auto__, "cljs.core.async.impl.timers/SkipList");
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  var pr_pair = function(keyval) {
    return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "", " ", "", opts, keyval);
  };
  return cljs.core.pr_sequential_writer(writer, pr_pair, "{", ", ", "}", opts, coll__$1);
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var iter = function iter(node) {
    return new cljs.core.LazySeq(null, function() {
      if (node == null) {
        return null;
      } else {
        return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [node.key, node.val], null), iter(node.forward[0]));
      }
    }, null, null);
  };
  return iter(self__.header.forward[0]);
};
cljs.core.async.impl.timers.SkipList.prototype.put = function(k, v) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.cljs$core$IFn$_invoke$arity$4(self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if (!(x__$1 == null) && x__$1.key === k) {
    return x__$1.val = v;
  } else {
    var new_level = cljs.core.async.impl.timers.random_level.cljs$core$IFn$_invoke$arity$0();
    if (new_level > self__.level) {
      var i_26317 = self__.level + 1;
      while (true) {
        if (i_26317 <= new_level + 1) {
          update[i_26317] = self__.header;
          var G__26318 = i_26317 + 1;
          i_26317 = G__26318;
          continue;
        } else {
        }
        break;
      }
      self__.level = new_level;
    } else {
    }
    var x__$2 = cljs.core.async.impl.timers.skip_list_node.cljs$core$IFn$_invoke$arity$3(k, v, new Array(new_level));
    var i = 0;
    while (true) {
      if (i <= self__.level) {
        var links = update[i].forward;
        x__$2.forward[i] = links[i];
        return links[i] = x__$2;
      } else {
        return null;
      }
      break;
    }
  }
};
cljs.core.async.impl.timers.SkipList.prototype.remove = function(k) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.cljs$core$IFn$_invoke$arity$4(self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if (!(x__$1 == null) && x__$1.key === k) {
    var i_26319 = 0;
    while (true) {
      if (i_26319 <= self__.level) {
        var links_26320 = update[i_26319].forward;
        if (links_26320[i_26319] === x__$1) {
          links_26320[i_26319] = x__$1.forward[i_26319];
          var G__26321 = i_26319 + 1;
          i_26319 = G__26321;
          continue;
        } else {
          var G__26322 = i_26319 + 1;
          i_26319 = G__26322;
          continue;
        }
      } else {
      }
      break;
    }
    while (true) {
      if (self__.level > 0 && self__.header.forward[self__.level] == null) {
        self__.level = self__.level - 1;
        continue;
      } else {
        return null;
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.ceilingEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while (true) {
    if (!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while (true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if (x_SINGLEQUOTE_ == null) {
            return null;
          } else {
            if (x_SINGLEQUOTE_.key >= k) {
              return x_SINGLEQUOTE_;
            } else {
              var G__26323 = x_SINGLEQUOTE_;
              x__$1 = G__26323;
              continue;
            }
          }
          break;
        }
      }();
      if (!(nx == null)) {
        var G__26324 = nx;
        var G__26325 = level__$1 - 1;
        x = G__26324;
        level__$1 = G__26325;
        continue;
      } else {
        var G__26326 = x;
        var G__26327 = level__$1 - 1;
        x = G__26326;
        level__$1 = G__26327;
        continue;
      }
    } else {
      if (x === self__.header) {
        return null;
      } else {
        return x;
      }
    }
    break;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.floorEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while (true) {
    if (!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while (true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if (!(x_SINGLEQUOTE_ == null)) {
            if (x_SINGLEQUOTE_.key > k) {
              return x__$1;
            } else {
              var G__26328 = x_SINGLEQUOTE_;
              x__$1 = G__26328;
              continue;
            }
          } else {
            if (level__$1 === 0) {
              return x__$1;
            } else {
              return null;
            }
          }
          break;
        }
      }();
      if (cljs.core.truth_(nx)) {
        var G__26329 = nx;
        var G__26330 = level__$1 - 1;
        x = G__26329;
        level__$1 = G__26330;
        continue;
      } else {
        var G__26331 = x;
        var G__26332 = level__$1 - 1;
        x = G__26331;
        level__$1 = G__26332;
        continue;
      }
    } else {
      if (x === self__.header) {
        return null;
      } else {
        return x;
      }
    }
    break;
  }
};
cljs.core.async.impl.timers.__GT_SkipList = function __GT_SkipList(header, level) {
  return new cljs.core.async.impl.timers.SkipList(header, level);
};
cljs.core.async.impl.timers.skip_list = function skip_list() {
  return new cljs.core.async.impl.timers.SkipList(cljs.core.async.impl.timers.skip_list_node.cljs$core$IFn$_invoke$arity$1(0), 0);
};
cljs.core.async.impl.timers.timeouts_map = cljs.core.async.impl.timers.skip_list();
cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS = 10;
cljs.core.async.impl.timers.timeout = function timeout(msecs) {
  var timeout__$1 = (new Date).valueOf() + msecs;
  var me = cljs.core.async.impl.timers.timeouts_map.ceilingEntry(timeout__$1);
  var or__3408__auto__ = cljs.core.truth_(function() {
    var and__3396__auto__ = me;
    if (cljs.core.truth_(and__3396__auto__)) {
      return me.key < timeout__$1 + cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS;
    } else {
      return and__3396__auto__;
    }
  }()) ? me.val : null;
  if (cljs.core.truth_(or__3408__auto__)) {
    return or__3408__auto__;
  } else {
    var timeout_channel = cljs.core.async.impl.channels.chan(null);
    cljs.core.async.impl.timers.timeouts_map.put(timeout__$1, timeout_channel);
    cljs.core.async.impl.dispatch.queue_delay(function() {
      cljs.core.async.impl.timers.timeouts_map.remove(timeout__$1);
      return timeout_channel.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1(null);
    }, msecs);
    return timeout_channel;
  }
};
goog.provide("cljs.core.async");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.timers");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.timers");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.ioc_helpers");
cljs.core.async.fn_handler = function fn_handler(f) {
  if (typeof cljs.core.async.t23758 !== "undefined") {
  } else {
    cljs.core.async.t23758 = function(f, fn_handler, meta23759) {
      this.f = f;
      this.fn_handler = fn_handler;
      this.meta23759 = meta23759;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t23758.cljs$lang$type = true;
    cljs.core.async.t23758.cljs$lang$ctorStr = "cljs.core.async/t23758";
    cljs.core.async.t23758.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write(writer__3971__auto__, "cljs.core.async/t23758");
    };
    cljs.core.async.t23758.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t23758.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.t23758.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f;
    };
    cljs.core.async.t23758.prototype.cljs$core$IMeta$_meta$arity$1 = function(_23760) {
      var self__ = this;
      var _23760__$1 = this;
      return self__.meta23759;
    };
    cljs.core.async.t23758.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_23760, meta23759__$1) {
      var self__ = this;
      var _23760__$1 = this;
      return new cljs.core.async.t23758(self__.f, self__.fn_handler, meta23759__$1);
    };
    cljs.core.async.__GT_t23758 = function __GT_t23758(f__$1, fn_handler__$1, meta23759) {
      return new cljs.core.async.t23758(f__$1, fn_handler__$1, meta23759);
    };
  }
  return new cljs.core.async.t23758(f, fn_handler, null);
};
cljs.core.async.buffer = function buffer(n) {
  return cljs.core.async.impl.buffers.fixed_buffer(n);
};
cljs.core.async.dropping_buffer = function dropping_buffer(n) {
  return cljs.core.async.impl.buffers.dropping_buffer(n);
};
cljs.core.async.sliding_buffer = function sliding_buffer(n) {
  return cljs.core.async.impl.buffers.sliding_buffer(n);
};
cljs.core.async.unblocking_buffer_QMARK_ = function unblocking_buffer_QMARK_(buff) {
  var G__23762 = buff;
  if (G__23762) {
    var bit__4052__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__3408__auto__ = bit__4052__auto__;
      if (cljs.core.truth_(or__3408__auto__)) {
        return or__3408__auto__;
      } else {
        return G__23762.cljs$core$async$impl$protocols$UnblockingBuffer$;
      }
    }())) {
      return true;
    } else {
      if (!G__23762.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.async.impl.protocols.UnblockingBuffer, G__23762);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.async.impl.protocols.UnblockingBuffer, G__23762);
  }
};
cljs.core.async.chan = function() {
  var chan = null;
  var chan__0 = function() {
    return chan.cljs$core$IFn$_invoke$arity$1(null);
  };
  var chan__1 = function(buf_or_n) {
    var buf_or_n__$1 = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(buf_or_n, 0) ? null : buf_or_n;
    return cljs.core.async.impl.channels.chan(typeof buf_or_n__$1 === "number" ? cljs.core.async.buffer(buf_or_n__$1) : buf_or_n__$1);
  };
  chan = function(buf_or_n) {
    switch(arguments.length) {
      case 0:
        return chan__0.call(this);
      case 1:
        return chan__1.call(this, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chan.cljs$core$IFn$_invoke$arity$0 = chan__0;
  chan.cljs$core$IFn$_invoke$arity$1 = chan__1;
  return chan;
}();
cljs.core.async.timeout = function timeout(msecs) {
  return cljs.core.async.impl.timers.timeout(msecs);
};
cljs.core.async._LT__BANG_ = function _LT__BANG_(port) {
  if (null) {
    return null;
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("\x3c! used not in (go ...) block"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([null], 0)))].join(""));
  }
};
cljs.core.async.take_BANG_ = function() {
  var take_BANG_ = null;
  var take_BANG___2 = function(port, fn1) {
    return take_BANG_.cljs$core$IFn$_invoke$arity$3(port, fn1, true);
  };
  var take_BANG___3 = function(port, fn1, on_caller_QMARK_) {
    var ret = cljs.core.async.impl.protocols.take_BANG_(port, cljs.core.async.fn_handler(fn1));
    if (cljs.core.truth_(ret)) {
      var val_23763 = cljs.core.deref(ret);
      if (cljs.core.truth_(on_caller_QMARK_)) {
        fn1.cljs$core$IFn$_invoke$arity$1 ? fn1.cljs$core$IFn$_invoke$arity$1(val_23763) : fn1.call(null, val_23763);
      } else {
        cljs.core.async.impl.dispatch.run(function() {
          return fn1.cljs$core$IFn$_invoke$arity$1 ? fn1.cljs$core$IFn$_invoke$arity$1(val_23763) : fn1.call(null, val_23763);
        });
      }
    } else {
    }
    return null;
  };
  take_BANG_ = function(port, fn1, on_caller_QMARK_) {
    switch(arguments.length) {
      case 2:
        return take_BANG___2.call(this, port, fn1);
      case 3:
        return take_BANG___3.call(this, port, fn1, on_caller_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_BANG_.cljs$core$IFn$_invoke$arity$2 = take_BANG___2;
  take_BANG_.cljs$core$IFn$_invoke$arity$3 = take_BANG___3;
  return take_BANG_;
}();
cljs.core.async.nop = function nop() {
  return null;
};
cljs.core.async._GT__BANG_ = function _GT__BANG_(port, val) {
  if (null) {
    return null;
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("\x3e! used not in (go ...) block"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([null], 0)))].join(""));
  }
};
cljs.core.async.put_BANG_ = function() {
  var put_BANG_ = null;
  var put_BANG___2 = function(port, val) {
    return put_BANG_.cljs$core$IFn$_invoke$arity$3(port, val, cljs.core.async.nop);
  };
  var put_BANG___3 = function(port, val, fn0) {
    return put_BANG_.cljs$core$IFn$_invoke$arity$4(port, val, fn0, true);
  };
  var put_BANG___4 = function(port, val, fn0, on_caller_QMARK_) {
    var ret = cljs.core.async.impl.protocols.put_BANG_(port, val, cljs.core.async.fn_handler(fn0));
    if (cljs.core.truth_(function() {
      var and__3396__auto__ = ret;
      if (cljs.core.truth_(and__3396__auto__)) {
        return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(fn0, cljs.core.async.nop);
      } else {
        return and__3396__auto__;
      }
    }())) {
      if (cljs.core.truth_(on_caller_QMARK_)) {
        fn0.cljs$core$IFn$_invoke$arity$0 ? fn0.cljs$core$IFn$_invoke$arity$0() : fn0.call(null);
      } else {
        cljs.core.async.impl.dispatch.run(fn0);
      }
    } else {
    }
    return null;
  };
  put_BANG_ = function(port, val, fn0, on_caller_QMARK_) {
    switch(arguments.length) {
      case 2:
        return put_BANG___2.call(this, port, val);
      case 3:
        return put_BANG___3.call(this, port, val, fn0);
      case 4:
        return put_BANG___4.call(this, port, val, fn0, on_caller_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  put_BANG_.cljs$core$IFn$_invoke$arity$2 = put_BANG___2;
  put_BANG_.cljs$core$IFn$_invoke$arity$3 = put_BANG___3;
  put_BANG_.cljs$core$IFn$_invoke$arity$4 = put_BANG___4;
  return put_BANG_;
}();
cljs.core.async.close_BANG_ = function close_BANG_(port) {
  return cljs.core.async.impl.protocols.close_BANG_(port);
};
cljs.core.async.random_array = function random_array(n) {
  var a = new Array(n);
  var n__4250__auto___23764 = n;
  var x_23765 = 0;
  while (true) {
    if (x_23765 < n__4250__auto___23764) {
      a[x_23765] = 0;
      var G__23766 = x_23765 + 1;
      x_23765 = G__23766;
      continue;
    } else {
    }
    break;
  }
  var i = 1;
  while (true) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(i, n)) {
      return a;
    } else {
      var j = cljs.core.rand_int(i);
      a[i] = a[j];
      a[j] = i;
      var G__23767 = i + 1;
      i = G__23767;
      continue;
    }
    break;
  }
};
cljs.core.async.alt_flag = function alt_flag() {
  var flag = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(true);
  if (typeof cljs.core.async.t23771 !== "undefined") {
  } else {
    cljs.core.async.t23771 = function(flag, alt_flag, meta23772) {
      this.flag = flag;
      this.alt_flag = alt_flag;
      this.meta23772 = meta23772;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t23771.cljs$lang$type = true;
    cljs.core.async.t23771.cljs$lang$ctorStr = "cljs.core.async/t23771";
    cljs.core.async.t23771.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write(writer__3971__auto__, "cljs.core.async/t23771");
    };
    cljs.core.async.t23771.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t23771.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.deref(self__.flag);
    };
    cljs.core.async.t23771.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      cljs.core.reset_BANG_(self__.flag, null);
      return true;
    };
    cljs.core.async.t23771.prototype.cljs$core$IMeta$_meta$arity$1 = function(_23773) {
      var self__ = this;
      var _23773__$1 = this;
      return self__.meta23772;
    };
    cljs.core.async.t23771.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_23773, meta23772__$1) {
      var self__ = this;
      var _23773__$1 = this;
      return new cljs.core.async.t23771(self__.flag, self__.alt_flag, meta23772__$1);
    };
    cljs.core.async.__GT_t23771 = function __GT_t23771(flag__$1, alt_flag__$1, meta23772) {
      return new cljs.core.async.t23771(flag__$1, alt_flag__$1, meta23772);
    };
  }
  return new cljs.core.async.t23771(flag, alt_flag, null);
};
cljs.core.async.alt_handler = function alt_handler(flag, cb) {
  if (typeof cljs.core.async.t23777 !== "undefined") {
  } else {
    cljs.core.async.t23777 = function(cb, flag, alt_handler, meta23778) {
      this.cb = cb;
      this.flag = flag;
      this.alt_handler = alt_handler;
      this.meta23778 = meta23778;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t23777.cljs$lang$type = true;
    cljs.core.async.t23777.cljs$lang$ctorStr = "cljs.core.async/t23777";
    cljs.core.async.t23777.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write(writer__3971__auto__, "cljs.core.async/t23777");
    };
    cljs.core.async.t23777.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t23777.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.active_QMARK_(self__.flag);
    };
    cljs.core.async.t23777.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      cljs.core.async.impl.protocols.commit(self__.flag);
      return self__.cb;
    };
    cljs.core.async.t23777.prototype.cljs$core$IMeta$_meta$arity$1 = function(_23779) {
      var self__ = this;
      var _23779__$1 = this;
      return self__.meta23778;
    };
    cljs.core.async.t23777.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_23779, meta23778__$1) {
      var self__ = this;
      var _23779__$1 = this;
      return new cljs.core.async.t23777(self__.cb, self__.flag, self__.alt_handler, meta23778__$1);
    };
    cljs.core.async.__GT_t23777 = function __GT_t23777(cb__$1, flag__$1, alt_handler__$1, meta23778) {
      return new cljs.core.async.t23777(cb__$1, flag__$1, alt_handler__$1, meta23778);
    };
  }
  return new cljs.core.async.t23777(cb, flag, alt_handler, null);
};
cljs.core.async.do_alts = function do_alts(fret, ports, opts) {
  var flag = cljs.core.async.alt_flag();
  var n = cljs.core.count(ports);
  var idxs = cljs.core.async.random_array(n);
  var priority = (new cljs.core.Keyword(null, "priority", "priority", 4143410454)).cljs$core$IFn$_invoke$arity$1(opts);
  var ret = function() {
    var i = 0;
    while (true) {
      if (i < n) {
        var idx = cljs.core.truth_(priority) ? i : idxs[i];
        var port = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ports, idx);
        var wport = cljs.core.vector_QMARK_(port) ? port.cljs$core$IFn$_invoke$arity$1 ? port.cljs$core$IFn$_invoke$arity$1(0) : port.call(null, 0) : null;
        var vbox = cljs.core.truth_(wport) ? function() {
          var val = port.cljs$core$IFn$_invoke$arity$1 ? port.cljs$core$IFn$_invoke$arity$1(1) : port.call(null, 1);
          return cljs.core.async.impl.protocols.put_BANG_(wport, val, cljs.core.async.alt_handler(flag, function(i, val, idx, port, wport, flag, n, idxs, priority) {
            return function() {
              return fret.cljs$core$IFn$_invoke$arity$1 ? fret.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, wport], null)) : fret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, wport], null));
            };
          }(i, val, idx, port, wport, flag, n, idxs, priority)));
        }() : cljs.core.async.impl.protocols.take_BANG_(port, cljs.core.async.alt_handler(flag, function(i, idx, port, wport, flag, n, idxs, priority) {
          return function(p1__23780_SHARP_) {
            return fret.cljs$core$IFn$_invoke$arity$1 ? fret.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__23780_SHARP_, port], null)) : fret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__23780_SHARP_, port], null));
          };
        }(i, idx, port, wport, flag, n, idxs, priority)));
        if (cljs.core.truth_(vbox)) {
          return cljs.core.async.impl.channels.box(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.deref(vbox), function() {
            var or__3408__auto__ = wport;
            if (cljs.core.truth_(or__3408__auto__)) {
              return or__3408__auto__;
            } else {
              return port;
            }
          }()], null));
        } else {
          var G__23781 = i + 1;
          i = G__23781;
          continue;
        }
      } else {
        return null;
      }
      break;
    }
  }();
  var or__3408__auto__ = ret;
  if (cljs.core.truth_(or__3408__auto__)) {
    return or__3408__auto__;
  } else {
    if (cljs.core.contains_QMARK_(opts, new cljs.core.Keyword(null, "default", "default", 2558708147))) {
      var temp__4092__auto__ = function() {
        var and__3396__auto__ = flag.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1(null);
        if (cljs.core.truth_(and__3396__auto__)) {
          return flag.cljs$core$async$impl$protocols$Handler$commit$arity$1(null);
        } else {
          return and__3396__auto__;
        }
      }();
      if (cljs.core.truth_(temp__4092__auto__)) {
        var got = temp__4092__auto__;
        return cljs.core.async.impl.channels.box(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "default", "default", 2558708147)).cljs$core$IFn$_invoke$arity$1(opts), new cljs.core.Keyword(null, "default", "default", 2558708147)], null));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }
};
cljs.core.async.alts_BANG_ = function() {
  var alts_BANG___delegate = function(ports, p__23782) {
    var map__23784 = p__23782;
    var map__23784__$1 = cljs.core.seq_QMARK_(map__23784) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__23784) : map__23784;
    var opts = map__23784__$1;
    if (null) {
      return null;
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("alts! used not in (go ...) block"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([null], 0)))].join(""));
    }
  };
  var alts_BANG_ = function(ports, var_args) {
    var p__23782 = null;
    if (arguments.length > 1) {
      p__23782 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return alts_BANG___delegate.call(this, ports, p__23782);
  };
  alts_BANG_.cljs$lang$maxFixedArity = 1;
  alts_BANG_.cljs$lang$applyTo = function(arglist__23785) {
    var ports = cljs.core.first(arglist__23785);
    var p__23782 = cljs.core.rest(arglist__23785);
    return alts_BANG___delegate(ports, p__23782);
  };
  alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = alts_BANG___delegate;
  return alts_BANG_;
}();
cljs.core.async.map_LT_ = function map_LT_(f, ch) {
  if (typeof cljs.core.async.t23793 !== "undefined") {
  } else {
    cljs.core.async.t23793 = function(ch, f, map_LT_, meta23794) {
      this.ch = ch;
      this.f = f;
      this.map_LT_ = map_LT_;
      this.meta23794 = meta23794;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t23793.cljs$lang$type = true;
    cljs.core.async.t23793.cljs$lang$ctorStr = "cljs.core.async/t23793";
    cljs.core.async.t23793.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write(writer__3971__auto__, "cljs.core.async/t23793");
    };
    cljs.core.async.t23793.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t23793.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn0) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_(self__.ch, val, fn0);
    };
    cljs.core.async.t23793.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t23793.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      var ret = cljs.core.async.impl.protocols.take_BANG_(self__.ch, function() {
        if (typeof cljs.core.async.t23796 !== "undefined") {
        } else {
          cljs.core.async.t23796 = function(fn1, _, meta23794, ch, f, map_LT_, meta23797) {
            this.fn1 = fn1;
            this._ = _;
            this.meta23794 = meta23794;
            this.ch = ch;
            this.f = f;
            this.map_LT_ = map_LT_;
            this.meta23797 = meta23797;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          cljs.core.async.t23796.cljs$lang$type = true;
          cljs.core.async.t23796.cljs$lang$ctorStr = "cljs.core.async/t23796";
          cljs.core.async.t23796.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
            return cljs.core._write(writer__3971__auto__, "cljs.core.async/t23796");
          };
          cljs.core.async.t23796.prototype.cljs$core$async$impl$protocols$Handler$ = true;
          cljs.core.async.t23796.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(___$3) {
            var self__ = this;
            var ___$4 = this;
            return cljs.core.async.impl.protocols.active_QMARK_(self__.fn1);
          };
          cljs.core.async.t23796.prototype.cljs$core$async$impl$protocols$Handler$lock_id$arity$1 = function(___$3) {
            var self__ = this;
            var ___$4 = this;
            return cljs.core.async.impl.protocols.lock_id.cljs$core$IFn$_invoke$arity$1 ? cljs.core.async.impl.protocols.lock_id.cljs$core$IFn$_invoke$arity$1(self__.fn1) : cljs.core.async.impl.protocols.lock_id.call(null, self__.fn1);
          };
          cljs.core.async.t23796.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(___$3) {
            var self__ = this;
            var ___$4 = this;
            var f1 = cljs.core.async.impl.protocols.commit(self__.fn1);
            return function(f1, ___$4) {
              return function(p1__23786_SHARP_) {
                return f1.cljs$core$IFn$_invoke$arity$1 ? f1.cljs$core$IFn$_invoke$arity$1(p1__23786_SHARP_ == null ? null : self__.f.cljs$core$IFn$_invoke$arity$1 ? self__.f.cljs$core$IFn$_invoke$arity$1(p1__23786_SHARP_) : self__.f.call(null, p1__23786_SHARP_)) : f1.call(null, p1__23786_SHARP_ == null ? null : self__.f.cljs$core$IFn$_invoke$arity$1 ? self__.f.cljs$core$IFn$_invoke$arity$1(p1__23786_SHARP_) : self__.f.call(null, p1__23786_SHARP_));
              };
            }(f1, ___$4);
          };
          cljs.core.async.t23796.prototype.cljs$core$IMeta$_meta$arity$1 = function(_23798) {
            var self__ = this;
            var _23798__$1 = this;
            return self__.meta23797;
          };
          cljs.core.async.t23796.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_23798, meta23797__$1) {
            var self__ = this;
            var _23798__$1 = this;
            return new cljs.core.async.t23796(self__.fn1, self__._, self__.meta23794, self__.ch, self__.f, self__.map_LT_, meta23797__$1);
          };
          cljs.core.async.__GT_t23796 = function __GT_t23796(fn1__$1, ___$2, meta23794__$1, ch__$2, f__$2, map_LT___$2, meta23797) {
            return new cljs.core.async.t23796(fn1__$1, ___$2, meta23794__$1, ch__$2, f__$2, map_LT___$2, meta23797);
          };
        }
        return new cljs.core.async.t23796(fn1, ___$1, self__.meta23794, self__.ch, self__.f, self__.map_LT_, null);
      }());
      if (cljs.core.truth_(function() {
        var and__3396__auto__ = ret;
        if (cljs.core.truth_(and__3396__auto__)) {
          return!(cljs.core.deref(ret) == null);
        } else {
          return and__3396__auto__;
        }
      }())) {
        return cljs.core.async.impl.channels.box(self__.f.cljs$core$IFn$_invoke$arity$1 ? self__.f.cljs$core$IFn$_invoke$arity$1(cljs.core.deref(ret)) : self__.f.call(null, cljs.core.deref(ret)));
      } else {
        return ret;
      }
    };
    cljs.core.async.t23793.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t23793.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_(self__.ch);
    };
    cljs.core.async.t23793.prototype.cljs$core$IMeta$_meta$arity$1 = function(_23795) {
      var self__ = this;
      var _23795__$1 = this;
      return self__.meta23794;
    };
    cljs.core.async.t23793.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_23795, meta23794__$1) {
      var self__ = this;
      var _23795__$1 = this;
      return new cljs.core.async.t23793(self__.ch, self__.f, self__.map_LT_, meta23794__$1);
    };
    cljs.core.async.__GT_t23793 = function __GT_t23793(ch__$1, f__$1, map_LT___$1, meta23794) {
      return new cljs.core.async.t23793(ch__$1, f__$1, map_LT___$1, meta23794);
    };
  }
  return new cljs.core.async.t23793(ch, f, map_LT_, null);
};
cljs.core.async.map_GT_ = function map_GT_(f, ch) {
  if (typeof cljs.core.async.t23802 !== "undefined") {
  } else {
    cljs.core.async.t23802 = function(ch, f, map_GT_, meta23803) {
      this.ch = ch;
      this.f = f;
      this.map_GT_ = map_GT_;
      this.meta23803 = meta23803;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t23802.cljs$lang$type = true;
    cljs.core.async.t23802.cljs$lang$ctorStr = "cljs.core.async/t23802";
    cljs.core.async.t23802.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write(writer__3971__auto__, "cljs.core.async/t23802");
    };
    cljs.core.async.t23802.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t23802.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn0) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_(self__.ch, self__.f.cljs$core$IFn$_invoke$arity$1 ? self__.f.cljs$core$IFn$_invoke$arity$1(val) : self__.f.call(null, val), fn0);
    };
    cljs.core.async.t23802.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t23802.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_(self__.ch, fn1);
    };
    cljs.core.async.t23802.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t23802.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_(self__.ch);
    };
    cljs.core.async.t23802.prototype.cljs$core$IMeta$_meta$arity$1 = function(_23804) {
      var self__ = this;
      var _23804__$1 = this;
      return self__.meta23803;
    };
    cljs.core.async.t23802.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_23804, meta23803__$1) {
      var self__ = this;
      var _23804__$1 = this;
      return new cljs.core.async.t23802(self__.ch, self__.f, self__.map_GT_, meta23803__$1);
    };
    cljs.core.async.__GT_t23802 = function __GT_t23802(ch__$1, f__$1, map_GT___$1, meta23803) {
      return new cljs.core.async.t23802(ch__$1, f__$1, map_GT___$1, meta23803);
    };
  }
  return new cljs.core.async.t23802(ch, f, map_GT_, null);
};
cljs.core.async.filter_GT_ = function filter_GT_(p, ch) {
  if (typeof cljs.core.async.t23808 !== "undefined") {
  } else {
    cljs.core.async.t23808 = function(ch, p, filter_GT_, meta23809) {
      this.ch = ch;
      this.p = p;
      this.filter_GT_ = filter_GT_;
      this.meta23809 = meta23809;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t23808.cljs$lang$type = true;
    cljs.core.async.t23808.cljs$lang$ctorStr = "cljs.core.async/t23808";
    cljs.core.async.t23808.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write(writer__3971__auto__, "cljs.core.async/t23808");
    };
    cljs.core.async.t23808.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t23808.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn0) {
      var self__ = this;
      var ___$1 = this;
      if (cljs.core.truth_(self__.p.cljs$core$IFn$_invoke$arity$1 ? self__.p.cljs$core$IFn$_invoke$arity$1(val) : self__.p.call(null, val))) {
        return cljs.core.async.impl.protocols.put_BANG_(self__.ch, val, fn0);
      } else {
        return cljs.core.async.impl.channels.box(null);
      }
    };
    cljs.core.async.t23808.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t23808.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_(self__.ch, fn1);
    };
    cljs.core.async.t23808.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t23808.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_(self__.ch);
    };
    cljs.core.async.t23808.prototype.cljs$core$IMeta$_meta$arity$1 = function(_23810) {
      var self__ = this;
      var _23810__$1 = this;
      return self__.meta23809;
    };
    cljs.core.async.t23808.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_23810, meta23809__$1) {
      var self__ = this;
      var _23810__$1 = this;
      return new cljs.core.async.t23808(self__.ch, self__.p, self__.filter_GT_, meta23809__$1);
    };
    cljs.core.async.__GT_t23808 = function __GT_t23808(ch__$1, p__$1, filter_GT___$1, meta23809) {
      return new cljs.core.async.t23808(ch__$1, p__$1, filter_GT___$1, meta23809);
    };
  }
  return new cljs.core.async.t23808(ch, p, filter_GT_, null);
};
cljs.core.async.remove_GT_ = function remove_GT_(p, ch) {
  return cljs.core.async.filter_GT_(cljs.core.complement(p), ch);
};
cljs.core.async.filter_LT_ = function() {
  var filter_LT_ = null;
  var filter_LT___2 = function(p, ch) {
    return filter_LT_.cljs$core$IFn$_invoke$arity$3(p, ch, null);
  };
  var filter_LT___3 = function(p, ch, buf_or_n) {
    var out = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(buf_or_n);
    var c__5952__auto___23893 = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(1);
    cljs.core.async.impl.dispatch.run(function() {
      var f__5953__auto__ = function() {
        var switch__5937__auto__ = function(state_23872) {
          var state_val_23873 = state_23872[1];
          if (state_val_23873 === 1) {
            var state_23872__$1 = state_23872;
            var statearr_23874_23894 = state_23872__$1;
            statearr_23874_23894[2] = null;
            statearr_23874_23894[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_23873 === 2) {
              var state_23872__$1 = state_23872;
              return cljs.core.async.impl.ioc_helpers.take_BANG_(state_23872__$1, 4, ch);
            } else {
              if (state_val_23873 === 3) {
                var inst_23870 = state_23872[2];
                var state_23872__$1 = state_23872;
                return cljs.core.async.impl.ioc_helpers.return_chan(state_23872__$1, inst_23870);
              } else {
                if (state_val_23873 === 4) {
                  var inst_23854 = state_23872[7];
                  var inst_23854__$1 = state_23872[2];
                  var inst_23855 = inst_23854__$1 == null;
                  var state_23872__$1 = function() {
                    var statearr_23875 = state_23872;
                    statearr_23875[7] = inst_23854__$1;
                    return statearr_23875;
                  }();
                  if (cljs.core.truth_(inst_23855)) {
                    var statearr_23876_23895 = state_23872__$1;
                    statearr_23876_23895[1] = 5;
                  } else {
                    var statearr_23877_23896 = state_23872__$1;
                    statearr_23877_23896[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_23873 === 5) {
                    var inst_23857 = cljs.core.async.close_BANG_(out);
                    var state_23872__$1 = state_23872;
                    var statearr_23878_23897 = state_23872__$1;
                    statearr_23878_23897[2] = inst_23857;
                    statearr_23878_23897[1] = 7;
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_23873 === 6) {
                      var inst_23854 = state_23872[7];
                      var inst_23859 = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(inst_23854) : p.call(null, inst_23854);
                      var state_23872__$1 = state_23872;
                      if (cljs.core.truth_(inst_23859)) {
                        var statearr_23879_23898 = state_23872__$1;
                        statearr_23879_23898[1] = 8;
                      } else {
                        var statearr_23880_23899 = state_23872__$1;
                        statearr_23880_23899[1] = 9;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_23873 === 7) {
                        var inst_23868 = state_23872[2];
                        var state_23872__$1 = state_23872;
                        var statearr_23881_23900 = state_23872__$1;
                        statearr_23881_23900[2] = inst_23868;
                        statearr_23881_23900[1] = 3;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_23873 === 8) {
                          var inst_23854 = state_23872[7];
                          var state_23872__$1 = state_23872;
                          return cljs.core.async.impl.ioc_helpers.put_BANG_(state_23872__$1, 11, out, inst_23854);
                        } else {
                          if (state_val_23873 === 9) {
                            var state_23872__$1 = state_23872;
                            var statearr_23882_23901 = state_23872__$1;
                            statearr_23882_23901[2] = null;
                            statearr_23882_23901[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_23873 === 10) {
                              var inst_23865 = state_23872[2];
                              var state_23872__$1 = function() {
                                var statearr_23883 = state_23872;
                                statearr_23883[8] = inst_23865;
                                return statearr_23883;
                              }();
                              var statearr_23884_23902 = state_23872__$1;
                              statearr_23884_23902[2] = null;
                              statearr_23884_23902[1] = 2;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_23873 === 11) {
                                var inst_23862 = state_23872[2];
                                var state_23872__$1 = state_23872;
                                var statearr_23885_23903 = state_23872__$1;
                                statearr_23885_23903[2] = inst_23862;
                                statearr_23885_23903[1] = 10;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                return null;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__5937__auto__) {
          return function() {
            var state_machine__5938__auto__ = null;
            var state_machine__5938__auto____0 = function() {
              var statearr_23889 = [null, null, null, null, null, null, null, null, null];
              statearr_23889[0] = state_machine__5938__auto__;
              statearr_23889[1] = 1;
              return statearr_23889;
            };
            var state_machine__5938__auto____1 = function(state_23872) {
              while (true) {
                var ret_value__5939__auto__ = function() {
                  try {
                    while (true) {
                      var result__5940__auto__ = switch__5937__auto__(state_23872);
                      if (cljs.core.keyword_identical_QMARK_(result__5940__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__5940__auto__;
                      }
                      break;
                    }
                  } catch (e23890) {
                    if (e23890 instanceof Object) {
                      var ex__5941__auto__ = e23890;
                      var statearr_23891_23904 = state_23872;
                      statearr_23891_23904[5] = ex__5941__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception(state_23872);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e23890;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_(ret_value__5939__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__23905 = state_23872;
                  state_23872 = G__23905;
                  continue;
                } else {
                  return ret_value__5939__auto__;
                }
                break;
              }
            };
            state_machine__5938__auto__ = function(state_23872) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5938__auto____0.call(this);
                case 1:
                  return state_machine__5938__auto____1.call(this, state_23872);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5938__auto____0;
            state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5938__auto____1;
            return state_machine__5938__auto__;
          }();
        }(switch__5937__auto__);
      }();
      var state__5954__auto__ = function() {
        var statearr_23892 = f__5953__auto__.cljs$core$IFn$_invoke$arity$0 ? f__5953__auto__.cljs$core$IFn$_invoke$arity$0() : f__5953__auto__.call(null);
        statearr_23892[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5952__auto___23893;
        return statearr_23892;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__5954__auto__);
    });
    return out;
  };
  filter_LT_ = function(p, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return filter_LT___2.call(this, p, ch);
      case 3:
        return filter_LT___3.call(this, p, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  filter_LT_.cljs$core$IFn$_invoke$arity$2 = filter_LT___2;
  filter_LT_.cljs$core$IFn$_invoke$arity$3 = filter_LT___3;
  return filter_LT_;
}();
cljs.core.async.remove_LT_ = function() {
  var remove_LT_ = null;
  var remove_LT___2 = function(p, ch) {
    return remove_LT_.cljs$core$IFn$_invoke$arity$3(p, ch, null);
  };
  var remove_LT___3 = function(p, ch, buf_or_n) {
    return cljs.core.async.filter_LT_.cljs$core$IFn$_invoke$arity$3(cljs.core.complement(p), ch, buf_or_n);
  };
  remove_LT_ = function(p, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return remove_LT___2.call(this, p, ch);
      case 3:
        return remove_LT___3.call(this, p, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  remove_LT_.cljs$core$IFn$_invoke$arity$2 = remove_LT___2;
  remove_LT_.cljs$core$IFn$_invoke$arity$3 = remove_LT___3;
  return remove_LT_;
}();
cljs.core.async.mapcat_STAR_ = function mapcat_STAR_(f, in$, out) {
  var c__5952__auto__ = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(1);
  cljs.core.async.impl.dispatch.run(function() {
    var f__5953__auto__ = function() {
      var switch__5937__auto__ = function(state_24057) {
        var state_val_24058 = state_24057[1];
        if (state_val_24058 === 1) {
          var state_24057__$1 = state_24057;
          var statearr_24059_24096 = state_24057__$1;
          statearr_24059_24096[2] = null;
          statearr_24059_24096[1] = 2;
          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
        } else {
          if (state_val_24058 === 2) {
            var state_24057__$1 = state_24057;
            return cljs.core.async.impl.ioc_helpers.take_BANG_(state_24057__$1, 4, in$);
          } else {
            if (state_val_24058 === 3) {
              var inst_24055 = state_24057[2];
              var state_24057__$1 = state_24057;
              return cljs.core.async.impl.ioc_helpers.return_chan(state_24057__$1, inst_24055);
            } else {
              if (state_val_24058 === 4) {
                var inst_24003 = state_24057[7];
                var inst_24003__$1 = state_24057[2];
                var inst_24004 = inst_24003__$1 == null;
                var state_24057__$1 = function() {
                  var statearr_24060 = state_24057;
                  statearr_24060[7] = inst_24003__$1;
                  return statearr_24060;
                }();
                if (cljs.core.truth_(inst_24004)) {
                  var statearr_24061_24097 = state_24057__$1;
                  statearr_24061_24097[1] = 5;
                } else {
                  var statearr_24062_24098 = state_24057__$1;
                  statearr_24062_24098[1] = 6;
                }
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_24058 === 5) {
                  var inst_24006 = cljs.core.async.close_BANG_(out);
                  var state_24057__$1 = state_24057;
                  var statearr_24063_24099 = state_24057__$1;
                  statearr_24063_24099[2] = inst_24006;
                  statearr_24063_24099[1] = 7;
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_24058 === 6) {
                    var inst_24003 = state_24057[7];
                    var inst_24008 = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(inst_24003) : f.call(null, inst_24003);
                    var inst_24013 = cljs.core.seq(inst_24008);
                    var inst_24014 = inst_24013;
                    var inst_24015 = null;
                    var inst_24016 = 0;
                    var inst_24017 = 0;
                    var state_24057__$1 = function() {
                      var statearr_24064 = state_24057;
                      statearr_24064[8] = inst_24017;
                      statearr_24064[9] = inst_24016;
                      statearr_24064[10] = inst_24015;
                      statearr_24064[11] = inst_24014;
                      return statearr_24064;
                    }();
                    var statearr_24065_24100 = state_24057__$1;
                    statearr_24065_24100[2] = null;
                    statearr_24065_24100[1] = 8;
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_24058 === 7) {
                      var inst_24053 = state_24057[2];
                      var state_24057__$1 = state_24057;
                      var statearr_24066_24101 = state_24057__$1;
                      statearr_24066_24101[2] = inst_24053;
                      statearr_24066_24101[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_24058 === 8) {
                        var inst_24017 = state_24057[8];
                        var inst_24016 = state_24057[9];
                        var inst_24019 = inst_24017 < inst_24016;
                        var inst_24020 = inst_24019;
                        var state_24057__$1 = state_24057;
                        if (cljs.core.truth_(inst_24020)) {
                          var statearr_24067_24102 = state_24057__$1;
                          statearr_24067_24102[1] = 10;
                        } else {
                          var statearr_24068_24103 = state_24057__$1;
                          statearr_24068_24103[1] = 11;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_24058 === 9) {
                          var inst_24050 = state_24057[2];
                          var state_24057__$1 = function() {
                            var statearr_24069 = state_24057;
                            statearr_24069[12] = inst_24050;
                            return statearr_24069;
                          }();
                          var statearr_24070_24104 = state_24057__$1;
                          statearr_24070_24104[2] = null;
                          statearr_24070_24104[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_24058 === 10) {
                            var inst_24017 = state_24057[8];
                            var inst_24015 = state_24057[10];
                            var inst_24022 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(inst_24015, inst_24017);
                            var state_24057__$1 = state_24057;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_(state_24057__$1, 13, out, inst_24022);
                          } else {
                            if (state_val_24058 === 11) {
                              var inst_24014 = state_24057[11];
                              var inst_24028 = state_24057[13];
                              var inst_24028__$1 = cljs.core.seq(inst_24014);
                              var state_24057__$1 = function() {
                                var statearr_24074 = state_24057;
                                statearr_24074[13] = inst_24028__$1;
                                return statearr_24074;
                              }();
                              if (inst_24028__$1) {
                                var statearr_24075_24105 = state_24057__$1;
                                statearr_24075_24105[1] = 14;
                              } else {
                                var statearr_24076_24106 = state_24057__$1;
                                statearr_24076_24106[1] = 15;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_24058 === 12) {
                                var inst_24048 = state_24057[2];
                                var state_24057__$1 = state_24057;
                                var statearr_24077_24107 = state_24057__$1;
                                statearr_24077_24107[2] = inst_24048;
                                statearr_24077_24107[1] = 9;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_24058 === 13) {
                                  var inst_24017 = state_24057[8];
                                  var inst_24016 = state_24057[9];
                                  var inst_24015 = state_24057[10];
                                  var inst_24014 = state_24057[11];
                                  var inst_24024 = state_24057[2];
                                  var inst_24025 = inst_24017 + 1;
                                  var tmp24071 = inst_24016;
                                  var tmp24072 = inst_24015;
                                  var tmp24073 = inst_24014;
                                  var inst_24014__$1 = tmp24073;
                                  var inst_24015__$1 = tmp24072;
                                  var inst_24016__$1 = tmp24071;
                                  var inst_24017__$1 = inst_24025;
                                  var state_24057__$1 = function() {
                                    var statearr_24078 = state_24057;
                                    statearr_24078[8] = inst_24017__$1;
                                    statearr_24078[9] = inst_24016__$1;
                                    statearr_24078[10] = inst_24015__$1;
                                    statearr_24078[11] = inst_24014__$1;
                                    statearr_24078[14] = inst_24024;
                                    return statearr_24078;
                                  }();
                                  var statearr_24079_24108 = state_24057__$1;
                                  statearr_24079_24108[2] = null;
                                  statearr_24079_24108[1] = 8;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_24058 === 14) {
                                    var inst_24028 = state_24057[13];
                                    var inst_24030 = cljs.core.chunked_seq_QMARK_(inst_24028);
                                    var state_24057__$1 = state_24057;
                                    if (inst_24030) {
                                      var statearr_24080_24109 = state_24057__$1;
                                      statearr_24080_24109[1] = 17;
                                    } else {
                                      var statearr_24081_24110 = state_24057__$1;
                                      statearr_24081_24110[1] = 18;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    if (state_val_24058 === 15) {
                                      var state_24057__$1 = state_24057;
                                      var statearr_24082_24111 = state_24057__$1;
                                      statearr_24082_24111[2] = null;
                                      statearr_24082_24111[1] = 16;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                    } else {
                                      if (state_val_24058 === 16) {
                                        var inst_24046 = state_24057[2];
                                        var state_24057__$1 = state_24057;
                                        var statearr_24083_24112 = state_24057__$1;
                                        statearr_24083_24112[2] = inst_24046;
                                        statearr_24083_24112[1] = 12;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                      } else {
                                        if (state_val_24058 === 17) {
                                          var inst_24028 = state_24057[13];
                                          var inst_24032 = cljs.core.chunk_first(inst_24028);
                                          var inst_24033 = cljs.core.chunk_rest(inst_24028);
                                          var inst_24034 = cljs.core.count(inst_24032);
                                          var inst_24014 = inst_24033;
                                          var inst_24015 = inst_24032;
                                          var inst_24016 = inst_24034;
                                          var inst_24017 = 0;
                                          var state_24057__$1 = function() {
                                            var statearr_24084 = state_24057;
                                            statearr_24084[8] = inst_24017;
                                            statearr_24084[9] = inst_24016;
                                            statearr_24084[10] = inst_24015;
                                            statearr_24084[11] = inst_24014;
                                            return statearr_24084;
                                          }();
                                          var statearr_24085_24113 = state_24057__$1;
                                          statearr_24085_24113[2] = null;
                                          statearr_24085_24113[1] = 8;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                        } else {
                                          if (state_val_24058 === 18) {
                                            var inst_24028 = state_24057[13];
                                            var inst_24037 = cljs.core.first(inst_24028);
                                            var state_24057__$1 = state_24057;
                                            return cljs.core.async.impl.ioc_helpers.put_BANG_(state_24057__$1, 20, out, inst_24037);
                                          } else {
                                            if (state_val_24058 === 19) {
                                              var inst_24043 = state_24057[2];
                                              var state_24057__$1 = state_24057;
                                              var statearr_24086_24114 = state_24057__$1;
                                              statearr_24086_24114[2] = inst_24043;
                                              statearr_24086_24114[1] = 16;
                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                            } else {
                                              if (state_val_24058 === 20) {
                                                var inst_24028 = state_24057[13];
                                                var inst_24039 = state_24057[2];
                                                var inst_24040 = cljs.core.next(inst_24028);
                                                var inst_24014 = inst_24040;
                                                var inst_24015 = null;
                                                var inst_24016 = 0;
                                                var inst_24017 = 0;
                                                var state_24057__$1 = function() {
                                                  var statearr_24087 = state_24057;
                                                  statearr_24087[8] = inst_24017;
                                                  statearr_24087[9] = inst_24016;
                                                  statearr_24087[10] = inst_24015;
                                                  statearr_24087[11] = inst_24014;
                                                  statearr_24087[15] = inst_24039;
                                                  return statearr_24087;
                                                }();
                                                var statearr_24088_24115 = state_24057__$1;
                                                statearr_24088_24115[2] = null;
                                                statearr_24088_24115[1] = 8;
                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                              } else {
                                                return null;
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__5937__auto__) {
        return function() {
          var state_machine__5938__auto__ = null;
          var state_machine__5938__auto____0 = function() {
            var statearr_24092 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
            statearr_24092[0] = state_machine__5938__auto__;
            statearr_24092[1] = 1;
            return statearr_24092;
          };
          var state_machine__5938__auto____1 = function(state_24057) {
            while (true) {
              var ret_value__5939__auto__ = function() {
                try {
                  while (true) {
                    var result__5940__auto__ = switch__5937__auto__(state_24057);
                    if (cljs.core.keyword_identical_QMARK_(result__5940__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                      continue;
                    } else {
                      return result__5940__auto__;
                    }
                    break;
                  }
                } catch (e24093) {
                  if (e24093 instanceof Object) {
                    var ex__5941__auto__ = e24093;
                    var statearr_24094_24116 = state_24057;
                    statearr_24094_24116[5] = ex__5941__auto__;
                    cljs.core.async.impl.ioc_helpers.process_exception(state_24057);
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw e24093;
                    } else {
                      return null;
                    }
                  }
                }
              }();
              if (cljs.core.keyword_identical_QMARK_(ret_value__5939__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                var G__24117 = state_24057;
                state_24057 = G__24117;
                continue;
              } else {
                return ret_value__5939__auto__;
              }
              break;
            }
          };
          state_machine__5938__auto__ = function(state_24057) {
            switch(arguments.length) {
              case 0:
                return state_machine__5938__auto____0.call(this);
              case 1:
                return state_machine__5938__auto____1.call(this, state_24057);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5938__auto____0;
          state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5938__auto____1;
          return state_machine__5938__auto__;
        }();
      }(switch__5937__auto__);
    }();
    var state__5954__auto__ = function() {
      var statearr_24095 = f__5953__auto__.cljs$core$IFn$_invoke$arity$0 ? f__5953__auto__.cljs$core$IFn$_invoke$arity$0() : f__5953__auto__.call(null);
      statearr_24095[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5952__auto__;
      return statearr_24095;
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__5954__auto__);
  });
  return c__5952__auto__;
};
cljs.core.async.mapcat_LT_ = function() {
  var mapcat_LT_ = null;
  var mapcat_LT___2 = function(f, in$) {
    return mapcat_LT_.cljs$core$IFn$_invoke$arity$3(f, in$, null);
  };
  var mapcat_LT___3 = function(f, in$, buf_or_n) {
    var out = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(buf_or_n);
    cljs.core.async.mapcat_STAR_(f, in$, out);
    return out;
  };
  mapcat_LT_ = function(f, in$, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return mapcat_LT___2.call(this, f, in$);
      case 3:
        return mapcat_LT___3.call(this, f, in$, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat_LT_.cljs$core$IFn$_invoke$arity$2 = mapcat_LT___2;
  mapcat_LT_.cljs$core$IFn$_invoke$arity$3 = mapcat_LT___3;
  return mapcat_LT_;
}();
cljs.core.async.mapcat_GT_ = function() {
  var mapcat_GT_ = null;
  var mapcat_GT___2 = function(f, out) {
    return mapcat_GT_.cljs$core$IFn$_invoke$arity$3(f, out, null);
  };
  var mapcat_GT___3 = function(f, out, buf_or_n) {
    var in$ = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(buf_or_n);
    cljs.core.async.mapcat_STAR_(f, in$, out);
    return in$;
  };
  mapcat_GT_ = function(f, out, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return mapcat_GT___2.call(this, f, out);
      case 3:
        return mapcat_GT___3.call(this, f, out, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat_GT_.cljs$core$IFn$_invoke$arity$2 = mapcat_GT___2;
  mapcat_GT_.cljs$core$IFn$_invoke$arity$3 = mapcat_GT___3;
  return mapcat_GT_;
}();
cljs.core.async.pipe = function() {
  var pipe = null;
  var pipe__2 = function(from, to) {
    return pipe.cljs$core$IFn$_invoke$arity$3(from, to, true);
  };
  var pipe__3 = function(from, to, close_QMARK_) {
    var c__5952__auto___24198 = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(1);
    cljs.core.async.impl.dispatch.run(function() {
      var f__5953__auto__ = function() {
        var switch__5937__auto__ = function(state_24177) {
          var state_val_24178 = state_24177[1];
          if (state_val_24178 === 1) {
            var state_24177__$1 = state_24177;
            var statearr_24179_24199 = state_24177__$1;
            statearr_24179_24199[2] = null;
            statearr_24179_24199[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_24178 === 2) {
              var state_24177__$1 = state_24177;
              return cljs.core.async.impl.ioc_helpers.take_BANG_(state_24177__$1, 4, from);
            } else {
              if (state_val_24178 === 3) {
                var inst_24175 = state_24177[2];
                var state_24177__$1 = state_24177;
                return cljs.core.async.impl.ioc_helpers.return_chan(state_24177__$1, inst_24175);
              } else {
                if (state_val_24178 === 4) {
                  var inst_24160 = state_24177[7];
                  var inst_24160__$1 = state_24177[2];
                  var inst_24161 = inst_24160__$1 == null;
                  var state_24177__$1 = function() {
                    var statearr_24180 = state_24177;
                    statearr_24180[7] = inst_24160__$1;
                    return statearr_24180;
                  }();
                  if (cljs.core.truth_(inst_24161)) {
                    var statearr_24181_24200 = state_24177__$1;
                    statearr_24181_24200[1] = 5;
                  } else {
                    var statearr_24182_24201 = state_24177__$1;
                    statearr_24182_24201[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_24178 === 5) {
                    var state_24177__$1 = state_24177;
                    if (cljs.core.truth_(close_QMARK_)) {
                      var statearr_24183_24202 = state_24177__$1;
                      statearr_24183_24202[1] = 8;
                    } else {
                      var statearr_24184_24203 = state_24177__$1;
                      statearr_24184_24203[1] = 9;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_24178 === 6) {
                      var inst_24160 = state_24177[7];
                      var state_24177__$1 = state_24177;
                      return cljs.core.async.impl.ioc_helpers.put_BANG_(state_24177__$1, 11, to, inst_24160);
                    } else {
                      if (state_val_24178 === 7) {
                        var inst_24173 = state_24177[2];
                        var state_24177__$1 = state_24177;
                        var statearr_24185_24204 = state_24177__$1;
                        statearr_24185_24204[2] = inst_24173;
                        statearr_24185_24204[1] = 3;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_24178 === 8) {
                          var inst_24164 = cljs.core.async.close_BANG_(to);
                          var state_24177__$1 = state_24177;
                          var statearr_24186_24205 = state_24177__$1;
                          statearr_24186_24205[2] = inst_24164;
                          statearr_24186_24205[1] = 10;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_24178 === 9) {
                            var state_24177__$1 = state_24177;
                            var statearr_24187_24206 = state_24177__$1;
                            statearr_24187_24206[2] = null;
                            statearr_24187_24206[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_24178 === 10) {
                              var inst_24167 = state_24177[2];
                              var state_24177__$1 = state_24177;
                              var statearr_24188_24207 = state_24177__$1;
                              statearr_24188_24207[2] = inst_24167;
                              statearr_24188_24207[1] = 7;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_24178 === 11) {
                                var inst_24170 = state_24177[2];
                                var state_24177__$1 = function() {
                                  var statearr_24189 = state_24177;
                                  statearr_24189[8] = inst_24170;
                                  return statearr_24189;
                                }();
                                var statearr_24190_24208 = state_24177__$1;
                                statearr_24190_24208[2] = null;
                                statearr_24190_24208[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                return null;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__5937__auto__) {
          return function() {
            var state_machine__5938__auto__ = null;
            var state_machine__5938__auto____0 = function() {
              var statearr_24194 = [null, null, null, null, null, null, null, null, null];
              statearr_24194[0] = state_machine__5938__auto__;
              statearr_24194[1] = 1;
              return statearr_24194;
            };
            var state_machine__5938__auto____1 = function(state_24177) {
              while (true) {
                var ret_value__5939__auto__ = function() {
                  try {
                    while (true) {
                      var result__5940__auto__ = switch__5937__auto__(state_24177);
                      if (cljs.core.keyword_identical_QMARK_(result__5940__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__5940__auto__;
                      }
                      break;
                    }
                  } catch (e24195) {
                    if (e24195 instanceof Object) {
                      var ex__5941__auto__ = e24195;
                      var statearr_24196_24209 = state_24177;
                      statearr_24196_24209[5] = ex__5941__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception(state_24177);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e24195;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_(ret_value__5939__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__24210 = state_24177;
                  state_24177 = G__24210;
                  continue;
                } else {
                  return ret_value__5939__auto__;
                }
                break;
              }
            };
            state_machine__5938__auto__ = function(state_24177) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5938__auto____0.call(this);
                case 1:
                  return state_machine__5938__auto____1.call(this, state_24177);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5938__auto____0;
            state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5938__auto____1;
            return state_machine__5938__auto__;
          }();
        }(switch__5937__auto__);
      }();
      var state__5954__auto__ = function() {
        var statearr_24197 = f__5953__auto__.cljs$core$IFn$_invoke$arity$0 ? f__5953__auto__.cljs$core$IFn$_invoke$arity$0() : f__5953__auto__.call(null);
        statearr_24197[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5952__auto___24198;
        return statearr_24197;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__5954__auto__);
    });
    return to;
  };
  pipe = function(from, to, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return pipe__2.call(this, from, to);
      case 3:
        return pipe__3.call(this, from, to, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pipe.cljs$core$IFn$_invoke$arity$2 = pipe__2;
  pipe.cljs$core$IFn$_invoke$arity$3 = pipe__3;
  return pipe;
}();
cljs.core.async.split = function() {
  var split = null;
  var split__2 = function(p, ch) {
    return split.cljs$core$IFn$_invoke$arity$4(p, ch, null, null);
  };
  var split__4 = function(p, ch, t_buf_or_n, f_buf_or_n) {
    var tc = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(t_buf_or_n);
    var fc = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(f_buf_or_n);
    var c__5952__auto___24297 = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(1);
    cljs.core.async.impl.dispatch.run(function() {
      var f__5953__auto__ = function() {
        var switch__5937__auto__ = function(state_24275) {
          var state_val_24276 = state_24275[1];
          if (state_val_24276 === 1) {
            var state_24275__$1 = state_24275;
            var statearr_24277_24298 = state_24275__$1;
            statearr_24277_24298[2] = null;
            statearr_24277_24298[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_24276 === 2) {
              var state_24275__$1 = state_24275;
              return cljs.core.async.impl.ioc_helpers.take_BANG_(state_24275__$1, 4, ch);
            } else {
              if (state_val_24276 === 3) {
                var inst_24273 = state_24275[2];
                var state_24275__$1 = state_24275;
                return cljs.core.async.impl.ioc_helpers.return_chan(state_24275__$1, inst_24273);
              } else {
                if (state_val_24276 === 4) {
                  var inst_24256 = state_24275[7];
                  var inst_24256__$1 = state_24275[2];
                  var inst_24257 = inst_24256__$1 == null;
                  var state_24275__$1 = function() {
                    var statearr_24278 = state_24275;
                    statearr_24278[7] = inst_24256__$1;
                    return statearr_24278;
                  }();
                  if (cljs.core.truth_(inst_24257)) {
                    var statearr_24279_24299 = state_24275__$1;
                    statearr_24279_24299[1] = 5;
                  } else {
                    var statearr_24280_24300 = state_24275__$1;
                    statearr_24280_24300[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_24276 === 5) {
                    var inst_24259 = cljs.core.async.close_BANG_(tc);
                    var inst_24260 = cljs.core.async.close_BANG_(fc);
                    var state_24275__$1 = function() {
                      var statearr_24281 = state_24275;
                      statearr_24281[8] = inst_24259;
                      return statearr_24281;
                    }();
                    var statearr_24282_24301 = state_24275__$1;
                    statearr_24282_24301[2] = inst_24260;
                    statearr_24282_24301[1] = 7;
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_24276 === 6) {
                      var inst_24256 = state_24275[7];
                      var inst_24262 = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(inst_24256) : p.call(null, inst_24256);
                      var state_24275__$1 = state_24275;
                      if (cljs.core.truth_(inst_24262)) {
                        var statearr_24283_24302 = state_24275__$1;
                        statearr_24283_24302[1] = 9;
                      } else {
                        var statearr_24284_24303 = state_24275__$1;
                        statearr_24284_24303[1] = 10;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_24276 === 7) {
                        var inst_24271 = state_24275[2];
                        var state_24275__$1 = state_24275;
                        var statearr_24285_24304 = state_24275__$1;
                        statearr_24285_24304[2] = inst_24271;
                        statearr_24285_24304[1] = 3;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_24276 === 8) {
                          var inst_24268 = state_24275[2];
                          var state_24275__$1 = function() {
                            var statearr_24286 = state_24275;
                            statearr_24286[9] = inst_24268;
                            return statearr_24286;
                          }();
                          var statearr_24287_24305 = state_24275__$1;
                          statearr_24287_24305[2] = null;
                          statearr_24287_24305[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_24276 === 9) {
                            var state_24275__$1 = state_24275;
                            var statearr_24288_24306 = state_24275__$1;
                            statearr_24288_24306[2] = tc;
                            statearr_24288_24306[1] = 11;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_24276 === 10) {
                              var state_24275__$1 = state_24275;
                              var statearr_24289_24307 = state_24275__$1;
                              statearr_24289_24307[2] = fc;
                              statearr_24289_24307[1] = 11;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_24276 === 11) {
                                var inst_24256 = state_24275[7];
                                var inst_24266 = state_24275[2];
                                var state_24275__$1 = state_24275;
                                return cljs.core.async.impl.ioc_helpers.put_BANG_(state_24275__$1, 8, inst_24266, inst_24256);
                              } else {
                                return null;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__5937__auto__) {
          return function() {
            var state_machine__5938__auto__ = null;
            var state_machine__5938__auto____0 = function() {
              var statearr_24293 = [null, null, null, null, null, null, null, null, null, null];
              statearr_24293[0] = state_machine__5938__auto__;
              statearr_24293[1] = 1;
              return statearr_24293;
            };
            var state_machine__5938__auto____1 = function(state_24275) {
              while (true) {
                var ret_value__5939__auto__ = function() {
                  try {
                    while (true) {
                      var result__5940__auto__ = switch__5937__auto__(state_24275);
                      if (cljs.core.keyword_identical_QMARK_(result__5940__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__5940__auto__;
                      }
                      break;
                    }
                  } catch (e24294) {
                    if (e24294 instanceof Object) {
                      var ex__5941__auto__ = e24294;
                      var statearr_24295_24308 = state_24275;
                      statearr_24295_24308[5] = ex__5941__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception(state_24275);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e24294;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_(ret_value__5939__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__24309 = state_24275;
                  state_24275 = G__24309;
                  continue;
                } else {
                  return ret_value__5939__auto__;
                }
                break;
              }
            };
            state_machine__5938__auto__ = function(state_24275) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5938__auto____0.call(this);
                case 1:
                  return state_machine__5938__auto____1.call(this, state_24275);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5938__auto____0;
            state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5938__auto____1;
            return state_machine__5938__auto__;
          }();
        }(switch__5937__auto__);
      }();
      var state__5954__auto__ = function() {
        var statearr_24296 = f__5953__auto__.cljs$core$IFn$_invoke$arity$0 ? f__5953__auto__.cljs$core$IFn$_invoke$arity$0() : f__5953__auto__.call(null);
        statearr_24296[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5952__auto___24297;
        return statearr_24296;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__5954__auto__);
    });
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tc, fc], null);
  };
  split = function(p, ch, t_buf_or_n, f_buf_or_n) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, p, ch);
      case 4:
        return split__4.call(this, p, ch, t_buf_or_n, f_buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  split.cljs$core$IFn$_invoke$arity$2 = split__2;
  split.cljs$core$IFn$_invoke$arity$4 = split__4;
  return split;
}();
cljs.core.async.reduce = function reduce(f, init, ch) {
  var c__5952__auto__ = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(1);
  cljs.core.async.impl.dispatch.run(function() {
    var f__5953__auto__ = function() {
      var switch__5937__auto__ = function(state_24356) {
        var state_val_24357 = state_24356[1];
        if (state_val_24357 === 7) {
          var inst_24352 = state_24356[2];
          var state_24356__$1 = state_24356;
          var statearr_24358_24374 = state_24356__$1;
          statearr_24358_24374[2] = inst_24352;
          statearr_24358_24374[1] = 3;
          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
        } else {
          if (state_val_24357 === 6) {
            var inst_24342 = state_24356[7];
            var inst_24345 = state_24356[8];
            var inst_24349 = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(inst_24342, inst_24345) : f.call(null, inst_24342, inst_24345);
            var inst_24342__$1 = inst_24349;
            var state_24356__$1 = function() {
              var statearr_24359 = state_24356;
              statearr_24359[7] = inst_24342__$1;
              return statearr_24359;
            }();
            var statearr_24360_24375 = state_24356__$1;
            statearr_24360_24375[2] = null;
            statearr_24360_24375[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_24357 === 5) {
              var inst_24342 = state_24356[7];
              var state_24356__$1 = state_24356;
              var statearr_24361_24376 = state_24356__$1;
              statearr_24361_24376[2] = inst_24342;
              statearr_24361_24376[1] = 7;
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
            } else {
              if (state_val_24357 === 4) {
                var inst_24345 = state_24356[8];
                var inst_24345__$1 = state_24356[2];
                var inst_24346 = inst_24345__$1 == null;
                var state_24356__$1 = function() {
                  var statearr_24362 = state_24356;
                  statearr_24362[8] = inst_24345__$1;
                  return statearr_24362;
                }();
                if (cljs.core.truth_(inst_24346)) {
                  var statearr_24363_24377 = state_24356__$1;
                  statearr_24363_24377[1] = 5;
                } else {
                  var statearr_24364_24378 = state_24356__$1;
                  statearr_24364_24378[1] = 6;
                }
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_24357 === 3) {
                  var inst_24354 = state_24356[2];
                  var state_24356__$1 = state_24356;
                  return cljs.core.async.impl.ioc_helpers.return_chan(state_24356__$1, inst_24354);
                } else {
                  if (state_val_24357 === 2) {
                    var state_24356__$1 = state_24356;
                    return cljs.core.async.impl.ioc_helpers.take_BANG_(state_24356__$1, 4, ch);
                  } else {
                    if (state_val_24357 === 1) {
                      var inst_24342 = init;
                      var state_24356__$1 = function() {
                        var statearr_24365 = state_24356;
                        statearr_24365[7] = inst_24342;
                        return statearr_24365;
                      }();
                      var statearr_24366_24379 = state_24356__$1;
                      statearr_24366_24379[2] = null;
                      statearr_24366_24379[1] = 2;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      return null;
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__5937__auto__) {
        return function() {
          var state_machine__5938__auto__ = null;
          var state_machine__5938__auto____0 = function() {
            var statearr_24370 = [null, null, null, null, null, null, null, null, null];
            statearr_24370[0] = state_machine__5938__auto__;
            statearr_24370[1] = 1;
            return statearr_24370;
          };
          var state_machine__5938__auto____1 = function(state_24356) {
            while (true) {
              var ret_value__5939__auto__ = function() {
                try {
                  while (true) {
                    var result__5940__auto__ = switch__5937__auto__(state_24356);
                    if (cljs.core.keyword_identical_QMARK_(result__5940__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                      continue;
                    } else {
                      return result__5940__auto__;
                    }
                    break;
                  }
                } catch (e24371) {
                  if (e24371 instanceof Object) {
                    var ex__5941__auto__ = e24371;
                    var statearr_24372_24380 = state_24356;
                    statearr_24372_24380[5] = ex__5941__auto__;
                    cljs.core.async.impl.ioc_helpers.process_exception(state_24356);
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw e24371;
                    } else {
                      return null;
                    }
                  }
                }
              }();
              if (cljs.core.keyword_identical_QMARK_(ret_value__5939__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                var G__24381 = state_24356;
                state_24356 = G__24381;
                continue;
              } else {
                return ret_value__5939__auto__;
              }
              break;
            }
          };
          state_machine__5938__auto__ = function(state_24356) {
            switch(arguments.length) {
              case 0:
                return state_machine__5938__auto____0.call(this);
              case 1:
                return state_machine__5938__auto____1.call(this, state_24356);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5938__auto____0;
          state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5938__auto____1;
          return state_machine__5938__auto__;
        }();
      }(switch__5937__auto__);
    }();
    var state__5954__auto__ = function() {
      var statearr_24373 = f__5953__auto__.cljs$core$IFn$_invoke$arity$0 ? f__5953__auto__.cljs$core$IFn$_invoke$arity$0() : f__5953__auto__.call(null);
      statearr_24373[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5952__auto__;
      return statearr_24373;
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__5954__auto__);
  });
  return c__5952__auto__;
};
cljs.core.async.onto_chan = function() {
  var onto_chan = null;
  var onto_chan__2 = function(ch, coll) {
    return onto_chan.cljs$core$IFn$_invoke$arity$3(ch, coll, true);
  };
  var onto_chan__3 = function(ch, coll, close_QMARK_) {
    var c__5952__auto__ = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(1);
    cljs.core.async.impl.dispatch.run(function() {
      var f__5953__auto__ = function() {
        var switch__5937__auto__ = function(state_24443) {
          var state_val_24444 = state_24443[1];
          if (state_val_24444 === 1) {
            var inst_24423 = cljs.core.seq(coll);
            var inst_24424 = inst_24423;
            var state_24443__$1 = function() {
              var statearr_24445 = state_24443;
              statearr_24445[7] = inst_24424;
              return statearr_24445;
            }();
            var statearr_24446_24464 = state_24443__$1;
            statearr_24446_24464[2] = null;
            statearr_24446_24464[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_24444 === 2) {
              var inst_24424 = state_24443[7];
              var state_24443__$1 = state_24443;
              if (cljs.core.truth_(inst_24424)) {
                var statearr_24447_24465 = state_24443__$1;
                statearr_24447_24465[1] = 4;
              } else {
                var statearr_24448_24466 = state_24443__$1;
                statearr_24448_24466[1] = 5;
              }
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
            } else {
              if (state_val_24444 === 3) {
                var inst_24441 = state_24443[2];
                var state_24443__$1 = state_24443;
                return cljs.core.async.impl.ioc_helpers.return_chan(state_24443__$1, inst_24441);
              } else {
                if (state_val_24444 === 4) {
                  var inst_24424 = state_24443[7];
                  var inst_24427 = cljs.core.first(inst_24424);
                  var state_24443__$1 = state_24443;
                  return cljs.core.async.impl.ioc_helpers.put_BANG_(state_24443__$1, 7, ch, inst_24427);
                } else {
                  if (state_val_24444 === 5) {
                    var state_24443__$1 = state_24443;
                    if (cljs.core.truth_(close_QMARK_)) {
                      var statearr_24449_24467 = state_24443__$1;
                      statearr_24449_24467[1] = 8;
                    } else {
                      var statearr_24450_24468 = state_24443__$1;
                      statearr_24450_24468[1] = 9;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_24444 === 6) {
                      var inst_24439 = state_24443[2];
                      var state_24443__$1 = state_24443;
                      var statearr_24451_24469 = state_24443__$1;
                      statearr_24451_24469[2] = inst_24439;
                      statearr_24451_24469[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_24444 === 7) {
                        var inst_24424 = state_24443[7];
                        var inst_24429 = state_24443[2];
                        var inst_24430 = cljs.core.next(inst_24424);
                        var inst_24424__$1 = inst_24430;
                        var state_24443__$1 = function() {
                          var statearr_24452 = state_24443;
                          statearr_24452[8] = inst_24429;
                          statearr_24452[7] = inst_24424__$1;
                          return statearr_24452;
                        }();
                        var statearr_24453_24470 = state_24443__$1;
                        statearr_24453_24470[2] = null;
                        statearr_24453_24470[1] = 2;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_24444 === 8) {
                          var inst_24434 = cljs.core.async.close_BANG_(ch);
                          var state_24443__$1 = state_24443;
                          var statearr_24454_24471 = state_24443__$1;
                          statearr_24454_24471[2] = inst_24434;
                          statearr_24454_24471[1] = 10;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_24444 === 9) {
                            var state_24443__$1 = state_24443;
                            var statearr_24455_24472 = state_24443__$1;
                            statearr_24455_24472[2] = null;
                            statearr_24455_24472[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_24444 === 10) {
                              var inst_24437 = state_24443[2];
                              var state_24443__$1 = state_24443;
                              var statearr_24456_24473 = state_24443__$1;
                              statearr_24456_24473[2] = inst_24437;
                              statearr_24456_24473[1] = 6;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              return null;
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__5937__auto__) {
          return function() {
            var state_machine__5938__auto__ = null;
            var state_machine__5938__auto____0 = function() {
              var statearr_24460 = [null, null, null, null, null, null, null, null, null];
              statearr_24460[0] = state_machine__5938__auto__;
              statearr_24460[1] = 1;
              return statearr_24460;
            };
            var state_machine__5938__auto____1 = function(state_24443) {
              while (true) {
                var ret_value__5939__auto__ = function() {
                  try {
                    while (true) {
                      var result__5940__auto__ = switch__5937__auto__(state_24443);
                      if (cljs.core.keyword_identical_QMARK_(result__5940__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__5940__auto__;
                      }
                      break;
                    }
                  } catch (e24461) {
                    if (e24461 instanceof Object) {
                      var ex__5941__auto__ = e24461;
                      var statearr_24462_24474 = state_24443;
                      statearr_24462_24474[5] = ex__5941__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception(state_24443);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e24461;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_(ret_value__5939__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__24475 = state_24443;
                  state_24443 = G__24475;
                  continue;
                } else {
                  return ret_value__5939__auto__;
                }
                break;
              }
            };
            state_machine__5938__auto__ = function(state_24443) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5938__auto____0.call(this);
                case 1:
                  return state_machine__5938__auto____1.call(this, state_24443);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5938__auto____0;
            state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5938__auto____1;
            return state_machine__5938__auto__;
          }();
        }(switch__5937__auto__);
      }();
      var state__5954__auto__ = function() {
        var statearr_24463 = f__5953__auto__.cljs$core$IFn$_invoke$arity$0 ? f__5953__auto__.cljs$core$IFn$_invoke$arity$0() : f__5953__auto__.call(null);
        statearr_24463[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5952__auto__;
        return statearr_24463;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__5954__auto__);
    });
    return c__5952__auto__;
  };
  onto_chan = function(ch, coll, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return onto_chan__2.call(this, ch, coll);
      case 3:
        return onto_chan__3.call(this, ch, coll, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  onto_chan.cljs$core$IFn$_invoke$arity$2 = onto_chan__2;
  onto_chan.cljs$core$IFn$_invoke$arity$3 = onto_chan__3;
  return onto_chan;
}();
cljs.core.async.to_chan = function to_chan(coll) {
  var ch = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(cljs.core.bounded_count(100, coll));
  cljs.core.async.onto_chan.cljs$core$IFn$_invoke$arity$2(ch, coll);
  return ch;
};
cljs.core.async.Mux = function() {
  var obj24477 = {};
  return obj24477;
}();
cljs.core.async.muxch_STAR_ = function muxch_STAR_(_) {
  if (function() {
    var and__3396__auto__ = _;
    if (and__3396__auto__) {
      return _.cljs$core$async$Mux$muxch_STAR_$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return _.cljs$core$async$Mux$muxch_STAR_$arity$1(_);
  } else {
    var x__4029__auto__ = _ == null ? null : _;
    return function() {
      var or__3408__auto__ = cljs.core.async.muxch_STAR_[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core.async.muxch_STAR_["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("Mux.muxch*", _);
        }
      }
    }().call(null, _);
  }
};
cljs.core.async.Mult = function() {
  var obj24479 = {};
  return obj24479;
}();
cljs.core.async.tap_STAR_ = function tap_STAR_(m, ch, close_QMARK_) {
  if (function() {
    var and__3396__auto__ = m;
    if (and__3396__auto__) {
      return m.cljs$core$async$Mult$tap_STAR_$arity$3;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$tap_STAR_$arity$3(m, ch, close_QMARK_);
  } else {
    var x__4029__auto__ = m == null ? null : m;
    return function() {
      var or__3408__auto__ = cljs.core.async.tap_STAR_[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core.async.tap_STAR_["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("Mult.tap*", m);
        }
      }
    }().call(null, m, ch, close_QMARK_);
  }
};
cljs.core.async.untap_STAR_ = function untap_STAR_(m, ch) {
  if (function() {
    var and__3396__auto__ = m;
    if (and__3396__auto__) {
      return m.cljs$core$async$Mult$untap_STAR_$arity$2;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$untap_STAR_$arity$2(m, ch);
  } else {
    var x__4029__auto__ = m == null ? null : m;
    return function() {
      var or__3408__auto__ = cljs.core.async.untap_STAR_[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core.async.untap_STAR_["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("Mult.untap*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.untap_all_STAR_ = function untap_all_STAR_(m) {
  if (function() {
    var and__3396__auto__ = m;
    if (and__3396__auto__) {
      return m.cljs$core$async$Mult$untap_all_STAR_$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$untap_all_STAR_$arity$1(m);
  } else {
    var x__4029__auto__ = m == null ? null : m;
    return function() {
      var or__3408__auto__ = cljs.core.async.untap_all_STAR_[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core.async.untap_all_STAR_["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("Mult.untap-all*", m);
        }
      }
    }().call(null, m);
  }
};
cljs.core.async.mult = function mult(ch) {
  var cs = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);
  var m = function() {
    if (typeof cljs.core.async.t24703 !== "undefined") {
    } else {
      cljs.core.async.t24703 = function(cs, ch, mult, meta24704) {
        this.cs = cs;
        this.ch = ch;
        this.mult = mult;
        this.meta24704 = meta24704;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      cljs.core.async.t24703.cljs$lang$type = true;
      cljs.core.async.t24703.cljs$lang$ctorStr = "cljs.core.async/t24703";
      cljs.core.async.t24703.cljs$lang$ctorPrWriter = function(cs) {
        return function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
          return cljs.core._write(writer__3971__auto__, "cljs.core.async/t24703");
        };
      }(cs);
      cljs.core.async.t24703.prototype.cljs$core$async$Mult$ = true;
      cljs.core.async.t24703.prototype.cljs$core$async$Mult$tap_STAR_$arity$3 = function(cs) {
        return function(_, ch__$2, close_QMARK_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.cs, cljs.core.assoc, ch__$2, close_QMARK_);
          return null;
        };
      }(cs);
      cljs.core.async.t24703.prototype.cljs$core$async$Mult$untap_STAR_$arity$2 = function(cs) {
        return function(_, ch__$2) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.cs, cljs.core.dissoc, ch__$2);
          return null;
        };
      }(cs);
      cljs.core.async.t24703.prototype.cljs$core$async$Mult$untap_all_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_(self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return null;
        };
      }(cs);
      cljs.core.async.t24703.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t24703.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.ch;
        };
      }(cs);
      cljs.core.async.t24703.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs) {
        return function(_24705) {
          var self__ = this;
          var _24705__$1 = this;
          return self__.meta24704;
        };
      }(cs);
      cljs.core.async.t24703.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs) {
        return function(_24705, meta24704__$1) {
          var self__ = this;
          var _24705__$1 = this;
          return new cljs.core.async.t24703(self__.cs, self__.ch, self__.mult, meta24704__$1);
        };
      }(cs);
      cljs.core.async.__GT_t24703 = function(cs) {
        return function __GT_t24703(cs__$1, ch__$1, mult__$1, meta24704) {
          return new cljs.core.async.t24703(cs__$1, ch__$1, mult__$1, meta24704);
        };
      }(cs);
    }
    return new cljs.core.async.t24703(cs, ch, mult, null);
  }();
  var dchan = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(1);
  var dctr = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null);
  var done = function(cs, m, dchan, dctr) {
    return function() {
      if (cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(dctr, cljs.core.dec) === 0) {
        return cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2(dchan, true);
      } else {
        return null;
      }
    };
  }(cs, m, dchan, dctr);
  var c__5952__auto___24926 = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(1);
  cljs.core.async.impl.dispatch.run(function() {
    var f__5953__auto__ = function() {
      var switch__5937__auto__ = function(state_24840) {
        var state_val_24841 = state_24840[1];
        if (state_val_24841 === 32) {
          var inst_24708 = state_24840[7];
          var inst_24784 = state_24840[8];
          var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame(state_24840, 31, Object, null, 30);
          var inst_24791 = cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$3(inst_24784, inst_24708, done);
          var state_24840__$1 = state_24840;
          var statearr_24842_24927 = state_24840__$1;
          statearr_24842_24927[2] = inst_24791;
          cljs.core.async.impl.ioc_helpers.process_exception(state_24840__$1);
          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
        } else {
          if (state_val_24841 === 1) {
            var state_24840__$1 = state_24840;
            var statearr_24843_24928 = state_24840__$1;
            statearr_24843_24928[2] = null;
            statearr_24843_24928[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_24841 === 33) {
              var inst_24797 = state_24840[9];
              var inst_24799 = cljs.core.chunked_seq_QMARK_(inst_24797);
              var state_24840__$1 = state_24840;
              if (inst_24799) {
                var statearr_24844_24929 = state_24840__$1;
                statearr_24844_24929[1] = 36;
              } else {
                var statearr_24845_24930 = state_24840__$1;
                statearr_24845_24930[1] = 37;
              }
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
            } else {
              if (state_val_24841 === 2) {
                var state_24840__$1 = state_24840;
                return cljs.core.async.impl.ioc_helpers.take_BANG_(state_24840__$1, 4, ch);
              } else {
                if (state_val_24841 === 34) {
                  var state_24840__$1 = state_24840;
                  var statearr_24846_24931 = state_24840__$1;
                  statearr_24846_24931[2] = null;
                  statearr_24846_24931[1] = 35;
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_24841 === 3) {
                    var inst_24838 = state_24840[2];
                    var state_24840__$1 = state_24840;
                    return cljs.core.async.impl.ioc_helpers.return_chan(state_24840__$1, inst_24838);
                  } else {
                    if (state_val_24841 === 35) {
                      var inst_24822 = state_24840[2];
                      var state_24840__$1 = state_24840;
                      var statearr_24847_24932 = state_24840__$1;
                      statearr_24847_24932[2] = inst_24822;
                      statearr_24847_24932[1] = 29;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_24841 === 4) {
                        var inst_24708 = state_24840[7];
                        var inst_24708__$1 = state_24840[2];
                        var inst_24709 = inst_24708__$1 == null;
                        var state_24840__$1 = function() {
                          var statearr_24848 = state_24840;
                          statearr_24848[7] = inst_24708__$1;
                          return statearr_24848;
                        }();
                        if (cljs.core.truth_(inst_24709)) {
                          var statearr_24849_24933 = state_24840__$1;
                          statearr_24849_24933[1] = 5;
                        } else {
                          var statearr_24850_24934 = state_24840__$1;
                          statearr_24850_24934[1] = 6;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_24841 === 36) {
                          var inst_24797 = state_24840[9];
                          var inst_24801 = cljs.core.chunk_first(inst_24797);
                          var inst_24802 = cljs.core.chunk_rest(inst_24797);
                          var inst_24803 = cljs.core.count(inst_24801);
                          var inst_24776 = inst_24802;
                          var inst_24777 = inst_24801;
                          var inst_24778 = inst_24803;
                          var inst_24779 = 0;
                          var state_24840__$1 = function() {
                            var statearr_24851 = state_24840;
                            statearr_24851[10] = inst_24776;
                            statearr_24851[11] = inst_24777;
                            statearr_24851[12] = inst_24778;
                            statearr_24851[13] = inst_24779;
                            return statearr_24851;
                          }();
                          var statearr_24852_24935 = state_24840__$1;
                          statearr_24852_24935[2] = null;
                          statearr_24852_24935[1] = 25;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_24841 === 5) {
                            var inst_24715 = cljs.core.deref(cs);
                            var inst_24716 = cljs.core.seq(inst_24715);
                            var inst_24717 = inst_24716;
                            var inst_24718 = null;
                            var inst_24719 = 0;
                            var inst_24720 = 0;
                            var state_24840__$1 = function() {
                              var statearr_24853 = state_24840;
                              statearr_24853[14] = inst_24720;
                              statearr_24853[15] = inst_24718;
                              statearr_24853[16] = inst_24717;
                              statearr_24853[17] = inst_24719;
                              return statearr_24853;
                            }();
                            var statearr_24854_24936 = state_24840__$1;
                            statearr_24854_24936[2] = null;
                            statearr_24854_24936[1] = 8;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_24841 === 37) {
                              var inst_24797 = state_24840[9];
                              var inst_24806 = cljs.core.first(inst_24797);
                              var state_24840__$1 = function() {
                                var statearr_24855 = state_24840;
                                statearr_24855[18] = inst_24806;
                                return statearr_24855;
                              }();
                              var statearr_24856_24937 = state_24840__$1;
                              statearr_24856_24937[2] = null;
                              statearr_24856_24937[1] = 41;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_24841 === 6) {
                                var inst_24768 = state_24840[19];
                                var inst_24767 = cljs.core.deref(cs);
                                var inst_24768__$1 = cljs.core.keys(inst_24767);
                                var inst_24769 = cljs.core.count(inst_24768__$1);
                                var inst_24770 = cljs.core.reset_BANG_(dctr, inst_24769);
                                var inst_24775 = cljs.core.seq(inst_24768__$1);
                                var inst_24776 = inst_24775;
                                var inst_24777 = null;
                                var inst_24778 = 0;
                                var inst_24779 = 0;
                                var state_24840__$1 = function() {
                                  var statearr_24857 = state_24840;
                                  statearr_24857[10] = inst_24776;
                                  statearr_24857[19] = inst_24768__$1;
                                  statearr_24857[20] = inst_24770;
                                  statearr_24857[11] = inst_24777;
                                  statearr_24857[12] = inst_24778;
                                  statearr_24857[13] = inst_24779;
                                  return statearr_24857;
                                }();
                                var statearr_24858_24938 = state_24840__$1;
                                statearr_24858_24938[2] = null;
                                statearr_24858_24938[1] = 25;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_24841 === 38) {
                                  var inst_24819 = state_24840[2];
                                  var state_24840__$1 = state_24840;
                                  var statearr_24859_24939 = state_24840__$1;
                                  statearr_24859_24939[2] = inst_24819;
                                  statearr_24859_24939[1] = 35;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_24841 === 7) {
                                    var inst_24836 = state_24840[2];
                                    var state_24840__$1 = state_24840;
                                    var statearr_24860_24940 = state_24840__$1;
                                    statearr_24860_24940[2] = inst_24836;
                                    statearr_24860_24940[1] = 3;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    if (state_val_24841 === 39) {
                                      var inst_24797 = state_24840[9];
                                      var inst_24815 = state_24840[2];
                                      var inst_24816 = cljs.core.next(inst_24797);
                                      var inst_24776 = inst_24816;
                                      var inst_24777 = null;
                                      var inst_24778 = 0;
                                      var inst_24779 = 0;
                                      var state_24840__$1 = function() {
                                        var statearr_24861 = state_24840;
                                        statearr_24861[21] = inst_24815;
                                        statearr_24861[10] = inst_24776;
                                        statearr_24861[11] = inst_24777;
                                        statearr_24861[12] = inst_24778;
                                        statearr_24861[13] = inst_24779;
                                        return statearr_24861;
                                      }();
                                      var statearr_24862_24941 = state_24840__$1;
                                      statearr_24862_24941[2] = null;
                                      statearr_24862_24941[1] = 25;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                    } else {
                                      if (state_val_24841 === 8) {
                                        var inst_24720 = state_24840[14];
                                        var inst_24719 = state_24840[17];
                                        var inst_24722 = inst_24720 < inst_24719;
                                        var inst_24723 = inst_24722;
                                        var state_24840__$1 = state_24840;
                                        if (cljs.core.truth_(inst_24723)) {
                                          var statearr_24863_24942 = state_24840__$1;
                                          statearr_24863_24942[1] = 10;
                                        } else {
                                          var statearr_24864_24943 = state_24840__$1;
                                          statearr_24864_24943[1] = 11;
                                        }
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                      } else {
                                        if (state_val_24841 === 40) {
                                          var inst_24806 = state_24840[18];
                                          var inst_24807 = state_24840[2];
                                          var inst_24808 = cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(dctr, cljs.core.dec);
                                          var inst_24809 = m.cljs$core$async$Mult$untap_STAR_$arity$2(null, inst_24806);
                                          var state_24840__$1 = function() {
                                            var statearr_24865 = state_24840;
                                            statearr_24865[22] = inst_24807;
                                            statearr_24865[23] = inst_24808;
                                            return statearr_24865;
                                          }();
                                          var statearr_24866_24944 = state_24840__$1;
                                          statearr_24866_24944[2] = inst_24809;
                                          cljs.core.async.impl.ioc_helpers.process_exception(state_24840__$1);
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                        } else {
                                          if (state_val_24841 === 9) {
                                            var inst_24765 = state_24840[2];
                                            var state_24840__$1 = state_24840;
                                            var statearr_24867_24945 = state_24840__$1;
                                            statearr_24867_24945[2] = inst_24765;
                                            statearr_24867_24945[1] = 7;
                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                          } else {
                                            if (state_val_24841 === 41) {
                                              var inst_24708 = state_24840[7];
                                              var inst_24806 = state_24840[18];
                                              var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame(state_24840, 40, Object, null, 39);
                                              var inst_24813 = cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$3(inst_24806, inst_24708, done);
                                              var state_24840__$1 = state_24840;
                                              var statearr_24868_24946 = state_24840__$1;
                                              statearr_24868_24946[2] = inst_24813;
                                              cljs.core.async.impl.ioc_helpers.process_exception(state_24840__$1);
                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                            } else {
                                              if (state_val_24841 === 10) {
                                                var inst_24720 = state_24840[14];
                                                var inst_24718 = state_24840[15];
                                                var inst_24726 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(inst_24718, inst_24720);
                                                var inst_24727 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_24726, 0, null);
                                                var inst_24728 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_24726, 1, null);
                                                var state_24840__$1 = function() {
                                                  var statearr_24869 = state_24840;
                                                  statearr_24869[24] = inst_24727;
                                                  return statearr_24869;
                                                }();
                                                if (cljs.core.truth_(inst_24728)) {
                                                  var statearr_24870_24947 = state_24840__$1;
                                                  statearr_24870_24947[1] = 13;
                                                } else {
                                                  var statearr_24871_24948 = state_24840__$1;
                                                  statearr_24871_24948[1] = 14;
                                                }
                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                              } else {
                                                if (state_val_24841 === 42) {
                                                  var state_24840__$1 = state_24840;
                                                  return cljs.core.async.impl.ioc_helpers.take_BANG_(state_24840__$1, 45, dchan);
                                                } else {
                                                  if (state_val_24841 === 11) {
                                                    var inst_24737 = state_24840[25];
                                                    var inst_24717 = state_24840[16];
                                                    var inst_24737__$1 = cljs.core.seq(inst_24717);
                                                    var state_24840__$1 = function() {
                                                      var statearr_24872 = state_24840;
                                                      statearr_24872[25] = inst_24737__$1;
                                                      return statearr_24872;
                                                    }();
                                                    if (inst_24737__$1) {
                                                      var statearr_24873_24949 = state_24840__$1;
                                                      statearr_24873_24949[1] = 16;
                                                    } else {
                                                      var statearr_24874_24950 = state_24840__$1;
                                                      statearr_24874_24950[1] = 17;
                                                    }
                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                  } else {
                                                    if (state_val_24841 === 43) {
                                                      var state_24840__$1 = state_24840;
                                                      var statearr_24875_24951 = state_24840__$1;
                                                      statearr_24875_24951[2] = null;
                                                      statearr_24875_24951[1] = 44;
                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                    } else {
                                                      if (state_val_24841 === 12) {
                                                        var inst_24763 = state_24840[2];
                                                        var state_24840__$1 = state_24840;
                                                        var statearr_24876_24952 = state_24840__$1;
                                                        statearr_24876_24952[2] = inst_24763;
                                                        statearr_24876_24952[1] = 9;
                                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                      } else {
                                                        if (state_val_24841 === 44) {
                                                          var inst_24833 = state_24840[2];
                                                          var state_24840__$1 = function() {
                                                            var statearr_24877 = state_24840;
                                                            statearr_24877[26] = inst_24833;
                                                            return statearr_24877;
                                                          }();
                                                          var statearr_24878_24953 = state_24840__$1;
                                                          statearr_24878_24953[2] = null;
                                                          statearr_24878_24953[1] = 2;
                                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                        } else {
                                                          if (state_val_24841 === 13) {
                                                            var inst_24727 = state_24840[24];
                                                            var inst_24730 = cljs.core.async.close_BANG_(inst_24727);
                                                            var state_24840__$1 = state_24840;
                                                            var statearr_24879_24954 = state_24840__$1;
                                                            statearr_24879_24954[2] = inst_24730;
                                                            statearr_24879_24954[1] = 15;
                                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                          } else {
                                                            if (state_val_24841 === 45) {
                                                              var inst_24830 = state_24840[2];
                                                              var state_24840__$1 = state_24840;
                                                              var statearr_24883_24955 = state_24840__$1;
                                                              statearr_24883_24955[2] = inst_24830;
                                                              statearr_24883_24955[1] = 44;
                                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                            } else {
                                                              if (state_val_24841 === 14) {
                                                                var state_24840__$1 = state_24840;
                                                                var statearr_24884_24956 = state_24840__$1;
                                                                statearr_24884_24956[2] = null;
                                                                statearr_24884_24956[1] = 15;
                                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                              } else {
                                                                if (state_val_24841 === 15) {
                                                                  var inst_24720 = state_24840[14];
                                                                  var inst_24718 = state_24840[15];
                                                                  var inst_24717 = state_24840[16];
                                                                  var inst_24719 = state_24840[17];
                                                                  var inst_24733 = state_24840[2];
                                                                  var inst_24734 = inst_24720 + 1;
                                                                  var tmp24880 = inst_24718;
                                                                  var tmp24881 = inst_24717;
                                                                  var tmp24882 = inst_24719;
                                                                  var inst_24717__$1 = tmp24881;
                                                                  var inst_24718__$1 = tmp24880;
                                                                  var inst_24719__$1 = tmp24882;
                                                                  var inst_24720__$1 = inst_24734;
                                                                  var state_24840__$1 = function() {
                                                                    var statearr_24885 = state_24840;
                                                                    statearr_24885[14] = inst_24720__$1;
                                                                    statearr_24885[15] = inst_24718__$1;
                                                                    statearr_24885[16] = inst_24717__$1;
                                                                    statearr_24885[17] = inst_24719__$1;
                                                                    statearr_24885[27] = inst_24733;
                                                                    return statearr_24885;
                                                                  }();
                                                                  var statearr_24886_24957 = state_24840__$1;
                                                                  statearr_24886_24957[2] = null;
                                                                  statearr_24886_24957[1] = 8;
                                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                } else {
                                                                  if (state_val_24841 === 16) {
                                                                    var inst_24737 = state_24840[25];
                                                                    var inst_24739 = cljs.core.chunked_seq_QMARK_(inst_24737);
                                                                    var state_24840__$1 = state_24840;
                                                                    if (inst_24739) {
                                                                      var statearr_24887_24958 = state_24840__$1;
                                                                      statearr_24887_24958[1] = 19;
                                                                    } else {
                                                                      var statearr_24888_24959 = state_24840__$1;
                                                                      statearr_24888_24959[1] = 20;
                                                                    }
                                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                  } else {
                                                                    if (state_val_24841 === 17) {
                                                                      var state_24840__$1 = state_24840;
                                                                      var statearr_24889_24960 = state_24840__$1;
                                                                      statearr_24889_24960[2] = null;
                                                                      statearr_24889_24960[1] = 18;
                                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                    } else {
                                                                      if (state_val_24841 === 18) {
                                                                        var inst_24761 = state_24840[2];
                                                                        var state_24840__$1 = state_24840;
                                                                        var statearr_24890_24961 = state_24840__$1;
                                                                        statearr_24890_24961[2] = inst_24761;
                                                                        statearr_24890_24961[1] = 12;
                                                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                      } else {
                                                                        if (state_val_24841 === 19) {
                                                                          var inst_24737 = state_24840[25];
                                                                          var inst_24741 = cljs.core.chunk_first(inst_24737);
                                                                          var inst_24742 = cljs.core.chunk_rest(inst_24737);
                                                                          var inst_24743 = cljs.core.count(inst_24741);
                                                                          var inst_24717 = inst_24742;
                                                                          var inst_24718 = inst_24741;
                                                                          var inst_24719 = inst_24743;
                                                                          var inst_24720 = 0;
                                                                          var state_24840__$1 = function() {
                                                                            var statearr_24891 = state_24840;
                                                                            statearr_24891[14] = inst_24720;
                                                                            statearr_24891[15] = inst_24718;
                                                                            statearr_24891[16] = inst_24717;
                                                                            statearr_24891[17] = inst_24719;
                                                                            return statearr_24891;
                                                                          }();
                                                                          var statearr_24892_24962 = state_24840__$1;
                                                                          statearr_24892_24962[2] = null;
                                                                          statearr_24892_24962[1] = 8;
                                                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                        } else {
                                                                          if (state_val_24841 === 20) {
                                                                            var inst_24737 = state_24840[25];
                                                                            var inst_24747 = cljs.core.first(inst_24737);
                                                                            var inst_24748 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_24747, 0, null);
                                                                            var inst_24749 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_24747, 1, null);
                                                                            var state_24840__$1 = function() {
                                                                              var statearr_24893 = state_24840;
                                                                              statearr_24893[28] = inst_24748;
                                                                              return statearr_24893;
                                                                            }();
                                                                            if (cljs.core.truth_(inst_24749)) {
                                                                              var statearr_24894_24963 = state_24840__$1;
                                                                              statearr_24894_24963[1] = 22;
                                                                            } else {
                                                                              var statearr_24895_24964 = state_24840__$1;
                                                                              statearr_24895_24964[1] = 23;
                                                                            }
                                                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                          } else {
                                                                            if (state_val_24841 === 21) {
                                                                              var inst_24758 = state_24840[2];
                                                                              var state_24840__$1 = state_24840;
                                                                              var statearr_24896_24965 = state_24840__$1;
                                                                              statearr_24896_24965[2] = inst_24758;
                                                                              statearr_24896_24965[1] = 18;
                                                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                            } else {
                                                                              if (state_val_24841 === 22) {
                                                                                var inst_24748 = state_24840[28];
                                                                                var inst_24751 = cljs.core.async.close_BANG_(inst_24748);
                                                                                var state_24840__$1 = state_24840;
                                                                                var statearr_24897_24966 = state_24840__$1;
                                                                                statearr_24897_24966[2] = inst_24751;
                                                                                statearr_24897_24966[1] = 24;
                                                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                              } else {
                                                                                if (state_val_24841 === 23) {
                                                                                  var state_24840__$1 = state_24840;
                                                                                  var statearr_24898_24967 = state_24840__$1;
                                                                                  statearr_24898_24967[2] = null;
                                                                                  statearr_24898_24967[1] = 24;
                                                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                } else {
                                                                                  if (state_val_24841 === 24) {
                                                                                    var inst_24737 = state_24840[25];
                                                                                    var inst_24754 = state_24840[2];
                                                                                    var inst_24755 = cljs.core.next(inst_24737);
                                                                                    var inst_24717 = inst_24755;
                                                                                    var inst_24718 = null;
                                                                                    var inst_24719 = 0;
                                                                                    var inst_24720 = 0;
                                                                                    var state_24840__$1 = function() {
                                                                                      var statearr_24899 = state_24840;
                                                                                      statearr_24899[14] = inst_24720;
                                                                                      statearr_24899[15] = inst_24718;
                                                                                      statearr_24899[16] = inst_24717;
                                                                                      statearr_24899[29] = inst_24754;
                                                                                      statearr_24899[17] = inst_24719;
                                                                                      return statearr_24899;
                                                                                    }();
                                                                                    var statearr_24900_24968 = state_24840__$1;
                                                                                    statearr_24900_24968[2] = null;
                                                                                    statearr_24900_24968[1] = 8;
                                                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                  } else {
                                                                                    if (state_val_24841 === 25) {
                                                                                      var inst_24778 = state_24840[12];
                                                                                      var inst_24779 = state_24840[13];
                                                                                      var inst_24781 = inst_24779 < inst_24778;
                                                                                      var inst_24782 = inst_24781;
                                                                                      var state_24840__$1 = state_24840;
                                                                                      if (cljs.core.truth_(inst_24782)) {
                                                                                        var statearr_24901_24969 = state_24840__$1;
                                                                                        statearr_24901_24969[1] = 27;
                                                                                      } else {
                                                                                        var statearr_24902_24970 = state_24840__$1;
                                                                                        statearr_24902_24970[1] = 28;
                                                                                      }
                                                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                    } else {
                                                                                      if (state_val_24841 === 26) {
                                                                                        var inst_24768 = state_24840[19];
                                                                                        var inst_24826 = state_24840[2];
                                                                                        var inst_24827 = cljs.core.seq(inst_24768);
                                                                                        var state_24840__$1 = function() {
                                                                                          var statearr_24903 = state_24840;
                                                                                          statearr_24903[30] = inst_24826;
                                                                                          return statearr_24903;
                                                                                        }();
                                                                                        if (inst_24827) {
                                                                                          var statearr_24904_24971 = state_24840__$1;
                                                                                          statearr_24904_24971[1] = 42;
                                                                                        } else {
                                                                                          var statearr_24905_24972 = state_24840__$1;
                                                                                          statearr_24905_24972[1] = 43;
                                                                                        }
                                                                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                      } else {
                                                                                        if (state_val_24841 === 27) {
                                                                                          var inst_24777 = state_24840[11];
                                                                                          var inst_24779 = state_24840[13];
                                                                                          var inst_24784 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(inst_24777, inst_24779);
                                                                                          var state_24840__$1 = function() {
                                                                                            var statearr_24906 = state_24840;
                                                                                            statearr_24906[8] = inst_24784;
                                                                                            return statearr_24906;
                                                                                          }();
                                                                                          var statearr_24907_24973 = state_24840__$1;
                                                                                          statearr_24907_24973[2] = null;
                                                                                          statearr_24907_24973[1] = 32;
                                                                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                        } else {
                                                                                          if (state_val_24841 === 28) {
                                                                                            var inst_24776 = state_24840[10];
                                                                                            var inst_24797 = state_24840[9];
                                                                                            var inst_24797__$1 = cljs.core.seq(inst_24776);
                                                                                            var state_24840__$1 = function() {
                                                                                              var statearr_24911 = state_24840;
                                                                                              statearr_24911[9] = inst_24797__$1;
                                                                                              return statearr_24911;
                                                                                            }();
                                                                                            if (inst_24797__$1) {
                                                                                              var statearr_24912_24974 = state_24840__$1;
                                                                                              statearr_24912_24974[1] = 33;
                                                                                            } else {
                                                                                              var statearr_24913_24975 = state_24840__$1;
                                                                                              statearr_24913_24975[1] = 34;
                                                                                            }
                                                                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                          } else {
                                                                                            if (state_val_24841 === 29) {
                                                                                              var inst_24824 = state_24840[2];
                                                                                              var state_24840__$1 = state_24840;
                                                                                              var statearr_24914_24976 = state_24840__$1;
                                                                                              statearr_24914_24976[2] = inst_24824;
                                                                                              statearr_24914_24976[1] = 26;
                                                                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                            } else {
                                                                                              if (state_val_24841 === 30) {
                                                                                                var inst_24776 = state_24840[10];
                                                                                                var inst_24777 = state_24840[11];
                                                                                                var inst_24778 = state_24840[12];
                                                                                                var inst_24779 = state_24840[13];
                                                                                                var inst_24793 = state_24840[2];
                                                                                                var inst_24794 = inst_24779 + 1;
                                                                                                var tmp24908 = inst_24776;
                                                                                                var tmp24909 = inst_24777;
                                                                                                var tmp24910 = inst_24778;
                                                                                                var inst_24776__$1 = tmp24908;
                                                                                                var inst_24777__$1 = tmp24909;
                                                                                                var inst_24778__$1 = tmp24910;
                                                                                                var inst_24779__$1 = inst_24794;
                                                                                                var state_24840__$1 = function() {
                                                                                                  var statearr_24915 = state_24840;
                                                                                                  statearr_24915[10] = inst_24776__$1;
                                                                                                  statearr_24915[31] = inst_24793;
                                                                                                  statearr_24915[11] = inst_24777__$1;
                                                                                                  statearr_24915[12] = inst_24778__$1;
                                                                                                  statearr_24915[13] = inst_24779__$1;
                                                                                                  return statearr_24915;
                                                                                                }();
                                                                                                var statearr_24916_24977 = state_24840__$1;
                                                                                                statearr_24916_24977[2] = null;
                                                                                                statearr_24916_24977[1] = 25;
                                                                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                              } else {
                                                                                                if (state_val_24841 === 31) {
                                                                                                  var inst_24784 = state_24840[8];
                                                                                                  var inst_24785 = state_24840[2];
                                                                                                  var inst_24786 = cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(dctr, cljs.core.dec);
                                                                                                  var inst_24787 = m.cljs$core$async$Mult$untap_STAR_$arity$2(null, inst_24784);
                                                                                                  var state_24840__$1 = function() {
                                                                                                    var statearr_24917 = state_24840;
                                                                                                    statearr_24917[32] = inst_24786;
                                                                                                    statearr_24917[33] = inst_24785;
                                                                                                    return statearr_24917;
                                                                                                  }();
                                                                                                  var statearr_24918_24978 = state_24840__$1;
                                                                                                  statearr_24918_24978[2] = inst_24787;
                                                                                                  cljs.core.async.impl.ioc_helpers.process_exception(state_24840__$1);
                                                                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                                } else {
                                                                                                  return null;
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__5937__auto__) {
        return function() {
          var state_machine__5938__auto__ = null;
          var state_machine__5938__auto____0 = function() {
            var statearr_24922 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
            statearr_24922[0] = state_machine__5938__auto__;
            statearr_24922[1] = 1;
            return statearr_24922;
          };
          var state_machine__5938__auto____1 = function(state_24840) {
            while (true) {
              var ret_value__5939__auto__ = function() {
                try {
                  while (true) {
                    var result__5940__auto__ = switch__5937__auto__(state_24840);
                    if (cljs.core.keyword_identical_QMARK_(result__5940__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                      continue;
                    } else {
                      return result__5940__auto__;
                    }
                    break;
                  }
                } catch (e24923) {
                  if (e24923 instanceof Object) {
                    var ex__5941__auto__ = e24923;
                    var statearr_24924_24979 = state_24840;
                    statearr_24924_24979[5] = ex__5941__auto__;
                    cljs.core.async.impl.ioc_helpers.process_exception(state_24840);
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw e24923;
                    } else {
                      return null;
                    }
                  }
                }
              }();
              if (cljs.core.keyword_identical_QMARK_(ret_value__5939__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                var G__24980 = state_24840;
                state_24840 = G__24980;
                continue;
              } else {
                return ret_value__5939__auto__;
              }
              break;
            }
          };
          state_machine__5938__auto__ = function(state_24840) {
            switch(arguments.length) {
              case 0:
                return state_machine__5938__auto____0.call(this);
              case 1:
                return state_machine__5938__auto____1.call(this, state_24840);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5938__auto____0;
          state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5938__auto____1;
          return state_machine__5938__auto__;
        }();
      }(switch__5937__auto__);
    }();
    var state__5954__auto__ = function() {
      var statearr_24925 = f__5953__auto__.cljs$core$IFn$_invoke$arity$0 ? f__5953__auto__.cljs$core$IFn$_invoke$arity$0() : f__5953__auto__.call(null);
      statearr_24925[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5952__auto___24926;
      return statearr_24925;
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__5954__auto__);
  });
  return m;
};
cljs.core.async.tap = function() {
  var tap = null;
  var tap__2 = function(mult, ch) {
    return tap.cljs$core$IFn$_invoke$arity$3(mult, ch, true);
  };
  var tap__3 = function(mult, ch, close_QMARK_) {
    cljs.core.async.tap_STAR_(mult, ch, close_QMARK_);
    return ch;
  };
  tap = function(mult, ch, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return tap__2.call(this, mult, ch);
      case 3:
        return tap__3.call(this, mult, ch, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  tap.cljs$core$IFn$_invoke$arity$2 = tap__2;
  tap.cljs$core$IFn$_invoke$arity$3 = tap__3;
  return tap;
}();
cljs.core.async.untap = function untap(mult, ch) {
  return cljs.core.async.untap_STAR_(mult, ch);
};
cljs.core.async.untap_all = function untap_all(mult) {
  return cljs.core.async.untap_all_STAR_(mult);
};
cljs.core.async.Mix = function() {
  var obj24982 = {};
  return obj24982;
}();
cljs.core.async.admix_STAR_ = function admix_STAR_(m, ch) {
  if (function() {
    var and__3396__auto__ = m;
    if (and__3396__auto__) {
      return m.cljs$core$async$Mix$admix_STAR_$arity$2;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$admix_STAR_$arity$2(m, ch);
  } else {
    var x__4029__auto__ = m == null ? null : m;
    return function() {
      var or__3408__auto__ = cljs.core.async.admix_STAR_[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core.async.admix_STAR_["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("Mix.admix*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.unmix_STAR_ = function unmix_STAR_(m, ch) {
  if (function() {
    var and__3396__auto__ = m;
    if (and__3396__auto__) {
      return m.cljs$core$async$Mix$unmix_STAR_$arity$2;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$unmix_STAR_$arity$2(m, ch);
  } else {
    var x__4029__auto__ = m == null ? null : m;
    return function() {
      var or__3408__auto__ = cljs.core.async.unmix_STAR_[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core.async.unmix_STAR_["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("Mix.unmix*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.unmix_all_STAR_ = function unmix_all_STAR_(m) {
  if (function() {
    var and__3396__auto__ = m;
    if (and__3396__auto__) {
      return m.cljs$core$async$Mix$unmix_all_STAR_$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$unmix_all_STAR_$arity$1(m);
  } else {
    var x__4029__auto__ = m == null ? null : m;
    return function() {
      var or__3408__auto__ = cljs.core.async.unmix_all_STAR_[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core.async.unmix_all_STAR_["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("Mix.unmix-all*", m);
        }
      }
    }().call(null, m);
  }
};
cljs.core.async.toggle_STAR_ = function toggle_STAR_(m, state_map) {
  if (function() {
    var and__3396__auto__ = m;
    if (and__3396__auto__) {
      return m.cljs$core$async$Mix$toggle_STAR_$arity$2;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$toggle_STAR_$arity$2(m, state_map);
  } else {
    var x__4029__auto__ = m == null ? null : m;
    return function() {
      var or__3408__auto__ = cljs.core.async.toggle_STAR_[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core.async.toggle_STAR_["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("Mix.toggle*", m);
        }
      }
    }().call(null, m, state_map);
  }
};
cljs.core.async.solo_mode_STAR_ = function solo_mode_STAR_(m, mode) {
  if (function() {
    var and__3396__auto__ = m;
    if (and__3396__auto__) {
      return m.cljs$core$async$Mix$solo_mode_STAR_$arity$2;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$solo_mode_STAR_$arity$2(m, mode);
  } else {
    var x__4029__auto__ = m == null ? null : m;
    return function() {
      var or__3408__auto__ = cljs.core.async.solo_mode_STAR_[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core.async.solo_mode_STAR_["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("Mix.solo-mode*", m);
        }
      }
    }().call(null, m, mode);
  }
};
cljs.core.async.mix = function mix(out) {
  var cs = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);
  var solo_modes = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "pause", "pause", 1120344424), null, new cljs.core.Keyword(null, "mute", "mute", 1017267595), null], null), null);
  var attrs = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(solo_modes, new cljs.core.Keyword(null, "solo", "solo", 1017440337));
  var solo_mode = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null, "mute", "mute", 1017267595));
  var change = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0();
  var changed = function(cs, solo_modes, attrs, solo_mode, change) {
    return function() {
      return cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2(change, true);
    };
  }(cs, solo_modes, attrs, solo_mode, change);
  var pick = function(cs, solo_modes, attrs, solo_mode, change, changed) {
    return function(attr, chs) {
      return cljs.core.reduce_kv(function(cs, solo_modes, attrs, solo_mode, change, changed) {
        return function(ret, c, v) {
          if (cljs.core.truth_(attr.cljs$core$IFn$_invoke$arity$1 ? attr.cljs$core$IFn$_invoke$arity$1(v) : attr.call(null, v))) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret, c);
          } else {
            return ret;
          }
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed), cljs.core.PersistentHashSet.EMPTY, chs);
    };
  }(cs, solo_modes, attrs, solo_mode, change, changed);
  var calc_state = function(cs, solo_modes, attrs, solo_mode, change, changed, pick) {
    return function() {
      var chs = cljs.core.deref(cs);
      var mode = cljs.core.deref(solo_mode);
      var solos = pick(new cljs.core.Keyword(null, "solo", "solo", 1017440337), chs);
      var pauses = pick(new cljs.core.Keyword(null, "pause", "pause", 1120344424), chs);
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "solos", "solos", 1123523302), solos, new cljs.core.Keyword(null, "mutes", "mutes", 1118168300), pick(new cljs.core.Keyword(null, "mute", "mute", 1017267595), chs), new cljs.core.Keyword(null, "reads", "reads", 1122290959), cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(mode, new cljs.core.Keyword(null, "pause", "pause", 1120344424)) && !cljs.core.empty_QMARK_(solos) ? cljs.core.vec(solos) : 
      cljs.core.vec(cljs.core.remove(pauses, cljs.core.keys(chs))), change)], null);
    };
  }(cs, solo_modes, attrs, solo_mode, change, changed, pick);
  var m = function() {
    if (typeof cljs.core.async.t25092 !== "undefined") {
    } else {
      cljs.core.async.t25092 = function(pick, out, attrs, cs, calc_state, solo_modes, mix, changed, change, solo_mode, meta25093) {
        this.pick = pick;
        this.out = out;
        this.attrs = attrs;
        this.cs = cs;
        this.calc_state = calc_state;
        this.solo_modes = solo_modes;
        this.mix = mix;
        this.changed = changed;
        this.change = change;
        this.solo_mode = solo_mode;
        this.meta25093 = meta25093;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      cljs.core.async.t25092.cljs$lang$type = true;
      cljs.core.async.t25092.cljs$lang$ctorStr = "cljs.core.async/t25092";
      cljs.core.async.t25092.cljs$lang$ctorPrWriter = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
          return cljs.core._write(writer__3971__auto__, "cljs.core.async/t25092");
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t25092.prototype.cljs$core$async$Mix$ = true;
      cljs.core.async.t25092.prototype.cljs$core$async$Mix$admix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.cs, cljs.core.assoc, ch, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.cljs$core$IFn$_invoke$arity$0 ? self__.changed.cljs$core$IFn$_invoke$arity$0() : self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t25092.prototype.cljs$core$async$Mix$unmix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.cs, cljs.core.dissoc, ch);
          return self__.changed.cljs$core$IFn$_invoke$arity$0 ? self__.changed.cljs$core$IFn$_invoke$arity$0() : self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t25092.prototype.cljs$core$async$Mix$unmix_all_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_(self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.cljs$core$IFn$_invoke$arity$0 ? self__.changed.cljs$core$IFn$_invoke$arity$0() : self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t25092.prototype.cljs$core$async$Mix$toggle_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, state_map) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.cs, cljs.core.partial.cljs$core$IFn$_invoke$arity$2(cljs.core.merge_with, cljs.core.merge), state_map);
          return self__.changed.cljs$core$IFn$_invoke$arity$0 ? self__.changed.cljs$core$IFn$_invoke$arity$0() : self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t25092.prototype.cljs$core$async$Mix$solo_mode_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, mode) {
          var self__ = this;
          var ___$1 = this;
          if (cljs.core.truth_(self__.solo_modes.cljs$core$IFn$_invoke$arity$1 ? self__.solo_modes.cljs$core$IFn$_invoke$arity$1(mode) : self__.solo_modes.call(null, mode))) {
          } else {
            throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("mode must be one of: "), cljs.core.str(self__.solo_modes)].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "solo-modes", "solo-modes", -1162732933, null), new cljs.core.Symbol(null, "mode", "mode", -1637174436, null))], 0)))].join(""));
          }
          cljs.core.reset_BANG_(self__.solo_mode, mode);
          return self__.changed.cljs$core$IFn$_invoke$arity$0 ? self__.changed.cljs$core$IFn$_invoke$arity$0() : self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t25092.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t25092.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.out;
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t25092.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_25094) {
          var self__ = this;
          var _25094__$1 = this;
          return self__.meta25093;
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t25092.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_25094, meta25093__$1) {
          var self__ = this;
          var _25094__$1 = this;
          return new cljs.core.async.t25092(self__.pick, self__.out, self__.attrs, self__.cs, self__.calc_state, self__.solo_modes, self__.mix, self__.changed, self__.change, self__.solo_mode, meta25093__$1);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.__GT_t25092 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function __GT_t25092(pick__$1, out__$1, attrs__$1, cs__$1, calc_state__$1, solo_modes__$1, mix__$1, changed__$1, change__$1, solo_mode__$1, meta25093) {
          return new cljs.core.async.t25092(pick__$1, out__$1, attrs__$1, cs__$1, calc_state__$1, solo_modes__$1, mix__$1, changed__$1, change__$1, solo_mode__$1, meta25093);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
    }
    return new cljs.core.async.t25092(pick, out, attrs, cs, calc_state, solo_modes, mix, changed, change, solo_mode, null);
  }();
  var c__5952__auto___25201 = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(1);
  cljs.core.async.impl.dispatch.run(function() {
    var f__5953__auto__ = function() {
      var switch__5937__auto__ = function(state_25159) {
        var state_val_25160 = state_25159[1];
        if (state_val_25160 === 1) {
          var inst_25098 = state_25159[7];
          var inst_25098__$1 = calc_state();
          var inst_25099 = cljs.core.seq_QMARK_(inst_25098__$1);
          var state_25159__$1 = function() {
            var statearr_25161 = state_25159;
            statearr_25161[7] = inst_25098__$1;
            return statearr_25161;
          }();
          if (inst_25099) {
            var statearr_25162_25202 = state_25159__$1;
            statearr_25162_25202[1] = 2;
          } else {
            var statearr_25163_25203 = state_25159__$1;
            statearr_25163_25203[1] = 3;
          }
          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
        } else {
          if (state_val_25160 === 2) {
            var inst_25098 = state_25159[7];
            var inst_25101 = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, inst_25098);
            var state_25159__$1 = state_25159;
            var statearr_25164_25204 = state_25159__$1;
            statearr_25164_25204[2] = inst_25101;
            statearr_25164_25204[1] = 4;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_25160 === 3) {
              var inst_25098 = state_25159[7];
              var state_25159__$1 = state_25159;
              var statearr_25165_25205 = state_25159__$1;
              statearr_25165_25205[2] = inst_25098;
              statearr_25165_25205[1] = 4;
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
            } else {
              if (state_val_25160 === 4) {
                var inst_25098 = state_25159[7];
                var inst_25104 = state_25159[2];
                var inst_25105 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(inst_25104, new cljs.core.Keyword(null, "reads", "reads", 1122290959));
                var inst_25106 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(inst_25104, new cljs.core.Keyword(null, "mutes", "mutes", 1118168300));
                var inst_25107 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(inst_25104, new cljs.core.Keyword(null, "solos", "solos", 1123523302));
                var inst_25108 = inst_25098;
                var state_25159__$1 = function() {
                  var statearr_25166 = state_25159;
                  statearr_25166[8] = inst_25106;
                  statearr_25166[9] = inst_25105;
                  statearr_25166[10] = inst_25107;
                  statearr_25166[11] = inst_25108;
                  return statearr_25166;
                }();
                var statearr_25167_25206 = state_25159__$1;
                statearr_25167_25206[2] = null;
                statearr_25167_25206[1] = 5;
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_25160 === 5) {
                  var inst_25108 = state_25159[11];
                  var inst_25111 = cljs.core.seq_QMARK_(inst_25108);
                  var state_25159__$1 = state_25159;
                  if (inst_25111) {
                    var statearr_25168_25207 = state_25159__$1;
                    statearr_25168_25207[1] = 7;
                  } else {
                    var statearr_25169_25208 = state_25159__$1;
                    statearr_25169_25208[1] = 8;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_25160 === 6) {
                    var inst_25157 = state_25159[2];
                    var state_25159__$1 = state_25159;
                    return cljs.core.async.impl.ioc_helpers.return_chan(state_25159__$1, inst_25157);
                  } else {
                    if (state_val_25160 === 7) {
                      var inst_25108 = state_25159[11];
                      var inst_25113 = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, inst_25108);
                      var state_25159__$1 = state_25159;
                      var statearr_25170_25209 = state_25159__$1;
                      statearr_25170_25209[2] = inst_25113;
                      statearr_25170_25209[1] = 9;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_25160 === 8) {
                        var inst_25108 = state_25159[11];
                        var state_25159__$1 = state_25159;
                        var statearr_25171_25210 = state_25159__$1;
                        statearr_25171_25210[2] = inst_25108;
                        statearr_25171_25210[1] = 9;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_25160 === 9) {
                          var inst_25116 = state_25159[12];
                          var inst_25116__$1 = state_25159[2];
                          var inst_25117 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(inst_25116__$1, new cljs.core.Keyword(null, "reads", "reads", 1122290959));
                          var inst_25118 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(inst_25116__$1, new cljs.core.Keyword(null, "mutes", "mutes", 1118168300));
                          var inst_25119 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(inst_25116__$1, new cljs.core.Keyword(null, "solos", "solos", 1123523302));
                          var state_25159__$1 = function() {
                            var statearr_25172 = state_25159;
                            statearr_25172[13] = inst_25118;
                            statearr_25172[14] = inst_25119;
                            statearr_25172[12] = inst_25116__$1;
                            return statearr_25172;
                          }();
                          return cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_(state_25159__$1, 10, inst_25117);
                        } else {
                          if (state_val_25160 === 10) {
                            var inst_25123 = state_25159[15];
                            var inst_25124 = state_25159[16];
                            var inst_25122 = state_25159[2];
                            var inst_25123__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_25122, 0, null);
                            var inst_25124__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_25122, 1, null);
                            var inst_25125 = inst_25123__$1 == null;
                            var inst_25126 = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(inst_25124__$1, change);
                            var inst_25127 = inst_25125 || inst_25126;
                            var state_25159__$1 = function() {
                              var statearr_25173 = state_25159;
                              statearr_25173[15] = inst_25123__$1;
                              statearr_25173[16] = inst_25124__$1;
                              return statearr_25173;
                            }();
                            if (cljs.core.truth_(inst_25127)) {
                              var statearr_25174_25211 = state_25159__$1;
                              statearr_25174_25211[1] = 11;
                            } else {
                              var statearr_25175_25212 = state_25159__$1;
                              statearr_25175_25212[1] = 12;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_25160 === 11) {
                              var inst_25123 = state_25159[15];
                              var inst_25129 = inst_25123 == null;
                              var state_25159__$1 = state_25159;
                              if (cljs.core.truth_(inst_25129)) {
                                var statearr_25176_25213 = state_25159__$1;
                                statearr_25176_25213[1] = 14;
                              } else {
                                var statearr_25177_25214 = state_25159__$1;
                                statearr_25177_25214[1] = 15;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_25160 === 12) {
                                var inst_25138 = state_25159[17];
                                var inst_25119 = state_25159[14];
                                var inst_25124 = state_25159[16];
                                var inst_25138__$1 = inst_25119.cljs$core$IFn$_invoke$arity$1 ? inst_25119.cljs$core$IFn$_invoke$arity$1(inst_25124) : inst_25119.call(null, inst_25124);
                                var state_25159__$1 = function() {
                                  var statearr_25178 = state_25159;
                                  statearr_25178[17] = inst_25138__$1;
                                  return statearr_25178;
                                }();
                                if (cljs.core.truth_(inst_25138__$1)) {
                                  var statearr_25179_25215 = state_25159__$1;
                                  statearr_25179_25215[1] = 17;
                                } else {
                                  var statearr_25180_25216 = state_25159__$1;
                                  statearr_25180_25216[1] = 18;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_25160 === 13) {
                                  var inst_25155 = state_25159[2];
                                  var state_25159__$1 = state_25159;
                                  var statearr_25181_25217 = state_25159__$1;
                                  statearr_25181_25217[2] = inst_25155;
                                  statearr_25181_25217[1] = 6;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_25160 === 14) {
                                    var inst_25124 = state_25159[16];
                                    var inst_25131 = cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(cs, cljs.core.dissoc, inst_25124);
                                    var state_25159__$1 = state_25159;
                                    var statearr_25182_25218 = state_25159__$1;
                                    statearr_25182_25218[2] = inst_25131;
                                    statearr_25182_25218[1] = 16;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    if (state_val_25160 === 15) {
                                      var state_25159__$1 = state_25159;
                                      var statearr_25183_25219 = state_25159__$1;
                                      statearr_25183_25219[2] = null;
                                      statearr_25183_25219[1] = 16;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                    } else {
                                      if (state_val_25160 === 16) {
                                        var inst_25134 = state_25159[2];
                                        var inst_25135 = calc_state();
                                        var inst_25108 = inst_25135;
                                        var state_25159__$1 = function() {
                                          var statearr_25184 = state_25159;
                                          statearr_25184[18] = inst_25134;
                                          statearr_25184[11] = inst_25108;
                                          return statearr_25184;
                                        }();
                                        var statearr_25185_25220 = state_25159__$1;
                                        statearr_25185_25220[2] = null;
                                        statearr_25185_25220[1] = 5;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                      } else {
                                        if (state_val_25160 === 17) {
                                          var inst_25138 = state_25159[17];
                                          var state_25159__$1 = state_25159;
                                          var statearr_25186_25221 = state_25159__$1;
                                          statearr_25186_25221[2] = inst_25138;
                                          statearr_25186_25221[1] = 19;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                        } else {
                                          if (state_val_25160 === 18) {
                                            var inst_25118 = state_25159[13];
                                            var inst_25119 = state_25159[14];
                                            var inst_25124 = state_25159[16];
                                            var inst_25141 = cljs.core.empty_QMARK_(inst_25119);
                                            var inst_25142 = inst_25118.cljs$core$IFn$_invoke$arity$1 ? inst_25118.cljs$core$IFn$_invoke$arity$1(inst_25124) : inst_25118.call(null, inst_25124);
                                            var inst_25143 = cljs.core.not(inst_25142);
                                            var inst_25144 = inst_25141 && inst_25143;
                                            var state_25159__$1 = state_25159;
                                            var statearr_25187_25222 = state_25159__$1;
                                            statearr_25187_25222[2] = inst_25144;
                                            statearr_25187_25222[1] = 19;
                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                          } else {
                                            if (state_val_25160 === 19) {
                                              var inst_25146 = state_25159[2];
                                              var state_25159__$1 = state_25159;
                                              if (cljs.core.truth_(inst_25146)) {
                                                var statearr_25188_25223 = state_25159__$1;
                                                statearr_25188_25223[1] = 20;
                                              } else {
                                                var statearr_25189_25224 = state_25159__$1;
                                                statearr_25189_25224[1] = 21;
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                            } else {
                                              if (state_val_25160 === 20) {
                                                var inst_25123 = state_25159[15];
                                                var state_25159__$1 = state_25159;
                                                return cljs.core.async.impl.ioc_helpers.put_BANG_(state_25159__$1, 23, out, inst_25123);
                                              } else {
                                                if (state_val_25160 === 21) {
                                                  var state_25159__$1 = state_25159;
                                                  var statearr_25190_25225 = state_25159__$1;
                                                  statearr_25190_25225[2] = null;
                                                  statearr_25190_25225[1] = 22;
                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                } else {
                                                  if (state_val_25160 === 22) {
                                                    var inst_25116 = state_25159[12];
                                                    var inst_25152 = state_25159[2];
                                                    var inst_25108 = inst_25116;
                                                    var state_25159__$1 = function() {
                                                      var statearr_25191 = state_25159;
                                                      statearr_25191[19] = inst_25152;
                                                      statearr_25191[11] = inst_25108;
                                                      return statearr_25191;
                                                    }();
                                                    var statearr_25192_25226 = state_25159__$1;
                                                    statearr_25192_25226[2] = null;
                                                    statearr_25192_25226[1] = 5;
                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                  } else {
                                                    if (state_val_25160 === 23) {
                                                      var inst_25149 = state_25159[2];
                                                      var state_25159__$1 = state_25159;
                                                      var statearr_25193_25227 = state_25159__$1;
                                                      statearr_25193_25227[2] = inst_25149;
                                                      statearr_25193_25227[1] = 22;
                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                    } else {
                                                      return null;
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__5937__auto__) {
        return function() {
          var state_machine__5938__auto__ = null;
          var state_machine__5938__auto____0 = function() {
            var statearr_25197 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
            statearr_25197[0] = state_machine__5938__auto__;
            statearr_25197[1] = 1;
            return statearr_25197;
          };
          var state_machine__5938__auto____1 = function(state_25159) {
            while (true) {
              var ret_value__5939__auto__ = function() {
                try {
                  while (true) {
                    var result__5940__auto__ = switch__5937__auto__(state_25159);
                    if (cljs.core.keyword_identical_QMARK_(result__5940__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                      continue;
                    } else {
                      return result__5940__auto__;
                    }
                    break;
                  }
                } catch (e25198) {
                  if (e25198 instanceof Object) {
                    var ex__5941__auto__ = e25198;
                    var statearr_25199_25228 = state_25159;
                    statearr_25199_25228[5] = ex__5941__auto__;
                    cljs.core.async.impl.ioc_helpers.process_exception(state_25159);
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw e25198;
                    } else {
                      return null;
                    }
                  }
                }
              }();
              if (cljs.core.keyword_identical_QMARK_(ret_value__5939__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                var G__25229 = state_25159;
                state_25159 = G__25229;
                continue;
              } else {
                return ret_value__5939__auto__;
              }
              break;
            }
          };
          state_machine__5938__auto__ = function(state_25159) {
            switch(arguments.length) {
              case 0:
                return state_machine__5938__auto____0.call(this);
              case 1:
                return state_machine__5938__auto____1.call(this, state_25159);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5938__auto____0;
          state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5938__auto____1;
          return state_machine__5938__auto__;
        }();
      }(switch__5937__auto__);
    }();
    var state__5954__auto__ = function() {
      var statearr_25200 = f__5953__auto__.cljs$core$IFn$_invoke$arity$0 ? f__5953__auto__.cljs$core$IFn$_invoke$arity$0() : f__5953__auto__.call(null);
      statearr_25200[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5952__auto___25201;
      return statearr_25200;
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__5954__auto__);
  });
  return m;
};
cljs.core.async.admix = function admix(mix, ch) {
  return cljs.core.async.admix_STAR_(mix, ch);
};
cljs.core.async.unmix = function unmix(mix, ch) {
  return cljs.core.async.unmix_STAR_(mix, ch);
};
cljs.core.async.unmix_all = function unmix_all(mix) {
  return cljs.core.async.unmix_all_STAR_(mix);
};
cljs.core.async.toggle = function toggle(mix, state_map) {
  return cljs.core.async.toggle_STAR_(mix, state_map);
};
cljs.core.async.solo_mode = function solo_mode(mix, mode) {
  return cljs.core.async.solo_mode_STAR_(mix, mode);
};
cljs.core.async.Pub = function() {
  var obj25231 = {};
  return obj25231;
}();
cljs.core.async.sub_STAR_ = function sub_STAR_(p, v, ch, close_QMARK_) {
  if (function() {
    var and__3396__auto__ = p;
    if (and__3396__auto__) {
      return p.cljs$core$async$Pub$sub_STAR_$arity$4;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return p.cljs$core$async$Pub$sub_STAR_$arity$4(p, v, ch, close_QMARK_);
  } else {
    var x__4029__auto__ = p == null ? null : p;
    return function() {
      var or__3408__auto__ = cljs.core.async.sub_STAR_[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core.async.sub_STAR_["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("Pub.sub*", p);
        }
      }
    }().call(null, p, v, ch, close_QMARK_);
  }
};
cljs.core.async.unsub_STAR_ = function unsub_STAR_(p, v, ch) {
  if (function() {
    var and__3396__auto__ = p;
    if (and__3396__auto__) {
      return p.cljs$core$async$Pub$unsub_STAR_$arity$3;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return p.cljs$core$async$Pub$unsub_STAR_$arity$3(p, v, ch);
  } else {
    var x__4029__auto__ = p == null ? null : p;
    return function() {
      var or__3408__auto__ = cljs.core.async.unsub_STAR_[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core.async.unsub_STAR_["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("Pub.unsub*", p);
        }
      }
    }().call(null, p, v, ch);
  }
};
cljs.core.async.unsub_all_STAR_ = function() {
  var unsub_all_STAR_ = null;
  var unsub_all_STAR___1 = function(p) {
    if (function() {
      var and__3396__auto__ = p;
      if (and__3396__auto__) {
        return p.cljs$core$async$Pub$unsub_all_STAR_$arity$1;
      } else {
        return and__3396__auto__;
      }
    }()) {
      return p.cljs$core$async$Pub$unsub_all_STAR_$arity$1(p);
    } else {
      var x__4029__auto__ = p == null ? null : p;
      return function() {
        var or__3408__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__4029__auto__)];
        if (or__3408__auto__) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
          if (or__3408__auto____$1) {
            return or__3408__auto____$1;
          } else {
            throw cljs.core.missing_protocol("Pub.unsub-all*", p);
          }
        }
      }().call(null, p);
    }
  };
  var unsub_all_STAR___2 = function(p, v) {
    if (function() {
      var and__3396__auto__ = p;
      if (and__3396__auto__) {
        return p.cljs$core$async$Pub$unsub_all_STAR_$arity$2;
      } else {
        return and__3396__auto__;
      }
    }()) {
      return p.cljs$core$async$Pub$unsub_all_STAR_$arity$2(p, v);
    } else {
      var x__4029__auto__ = p == null ? null : p;
      return function() {
        var or__3408__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__4029__auto__)];
        if (or__3408__auto__) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
          if (or__3408__auto____$1) {
            return or__3408__auto____$1;
          } else {
            throw cljs.core.missing_protocol("Pub.unsub-all*", p);
          }
        }
      }().call(null, p, v);
    }
  };
  unsub_all_STAR_ = function(p, v) {
    switch(arguments.length) {
      case 1:
        return unsub_all_STAR___1.call(this, p);
      case 2:
        return unsub_all_STAR___2.call(this, p, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unsub_all_STAR_.cljs$core$IFn$_invoke$arity$1 = unsub_all_STAR___1;
  unsub_all_STAR_.cljs$core$IFn$_invoke$arity$2 = unsub_all_STAR___2;
  return unsub_all_STAR_;
}();
cljs.core.async.pub = function() {
  var pub = null;
  var pub__2 = function(ch, topic_fn) {
    return pub.cljs$core$IFn$_invoke$arity$3(ch, topic_fn, cljs.core.constantly(null));
  };
  var pub__3 = function(ch, topic_fn, buf_fn) {
    var mults = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);
    var ensure_mult = function(mults) {
      return function(topic) {
        var or__3408__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(mults), topic);
        if (cljs.core.truth_(or__3408__auto__)) {
          return or__3408__auto__;
        } else {
          return cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(mults, function(or__3408__auto__, mults) {
            return function(p1__25232_SHARP_) {
              if (cljs.core.truth_(p1__25232_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__25232_SHARP_.cljs$core$IFn$_invoke$arity$1(topic) : p1__25232_SHARP_.call(null, topic))) {
                return p1__25232_SHARP_;
              } else {
                return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(p1__25232_SHARP_, topic, cljs.core.async.mult(cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(buf_fn.cljs$core$IFn$_invoke$arity$1 ? buf_fn.cljs$core$IFn$_invoke$arity$1(topic) : buf_fn.call(null, topic))));
              }
            };
          }(or__3408__auto__, mults)), topic);
        }
      };
    }(mults);
    var p = function() {
      if (typeof cljs.core.async.t25357 !== "undefined") {
      } else {
        cljs.core.async.t25357 = function(ensure_mult, mults, buf_fn, topic_fn, ch, pub, meta25358) {
          this.ensure_mult = ensure_mult;
          this.mults = mults;
          this.buf_fn = buf_fn;
          this.topic_fn = topic_fn;
          this.ch = ch;
          this.pub = pub;
          this.meta25358 = meta25358;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393216;
        };
        cljs.core.async.t25357.cljs$lang$type = true;
        cljs.core.async.t25357.cljs$lang$ctorStr = "cljs.core.async/t25357";
        cljs.core.async.t25357.cljs$lang$ctorPrWriter = function(mults, ensure_mult) {
          return function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
            return cljs.core._write(writer__3971__auto__, "cljs.core.async/t25357");
          };
        }(mults, ensure_mult);
        cljs.core.async.t25357.prototype.cljs$core$async$Pub$ = true;
        cljs.core.async.t25357.prototype.cljs$core$async$Pub$sub_STAR_$arity$4 = function(mults, ensure_mult) {
          return function(p, topic, ch__$2, close_QMARK_) {
            var self__ = this;
            var p__$1 = this;
            var m = self__.ensure_mult.cljs$core$IFn$_invoke$arity$1 ? self__.ensure_mult.cljs$core$IFn$_invoke$arity$1(topic) : self__.ensure_mult.call(null, topic);
            return cljs.core.async.tap.cljs$core$IFn$_invoke$arity$3(m, ch__$2, close_QMARK_);
          };
        }(mults, ensure_mult);
        cljs.core.async.t25357.prototype.cljs$core$async$Pub$unsub_STAR_$arity$3 = function(mults, ensure_mult) {
          return function(p, topic, ch__$2) {
            var self__ = this;
            var p__$1 = this;
            var temp__4092__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(self__.mults), topic);
            if (cljs.core.truth_(temp__4092__auto__)) {
              var m = temp__4092__auto__;
              return cljs.core.async.untap(m, ch__$2);
            } else {
              return null;
            }
          };
        }(mults, ensure_mult);
        cljs.core.async.t25357.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$1 = function(mults, ensure_mult) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.reset_BANG_(self__.mults, cljs.core.PersistentArrayMap.EMPTY);
          };
        }(mults, ensure_mult);
        cljs.core.async.t25357.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$2 = function(mults, ensure_mult) {
          return function(_, topic) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.mults, cljs.core.dissoc, topic);
          };
        }(mults, ensure_mult);
        cljs.core.async.t25357.prototype.cljs$core$async$Mux$ = true;
        cljs.core.async.t25357.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(mults, ensure_mult) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.ch;
          };
        }(mults, ensure_mult);
        cljs.core.async.t25357.prototype.cljs$core$IMeta$_meta$arity$1 = function(mults, ensure_mult) {
          return function(_25359) {
            var self__ = this;
            var _25359__$1 = this;
            return self__.meta25358;
          };
        }(mults, ensure_mult);
        cljs.core.async.t25357.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(mults, ensure_mult) {
          return function(_25359, meta25358__$1) {
            var self__ = this;
            var _25359__$1 = this;
            return new cljs.core.async.t25357(self__.ensure_mult, self__.mults, self__.buf_fn, self__.topic_fn, self__.ch, self__.pub, meta25358__$1);
          };
        }(mults, ensure_mult);
        cljs.core.async.__GT_t25357 = function(mults, ensure_mult) {
          return function __GT_t25357(ensure_mult__$1, mults__$1, buf_fn__$1, topic_fn__$1, ch__$1, pub__$1, meta25358) {
            return new cljs.core.async.t25357(ensure_mult__$1, mults__$1, buf_fn__$1, topic_fn__$1, ch__$1, pub__$1, meta25358);
          };
        }(mults, ensure_mult);
      }
      return new cljs.core.async.t25357(ensure_mult, mults, buf_fn, topic_fn, ch, pub, null);
    }();
    var c__5952__auto___25481 = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(1);
    cljs.core.async.impl.dispatch.run(function() {
      var f__5953__auto__ = function() {
        var switch__5937__auto__ = function(state_25433) {
          var state_val_25434 = state_25433[1];
          if (state_val_25434 === 1) {
            var state_25433__$1 = state_25433;
            var statearr_25435_25482 = state_25433__$1;
            statearr_25435_25482[2] = null;
            statearr_25435_25482[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_25434 === 2) {
              var state_25433__$1 = state_25433;
              return cljs.core.async.impl.ioc_helpers.take_BANG_(state_25433__$1, 4, ch);
            } else {
              if (state_val_25434 === 3) {
                var inst_25431 = state_25433[2];
                var state_25433__$1 = state_25433;
                return cljs.core.async.impl.ioc_helpers.return_chan(state_25433__$1, inst_25431);
              } else {
                if (state_val_25434 === 4) {
                  var inst_25362 = state_25433[7];
                  var inst_25362__$1 = state_25433[2];
                  var inst_25363 = inst_25362__$1 == null;
                  var state_25433__$1 = function() {
                    var statearr_25436 = state_25433;
                    statearr_25436[7] = inst_25362__$1;
                    return statearr_25436;
                  }();
                  if (cljs.core.truth_(inst_25363)) {
                    var statearr_25437_25483 = state_25433__$1;
                    statearr_25437_25483[1] = 5;
                  } else {
                    var statearr_25438_25484 = state_25433__$1;
                    statearr_25438_25484[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_25434 === 5) {
                    var inst_25369 = cljs.core.deref(mults);
                    var inst_25370 = cljs.core.vals(inst_25369);
                    var inst_25371 = cljs.core.seq(inst_25370);
                    var inst_25372 = inst_25371;
                    var inst_25373 = null;
                    var inst_25374 = 0;
                    var inst_25375 = 0;
                    var state_25433__$1 = function() {
                      var statearr_25439 = state_25433;
                      statearr_25439[8] = inst_25374;
                      statearr_25439[9] = inst_25375;
                      statearr_25439[10] = inst_25373;
                      statearr_25439[11] = inst_25372;
                      return statearr_25439;
                    }();
                    var statearr_25440_25485 = state_25433__$1;
                    statearr_25440_25485[2] = null;
                    statearr_25440_25485[1] = 8;
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_25434 === 6) {
                      var inst_25410 = state_25433[12];
                      var inst_25412 = state_25433[13];
                      var inst_25362 = state_25433[7];
                      var inst_25410__$1 = topic_fn.cljs$core$IFn$_invoke$arity$1 ? topic_fn.cljs$core$IFn$_invoke$arity$1(inst_25362) : topic_fn.call(null, inst_25362);
                      var inst_25411 = cljs.core.deref(mults);
                      var inst_25412__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(inst_25411, inst_25410__$1);
                      var state_25433__$1 = function() {
                        var statearr_25441 = state_25433;
                        statearr_25441[12] = inst_25410__$1;
                        statearr_25441[13] = inst_25412__$1;
                        return statearr_25441;
                      }();
                      if (cljs.core.truth_(inst_25412__$1)) {
                        var statearr_25442_25486 = state_25433__$1;
                        statearr_25442_25486[1] = 19;
                      } else {
                        var statearr_25443_25487 = state_25433__$1;
                        statearr_25443_25487[1] = 20;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_25434 === 7) {
                        var inst_25429 = state_25433[2];
                        var state_25433__$1 = state_25433;
                        var statearr_25444_25488 = state_25433__$1;
                        statearr_25444_25488[2] = inst_25429;
                        statearr_25444_25488[1] = 3;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_25434 === 8) {
                          var inst_25374 = state_25433[8];
                          var inst_25375 = state_25433[9];
                          var inst_25377 = inst_25375 < inst_25374;
                          var inst_25378 = inst_25377;
                          var state_25433__$1 = state_25433;
                          if (cljs.core.truth_(inst_25378)) {
                            var statearr_25448_25489 = state_25433__$1;
                            statearr_25448_25489[1] = 10;
                          } else {
                            var statearr_25449_25490 = state_25433__$1;
                            statearr_25449_25490[1] = 11;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_25434 === 9) {
                            var inst_25408 = state_25433[2];
                            var state_25433__$1 = state_25433;
                            var statearr_25450_25491 = state_25433__$1;
                            statearr_25450_25491[2] = inst_25408;
                            statearr_25450_25491[1] = 7;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_25434 === 10) {
                              var inst_25374 = state_25433[8];
                              var inst_25375 = state_25433[9];
                              var inst_25373 = state_25433[10];
                              var inst_25372 = state_25433[11];
                              var inst_25380 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(inst_25373, inst_25375);
                              var inst_25381 = cljs.core.async.muxch_STAR_(inst_25380);
                              var inst_25382 = cljs.core.async.close_BANG_(inst_25381);
                              var inst_25383 = inst_25375 + 1;
                              var tmp25445 = inst_25374;
                              var tmp25446 = inst_25373;
                              var tmp25447 = inst_25372;
                              var inst_25372__$1 = tmp25447;
                              var inst_25373__$1 = tmp25446;
                              var inst_25374__$1 = tmp25445;
                              var inst_25375__$1 = inst_25383;
                              var state_25433__$1 = function() {
                                var statearr_25451 = state_25433;
                                statearr_25451[8] = inst_25374__$1;
                                statearr_25451[9] = inst_25375__$1;
                                statearr_25451[10] = inst_25373__$1;
                                statearr_25451[11] = inst_25372__$1;
                                statearr_25451[14] = inst_25382;
                                return statearr_25451;
                              }();
                              var statearr_25452_25492 = state_25433__$1;
                              statearr_25452_25492[2] = null;
                              statearr_25452_25492[1] = 8;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_25434 === 11) {
                                var inst_25372 = state_25433[11];
                                var inst_25386 = state_25433[15];
                                var inst_25386__$1 = cljs.core.seq(inst_25372);
                                var state_25433__$1 = function() {
                                  var statearr_25453 = state_25433;
                                  statearr_25453[15] = inst_25386__$1;
                                  return statearr_25453;
                                }();
                                if (inst_25386__$1) {
                                  var statearr_25454_25493 = state_25433__$1;
                                  statearr_25454_25493[1] = 13;
                                } else {
                                  var statearr_25455_25494 = state_25433__$1;
                                  statearr_25455_25494[1] = 14;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_25434 === 12) {
                                  var inst_25406 = state_25433[2];
                                  var state_25433__$1 = state_25433;
                                  var statearr_25456_25495 = state_25433__$1;
                                  statearr_25456_25495[2] = inst_25406;
                                  statearr_25456_25495[1] = 9;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_25434 === 13) {
                                    var inst_25386 = state_25433[15];
                                    var inst_25388 = cljs.core.chunked_seq_QMARK_(inst_25386);
                                    var state_25433__$1 = state_25433;
                                    if (inst_25388) {
                                      var statearr_25457_25496 = state_25433__$1;
                                      statearr_25457_25496[1] = 16;
                                    } else {
                                      var statearr_25458_25497 = state_25433__$1;
                                      statearr_25458_25497[1] = 17;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    if (state_val_25434 === 14) {
                                      var state_25433__$1 = state_25433;
                                      var statearr_25459_25498 = state_25433__$1;
                                      statearr_25459_25498[2] = null;
                                      statearr_25459_25498[1] = 15;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                    } else {
                                      if (state_val_25434 === 15) {
                                        var inst_25404 = state_25433[2];
                                        var state_25433__$1 = state_25433;
                                        var statearr_25460_25499 = state_25433__$1;
                                        statearr_25460_25499[2] = inst_25404;
                                        statearr_25460_25499[1] = 12;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                      } else {
                                        if (state_val_25434 === 16) {
                                          var inst_25386 = state_25433[15];
                                          var inst_25390 = cljs.core.chunk_first(inst_25386);
                                          var inst_25391 = cljs.core.chunk_rest(inst_25386);
                                          var inst_25392 = cljs.core.count(inst_25390);
                                          var inst_25372 = inst_25391;
                                          var inst_25373 = inst_25390;
                                          var inst_25374 = inst_25392;
                                          var inst_25375 = 0;
                                          var state_25433__$1 = function() {
                                            var statearr_25461 = state_25433;
                                            statearr_25461[8] = inst_25374;
                                            statearr_25461[9] = inst_25375;
                                            statearr_25461[10] = inst_25373;
                                            statearr_25461[11] = inst_25372;
                                            return statearr_25461;
                                          }();
                                          var statearr_25462_25500 = state_25433__$1;
                                          statearr_25462_25500[2] = null;
                                          statearr_25462_25500[1] = 8;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                        } else {
                                          if (state_val_25434 === 17) {
                                            var inst_25386 = state_25433[15];
                                            var inst_25395 = cljs.core.first(inst_25386);
                                            var inst_25396 = cljs.core.async.muxch_STAR_(inst_25395);
                                            var inst_25397 = cljs.core.async.close_BANG_(inst_25396);
                                            var inst_25398 = cljs.core.next(inst_25386);
                                            var inst_25372 = inst_25398;
                                            var inst_25373 = null;
                                            var inst_25374 = 0;
                                            var inst_25375 = 0;
                                            var state_25433__$1 = function() {
                                              var statearr_25463 = state_25433;
                                              statearr_25463[8] = inst_25374;
                                              statearr_25463[9] = inst_25375;
                                              statearr_25463[10] = inst_25373;
                                              statearr_25463[11] = inst_25372;
                                              statearr_25463[16] = inst_25397;
                                              return statearr_25463;
                                            }();
                                            var statearr_25464_25501 = state_25433__$1;
                                            statearr_25464_25501[2] = null;
                                            statearr_25464_25501[1] = 8;
                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                          } else {
                                            if (state_val_25434 === 18) {
                                              var inst_25401 = state_25433[2];
                                              var state_25433__$1 = state_25433;
                                              var statearr_25465_25502 = state_25433__$1;
                                              statearr_25465_25502[2] = inst_25401;
                                              statearr_25465_25502[1] = 15;
                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                            } else {
                                              if (state_val_25434 === 19) {
                                                var state_25433__$1 = state_25433;
                                                var statearr_25466_25503 = state_25433__$1;
                                                statearr_25466_25503[2] = null;
                                                statearr_25466_25503[1] = 24;
                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                              } else {
                                                if (state_val_25434 === 20) {
                                                  var state_25433__$1 = state_25433;
                                                  var statearr_25467_25504 = state_25433__$1;
                                                  statearr_25467_25504[2] = null;
                                                  statearr_25467_25504[1] = 21;
                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                } else {
                                                  if (state_val_25434 === 21) {
                                                    var inst_25426 = state_25433[2];
                                                    var state_25433__$1 = function() {
                                                      var statearr_25468 = state_25433;
                                                      statearr_25468[17] = inst_25426;
                                                      return statearr_25468;
                                                    }();
                                                    var statearr_25469_25505 = state_25433__$1;
                                                    statearr_25469_25505[2] = null;
                                                    statearr_25469_25505[1] = 2;
                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                  } else {
                                                    if (state_val_25434 === 22) {
                                                      var inst_25423 = state_25433[2];
                                                      var state_25433__$1 = state_25433;
                                                      var statearr_25470_25506 = state_25433__$1;
                                                      statearr_25470_25506[2] = inst_25423;
                                                      statearr_25470_25506[1] = 21;
                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                    } else {
                                                      if (state_val_25434 === 23) {
                                                        var inst_25410 = state_25433[12];
                                                        var inst_25414 = state_25433[2];
                                                        var inst_25415 = cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(mults, cljs.core.dissoc, inst_25410);
                                                        var state_25433__$1 = function() {
                                                          var statearr_25471 = state_25433;
                                                          statearr_25471[18] = inst_25414;
                                                          return statearr_25471;
                                                        }();
                                                        var statearr_25472_25507 = state_25433__$1;
                                                        statearr_25472_25507[2] = inst_25415;
                                                        cljs.core.async.impl.ioc_helpers.process_exception(state_25433__$1);
                                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                      } else {
                                                        if (state_val_25434 === 24) {
                                                          var inst_25412 = state_25433[13];
                                                          var inst_25362 = state_25433[7];
                                                          var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame(state_25433, 23, Object, null, 22);
                                                          var inst_25419 = cljs.core.async.muxch_STAR_(inst_25412);
                                                          var state_25433__$1 = state_25433;
                                                          return cljs.core.async.impl.ioc_helpers.put_BANG_(state_25433__$1, 25, inst_25419, inst_25362);
                                                        } else {
                                                          if (state_val_25434 === 25) {
                                                            var inst_25421 = state_25433[2];
                                                            var state_25433__$1 = state_25433;
                                                            var statearr_25473_25508 = state_25433__$1;
                                                            statearr_25473_25508[2] = inst_25421;
                                                            cljs.core.async.impl.ioc_helpers.process_exception(state_25433__$1);
                                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                          } else {
                                                            return null;
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__5937__auto__) {
          return function() {
            var state_machine__5938__auto__ = null;
            var state_machine__5938__auto____0 = function() {
              var statearr_25477 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_25477[0] = state_machine__5938__auto__;
              statearr_25477[1] = 1;
              return statearr_25477;
            };
            var state_machine__5938__auto____1 = function(state_25433) {
              while (true) {
                var ret_value__5939__auto__ = function() {
                  try {
                    while (true) {
                      var result__5940__auto__ = switch__5937__auto__(state_25433);
                      if (cljs.core.keyword_identical_QMARK_(result__5940__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__5940__auto__;
                      }
                      break;
                    }
                  } catch (e25478) {
                    if (e25478 instanceof Object) {
                      var ex__5941__auto__ = e25478;
                      var statearr_25479_25509 = state_25433;
                      statearr_25479_25509[5] = ex__5941__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception(state_25433);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e25478;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_(ret_value__5939__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__25510 = state_25433;
                  state_25433 = G__25510;
                  continue;
                } else {
                  return ret_value__5939__auto__;
                }
                break;
              }
            };
            state_machine__5938__auto__ = function(state_25433) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5938__auto____0.call(this);
                case 1:
                  return state_machine__5938__auto____1.call(this, state_25433);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5938__auto____0;
            state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5938__auto____1;
            return state_machine__5938__auto__;
          }();
        }(switch__5937__auto__);
      }();
      var state__5954__auto__ = function() {
        var statearr_25480 = f__5953__auto__.cljs$core$IFn$_invoke$arity$0 ? f__5953__auto__.cljs$core$IFn$_invoke$arity$0() : f__5953__auto__.call(null);
        statearr_25480[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5952__auto___25481;
        return statearr_25480;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__5954__auto__);
    });
    return p;
  };
  pub = function(ch, topic_fn, buf_fn) {
    switch(arguments.length) {
      case 2:
        return pub__2.call(this, ch, topic_fn);
      case 3:
        return pub__3.call(this, ch, topic_fn, buf_fn);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pub.cljs$core$IFn$_invoke$arity$2 = pub__2;
  pub.cljs$core$IFn$_invoke$arity$3 = pub__3;
  return pub;
}();
cljs.core.async.sub = function() {
  var sub = null;
  var sub__3 = function(p, topic, ch) {
    return sub.cljs$core$IFn$_invoke$arity$4(p, topic, ch, true);
  };
  var sub__4 = function(p, topic, ch, close_QMARK_) {
    return cljs.core.async.sub_STAR_(p, topic, ch, close_QMARK_);
  };
  sub = function(p, topic, ch, close_QMARK_) {
    switch(arguments.length) {
      case 3:
        return sub__3.call(this, p, topic, ch);
      case 4:
        return sub__4.call(this, p, topic, ch, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sub.cljs$core$IFn$_invoke$arity$3 = sub__3;
  sub.cljs$core$IFn$_invoke$arity$4 = sub__4;
  return sub;
}();
cljs.core.async.unsub = function unsub(p, topic, ch) {
  return cljs.core.async.unsub_STAR_(p, topic, ch);
};
cljs.core.async.unsub_all = function() {
  var unsub_all = null;
  var unsub_all__1 = function(p) {
    return cljs.core.async.unsub_all_STAR_.cljs$core$IFn$_invoke$arity$1(p);
  };
  var unsub_all__2 = function(p, topic) {
    return cljs.core.async.unsub_all_STAR_.cljs$core$IFn$_invoke$arity$2(p, topic);
  };
  unsub_all = function(p, topic) {
    switch(arguments.length) {
      case 1:
        return unsub_all__1.call(this, p);
      case 2:
        return unsub_all__2.call(this, p, topic);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unsub_all.cljs$core$IFn$_invoke$arity$1 = unsub_all__1;
  unsub_all.cljs$core$IFn$_invoke$arity$2 = unsub_all__2;
  return unsub_all;
}();
cljs.core.async.map = function() {
  var map = null;
  var map__2 = function(f, chs) {
    return map.cljs$core$IFn$_invoke$arity$3(f, chs, null);
  };
  var map__3 = function(f, chs, buf_or_n) {
    var chs__$1 = cljs.core.vec(chs);
    var out = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(buf_or_n);
    var cnt = cljs.core.count(chs__$1);
    var rets = cljs.core.object_array.cljs$core$IFn$_invoke$arity$1(cnt);
    var dchan = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(1);
    var dctr = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null);
    var done = cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(function(chs__$1, out, cnt, rets, dchan, dctr) {
      return function(i) {
        return function(chs__$1, out, cnt, rets, dchan, dctr) {
          return function(ret) {
            rets[i] = ret;
            if (cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(dctr, cljs.core.dec) === 0) {
              return cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2(dchan, rets.slice(0));
            } else {
              return null;
            }
          };
        }(chs__$1, out, cnt, rets, dchan, dctr);
      };
    }(chs__$1, out, cnt, rets, dchan, dctr), cljs.core.range.cljs$core$IFn$_invoke$arity$1(cnt));
    var c__5952__auto___25647 = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(1);
    cljs.core.async.impl.dispatch.run(function() {
      var f__5953__auto__ = function() {
        var switch__5937__auto__ = function(state_25617) {
          var state_val_25618 = state_25617[1];
          if (state_val_25618 === 1) {
            var state_25617__$1 = state_25617;
            var statearr_25619_25648 = state_25617__$1;
            statearr_25619_25648[2] = null;
            statearr_25619_25648[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_25618 === 2) {
              var inst_25580 = cljs.core.reset_BANG_(dctr, cnt);
              var inst_25581 = 0;
              var state_25617__$1 = function() {
                var statearr_25620 = state_25617;
                statearr_25620[7] = inst_25580;
                statearr_25620[8] = inst_25581;
                return statearr_25620;
              }();
              var statearr_25621_25649 = state_25617__$1;
              statearr_25621_25649[2] = null;
              statearr_25621_25649[1] = 4;
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
            } else {
              if (state_val_25618 === 3) {
                var inst_25615 = state_25617[2];
                var state_25617__$1 = state_25617;
                return cljs.core.async.impl.ioc_helpers.return_chan(state_25617__$1, inst_25615);
              } else {
                if (state_val_25618 === 4) {
                  var inst_25581 = state_25617[8];
                  var inst_25583 = inst_25581 < cnt;
                  var state_25617__$1 = state_25617;
                  if (cljs.core.truth_(inst_25583)) {
                    var statearr_25622_25650 = state_25617__$1;
                    statearr_25622_25650[1] = 6;
                  } else {
                    var statearr_25623_25651 = state_25617__$1;
                    statearr_25623_25651[1] = 7;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_25618 === 5) {
                    var inst_25601 = state_25617[2];
                    var state_25617__$1 = function() {
                      var statearr_25624 = state_25617;
                      statearr_25624[9] = inst_25601;
                      return statearr_25624;
                    }();
                    return cljs.core.async.impl.ioc_helpers.take_BANG_(state_25617__$1, 12, dchan);
                  } else {
                    if (state_val_25618 === 6) {
                      var state_25617__$1 = state_25617;
                      var statearr_25625_25652 = state_25617__$1;
                      statearr_25625_25652[2] = null;
                      statearr_25625_25652[1] = 11;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_25618 === 7) {
                        var state_25617__$1 = state_25617;
                        var statearr_25626_25653 = state_25617__$1;
                        statearr_25626_25653[2] = null;
                        statearr_25626_25653[1] = 8;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_25618 === 8) {
                          var inst_25599 = state_25617[2];
                          var state_25617__$1 = state_25617;
                          var statearr_25627_25654 = state_25617__$1;
                          statearr_25627_25654[2] = inst_25599;
                          statearr_25627_25654[1] = 5;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_25618 === 9) {
                            var inst_25581 = state_25617[8];
                            var inst_25594 = state_25617[2];
                            var inst_25595 = inst_25581 + 1;
                            var inst_25581__$1 = inst_25595;
                            var state_25617__$1 = function() {
                              var statearr_25628 = state_25617;
                              statearr_25628[8] = inst_25581__$1;
                              statearr_25628[10] = inst_25594;
                              return statearr_25628;
                            }();
                            var statearr_25629_25655 = state_25617__$1;
                            statearr_25629_25655[2] = null;
                            statearr_25629_25655[1] = 4;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_25618 === 10) {
                              var inst_25585 = state_25617[2];
                              var inst_25586 = cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(dctr, cljs.core.dec);
                              var state_25617__$1 = function() {
                                var statearr_25630 = state_25617;
                                statearr_25630[11] = inst_25585;
                                return statearr_25630;
                              }();
                              var statearr_25631_25656 = state_25617__$1;
                              statearr_25631_25656[2] = inst_25586;
                              cljs.core.async.impl.ioc_helpers.process_exception(state_25617__$1);
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_25618 === 11) {
                                var inst_25581 = state_25617[8];
                                var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame(state_25617, 10, Object, null, 9);
                                var inst_25590 = chs__$1.cljs$core$IFn$_invoke$arity$1 ? chs__$1.cljs$core$IFn$_invoke$arity$1(inst_25581) : chs__$1.call(null, inst_25581);
                                var inst_25591 = done.cljs$core$IFn$_invoke$arity$1 ? done.cljs$core$IFn$_invoke$arity$1(inst_25581) : done.call(null, inst_25581);
                                var inst_25592 = cljs.core.async.take_BANG_.cljs$core$IFn$_invoke$arity$2(inst_25590, inst_25591);
                                var state_25617__$1 = state_25617;
                                var statearr_25632_25657 = state_25617__$1;
                                statearr_25632_25657[2] = inst_25592;
                                cljs.core.async.impl.ioc_helpers.process_exception(state_25617__$1);
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_25618 === 12) {
                                  var inst_25603 = state_25617[12];
                                  var inst_25603__$1 = state_25617[2];
                                  var inst_25604 = cljs.core.some(cljs.core.nil_QMARK_, inst_25603__$1);
                                  var state_25617__$1 = function() {
                                    var statearr_25633 = state_25617;
                                    statearr_25633[12] = inst_25603__$1;
                                    return statearr_25633;
                                  }();
                                  if (cljs.core.truth_(inst_25604)) {
                                    var statearr_25634_25658 = state_25617__$1;
                                    statearr_25634_25658[1] = 13;
                                  } else {
                                    var statearr_25635_25659 = state_25617__$1;
                                    statearr_25635_25659[1] = 14;
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_25618 === 13) {
                                    var inst_25606 = cljs.core.async.close_BANG_(out);
                                    var state_25617__$1 = state_25617;
                                    var statearr_25636_25660 = state_25617__$1;
                                    statearr_25636_25660[2] = inst_25606;
                                    statearr_25636_25660[1] = 15;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    if (state_val_25618 === 14) {
                                      var inst_25603 = state_25617[12];
                                      var inst_25608 = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, inst_25603);
                                      var state_25617__$1 = state_25617;
                                      return cljs.core.async.impl.ioc_helpers.put_BANG_(state_25617__$1, 16, out, inst_25608);
                                    } else {
                                      if (state_val_25618 === 15) {
                                        var inst_25613 = state_25617[2];
                                        var state_25617__$1 = state_25617;
                                        var statearr_25637_25661 = state_25617__$1;
                                        statearr_25637_25661[2] = inst_25613;
                                        statearr_25637_25661[1] = 3;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                      } else {
                                        if (state_val_25618 === 16) {
                                          var inst_25610 = state_25617[2];
                                          var state_25617__$1 = function() {
                                            var statearr_25638 = state_25617;
                                            statearr_25638[13] = inst_25610;
                                            return statearr_25638;
                                          }();
                                          var statearr_25639_25662 = state_25617__$1;
                                          statearr_25639_25662[2] = null;
                                          statearr_25639_25662[1] = 2;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__5937__auto__) {
          return function() {
            var state_machine__5938__auto__ = null;
            var state_machine__5938__auto____0 = function() {
              var statearr_25643 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_25643[0] = state_machine__5938__auto__;
              statearr_25643[1] = 1;
              return statearr_25643;
            };
            var state_machine__5938__auto____1 = function(state_25617) {
              while (true) {
                var ret_value__5939__auto__ = function() {
                  try {
                    while (true) {
                      var result__5940__auto__ = switch__5937__auto__(state_25617);
                      if (cljs.core.keyword_identical_QMARK_(result__5940__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__5940__auto__;
                      }
                      break;
                    }
                  } catch (e25644) {
                    if (e25644 instanceof Object) {
                      var ex__5941__auto__ = e25644;
                      var statearr_25645_25663 = state_25617;
                      statearr_25645_25663[5] = ex__5941__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception(state_25617);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e25644;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_(ret_value__5939__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__25664 = state_25617;
                  state_25617 = G__25664;
                  continue;
                } else {
                  return ret_value__5939__auto__;
                }
                break;
              }
            };
            state_machine__5938__auto__ = function(state_25617) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5938__auto____0.call(this);
                case 1:
                  return state_machine__5938__auto____1.call(this, state_25617);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5938__auto____0;
            state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5938__auto____1;
            return state_machine__5938__auto__;
          }();
        }(switch__5937__auto__);
      }();
      var state__5954__auto__ = function() {
        var statearr_25646 = f__5953__auto__.cljs$core$IFn$_invoke$arity$0 ? f__5953__auto__.cljs$core$IFn$_invoke$arity$0() : f__5953__auto__.call(null);
        statearr_25646[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5952__auto___25647;
        return statearr_25646;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__5954__auto__);
    });
    return out;
  };
  map = function(f, chs, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, chs);
      case 3:
        return map__3.call(this, f, chs, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  return map;
}();
cljs.core.async.merge = function() {
  var merge = null;
  var merge__1 = function(chs) {
    return merge.cljs$core$IFn$_invoke$arity$2(chs, null);
  };
  var merge__2 = function(chs, buf_or_n) {
    var out = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(buf_or_n);
    var c__5952__auto___25772 = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(1);
    cljs.core.async.impl.dispatch.run(function() {
      var f__5953__auto__ = function() {
        var switch__5937__auto__ = function(state_25748) {
          var state_val_25749 = state_25748[1];
          if (state_val_25749 === 1) {
            var inst_25719 = cljs.core.vec(chs);
            var inst_25720 = inst_25719;
            var state_25748__$1 = function() {
              var statearr_25750 = state_25748;
              statearr_25750[7] = inst_25720;
              return statearr_25750;
            }();
            var statearr_25751_25773 = state_25748__$1;
            statearr_25751_25773[2] = null;
            statearr_25751_25773[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_25749 === 2) {
              var inst_25720 = state_25748[7];
              var inst_25722 = cljs.core.count(inst_25720);
              var inst_25723 = inst_25722 > 0;
              var state_25748__$1 = state_25748;
              if (cljs.core.truth_(inst_25723)) {
                var statearr_25752_25774 = state_25748__$1;
                statearr_25752_25774[1] = 4;
              } else {
                var statearr_25753_25775 = state_25748__$1;
                statearr_25753_25775[1] = 5;
              }
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
            } else {
              if (state_val_25749 === 3) {
                var inst_25746 = state_25748[2];
                var state_25748__$1 = state_25748;
                return cljs.core.async.impl.ioc_helpers.return_chan(state_25748__$1, inst_25746);
              } else {
                if (state_val_25749 === 4) {
                  var inst_25720 = state_25748[7];
                  var state_25748__$1 = state_25748;
                  return cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_(state_25748__$1, 7, inst_25720);
                } else {
                  if (state_val_25749 === 5) {
                    var inst_25742 = cljs.core.async.close_BANG_(out);
                    var state_25748__$1 = state_25748;
                    var statearr_25754_25776 = state_25748__$1;
                    statearr_25754_25776[2] = inst_25742;
                    statearr_25754_25776[1] = 6;
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_25749 === 6) {
                      var inst_25744 = state_25748[2];
                      var state_25748__$1 = state_25748;
                      var statearr_25755_25777 = state_25748__$1;
                      statearr_25755_25777[2] = inst_25744;
                      statearr_25755_25777[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_25749 === 7) {
                        var inst_25728 = state_25748[8];
                        var inst_25727 = state_25748[9];
                        var inst_25727__$1 = state_25748[2];
                        var inst_25728__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_25727__$1, 0, null);
                        var inst_25729 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_25727__$1, 1, null);
                        var inst_25730 = inst_25728__$1 == null;
                        var state_25748__$1 = function() {
                          var statearr_25756 = state_25748;
                          statearr_25756[8] = inst_25728__$1;
                          statearr_25756[9] = inst_25727__$1;
                          statearr_25756[10] = inst_25729;
                          return statearr_25756;
                        }();
                        if (cljs.core.truth_(inst_25730)) {
                          var statearr_25757_25778 = state_25748__$1;
                          statearr_25757_25778[1] = 8;
                        } else {
                          var statearr_25758_25779 = state_25748__$1;
                          statearr_25758_25779[1] = 9;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_25749 === 8) {
                          var inst_25728 = state_25748[8];
                          var inst_25727 = state_25748[9];
                          var inst_25729 = state_25748[10];
                          var inst_25720 = state_25748[7];
                          var inst_25732 = function() {
                            var c = inst_25729;
                            var v = inst_25728;
                            var vec__25725 = inst_25727;
                            var cs = inst_25720;
                            return function(c, v, vec__25725, cs, inst_25728, inst_25727, inst_25729, inst_25720, state_val_25749) {
                              return function(p1__25665_SHARP_) {
                                return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(c, p1__25665_SHARP_);
                              };
                            }(c, v, vec__25725, cs, inst_25728, inst_25727, inst_25729, inst_25720, state_val_25749);
                          }();
                          var inst_25733 = cljs.core.filterv(inst_25732, inst_25720);
                          var inst_25720__$1 = inst_25733;
                          var state_25748__$1 = function() {
                            var statearr_25759 = state_25748;
                            statearr_25759[7] = inst_25720__$1;
                            return statearr_25759;
                          }();
                          var statearr_25760_25780 = state_25748__$1;
                          statearr_25760_25780[2] = null;
                          statearr_25760_25780[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_25749 === 9) {
                            var inst_25728 = state_25748[8];
                            var state_25748__$1 = state_25748;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_(state_25748__$1, 11, out, inst_25728);
                          } else {
                            if (state_val_25749 === 10) {
                              var inst_25740 = state_25748[2];
                              var state_25748__$1 = state_25748;
                              var statearr_25762_25781 = state_25748__$1;
                              statearr_25762_25781[2] = inst_25740;
                              statearr_25762_25781[1] = 6;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_25749 === 11) {
                                var inst_25720 = state_25748[7];
                                var inst_25737 = state_25748[2];
                                var tmp25761 = inst_25720;
                                var inst_25720__$1 = tmp25761;
                                var state_25748__$1 = function() {
                                  var statearr_25763 = state_25748;
                                  statearr_25763[11] = inst_25737;
                                  statearr_25763[7] = inst_25720__$1;
                                  return statearr_25763;
                                }();
                                var statearr_25764_25782 = state_25748__$1;
                                statearr_25764_25782[2] = null;
                                statearr_25764_25782[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                return null;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__5937__auto__) {
          return function() {
            var state_machine__5938__auto__ = null;
            var state_machine__5938__auto____0 = function() {
              var statearr_25768 = [null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_25768[0] = state_machine__5938__auto__;
              statearr_25768[1] = 1;
              return statearr_25768;
            };
            var state_machine__5938__auto____1 = function(state_25748) {
              while (true) {
                var ret_value__5939__auto__ = function() {
                  try {
                    while (true) {
                      var result__5940__auto__ = switch__5937__auto__(state_25748);
                      if (cljs.core.keyword_identical_QMARK_(result__5940__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__5940__auto__;
                      }
                      break;
                    }
                  } catch (e25769) {
                    if (e25769 instanceof Object) {
                      var ex__5941__auto__ = e25769;
                      var statearr_25770_25783 = state_25748;
                      statearr_25770_25783[5] = ex__5941__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception(state_25748);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e25769;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_(ret_value__5939__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__25784 = state_25748;
                  state_25748 = G__25784;
                  continue;
                } else {
                  return ret_value__5939__auto__;
                }
                break;
              }
            };
            state_machine__5938__auto__ = function(state_25748) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5938__auto____0.call(this);
                case 1:
                  return state_machine__5938__auto____1.call(this, state_25748);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5938__auto____0;
            state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5938__auto____1;
            return state_machine__5938__auto__;
          }();
        }(switch__5937__auto__);
      }();
      var state__5954__auto__ = function() {
        var statearr_25771 = f__5953__auto__.cljs$core$IFn$_invoke$arity$0 ? f__5953__auto__.cljs$core$IFn$_invoke$arity$0() : f__5953__auto__.call(null);
        statearr_25771[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5952__auto___25772;
        return statearr_25771;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__5954__auto__);
    });
    return out;
  };
  merge = function(chs, buf_or_n) {
    switch(arguments.length) {
      case 1:
        return merge__1.call(this, chs);
      case 2:
        return merge__2.call(this, chs, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  merge.cljs$core$IFn$_invoke$arity$1 = merge__1;
  merge.cljs$core$IFn$_invoke$arity$2 = merge__2;
  return merge;
}();
cljs.core.async.into = function into(coll, ch) {
  return cljs.core.async.reduce(cljs.core.conj, coll, ch);
};
cljs.core.async.take = function() {
  var take = null;
  var take__2 = function(n, ch) {
    return take.cljs$core$IFn$_invoke$arity$3(n, ch, null);
  };
  var take__3 = function(n, ch, buf_or_n) {
    var out = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(buf_or_n);
    var c__5952__auto___25877 = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(1);
    cljs.core.async.impl.dispatch.run(function() {
      var f__5953__auto__ = function() {
        var switch__5937__auto__ = function(state_25854) {
          var state_val_25855 = state_25854[1];
          if (state_val_25855 === 1) {
            var inst_25831 = 0;
            var state_25854__$1 = function() {
              var statearr_25856 = state_25854;
              statearr_25856[7] = inst_25831;
              return statearr_25856;
            }();
            var statearr_25857_25878 = state_25854__$1;
            statearr_25857_25878[2] = null;
            statearr_25857_25878[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_25855 === 2) {
              var inst_25831 = state_25854[7];
              var inst_25833 = inst_25831 < n;
              var state_25854__$1 = state_25854;
              if (cljs.core.truth_(inst_25833)) {
                var statearr_25858_25879 = state_25854__$1;
                statearr_25858_25879[1] = 4;
              } else {
                var statearr_25859_25880 = state_25854__$1;
                statearr_25859_25880[1] = 5;
              }
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
            } else {
              if (state_val_25855 === 3) {
                var inst_25851 = state_25854[2];
                var inst_25852 = cljs.core.async.close_BANG_(out);
                var state_25854__$1 = function() {
                  var statearr_25860 = state_25854;
                  statearr_25860[8] = inst_25851;
                  return statearr_25860;
                }();
                return cljs.core.async.impl.ioc_helpers.return_chan(state_25854__$1, inst_25852);
              } else {
                if (state_val_25855 === 4) {
                  var state_25854__$1 = state_25854;
                  return cljs.core.async.impl.ioc_helpers.take_BANG_(state_25854__$1, 7, ch);
                } else {
                  if (state_val_25855 === 5) {
                    var state_25854__$1 = state_25854;
                    var statearr_25861_25881 = state_25854__$1;
                    statearr_25861_25881[2] = null;
                    statearr_25861_25881[1] = 6;
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_25855 === 6) {
                      var inst_25849 = state_25854[2];
                      var state_25854__$1 = state_25854;
                      var statearr_25862_25882 = state_25854__$1;
                      statearr_25862_25882[2] = inst_25849;
                      statearr_25862_25882[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_25855 === 7) {
                        var inst_25836 = state_25854[9];
                        var inst_25836__$1 = state_25854[2];
                        var inst_25837 = inst_25836__$1 == null;
                        var inst_25838 = cljs.core.not(inst_25837);
                        var state_25854__$1 = function() {
                          var statearr_25863 = state_25854;
                          statearr_25863[9] = inst_25836__$1;
                          return statearr_25863;
                        }();
                        if (inst_25838) {
                          var statearr_25864_25883 = state_25854__$1;
                          statearr_25864_25883[1] = 8;
                        } else {
                          var statearr_25865_25884 = state_25854__$1;
                          statearr_25865_25884[1] = 9;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_25855 === 8) {
                          var inst_25836 = state_25854[9];
                          var state_25854__$1 = state_25854;
                          return cljs.core.async.impl.ioc_helpers.put_BANG_(state_25854__$1, 11, out, inst_25836);
                        } else {
                          if (state_val_25855 === 9) {
                            var state_25854__$1 = state_25854;
                            var statearr_25866_25885 = state_25854__$1;
                            statearr_25866_25885[2] = null;
                            statearr_25866_25885[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_25855 === 10) {
                              var inst_25846 = state_25854[2];
                              var state_25854__$1 = state_25854;
                              var statearr_25867_25886 = state_25854__$1;
                              statearr_25867_25886[2] = inst_25846;
                              statearr_25867_25886[1] = 6;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_25855 === 11) {
                                var inst_25831 = state_25854[7];
                                var inst_25841 = state_25854[2];
                                var inst_25842 = inst_25831 + 1;
                                var inst_25831__$1 = inst_25842;
                                var state_25854__$1 = function() {
                                  var statearr_25868 = state_25854;
                                  statearr_25868[10] = inst_25841;
                                  statearr_25868[7] = inst_25831__$1;
                                  return statearr_25868;
                                }();
                                var statearr_25869_25887 = state_25854__$1;
                                statearr_25869_25887[2] = null;
                                statearr_25869_25887[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                return null;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__5937__auto__) {
          return function() {
            var state_machine__5938__auto__ = null;
            var state_machine__5938__auto____0 = function() {
              var statearr_25873 = [null, null, null, null, null, null, null, null, null, null, null];
              statearr_25873[0] = state_machine__5938__auto__;
              statearr_25873[1] = 1;
              return statearr_25873;
            };
            var state_machine__5938__auto____1 = function(state_25854) {
              while (true) {
                var ret_value__5939__auto__ = function() {
                  try {
                    while (true) {
                      var result__5940__auto__ = switch__5937__auto__(state_25854);
                      if (cljs.core.keyword_identical_QMARK_(result__5940__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__5940__auto__;
                      }
                      break;
                    }
                  } catch (e25874) {
                    if (e25874 instanceof Object) {
                      var ex__5941__auto__ = e25874;
                      var statearr_25875_25888 = state_25854;
                      statearr_25875_25888[5] = ex__5941__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception(state_25854);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e25874;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_(ret_value__5939__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__25889 = state_25854;
                  state_25854 = G__25889;
                  continue;
                } else {
                  return ret_value__5939__auto__;
                }
                break;
              }
            };
            state_machine__5938__auto__ = function(state_25854) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5938__auto____0.call(this);
                case 1:
                  return state_machine__5938__auto____1.call(this, state_25854);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5938__auto____0;
            state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5938__auto____1;
            return state_machine__5938__auto__;
          }();
        }(switch__5937__auto__);
      }();
      var state__5954__auto__ = function() {
        var statearr_25876 = f__5953__auto__.cljs$core$IFn$_invoke$arity$0 ? f__5953__auto__.cljs$core$IFn$_invoke$arity$0() : f__5953__auto__.call(null);
        statearr_25876[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5952__auto___25877;
        return statearr_25876;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__5954__auto__);
    });
    return out;
  };
  take = function(n, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return take__2.call(this, n, ch);
      case 3:
        return take__3.call(this, n, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take.cljs$core$IFn$_invoke$arity$2 = take__2;
  take.cljs$core$IFn$_invoke$arity$3 = take__3;
  return take;
}();
cljs.core.async.unique = function() {
  var unique = null;
  var unique__1 = function(ch) {
    return unique.cljs$core$IFn$_invoke$arity$2(ch, null);
  };
  var unique__2 = function(ch, buf_or_n) {
    var out = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(buf_or_n);
    var c__5952__auto___25986 = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(1);
    cljs.core.async.impl.dispatch.run(function() {
      var f__5953__auto__ = function() {
        var switch__5937__auto__ = function(state_25961) {
          var state_val_25962 = state_25961[1];
          if (state_val_25962 === 1) {
            var inst_25938 = null;
            var state_25961__$1 = function() {
              var statearr_25963 = state_25961;
              statearr_25963[7] = inst_25938;
              return statearr_25963;
            }();
            var statearr_25964_25987 = state_25961__$1;
            statearr_25964_25987[2] = null;
            statearr_25964_25987[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_25962 === 2) {
              var state_25961__$1 = state_25961;
              return cljs.core.async.impl.ioc_helpers.take_BANG_(state_25961__$1, 4, ch);
            } else {
              if (state_val_25962 === 3) {
                var inst_25958 = state_25961[2];
                var inst_25959 = cljs.core.async.close_BANG_(out);
                var state_25961__$1 = function() {
                  var statearr_25965 = state_25961;
                  statearr_25965[8] = inst_25958;
                  return statearr_25965;
                }();
                return cljs.core.async.impl.ioc_helpers.return_chan(state_25961__$1, inst_25959);
              } else {
                if (state_val_25962 === 4) {
                  var inst_25941 = state_25961[9];
                  var inst_25941__$1 = state_25961[2];
                  var inst_25942 = inst_25941__$1 == null;
                  var inst_25943 = cljs.core.not(inst_25942);
                  var state_25961__$1 = function() {
                    var statearr_25966 = state_25961;
                    statearr_25966[9] = inst_25941__$1;
                    return statearr_25966;
                  }();
                  if (inst_25943) {
                    var statearr_25967_25988 = state_25961__$1;
                    statearr_25967_25988[1] = 5;
                  } else {
                    var statearr_25968_25989 = state_25961__$1;
                    statearr_25968_25989[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_25962 === 5) {
                    var inst_25941 = state_25961[9];
                    var inst_25938 = state_25961[7];
                    var inst_25945 = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(inst_25941, inst_25938);
                    var state_25961__$1 = state_25961;
                    if (inst_25945) {
                      var statearr_25969_25990 = state_25961__$1;
                      statearr_25969_25990[1] = 8;
                    } else {
                      var statearr_25970_25991 = state_25961__$1;
                      statearr_25970_25991[1] = 9;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_25962 === 6) {
                      var state_25961__$1 = state_25961;
                      var statearr_25972_25992 = state_25961__$1;
                      statearr_25972_25992[2] = null;
                      statearr_25972_25992[1] = 7;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_25962 === 7) {
                        var inst_25956 = state_25961[2];
                        var state_25961__$1 = state_25961;
                        var statearr_25973_25993 = state_25961__$1;
                        statearr_25973_25993[2] = inst_25956;
                        statearr_25973_25993[1] = 3;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_25962 === 8) {
                          var inst_25938 = state_25961[7];
                          var tmp25971 = inst_25938;
                          var inst_25938__$1 = tmp25971;
                          var state_25961__$1 = function() {
                            var statearr_25974 = state_25961;
                            statearr_25974[7] = inst_25938__$1;
                            return statearr_25974;
                          }();
                          var statearr_25975_25994 = state_25961__$1;
                          statearr_25975_25994[2] = null;
                          statearr_25975_25994[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_25962 === 9) {
                            var inst_25941 = state_25961[9];
                            var state_25961__$1 = state_25961;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_(state_25961__$1, 11, out, inst_25941);
                          } else {
                            if (state_val_25962 === 10) {
                              var inst_25953 = state_25961[2];
                              var state_25961__$1 = state_25961;
                              var statearr_25976_25995 = state_25961__$1;
                              statearr_25976_25995[2] = inst_25953;
                              statearr_25976_25995[1] = 7;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_25962 === 11) {
                                var inst_25941 = state_25961[9];
                                var inst_25950 = state_25961[2];
                                var inst_25938 = inst_25941;
                                var state_25961__$1 = function() {
                                  var statearr_25977 = state_25961;
                                  statearr_25977[7] = inst_25938;
                                  statearr_25977[10] = inst_25950;
                                  return statearr_25977;
                                }();
                                var statearr_25978_25996 = state_25961__$1;
                                statearr_25978_25996[2] = null;
                                statearr_25978_25996[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                return null;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__5937__auto__) {
          return function() {
            var state_machine__5938__auto__ = null;
            var state_machine__5938__auto____0 = function() {
              var statearr_25982 = [null, null, null, null, null, null, null, null, null, null, null];
              statearr_25982[0] = state_machine__5938__auto__;
              statearr_25982[1] = 1;
              return statearr_25982;
            };
            var state_machine__5938__auto____1 = function(state_25961) {
              while (true) {
                var ret_value__5939__auto__ = function() {
                  try {
                    while (true) {
                      var result__5940__auto__ = switch__5937__auto__(state_25961);
                      if (cljs.core.keyword_identical_QMARK_(result__5940__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__5940__auto__;
                      }
                      break;
                    }
                  } catch (e25983) {
                    if (e25983 instanceof Object) {
                      var ex__5941__auto__ = e25983;
                      var statearr_25984_25997 = state_25961;
                      statearr_25984_25997[5] = ex__5941__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception(state_25961);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e25983;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_(ret_value__5939__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__25998 = state_25961;
                  state_25961 = G__25998;
                  continue;
                } else {
                  return ret_value__5939__auto__;
                }
                break;
              }
            };
            state_machine__5938__auto__ = function(state_25961) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5938__auto____0.call(this);
                case 1:
                  return state_machine__5938__auto____1.call(this, state_25961);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5938__auto____0;
            state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5938__auto____1;
            return state_machine__5938__auto__;
          }();
        }(switch__5937__auto__);
      }();
      var state__5954__auto__ = function() {
        var statearr_25985 = f__5953__auto__.cljs$core$IFn$_invoke$arity$0 ? f__5953__auto__.cljs$core$IFn$_invoke$arity$0() : f__5953__auto__.call(null);
        statearr_25985[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5952__auto___25986;
        return statearr_25985;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__5954__auto__);
    });
    return out;
  };
  unique = function(ch, buf_or_n) {
    switch(arguments.length) {
      case 1:
        return unique__1.call(this, ch);
      case 2:
        return unique__2.call(this, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unique.cljs$core$IFn$_invoke$arity$1 = unique__1;
  unique.cljs$core$IFn$_invoke$arity$2 = unique__2;
  return unique;
}();
cljs.core.async.partition = function() {
  var partition = null;
  var partition__2 = function(n, ch) {
    return partition.cljs$core$IFn$_invoke$arity$3(n, ch, null);
  };
  var partition__3 = function(n, ch, buf_or_n) {
    var out = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(buf_or_n);
    var c__5952__auto___26133 = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(1);
    cljs.core.async.impl.dispatch.run(function() {
      var f__5953__auto__ = function() {
        var switch__5937__auto__ = function(state_26103) {
          var state_val_26104 = state_26103[1];
          if (state_val_26104 === 1) {
            var inst_26066 = new Array(n);
            var inst_26067 = inst_26066;
            var inst_26068 = 0;
            var state_26103__$1 = function() {
              var statearr_26105 = state_26103;
              statearr_26105[7] = inst_26067;
              statearr_26105[8] = inst_26068;
              return statearr_26105;
            }();
            var statearr_26106_26134 = state_26103__$1;
            statearr_26106_26134[2] = null;
            statearr_26106_26134[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_26104 === 2) {
              var state_26103__$1 = state_26103;
              return cljs.core.async.impl.ioc_helpers.take_BANG_(state_26103__$1, 4, ch);
            } else {
              if (state_val_26104 === 3) {
                var inst_26101 = state_26103[2];
                var state_26103__$1 = state_26103;
                return cljs.core.async.impl.ioc_helpers.return_chan(state_26103__$1, inst_26101);
              } else {
                if (state_val_26104 === 4) {
                  var inst_26071 = state_26103[9];
                  var inst_26071__$1 = state_26103[2];
                  var inst_26072 = inst_26071__$1 == null;
                  var inst_26073 = cljs.core.not(inst_26072);
                  var state_26103__$1 = function() {
                    var statearr_26107 = state_26103;
                    statearr_26107[9] = inst_26071__$1;
                    return statearr_26107;
                  }();
                  if (inst_26073) {
                    var statearr_26108_26135 = state_26103__$1;
                    statearr_26108_26135[1] = 5;
                  } else {
                    var statearr_26109_26136 = state_26103__$1;
                    statearr_26109_26136[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_26104 === 5) {
                    var inst_26067 = state_26103[7];
                    var inst_26068 = state_26103[8];
                    var inst_26076 = state_26103[10];
                    var inst_26071 = state_26103[9];
                    var inst_26075 = inst_26067[inst_26068] = inst_26071;
                    var inst_26076__$1 = inst_26068 + 1;
                    var inst_26077 = inst_26076__$1 < n;
                    var state_26103__$1 = function() {
                      var statearr_26110 = state_26103;
                      statearr_26110[11] = inst_26075;
                      statearr_26110[10] = inst_26076__$1;
                      return statearr_26110;
                    }();
                    if (cljs.core.truth_(inst_26077)) {
                      var statearr_26111_26137 = state_26103__$1;
                      statearr_26111_26137[1] = 8;
                    } else {
                      var statearr_26112_26138 = state_26103__$1;
                      statearr_26112_26138[1] = 9;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_26104 === 6) {
                      var inst_26068 = state_26103[8];
                      var inst_26089 = inst_26068 > 0;
                      var state_26103__$1 = state_26103;
                      if (cljs.core.truth_(inst_26089)) {
                        var statearr_26114_26139 = state_26103__$1;
                        statearr_26114_26139[1] = 12;
                      } else {
                        var statearr_26115_26140 = state_26103__$1;
                        statearr_26115_26140[1] = 13;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_26104 === 7) {
                        var inst_26099 = state_26103[2];
                        var state_26103__$1 = state_26103;
                        var statearr_26116_26141 = state_26103__$1;
                        statearr_26116_26141[2] = inst_26099;
                        statearr_26116_26141[1] = 3;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_26104 === 8) {
                          var inst_26067 = state_26103[7];
                          var inst_26076 = state_26103[10];
                          var tmp26113 = inst_26067;
                          var inst_26067__$1 = tmp26113;
                          var inst_26068 = inst_26076;
                          var state_26103__$1 = function() {
                            var statearr_26117 = state_26103;
                            statearr_26117[7] = inst_26067__$1;
                            statearr_26117[8] = inst_26068;
                            return statearr_26117;
                          }();
                          var statearr_26118_26142 = state_26103__$1;
                          statearr_26118_26142[2] = null;
                          statearr_26118_26142[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_26104 === 9) {
                            var inst_26067 = state_26103[7];
                            var inst_26081 = cljs.core.vec(inst_26067);
                            var state_26103__$1 = state_26103;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_(state_26103__$1, 11, out, inst_26081);
                          } else {
                            if (state_val_26104 === 10) {
                              var inst_26087 = state_26103[2];
                              var state_26103__$1 = state_26103;
                              var statearr_26119_26143 = state_26103__$1;
                              statearr_26119_26143[2] = inst_26087;
                              statearr_26119_26143[1] = 7;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_26104 === 11) {
                                var inst_26083 = state_26103[2];
                                var inst_26084 = new Array(n);
                                var inst_26067 = inst_26084;
                                var inst_26068 = 0;
                                var state_26103__$1 = function() {
                                  var statearr_26120 = state_26103;
                                  statearr_26120[7] = inst_26067;
                                  statearr_26120[8] = inst_26068;
                                  statearr_26120[12] = inst_26083;
                                  return statearr_26120;
                                }();
                                var statearr_26121_26144 = state_26103__$1;
                                statearr_26121_26144[2] = null;
                                statearr_26121_26144[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_26104 === 12) {
                                  var inst_26067 = state_26103[7];
                                  var inst_26091 = cljs.core.vec(inst_26067);
                                  var state_26103__$1 = state_26103;
                                  return cljs.core.async.impl.ioc_helpers.put_BANG_(state_26103__$1, 15, out, inst_26091);
                                } else {
                                  if (state_val_26104 === 13) {
                                    var state_26103__$1 = state_26103;
                                    var statearr_26122_26145 = state_26103__$1;
                                    statearr_26122_26145[2] = null;
                                    statearr_26122_26145[1] = 14;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    if (state_val_26104 === 14) {
                                      var inst_26096 = state_26103[2];
                                      var inst_26097 = cljs.core.async.close_BANG_(out);
                                      var state_26103__$1 = function() {
                                        var statearr_26123 = state_26103;
                                        statearr_26123[13] = inst_26096;
                                        return statearr_26123;
                                      }();
                                      var statearr_26124_26146 = state_26103__$1;
                                      statearr_26124_26146[2] = inst_26097;
                                      statearr_26124_26146[1] = 7;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                    } else {
                                      if (state_val_26104 === 15) {
                                        var inst_26093 = state_26103[2];
                                        var state_26103__$1 = state_26103;
                                        var statearr_26125_26147 = state_26103__$1;
                                        statearr_26125_26147[2] = inst_26093;
                                        statearr_26125_26147[1] = 14;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                      } else {
                                        return null;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__5937__auto__) {
          return function() {
            var state_machine__5938__auto__ = null;
            var state_machine__5938__auto____0 = function() {
              var statearr_26129 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_26129[0] = state_machine__5938__auto__;
              statearr_26129[1] = 1;
              return statearr_26129;
            };
            var state_machine__5938__auto____1 = function(state_26103) {
              while (true) {
                var ret_value__5939__auto__ = function() {
                  try {
                    while (true) {
                      var result__5940__auto__ = switch__5937__auto__(state_26103);
                      if (cljs.core.keyword_identical_QMARK_(result__5940__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__5940__auto__;
                      }
                      break;
                    }
                  } catch (e26130) {
                    if (e26130 instanceof Object) {
                      var ex__5941__auto__ = e26130;
                      var statearr_26131_26148 = state_26103;
                      statearr_26131_26148[5] = ex__5941__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception(state_26103);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e26130;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_(ret_value__5939__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__26149 = state_26103;
                  state_26103 = G__26149;
                  continue;
                } else {
                  return ret_value__5939__auto__;
                }
                break;
              }
            };
            state_machine__5938__auto__ = function(state_26103) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5938__auto____0.call(this);
                case 1:
                  return state_machine__5938__auto____1.call(this, state_26103);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5938__auto____0;
            state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5938__auto____1;
            return state_machine__5938__auto__;
          }();
        }(switch__5937__auto__);
      }();
      var state__5954__auto__ = function() {
        var statearr_26132 = f__5953__auto__.cljs$core$IFn$_invoke$arity$0 ? f__5953__auto__.cljs$core$IFn$_invoke$arity$0() : f__5953__auto__.call(null);
        statearr_26132[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5952__auto___26133;
        return statearr_26132;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__5954__auto__);
    });
    return out;
  };
  partition = function(n, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, ch);
      case 3:
        return partition__3.call(this, n, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
  partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
  return partition;
}();
cljs.core.async.partition_by = function() {
  var partition_by = null;
  var partition_by__2 = function(f, ch) {
    return partition_by.cljs$core$IFn$_invoke$arity$3(f, ch, null);
  };
  var partition_by__3 = function(f, ch, buf_or_n) {
    var out = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(buf_or_n);
    var c__5952__auto___26292 = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(1);
    cljs.core.async.impl.dispatch.run(function() {
      var f__5953__auto__ = function() {
        var switch__5937__auto__ = function(state_26262) {
          var state_val_26263 = state_26262[1];
          if (state_val_26263 === 1) {
            var inst_26221 = [];
            var inst_26222 = inst_26221;
            var inst_26223 = new cljs.core.Keyword("cljs.core.async", "nothing", "cljs.core.async/nothing", 4382193538);
            var state_26262__$1 = function() {
              var statearr_26264 = state_26262;
              statearr_26264[7] = inst_26223;
              statearr_26264[8] = inst_26222;
              return statearr_26264;
            }();
            var statearr_26265_26293 = state_26262__$1;
            statearr_26265_26293[2] = null;
            statearr_26265_26293[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_26263 === 2) {
              var state_26262__$1 = state_26262;
              return cljs.core.async.impl.ioc_helpers.take_BANG_(state_26262__$1, 4, ch);
            } else {
              if (state_val_26263 === 3) {
                var inst_26260 = state_26262[2];
                var state_26262__$1 = state_26262;
                return cljs.core.async.impl.ioc_helpers.return_chan(state_26262__$1, inst_26260);
              } else {
                if (state_val_26263 === 4) {
                  var inst_26226 = state_26262[9];
                  var inst_26226__$1 = state_26262[2];
                  var inst_26227 = inst_26226__$1 == null;
                  var inst_26228 = cljs.core.not(inst_26227);
                  var state_26262__$1 = function() {
                    var statearr_26266 = state_26262;
                    statearr_26266[9] = inst_26226__$1;
                    return statearr_26266;
                  }();
                  if (inst_26228) {
                    var statearr_26267_26294 = state_26262__$1;
                    statearr_26267_26294[1] = 5;
                  } else {
                    var statearr_26268_26295 = state_26262__$1;
                    statearr_26268_26295[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_26263 === 5) {
                    var inst_26223 = state_26262[7];
                    var inst_26226 = state_26262[9];
                    var inst_26230 = state_26262[10];
                    var inst_26230__$1 = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(inst_26226) : f.call(null, inst_26226);
                    var inst_26231 = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(inst_26230__$1, inst_26223);
                    var inst_26232 = cljs.core.keyword_identical_QMARK_(inst_26223, new cljs.core.Keyword("cljs.core.async", "nothing", "cljs.core.async/nothing", 4382193538));
                    var inst_26233 = inst_26231 || inst_26232;
                    var state_26262__$1 = function() {
                      var statearr_26269 = state_26262;
                      statearr_26269[10] = inst_26230__$1;
                      return statearr_26269;
                    }();
                    if (cljs.core.truth_(inst_26233)) {
                      var statearr_26270_26296 = state_26262__$1;
                      statearr_26270_26296[1] = 8;
                    } else {
                      var statearr_26271_26297 = state_26262__$1;
                      statearr_26271_26297[1] = 9;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_26263 === 6) {
                      var inst_26222 = state_26262[8];
                      var inst_26247 = inst_26222.length;
                      var inst_26248 = inst_26247 > 0;
                      var state_26262__$1 = state_26262;
                      if (cljs.core.truth_(inst_26248)) {
                        var statearr_26273_26298 = state_26262__$1;
                        statearr_26273_26298[1] = 12;
                      } else {
                        var statearr_26274_26299 = state_26262__$1;
                        statearr_26274_26299[1] = 13;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_26263 === 7) {
                        var inst_26258 = state_26262[2];
                        var state_26262__$1 = state_26262;
                        var statearr_26275_26300 = state_26262__$1;
                        statearr_26275_26300[2] = inst_26258;
                        statearr_26275_26300[1] = 3;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_26263 === 8) {
                          var inst_26222 = state_26262[8];
                          var inst_26226 = state_26262[9];
                          var inst_26230 = state_26262[10];
                          var inst_26235 = inst_26222.push(inst_26226);
                          var tmp26272 = inst_26222;
                          var inst_26222__$1 = tmp26272;
                          var inst_26223 = inst_26230;
                          var state_26262__$1 = function() {
                            var statearr_26276 = state_26262;
                            statearr_26276[7] = inst_26223;
                            statearr_26276[8] = inst_26222__$1;
                            statearr_26276[11] = inst_26235;
                            return statearr_26276;
                          }();
                          var statearr_26277_26301 = state_26262__$1;
                          statearr_26277_26301[2] = null;
                          statearr_26277_26301[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_26263 === 9) {
                            var inst_26222 = state_26262[8];
                            var inst_26238 = cljs.core.vec(inst_26222);
                            var state_26262__$1 = state_26262;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_(state_26262__$1, 11, out, inst_26238);
                          } else {
                            if (state_val_26263 === 10) {
                              var inst_26245 = state_26262[2];
                              var state_26262__$1 = state_26262;
                              var statearr_26278_26302 = state_26262__$1;
                              statearr_26278_26302[2] = inst_26245;
                              statearr_26278_26302[1] = 7;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_26263 === 11) {
                                var inst_26226 = state_26262[9];
                                var inst_26230 = state_26262[10];
                                var inst_26240 = state_26262[2];
                                var inst_26241 = [];
                                var inst_26242 = inst_26241.push(inst_26226);
                                var inst_26222 = inst_26241;
                                var inst_26223 = inst_26230;
                                var state_26262__$1 = function() {
                                  var statearr_26279 = state_26262;
                                  statearr_26279[7] = inst_26223;
                                  statearr_26279[8] = inst_26222;
                                  statearr_26279[12] = inst_26240;
                                  statearr_26279[13] = inst_26242;
                                  return statearr_26279;
                                }();
                                var statearr_26280_26303 = state_26262__$1;
                                statearr_26280_26303[2] = null;
                                statearr_26280_26303[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_26263 === 12) {
                                  var inst_26222 = state_26262[8];
                                  var inst_26250 = cljs.core.vec(inst_26222);
                                  var state_26262__$1 = state_26262;
                                  return cljs.core.async.impl.ioc_helpers.put_BANG_(state_26262__$1, 15, out, inst_26250);
                                } else {
                                  if (state_val_26263 === 13) {
                                    var state_26262__$1 = state_26262;
                                    var statearr_26281_26304 = state_26262__$1;
                                    statearr_26281_26304[2] = null;
                                    statearr_26281_26304[1] = 14;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    if (state_val_26263 === 14) {
                                      var inst_26255 = state_26262[2];
                                      var inst_26256 = cljs.core.async.close_BANG_(out);
                                      var state_26262__$1 = function() {
                                        var statearr_26282 = state_26262;
                                        statearr_26282[14] = inst_26255;
                                        return statearr_26282;
                                      }();
                                      var statearr_26283_26305 = state_26262__$1;
                                      statearr_26283_26305[2] = inst_26256;
                                      statearr_26283_26305[1] = 7;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                    } else {
                                      if (state_val_26263 === 15) {
                                        var inst_26252 = state_26262[2];
                                        var state_26262__$1 = state_26262;
                                        var statearr_26284_26306 = state_26262__$1;
                                        statearr_26284_26306[2] = inst_26252;
                                        statearr_26284_26306[1] = 14;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                      } else {
                                        return null;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__5937__auto__) {
          return function() {
            var state_machine__5938__auto__ = null;
            var state_machine__5938__auto____0 = function() {
              var statearr_26288 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_26288[0] = state_machine__5938__auto__;
              statearr_26288[1] = 1;
              return statearr_26288;
            };
            var state_machine__5938__auto____1 = function(state_26262) {
              while (true) {
                var ret_value__5939__auto__ = function() {
                  try {
                    while (true) {
                      var result__5940__auto__ = switch__5937__auto__(state_26262);
                      if (cljs.core.keyword_identical_QMARK_(result__5940__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__5940__auto__;
                      }
                      break;
                    }
                  } catch (e26289) {
                    if (e26289 instanceof Object) {
                      var ex__5941__auto__ = e26289;
                      var statearr_26290_26307 = state_26262;
                      statearr_26290_26307[5] = ex__5941__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception(state_26262);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e26289;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_(ret_value__5939__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__26308 = state_26262;
                  state_26262 = G__26308;
                  continue;
                } else {
                  return ret_value__5939__auto__;
                }
                break;
              }
            };
            state_machine__5938__auto__ = function(state_26262) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5938__auto____0.call(this);
                case 1:
                  return state_machine__5938__auto____1.call(this, state_26262);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5938__auto____0;
            state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5938__auto____1;
            return state_machine__5938__auto__;
          }();
        }(switch__5937__auto__);
      }();
      var state__5954__auto__ = function() {
        var statearr_26291 = f__5953__auto__.cljs$core$IFn$_invoke$arity$0 ? f__5953__auto__.cljs$core$IFn$_invoke$arity$0() : f__5953__auto__.call(null);
        statearr_26291[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5952__auto___26292;
        return statearr_26291;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__5954__auto__);
    });
    return out;
  };
  partition_by = function(f, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return partition_by__2.call(this, f, ch);
      case 3:
        return partition_by__3.call(this, f, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
  partition_by.cljs$core$IFn$_invoke$arity$3 = partition_by__3;
  return partition_by;
}();
goog.provide("big_bang.timer");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("cljs.core.async");
big_bang.timer.interval_ticker = function() {
  var interval_ticker = null;
  var interval_ticker__1 = function(msec) {
    return interval_ticker.cljs$core$IFn$_invoke$arity$2(msec, function() {
      return(new Date).getTime();
    });
  };
  var interval_ticker__2 = function(msec, payload_generator_fn) {
    var comm_chan = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(1);
    var timer_chan = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(cljs.core.async.dropping_buffer(1));
    var interval_fn = function(comm_chan, timer_chan) {
      return function() {
        var c__5952__auto__ = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(1);
        cljs.core.async.impl.dispatch.run(function(c__5952__auto__, comm_chan, timer_chan) {
          return function() {
            var f__5953__auto__ = function() {
              var switch__5937__auto__ = function(c__5952__auto__, comm_chan, timer_chan) {
                return function(state_22165) {
                  var state_val_22166 = state_22165[1];
                  if (state_val_22166 === 7) {
                    var inst_22159 = state_22165[2];
                    var state_22165__$1 = state_22165;
                    var statearr_22167_22192 = state_22165__$1;
                    statearr_22167_22192[2] = inst_22159;
                    statearr_22167_22192[1] = 5;
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_22166 === 6) {
                      var inst_22153 = state_22165[7];
                      var inst_22157 = state_22165[2];
                      var state_22165__$1 = function() {
                        var statearr_22168 = state_22165;
                        statearr_22168[8] = inst_22157;
                        return statearr_22168;
                      }();
                      return cljs.core.async.impl.ioc_helpers.put_BANG_(state_22165__$1, 7, comm_chan, inst_22153);
                    } else {
                      if (state_val_22166 === 5) {
                        var inst_22163 = state_22165[2];
                        var state_22165__$1 = state_22165;
                        return cljs.core.async.impl.ioc_helpers.return_chan(state_22165__$1, inst_22163);
                      } else {
                        if (state_val_22166 === 4) {
                          var inst_22161 = cljs.core.async.close_BANG_(timer_chan);
                          var state_22165__$1 = state_22165;
                          var statearr_22169_22193 = state_22165__$1;
                          statearr_22169_22193[2] = inst_22161;
                          statearr_22169_22193[1] = 5;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_22166 === 3) {
                            var inst_22155 = payload_generator_fn.cljs$core$IFn$_invoke$arity$0 ? payload_generator_fn.cljs$core$IFn$_invoke$arity$0() : payload_generator_fn.call(null);
                            var state_22165__$1 = state_22165;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_(state_22165__$1, 6, timer_chan, inst_22155);
                          } else {
                            if (state_val_22166 === 2) {
                              var inst_22153 = state_22165[7];
                              var inst_22153__$1 = state_22165[2];
                              var state_22165__$1 = function() {
                                var statearr_22170 = state_22165;
                                statearr_22170[7] = inst_22153__$1;
                                return statearr_22170;
                              }();
                              if (cljs.core.truth_(inst_22153__$1)) {
                                var statearr_22171_22194 = state_22165__$1;
                                statearr_22171_22194[1] = 3;
                              } else {
                                var statearr_22172_22195 = state_22165__$1;
                                statearr_22172_22195[1] = 4;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_22166 === 1) {
                                var state_22165__$1 = state_22165;
                                return cljs.core.async.impl.ioc_helpers.take_BANG_(state_22165__$1, 2, comm_chan);
                              } else {
                                return null;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                };
              }(c__5952__auto__, comm_chan, timer_chan);
              return function(switch__5937__auto__, c__5952__auto__, comm_chan, timer_chan) {
                return function() {
                  var state_machine__5938__auto__ = null;
                  var state_machine__5938__auto____0 = function() {
                    var statearr_22176 = [null, null, null, null, null, null, null, null, null];
                    statearr_22176[0] = state_machine__5938__auto__;
                    statearr_22176[1] = 1;
                    return statearr_22176;
                  };
                  var state_machine__5938__auto____1 = function(state_22165) {
                    while (true) {
                      var ret_value__5939__auto__ = function() {
                        try {
                          while (true) {
                            var result__5940__auto__ = switch__5937__auto__(state_22165);
                            if (cljs.core.keyword_identical_QMARK_(result__5940__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                              continue;
                            } else {
                              return result__5940__auto__;
                            }
                            break;
                          }
                        } catch (e22177) {
                          if (e22177 instanceof Object) {
                            var ex__5941__auto__ = e22177;
                            var statearr_22178_22196 = state_22165;
                            statearr_22178_22196[5] = ex__5941__auto__;
                            cljs.core.async.impl.ioc_helpers.process_exception(state_22165);
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                              throw e22177;
                            } else {
                              return null;
                            }
                          }
                        }
                      }();
                      if (cljs.core.keyword_identical_QMARK_(ret_value__5939__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        var G__22197 = state_22165;
                        state_22165 = G__22197;
                        continue;
                      } else {
                        return ret_value__5939__auto__;
                      }
                      break;
                    }
                  };
                  state_machine__5938__auto__ = function(state_22165) {
                    switch(arguments.length) {
                      case 0:
                        return state_machine__5938__auto____0.call(this);
                      case 1:
                        return state_machine__5938__auto____1.call(this, state_22165);
                    }
                    throw new Error("Invalid arity: " + arguments.length);
                  };
                  state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5938__auto____0;
                  state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5938__auto____1;
                  return state_machine__5938__auto__;
                }();
              }(switch__5937__auto__, c__5952__auto__, comm_chan, timer_chan);
            }();
            var state__5954__auto__ = function() {
              var statearr_22179 = f__5953__auto__.cljs$core$IFn$_invoke$arity$0 ? f__5953__auto__.cljs$core$IFn$_invoke$arity$0() : f__5953__auto__.call(null);
              statearr_22179[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5952__auto__;
              return statearr_22179;
            }();
            return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__5954__auto__);
          };
        }(c__5952__auto__, comm_chan, timer_chan));
        return c__5952__auto__;
      };
    }(comm_chan, timer_chan);
    var interval_id = setInterval(interval_fn, msec);
    var c__5952__auto___22198 = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(1);
    cljs.core.async.impl.dispatch.run(function() {
      var f__5953__auto__ = function() {
        var switch__5937__auto__ = function(state_22183) {
          var state_val_22184 = state_22183[1];
          if (state_val_22184 === 2) {
            var inst_22181 = state_22183[2];
            var state_22183__$1 = state_22183;
            return cljs.core.async.impl.ioc_helpers.return_chan(state_22183__$1, inst_22181);
          } else {
            if (state_val_22184 === 1) {
              var state_22183__$1 = state_22183;
              return cljs.core.async.impl.ioc_helpers.put_BANG_(state_22183__$1, 2, comm_chan, interval_id);
            } else {
              return null;
            }
          }
        };
        return function(switch__5937__auto__) {
          return function() {
            var state_machine__5938__auto__ = null;
            var state_machine__5938__auto____0 = function() {
              var statearr_22188 = [null, null, null, null, null, null, null];
              statearr_22188[0] = state_machine__5938__auto__;
              statearr_22188[1] = 1;
              return statearr_22188;
            };
            var state_machine__5938__auto____1 = function(state_22183) {
              while (true) {
                var ret_value__5939__auto__ = function() {
                  try {
                    while (true) {
                      var result__5940__auto__ = switch__5937__auto__(state_22183);
                      if (cljs.core.keyword_identical_QMARK_(result__5940__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__5940__auto__;
                      }
                      break;
                    }
                  } catch (e22189) {
                    if (e22189 instanceof Object) {
                      var ex__5941__auto__ = e22189;
                      var statearr_22190_22199 = state_22183;
                      statearr_22190_22199[5] = ex__5941__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception(state_22183);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e22189;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_(ret_value__5939__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__22200 = state_22183;
                  state_22183 = G__22200;
                  continue;
                } else {
                  return ret_value__5939__auto__;
                }
                break;
              }
            };
            state_machine__5938__auto__ = function(state_22183) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5938__auto____0.call(this);
                case 1:
                  return state_machine__5938__auto____1.call(this, state_22183);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5938__auto____0;
            state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5938__auto____1;
            return state_machine__5938__auto__;
          }();
        }(switch__5937__auto__);
      }();
      var state__5954__auto__ = function() {
        var statearr_22191 = f__5953__auto__.cljs$core$IFn$_invoke$arity$0 ? f__5953__auto__.cljs$core$IFn$_invoke$arity$0() : f__5953__auto__.call(null);
        statearr_22191[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5952__auto___22198;
        return statearr_22191;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__5954__auto__);
    });
    return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "comm-chan", "comm-chan", 3761799397), comm_chan, new cljs.core.Keyword(null, "timer-chan", "timer-chan", 2628674636), timer_chan, new cljs.core.Keyword(null, "interval-id", "interval-id", 3457077909), interval_id], null);
  };
  interval_ticker = function(msec, payload_generator_fn) {
    switch(arguments.length) {
      case 1:
        return interval_ticker__1.call(this, msec);
      case 2:
        return interval_ticker__2.call(this, msec, payload_generator_fn);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  interval_ticker.cljs$core$IFn$_invoke$arity$1 = interval_ticker__1;
  interval_ticker.cljs$core$IFn$_invoke$arity$2 = interval_ticker__2;
  return interval_ticker;
}();
big_bang.timer.stop_BANG_ = function stop_BANG_(p__22201) {
  var map__22216 = p__22201;
  var map__22216__$1 = cljs.core.seq_QMARK_(map__22216) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__22216) : map__22216;
  var interval_id = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22216__$1, new cljs.core.Keyword(null, "interval-id", "interval-id", 3457077909));
  var timer_chan = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22216__$1, new cljs.core.Keyword(null, "timer-chan", "timer-chan", 2628674636));
  var comm_chan = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22216__$1, new cljs.core.Keyword(null, "comm-chan", "comm-chan", 3761799397));
  var c__5952__auto__ = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(1);
  cljs.core.async.impl.dispatch.run(function() {
    var f__5953__auto__ = function() {
      var switch__5937__auto__ = function(state_22220) {
        var state_val_22221 = state_22220[1];
        if (state_val_22221 === 1) {
          var inst_22217 = cljs.core.async.close_BANG_(comm_chan);
          var inst_22218 = clearInterval(interval_id);
          var state_22220__$1 = function() {
            var statearr_22222 = state_22220;
            statearr_22222[7] = inst_22217;
            return statearr_22222;
          }();
          return cljs.core.async.impl.ioc_helpers.return_chan(state_22220__$1, inst_22218);
        } else {
          return null;
        }
      };
      return function(switch__5937__auto__) {
        return function() {
          var state_machine__5938__auto__ = null;
          var state_machine__5938__auto____0 = function() {
            var statearr_22226 = [null, null, null, null, null, null, null, null];
            statearr_22226[0] = state_machine__5938__auto__;
            statearr_22226[1] = 1;
            return statearr_22226;
          };
          var state_machine__5938__auto____1 = function(state_22220) {
            while (true) {
              var ret_value__5939__auto__ = function() {
                try {
                  while (true) {
                    var result__5940__auto__ = switch__5937__auto__(state_22220);
                    if (cljs.core.keyword_identical_QMARK_(result__5940__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                      continue;
                    } else {
                      return result__5940__auto__;
                    }
                    break;
                  }
                } catch (e22227) {
                  if (e22227 instanceof Object) {
                    var ex__5941__auto__ = e22227;
                    var statearr_22228_22230 = state_22220;
                    statearr_22228_22230[5] = ex__5941__auto__;
                    cljs.core.async.impl.ioc_helpers.process_exception(state_22220);
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw e22227;
                    } else {
                      return null;
                    }
                  }
                }
              }();
              if (cljs.core.keyword_identical_QMARK_(ret_value__5939__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                var G__22231 = state_22220;
                state_22220 = G__22231;
                continue;
              } else {
                return ret_value__5939__auto__;
              }
              break;
            }
          };
          state_machine__5938__auto__ = function(state_22220) {
            switch(arguments.length) {
              case 0:
                return state_machine__5938__auto____0.call(this);
              case 1:
                return state_machine__5938__auto____1.call(this, state_22220);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5938__auto____0;
          state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5938__auto____1;
          return state_machine__5938__auto__;
        }();
      }(switch__5937__auto__);
    }();
    var state__5954__auto__ = function() {
      var statearr_22229 = f__5953__auto__.cljs$core$IFn$_invoke$arity$0 ? f__5953__auto__.cljs$core$IFn$_invoke$arity$0() : f__5953__auto__.call(null);
      statearr_22229[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5952__auto__;
      return statearr_22229;
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__5954__auto__);
  });
  return c__5952__auto__;
};
goog.provide("dataview.loader");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("cljs.core.async");
dataview.loader.fetch_blob = function fetch_blob(url) {
  var xhr = new XMLHttpRequest;
  var chan = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0();
  var handler = function(xhr, chan) {
    return function(event) {
      var c__5952__auto__ = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(1);
      cljs.core.async.impl.dispatch.run(function(c__5952__auto__, xhr, chan) {
        return function() {
          var f__5953__auto__ = function() {
            var switch__5937__auto__ = function(c__5952__auto__, xhr, chan) {
              return function(state_26469) {
                var state_val_26470 = state_26469[1];
                if (state_val_26470 === 2) {
                  var inst_26466 = state_26469[2];
                  var inst_26467 = cljs.core.async.close_BANG_(chan);
                  var state_26469__$1 = function() {
                    var statearr_26471 = state_26469;
                    statearr_26471[7] = inst_26466;
                    return statearr_26471;
                  }();
                  return cljs.core.async.impl.ioc_helpers.return_chan(state_26469__$1, inst_26467);
                } else {
                  if (state_val_26470 === 1) {
                    var inst_26463 = xhr.response;
                    var inst_26464 = new DataView(inst_26463);
                    var state_26469__$1 = state_26469;
                    return cljs.core.async.impl.ioc_helpers.put_BANG_(state_26469__$1, 2, chan, inst_26464);
                  } else {
                    return null;
                  }
                }
              };
            }(c__5952__auto__, xhr, chan);
            return function(switch__5937__auto__, c__5952__auto__, xhr, chan) {
              return function() {
                var state_machine__5938__auto__ = null;
                var state_machine__5938__auto____0 = function() {
                  var statearr_26475 = [null, null, null, null, null, null, null, null];
                  statearr_26475[0] = state_machine__5938__auto__;
                  statearr_26475[1] = 1;
                  return statearr_26475;
                };
                var state_machine__5938__auto____1 = function(state_26469) {
                  while (true) {
                    var ret_value__5939__auto__ = function() {
                      try {
                        while (true) {
                          var result__5940__auto__ = switch__5937__auto__(state_26469);
                          if (cljs.core.keyword_identical_QMARK_(result__5940__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                            continue;
                          } else {
                            return result__5940__auto__;
                          }
                          break;
                        }
                      } catch (e26476) {
                        if (e26476 instanceof Object) {
                          var ex__5941__auto__ = e26476;
                          var statearr_26477_26479 = state_26469;
                          statearr_26477_26479[5] = ex__5941__auto__;
                          cljs.core.async.impl.ioc_helpers.process_exception(state_26469);
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                            throw e26476;
                          } else {
                            return null;
                          }
                        }
                      }
                    }();
                    if (cljs.core.keyword_identical_QMARK_(ret_value__5939__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                      var G__26480 = state_26469;
                      state_26469 = G__26480;
                      continue;
                    } else {
                      return ret_value__5939__auto__;
                    }
                    break;
                  }
                };
                state_machine__5938__auto__ = function(state_26469) {
                  switch(arguments.length) {
                    case 0:
                      return state_machine__5938__auto____0.call(this);
                    case 1:
                      return state_machine__5938__auto____1.call(this, state_26469);
                  }
                  throw new Error("Invalid arity: " + arguments.length);
                };
                state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5938__auto____0;
                state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5938__auto____1;
                return state_machine__5938__auto__;
              }();
            }(switch__5937__auto__, c__5952__auto__, xhr, chan);
          }();
          var state__5954__auto__ = function() {
            var statearr_26478 = f__5953__auto__.cljs$core$IFn$_invoke$arity$0 ? f__5953__auto__.cljs$core$IFn$_invoke$arity$0() : f__5953__auto__.call(null);
            statearr_26478[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5952__auto__;
            return statearr_26478;
          }();
          return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__5954__auto__);
        };
      }(c__5952__auto__, xhr, chan));
      return c__5952__auto__;
    };
  }(xhr, chan);
  xhr.open("GET", url, true);
  xhr.responseType = "arraybuffer";
  xhr.onload = handler;
  xhr.send();
  return chan;
};
dataview.loader.fetch_image = function fetch_image(url) {
  var img = new Image;
  var chan = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0();
  var handler = function(img, chan) {
    return function() {
      var c__5952__auto__ = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(1);
      cljs.core.async.impl.dispatch.run(function(c__5952__auto__, img, chan) {
        return function() {
          var f__5953__auto__ = function() {
            var switch__5937__auto__ = function(c__5952__auto__, img, chan) {
              return function(state_26499) {
                var state_val_26500 = state_26499[1];
                if (state_val_26500 === 2) {
                  var inst_26496 = state_26499[2];
                  var inst_26497 = cljs.core.async.close_BANG_(chan);
                  var state_26499__$1 = function() {
                    var statearr_26501 = state_26499;
                    statearr_26501[7] = inst_26496;
                    return statearr_26501;
                  }();
                  return cljs.core.async.impl.ioc_helpers.return_chan(state_26499__$1, inst_26497);
                } else {
                  if (state_val_26500 === 1) {
                    var state_26499__$1 = state_26499;
                    return cljs.core.async.impl.ioc_helpers.put_BANG_(state_26499__$1, 2, chan, img);
                  } else {
                    return null;
                  }
                }
              };
            }(c__5952__auto__, img, chan);
            return function(switch__5937__auto__, c__5952__auto__, img, chan) {
              return function() {
                var state_machine__5938__auto__ = null;
                var state_machine__5938__auto____0 = function() {
                  var statearr_26505 = [null, null, null, null, null, null, null, null];
                  statearr_26505[0] = state_machine__5938__auto__;
                  statearr_26505[1] = 1;
                  return statearr_26505;
                };
                var state_machine__5938__auto____1 = function(state_26499) {
                  while (true) {
                    var ret_value__5939__auto__ = function() {
                      try {
                        while (true) {
                          var result__5940__auto__ = switch__5937__auto__(state_26499);
                          if (cljs.core.keyword_identical_QMARK_(result__5940__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                            continue;
                          } else {
                            return result__5940__auto__;
                          }
                          break;
                        }
                      } catch (e26506) {
                        if (e26506 instanceof Object) {
                          var ex__5941__auto__ = e26506;
                          var statearr_26507_26509 = state_26499;
                          statearr_26507_26509[5] = ex__5941__auto__;
                          cljs.core.async.impl.ioc_helpers.process_exception(state_26499);
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                            throw e26506;
                          } else {
                            return null;
                          }
                        }
                      }
                    }();
                    if (cljs.core.keyword_identical_QMARK_(ret_value__5939__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                      var G__26510 = state_26499;
                      state_26499 = G__26510;
                      continue;
                    } else {
                      return ret_value__5939__auto__;
                    }
                    break;
                  }
                };
                state_machine__5938__auto__ = function(state_26499) {
                  switch(arguments.length) {
                    case 0:
                      return state_machine__5938__auto____0.call(this);
                    case 1:
                      return state_machine__5938__auto____1.call(this, state_26499);
                  }
                  throw new Error("Invalid arity: " + arguments.length);
                };
                state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5938__auto____0;
                state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5938__auto____1;
                return state_machine__5938__auto__;
              }();
            }(switch__5937__auto__, c__5952__auto__, img, chan);
          }();
          var state__5954__auto__ = function() {
            var statearr_26508 = f__5953__auto__.cljs$core$IFn$_invoke$arity$0 ? f__5953__auto__.cljs$core$IFn$_invoke$arity$0() : f__5953__auto__.call(null);
            statearr_26508[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5952__auto__;
            return statearr_26508;
          }();
          return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__5954__auto__);
        };
      }(c__5952__auto__, img, chan));
      return c__5952__auto__;
    };
  }(img, chan);
  img.onload = handler;
  img.crossOrigin = "anonymous";
  img.src = url;
  return chan;
};
dataview.loader.fetch_text = function fetch_text(url) {
  var xhr = new XMLHttpRequest;
  var chan = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0();
  var handler = function(xhr, chan) {
    return function(event) {
      var c__5952__auto__ = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(1);
      cljs.core.async.impl.dispatch.run(function(c__5952__auto__, xhr, chan) {
        return function() {
          var f__5953__auto__ = function() {
            var switch__5937__auto__ = function(c__5952__auto__, xhr, chan) {
              return function(state_26531) {
                var state_val_26532 = state_26531[1];
                if (state_val_26532 === 2) {
                  var inst_26528 = state_26531[2];
                  var inst_26529 = cljs.core.async.close_BANG_(chan);
                  var state_26531__$1 = function() {
                    var statearr_26533 = state_26531;
                    statearr_26533[7] = inst_26528;
                    return statearr_26533;
                  }();
                  return cljs.core.async.impl.ioc_helpers.return_chan(state_26531__$1, inst_26529);
                } else {
                  if (state_val_26532 === 1) {
                    var inst_26526 = xhr.response;
                    var state_26531__$1 = state_26531;
                    return cljs.core.async.impl.ioc_helpers.put_BANG_(state_26531__$1, 2, chan, inst_26526);
                  } else {
                    return null;
                  }
                }
              };
            }(c__5952__auto__, xhr, chan);
            return function(switch__5937__auto__, c__5952__auto__, xhr, chan) {
              return function() {
                var state_machine__5938__auto__ = null;
                var state_machine__5938__auto____0 = function() {
                  var statearr_26537 = [null, null, null, null, null, null, null, null];
                  statearr_26537[0] = state_machine__5938__auto__;
                  statearr_26537[1] = 1;
                  return statearr_26537;
                };
                var state_machine__5938__auto____1 = function(state_26531) {
                  while (true) {
                    var ret_value__5939__auto__ = function() {
                      try {
                        while (true) {
                          var result__5940__auto__ = switch__5937__auto__(state_26531);
                          if (cljs.core.keyword_identical_QMARK_(result__5940__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                            continue;
                          } else {
                            return result__5940__auto__;
                          }
                          break;
                        }
                      } catch (e26538) {
                        if (e26538 instanceof Object) {
                          var ex__5941__auto__ = e26538;
                          var statearr_26539_26541 = state_26531;
                          statearr_26539_26541[5] = ex__5941__auto__;
                          cljs.core.async.impl.ioc_helpers.process_exception(state_26531);
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                            throw e26538;
                          } else {
                            return null;
                          }
                        }
                      }
                    }();
                    if (cljs.core.keyword_identical_QMARK_(ret_value__5939__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                      var G__26542 = state_26531;
                      state_26531 = G__26542;
                      continue;
                    } else {
                      return ret_value__5939__auto__;
                    }
                    break;
                  }
                };
                state_machine__5938__auto__ = function(state_26531) {
                  switch(arguments.length) {
                    case 0:
                      return state_machine__5938__auto____0.call(this);
                    case 1:
                      return state_machine__5938__auto____1.call(this, state_26531);
                  }
                  throw new Error("Invalid arity: " + arguments.length);
                };
                state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5938__auto____0;
                state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5938__auto____1;
                return state_machine__5938__auto__;
              }();
            }(switch__5937__auto__, c__5952__auto__, xhr, chan);
          }();
          var state__5954__auto__ = function() {
            var statearr_26540 = f__5953__auto__.cljs$core$IFn$_invoke$arity$0 ? f__5953__auto__.cljs$core$IFn$_invoke$arity$0() : f__5953__auto__.call(null);
            statearr_26540[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5952__auto__;
            return statearr_26540;
          }();
          return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__5954__auto__);
        };
      }(c__5952__auto__, xhr, chan));
      return c__5952__auto__;
    };
  }(xhr, chan);
  xhr.open("GET", url, true);
  xhr.onload = handler;
  xhr.send();
  return chan;
};
goog.provide("big_bang.package$");
goog.require("cljs.core");
big_bang.package$.package_QMARK_ = function package_QMARK_(x) {
  return cljs.core.contains_QMARK_(x, new cljs.core.Keyword(null, "message", "message", 1968829305)) && cljs.core.contains_QMARK_(x, new cljs.core.Keyword(null, "world-state", "world-state", 894595592));
};
big_bang.package$.make_package = function make_package(world_state, message) {
  return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "world-state", "world-state", 894595592), world_state, new cljs.core.Keyword(null, "message", "message", 1968829305), message], null);
};
big_bang.package$.extract_world_state = function extract_world_state(x) {
  if (big_bang.package$.package_QMARK_(x)) {
    return(new cljs.core.Keyword(null, "world-state", "world-state", 894595592)).cljs$core$IFn$_invoke$arity$1(x);
  } else {
    return x;
  }
};
big_bang.package$.extract_message = function extract_message(x) {
  return(new cljs.core.Keyword(null, "message", "message", 1968829305)).cljs$core$IFn$_invoke$arity$1(x);
};
goog.provide("big_bang.core");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("big_bang.package$");
goog.require("big_bang.package$");
goog.require("cljs.core.async");
big_bang.core.animation_frame = function() {
  var or__3408__auto__ = window.requestAnimationFrame;
  if (cljs.core.truth_(or__3408__auto__)) {
    return or__3408__auto__;
  } else {
    var or__3408__auto____$1 = window.webkitRequestAnimationFrame;
    if (cljs.core.truth_(or__3408__auto____$1)) {
      return or__3408__auto____$1;
    } else {
      var or__3408__auto____$2 = window.mozRequestAnimationFrame;
      if (cljs.core.truth_(or__3408__auto____$2)) {
        return or__3408__auto____$2;
      } else {
        var or__3408__auto____$3 = window.oRequestAnimationFrame;
        if (cljs.core.truth_(or__3408__auto____$3)) {
          return or__3408__auto____$3;
        } else {
          var or__3408__auto____$4 = window.msRequestAnimationFrame;
          if (cljs.core.truth_(or__3408__auto____$4)) {
            return or__3408__auto____$4;
          } else {
            return function(callback) {
              return setTimeout(callback, 17);
            };
          }
        }
      }
    }
  }
}();
big_bang.core.send_message = function send_message(chan, msg) {
  if (cljs.core.truth_(function() {
    var and__3396__auto__ = chan;
    if (cljs.core.truth_(and__3396__auto__)) {
      return msg;
    } else {
      return and__3396__auto__;
    }
  }())) {
    return cljs.core.async._GT__BANG_(chan, msg);
  } else {
    return null;
  }
};
big_bang.core.big_bang_BANG_ = function() {
  var big_bang_BANG___delegate = function(p__22233) {
    var map__22287 = p__22233;
    var map__22287__$1 = cljs.core.seq_QMARK_(map__22287) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__22287) : map__22287;
    var on_tick = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22287__$1, new cljs.core.Keyword(null, "on-tick", "on-tick", 3936889917));
    var on_receive = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22287__$1, new cljs.core.Keyword(null, "on-receive", "on-receive", 1623591015));
    var initial_state = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22287__$1, new cljs.core.Keyword(null, "initial-state", "initial-state", 4067401786));
    var on_key = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22287__$1, new cljs.core.Keyword(null, "on-key", "on-key", 4294773987));
    var playback = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22287__$1, new cljs.core.Keyword(null, "playback", "playback", 2893072781));
    var on_release = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22287__$1, new cljs.core.Keyword(null, "on-release", "on-release", 1631894923));
    var receive_channel = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22287__$1, new cljs.core.Keyword(null, "receive-channel", "receive-channel", 1001272203));
    var tick_rate = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22287__$1, new cljs.core.Keyword(null, "tick-rate", "tick-rate", 890997378));
    var on_mouse = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22287__$1, new cljs.core.Keyword(null, "on-mouse", "on-mouse", 1425878697));
    var record_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22287__$1, new cljs.core.Keyword(null, "record?", "record?", 2096501120));
    var frame_limit = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22287__$1, new cljs.core.Keyword(null, "frame-limit", "frame-limit", 4073944781));
    var send_channel = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22287__$1, new cljs.core.Keyword(null, "send-channel", "send-channel", 3227589424));
    var to_draw = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22287__$1, new cljs.core.Keyword(null, "to-draw", "to-draw", 4107602120));
    var stop_when_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22287__$1, new cljs.core.Keyword(null, "stop-when?", "stop-when?", 2874360364));
    var history_builder = cljs.core.truth_(record_QMARK_) ? cljs.core.conj : cljs.core.constantly(null);
    var limit_reached_QMARK_ = cljs.core.truth_(frame_limit) ? function(history_builder) {
      return function(p1__22232_SHARP_) {
        return p1__22232_SHARP_ > frame_limit;
      };
    }(history_builder) : cljs.core.constantly(false);
    var stop_when_QMARK___$1 = function() {
      var or__3408__auto__ = stop_when_QMARK_;
      if (cljs.core.truth_(or__3408__auto__)) {
        return or__3408__auto__;
      } else {
        return cljs.core.constantly(false);
      }
    }();
    var tick_rate__$1 = function() {
      var or__3408__auto__ = tick_rate;
      if (cljs.core.truth_(or__3408__auto__)) {
        return or__3408__auto__;
      } else {
        return 17;
      }
    }();
    var c__5952__auto__ = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(1);
    cljs.core.async.impl.dispatch.run(function() {
      var f__5953__auto__ = function() {
        var switch__5937__auto__ = function(state_22318) {
          var state_val_22319 = state_22318[1];
          if (state_val_22319 === 1) {
            var inst_22288 = initial_state;
            var inst_22289 = cljs.core.PersistentVector.EMPTY;
            var inst_22290 = 0;
            var state_22318__$1 = function() {
              var statearr_22320 = state_22318;
              statearr_22320[7] = inst_22289;
              statearr_22320[8] = inst_22290;
              statearr_22320[9] = inst_22288;
              return statearr_22320;
            }();
            var statearr_22321_22340 = state_22318__$1;
            statearr_22321_22340[2] = null;
            statearr_22321_22340[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_22319 === 2) {
              var inst_22292 = cljs.core.async.timeout(tick_rate__$1);
              var state_22318__$1 = state_22318;
              return cljs.core.async.impl.ioc_helpers.take_BANG_(state_22318__$1, 4, inst_22292);
            } else {
              if (state_val_22319 === 3) {
                var inst_22316 = state_22318[2];
                var state_22318__$1 = state_22318;
                return cljs.core.async.impl.ioc_helpers.return_chan(state_22318__$1, inst_22316);
              } else {
                if (state_val_22319 === 4) {
                  var inst_22295 = state_22318[10];
                  var inst_22290 = state_22318[8];
                  var inst_22294 = state_22318[2];
                  var inst_22295__$1 = limit_reached_QMARK_.cljs$core$IFn$_invoke$arity$1 ? limit_reached_QMARK_.cljs$core$IFn$_invoke$arity$1(inst_22290) : limit_reached_QMARK_.call(null, inst_22290);
                  var state_22318__$1 = function() {
                    var statearr_22322 = state_22318;
                    statearr_22322[11] = inst_22294;
                    statearr_22322[10] = inst_22295__$1;
                    return statearr_22322;
                  }();
                  if (cljs.core.truth_(inst_22295__$1)) {
                    var statearr_22323_22341 = state_22318__$1;
                    statearr_22323_22341[1] = 5;
                  } else {
                    var statearr_22324_22342 = state_22318__$1;
                    statearr_22324_22342[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_22319 === 5) {
                    var inst_22295 = state_22318[10];
                    var state_22318__$1 = state_22318;
                    var statearr_22325_22343 = state_22318__$1;
                    statearr_22325_22343[2] = inst_22295;
                    statearr_22325_22343[1] = 7;
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_22319 === 6) {
                      var inst_22288 = state_22318[9];
                      var inst_22298 = stop_when_QMARK___$1.cljs$core$IFn$_invoke$arity$1 ? stop_when_QMARK___$1.cljs$core$IFn$_invoke$arity$1(inst_22288) : stop_when_QMARK___$1.call(null, inst_22288);
                      var state_22318__$1 = state_22318;
                      var statearr_22326_22344 = state_22318__$1;
                      statearr_22326_22344[2] = inst_22298;
                      statearr_22326_22344[1] = 7;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_22319 === 7) {
                        var inst_22300 = state_22318[2];
                        var state_22318__$1 = state_22318;
                        if (cljs.core.truth_(inst_22300)) {
                          var statearr_22327_22345 = state_22318__$1;
                          statearr_22327_22345[1] = 8;
                        } else {
                          var statearr_22328_22346 = state_22318__$1;
                          statearr_22328_22346[1] = 9;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_22319 === 8) {
                          var inst_22289 = state_22318[7];
                          var state_22318__$1 = state_22318;
                          var statearr_22329_22347 = state_22318__$1;
                          statearr_22329_22347[2] = inst_22289;
                          statearr_22329_22347[1] = 10;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_22319 === 9) {
                            var inst_22289 = state_22318[7];
                            var inst_22290 = state_22318[8];
                            var inst_22288 = state_22318[9];
                            var inst_22303 = on_tick.cljs$core$IFn$_invoke$arity$1 ? on_tick.cljs$core$IFn$_invoke$arity$1(inst_22288) : on_tick.call(null, inst_22288);
                            var inst_22304 = big_bang.package$.extract_world_state(inst_22303);
                            var inst_22305 = big_bang.package$.extract_message(inst_22303);
                            var inst_22306 = function() {
                              var message = inst_22305;
                              var next_world_state = inst_22304;
                              var handler_result = inst_22303;
                              var world_state = inst_22288;
                              var history = inst_22289;
                              var frame = inst_22290;
                              return function(message, next_world_state, handler_result, world_state, history, frame, inst_22289, inst_22290, inst_22288, inst_22303, inst_22304, inst_22305, state_val_22319) {
                                return function() {
                                  return to_draw.cljs$core$IFn$_invoke$arity$1 ? to_draw.cljs$core$IFn$_invoke$arity$1(world_state) : to_draw.call(null, world_state);
                                };
                              }(message, next_world_state, handler_result, world_state, history, frame, inst_22289, inst_22290, inst_22288, inst_22303, inst_22304, inst_22305, state_val_22319);
                            }();
                            var inst_22307 = big_bang.core.animation_frame.cljs$core$IFn$_invoke$arity$1 ? big_bang.core.animation_frame.cljs$core$IFn$_invoke$arity$1(inst_22306) : big_bang.core.animation_frame.call(null, inst_22306);
                            var inst_22308 = big_bang.core.send_message(send_channel, inst_22305);
                            var inst_22309 = big_bang.package$.extract_world_state(inst_22304);
                            var inst_22310 = history_builder.cljs$core$IFn$_invoke$arity$2 ? history_builder.cljs$core$IFn$_invoke$arity$2(inst_22289, inst_22304) : history_builder.call(null, inst_22289, inst_22304);
                            var inst_22311 = inst_22290 + 1;
                            var inst_22288__$1 = inst_22309;
                            var inst_22289__$1 = inst_22310;
                            var inst_22290__$1 = inst_22311;
                            var state_22318__$1 = function() {
                              var statearr_22330 = state_22318;
                              statearr_22330[12] = inst_22307;
                              statearr_22330[13] = inst_22308;
                              statearr_22330[7] = inst_22289__$1;
                              statearr_22330[8] = inst_22290__$1;
                              statearr_22330[9] = inst_22288__$1;
                              return statearr_22330;
                            }();
                            var statearr_22331_22348 = state_22318__$1;
                            statearr_22331_22348[2] = null;
                            statearr_22331_22348[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_22319 === 10) {
                              var inst_22314 = state_22318[2];
                              var state_22318__$1 = state_22318;
                              var statearr_22332_22349 = state_22318__$1;
                              statearr_22332_22349[2] = inst_22314;
                              statearr_22332_22349[1] = 3;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              return null;
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__5937__auto__) {
          return function() {
            var state_machine__5938__auto__ = null;
            var state_machine__5938__auto____0 = function() {
              var statearr_22336 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_22336[0] = state_machine__5938__auto__;
              statearr_22336[1] = 1;
              return statearr_22336;
            };
            var state_machine__5938__auto____1 = function(state_22318) {
              while (true) {
                var ret_value__5939__auto__ = function() {
                  try {
                    while (true) {
                      var result__5940__auto__ = switch__5937__auto__(state_22318);
                      if (cljs.core.keyword_identical_QMARK_(result__5940__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__5940__auto__;
                      }
                      break;
                    }
                  } catch (e22337) {
                    if (e22337 instanceof Object) {
                      var ex__5941__auto__ = e22337;
                      var statearr_22338_22350 = state_22318;
                      statearr_22338_22350[5] = ex__5941__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception(state_22318);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e22337;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_(ret_value__5939__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__22351 = state_22318;
                  state_22318 = G__22351;
                  continue;
                } else {
                  return ret_value__5939__auto__;
                }
                break;
              }
            };
            state_machine__5938__auto__ = function(state_22318) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5938__auto____0.call(this);
                case 1:
                  return state_machine__5938__auto____1.call(this, state_22318);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5938__auto____0;
            state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5938__auto____1;
            return state_machine__5938__auto__;
          }();
        }(switch__5937__auto__);
      }();
      var state__5954__auto__ = function() {
        var statearr_22339 = f__5953__auto__.cljs$core$IFn$_invoke$arity$0 ? f__5953__auto__.cljs$core$IFn$_invoke$arity$0() : f__5953__auto__.call(null);
        statearr_22339[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5952__auto__;
        return statearr_22339;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__5954__auto__);
    });
    return c__5952__auto__;
  };
  var big_bang_BANG_ = function(var_args) {
    var p__22233 = null;
    if (arguments.length > 0) {
      p__22233 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return big_bang_BANG___delegate.call(this, p__22233);
  };
  big_bang_BANG_.cljs$lang$maxFixedArity = 0;
  big_bang_BANG_.cljs$lang$applyTo = function(arglist__22352) {
    var p__22233 = cljs.core.seq(arglist__22352);
    return big_bang_BANG___delegate(p__22233);
  };
  big_bang_BANG_.cljs$core$IFn$_invoke$arity$variadic = big_bang_BANG___delegate;
  return big_bang_BANG_;
}();
goog.provide("big_bang.examples.cat");
goog.require("cljs.core");
goog.require("dataview.loader");
goog.require("cljs.core.async");
goog.require("big_bang.timer");
goog.require("big_bang.core");
goog.require("big_bang.timer");
goog.require("big_bang.core");
goog.require("dataview.loader");
goog.require("cljs.core.async");
big_bang.examples.cat.proxy_request = function proxy_request(url) {
  return[cljs.core.str("http://programming-enchiladas.destructuring-bind.org/proxy?url\x3d"), cljs.core.str(encodeURI(url))].join("");
};
big_bang.examples.cat.increment_and_wrap = function increment_and_wrap(x, limit) {
  if (x < limit) {
    return x + 1;
  } else {
    return 0;
  }
};
big_bang.examples.cat.update_state = function update_state(p__32123) {
  var vec__32125 = p__32123;
  var x = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__32125, 0, null);
  var y = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__32125, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [big_bang.examples.cat.increment_and_wrap(x, 800), y], null);
};
big_bang.examples.cat.render_scene = function render_scene(ctx, cat_image, p__32126) {
  var vec__32128 = p__32126;
  var x = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__32128, 0, null);
  var y = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__32128, 1, null);
  ctx.clearRect(0, 0, 800, 600);
  return ctx.drawImage(cat_image, x, y);
};
big_bang.examples.cat.demo = function demo() {
  var cat_32257 = "https://gist.github.com/rm-hull/8859515c9dce89935ac2/raw/cat_08.jpg";
  var canvas_32258 = document.getElementById("cat-canvas");
  var ctx_32259 = canvas_32258.getContext("2d");
  var c__5952__auto___32260 = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(1);
  cljs.core.async.impl.dispatch.run(function() {
    var f__5953__auto__ = function() {
      var switch__5937__auto__ = function(state_32202) {
        var state_val_32203 = state_32202[1];
        if (state_val_32203 === 2) {
          var inst_32196 = state_32202[2];
          var inst_32197 = [0, 0];
          var inst_32198 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, inst_32197, null);
          var inst_32199 = cljs.core.partial.cljs$core$IFn$_invoke$arity$3(big_bang.examples.cat.render_scene, ctx_32259, inst_32196);
          var inst_32200 = big_bang.core.big_bang_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.Keyword(null, "initial-state", "initial-state", 4067401786), inst_32198, new cljs.core.Keyword(null, "on-tick", "on-tick", 3936889917), big_bang.examples.cat.update_state, new cljs.core.Keyword(null, "to-draw", "to-draw", 4107602120), inst_32199], 0));
          var state_32202__$1 = state_32202;
          return cljs.core.async.impl.ioc_helpers.return_chan(state_32202__$1, inst_32200);
        } else {
          if (state_val_32203 === 1) {
            var inst_32193 = big_bang.examples.cat.proxy_request(cat_32257);
            var inst_32194 = dataview.loader.fetch_image(inst_32193);
            var state_32202__$1 = state_32202;
            return cljs.core.async.impl.ioc_helpers.take_BANG_(state_32202__$1, 2, inst_32194);
          } else {
            return null;
          }
        }
      };
      return function(switch__5937__auto__) {
        return function() {
          var state_machine__5938__auto__ = null;
          var state_machine__5938__auto____0 = function() {
            var statearr_32207 = [null, null, null, null, null, null, null];
            statearr_32207[0] = state_machine__5938__auto__;
            statearr_32207[1] = 1;
            return statearr_32207;
          };
          var state_machine__5938__auto____1 = function(state_32202) {
            while (true) {
              var ret_value__5939__auto__ = function() {
                try {
                  while (true) {
                    var result__5940__auto__ = switch__5937__auto__(state_32202);
                    if (cljs.core.keyword_identical_QMARK_(result__5940__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                      continue;
                    } else {
                      return result__5940__auto__;
                    }
                    break;
                  }
                } catch (e32208) {
                  if (e32208 instanceof Object) {
                    var ex__5941__auto__ = e32208;
                    var statearr_32209_32261 = state_32202;
                    statearr_32209_32261[5] = ex__5941__auto__;
                    cljs.core.async.impl.ioc_helpers.process_exception(state_32202);
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw e32208;
                    } else {
                      return null;
                    }
                  }
                }
              }();
              if (cljs.core.keyword_identical_QMARK_(ret_value__5939__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                var G__32262 = state_32202;
                state_32202 = G__32262;
                continue;
              } else {
                return ret_value__5939__auto__;
              }
              break;
            }
          };
          state_machine__5938__auto__ = function(state_32202) {
            switch(arguments.length) {
              case 0:
                return state_machine__5938__auto____0.call(this);
              case 1:
                return state_machine__5938__auto____1.call(this, state_32202);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5938__auto____0;
          state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5938__auto____1;
          return state_machine__5938__auto__;
        }();
      }(switch__5937__auto__);
    }();
    var state__5954__auto__ = function() {
      var statearr_32210 = f__5953__auto__.cljs$core$IFn$_invoke$arity$0 ? f__5953__auto__.cljs$core$IFn$_invoke$arity$0() : f__5953__auto__.call(null);
      statearr_32210[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5952__auto___32260;
      return statearr_32210;
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__5954__auto__);
  });
  big_bang.examples.cat.ticker = big_bang.timer.interval_ticker.cljs$core$IFn$_invoke$arity$1(17);
  var c__5952__auto___32263 = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(1);
  cljs.core.async.impl.dispatch.run(function() {
    var f__5953__auto__ = function() {
      var switch__5937__auto__ = function(state_32225) {
        var state_val_32226 = state_32225[1];
        if (state_val_32226 === 7) {
          var inst_32221 = state_32225[2];
          var state_32225__$1 = state_32225;
          var statearr_32227_32264 = state_32225__$1;
          statearr_32227_32264[2] = inst_32221;
          statearr_32227_32264[1] = 3;
          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
        } else {
          if (state_val_32226 === 6) {
            var state_32225__$1 = state_32225;
            var statearr_32228_32265 = state_32225__$1;
            statearr_32228_32265[2] = null;
            statearr_32228_32265[1] = 7;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_32226 === 5) {
              var inst_32214 = state_32225[7];
              var inst_32216 = [cljs.core.str("Received: "), cljs.core.str(inst_32214)].join("");
              var inst_32217 = console.log(inst_32216);
              var state_32225__$1 = function() {
                var statearr_32229 = state_32225;
                statearr_32229[8] = inst_32217;
                return statearr_32229;
              }();
              var statearr_32230_32266 = state_32225__$1;
              statearr_32230_32266[2] = null;
              statearr_32230_32266[1] = 2;
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
            } else {
              if (state_val_32226 === 4) {
                var inst_32214 = state_32225[7];
                var inst_32214__$1 = state_32225[2];
                var state_32225__$1 = function() {
                  var statearr_32231 = state_32225;
                  statearr_32231[7] = inst_32214__$1;
                  return statearr_32231;
                }();
                if (cljs.core.truth_(inst_32214__$1)) {
                  var statearr_32232_32267 = state_32225__$1;
                  statearr_32232_32267[1] = 5;
                } else {
                  var statearr_32233_32268 = state_32225__$1;
                  statearr_32233_32268[1] = 6;
                }
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_32226 === 3) {
                  var inst_32223 = state_32225[2];
                  var state_32225__$1 = state_32225;
                  return cljs.core.async.impl.ioc_helpers.return_chan(state_32225__$1, inst_32223);
                } else {
                  if (state_val_32226 === 2) {
                    var inst_32212 = (new cljs.core.Keyword(null, "timer-chan", "timer-chan", 2628674636)).cljs$core$IFn$_invoke$arity$1(big_bang.examples.cat.ticker);
                    var state_32225__$1 = state_32225;
                    return cljs.core.async.impl.ioc_helpers.take_BANG_(state_32225__$1, 4, inst_32212);
                  } else {
                    if (state_val_32226 === 1) {
                      var state_32225__$1 = state_32225;
                      var statearr_32234_32269 = state_32225__$1;
                      statearr_32234_32269[2] = null;
                      statearr_32234_32269[1] = 2;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      return null;
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__5937__auto__) {
        return function() {
          var state_machine__5938__auto__ = null;
          var state_machine__5938__auto____0 = function() {
            var statearr_32238 = [null, null, null, null, null, null, null, null, null];
            statearr_32238[0] = state_machine__5938__auto__;
            statearr_32238[1] = 1;
            return statearr_32238;
          };
          var state_machine__5938__auto____1 = function(state_32225) {
            while (true) {
              var ret_value__5939__auto__ = function() {
                try {
                  while (true) {
                    var result__5940__auto__ = switch__5937__auto__(state_32225);
                    if (cljs.core.keyword_identical_QMARK_(result__5940__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                      continue;
                    } else {
                      return result__5940__auto__;
                    }
                    break;
                  }
                } catch (e32239) {
                  if (e32239 instanceof Object) {
                    var ex__5941__auto__ = e32239;
                    var statearr_32240_32270 = state_32225;
                    statearr_32240_32270[5] = ex__5941__auto__;
                    cljs.core.async.impl.ioc_helpers.process_exception(state_32225);
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw e32239;
                    } else {
                      return null;
                    }
                  }
                }
              }();
              if (cljs.core.keyword_identical_QMARK_(ret_value__5939__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                var G__32271 = state_32225;
                state_32225 = G__32271;
                continue;
              } else {
                return ret_value__5939__auto__;
              }
              break;
            }
          };
          state_machine__5938__auto__ = function(state_32225) {
            switch(arguments.length) {
              case 0:
                return state_machine__5938__auto____0.call(this);
              case 1:
                return state_machine__5938__auto____1.call(this, state_32225);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5938__auto____0;
          state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5938__auto____1;
          return state_machine__5938__auto__;
        }();
      }(switch__5937__auto__);
    }();
    var state__5954__auto__ = function() {
      var statearr_32241 = f__5953__auto__.cljs$core$IFn$_invoke$arity$0 ? f__5953__auto__.cljs$core$IFn$_invoke$arity$0() : f__5953__auto__.call(null);
      statearr_32241[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5952__auto___32263;
      return statearr_32241;
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__5954__auto__);
  });
  var c__5952__auto__ = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(1);
  cljs.core.async.impl.dispatch.run(function() {
    var f__5953__auto__ = function() {
      var switch__5937__auto__ = function(state_32247) {
        var state_val_32248 = state_32247[1];
        if (state_val_32248 === 2) {
          var inst_32244 = state_32247[2];
          var inst_32245 = big_bang.timer.stop_BANG_(big_bang.examples.cat.ticker);
          var state_32247__$1 = function() {
            var statearr_32249 = state_32247;
            statearr_32249[7] = inst_32244;
            return statearr_32249;
          }();
          return cljs.core.async.impl.ioc_helpers.return_chan(state_32247__$1, inst_32245);
        } else {
          if (state_val_32248 === 1) {
            var inst_32242 = cljs.core.async.timeout(2E3);
            var state_32247__$1 = state_32247;
            return cljs.core.async.impl.ioc_helpers.take_BANG_(state_32247__$1, 2, inst_32242);
          } else {
            return null;
          }
        }
      };
      return function(switch__5937__auto__) {
        return function() {
          var state_machine__5938__auto__ = null;
          var state_machine__5938__auto____0 = function() {
            var statearr_32253 = [null, null, null, null, null, null, null, null];
            statearr_32253[0] = state_machine__5938__auto__;
            statearr_32253[1] = 1;
            return statearr_32253;
          };
          var state_machine__5938__auto____1 = function(state_32247) {
            while (true) {
              var ret_value__5939__auto__ = function() {
                try {
                  while (true) {
                    var result__5940__auto__ = switch__5937__auto__(state_32247);
                    if (cljs.core.keyword_identical_QMARK_(result__5940__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                      continue;
                    } else {
                      return result__5940__auto__;
                    }
                    break;
                  }
                } catch (e32254) {
                  if (e32254 instanceof Object) {
                    var ex__5941__auto__ = e32254;
                    var statearr_32255_32272 = state_32247;
                    statearr_32255_32272[5] = ex__5941__auto__;
                    cljs.core.async.impl.ioc_helpers.process_exception(state_32247);
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw e32254;
                    } else {
                      return null;
                    }
                  }
                }
              }();
              if (cljs.core.keyword_identical_QMARK_(ret_value__5939__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                var G__32273 = state_32247;
                state_32247 = G__32273;
                continue;
              } else {
                return ret_value__5939__auto__;
              }
              break;
            }
          };
          state_machine__5938__auto__ = function(state_32247) {
            switch(arguments.length) {
              case 0:
                return state_machine__5938__auto____0.call(this);
              case 1:
                return state_machine__5938__auto____1.call(this, state_32247);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5938__auto____0;
          state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5938__auto____1;
          return state_machine__5938__auto__;
        }();
      }(switch__5937__auto__);
    }();
    var state__5954__auto__ = function() {
      var statearr_32256 = f__5953__auto__.cljs$core$IFn$_invoke$arity$0 ? f__5953__auto__.cljs$core$IFn$_invoke$arity$0() : f__5953__auto__.call(null);
      statearr_32256[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5952__auto__;
      return statearr_32256;
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__5954__auto__);
  });
  return c__5952__auto__;
};
goog.provide("big_bang.examples.pacman.util");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("cljs.core.async");
goog.require("cljs.core.async");
cljs.core._STAR_print_fn_STAR_ = function(s) {
  return console.log(s);
};
big_bang.examples.pacman.util.posn = function posn(x, y, sz) {
  return new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "x", "x", 1013904362), sz * x, new cljs.core.Keyword(null, "y", "y", 1013904363), sz * y, new cljs.core.Keyword(null, "w", "w", 1013904361), sz, new cljs.core.Keyword(null, "h", "h", 1013904346), sz], null);
};
big_bang.examples.pacman.util.into_channel = function into_channel(chan, coll) {
  var c__5952__auto__ = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(1);
  cljs.core.async.impl.dispatch.run(function() {
    var f__5953__auto__ = function() {
      var switch__5937__auto__ = function(state_30205) {
        var state_val_30206 = state_30205[1];
        if (state_val_30206 === 7) {
          var inst_30189 = state_30205[7];
          var inst_30197 = state_30205[2];
          var inst_30198 = cljs.core.rest(inst_30189);
          var inst_30189__$1 = inst_30198;
          var state_30205__$1 = function() {
            var statearr_30207 = state_30205;
            statearr_30207[7] = inst_30189__$1;
            statearr_30207[8] = inst_30197;
            return statearr_30207;
          }();
          var statearr_30208_30222 = state_30205__$1;
          statearr_30208_30222[2] = null;
          statearr_30208_30222[1] = 2;
          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
        } else {
          if (state_val_30206 === 6) {
            var inst_30201 = state_30205[2];
            var state_30205__$1 = state_30205;
            var statearr_30209_30223 = state_30205__$1;
            statearr_30209_30223[2] = inst_30201;
            statearr_30209_30223[1] = 3;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_30206 === 5) {
              var inst_30189 = state_30205[7];
              var inst_30195 = cljs.core.first(inst_30189);
              var state_30205__$1 = state_30205;
              return cljs.core.async.impl.ioc_helpers.put_BANG_(state_30205__$1, 7, chan, inst_30195);
            } else {
              if (state_val_30206 === 4) {
                var inst_30193 = cljs.core.async.close_BANG_(chan);
                var state_30205__$1 = state_30205;
                var statearr_30210_30224 = state_30205__$1;
                statearr_30210_30224[2] = inst_30193;
                statearr_30210_30224[1] = 6;
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_30206 === 3) {
                  var inst_30203 = state_30205[2];
                  var state_30205__$1 = state_30205;
                  return cljs.core.async.impl.ioc_helpers.return_chan(state_30205__$1, inst_30203);
                } else {
                  if (state_val_30206 === 2) {
                    var inst_30189 = state_30205[7];
                    var inst_30191 = cljs.core.empty_QMARK_(inst_30189);
                    var state_30205__$1 = state_30205;
                    if (inst_30191) {
                      var statearr_30211_30225 = state_30205__$1;
                      statearr_30211_30225[1] = 4;
                    } else {
                      var statearr_30212_30226 = state_30205__$1;
                      statearr_30212_30226[1] = 5;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_30206 === 1) {
                      var inst_30189 = coll;
                      var state_30205__$1 = function() {
                        var statearr_30213 = state_30205;
                        statearr_30213[7] = inst_30189;
                        return statearr_30213;
                      }();
                      var statearr_30214_30227 = state_30205__$1;
                      statearr_30214_30227[2] = null;
                      statearr_30214_30227[1] = 2;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      return null;
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__5937__auto__) {
        return function() {
          var state_machine__5938__auto__ = null;
          var state_machine__5938__auto____0 = function() {
            var statearr_30218 = [null, null, null, null, null, null, null, null, null];
            statearr_30218[0] = state_machine__5938__auto__;
            statearr_30218[1] = 1;
            return statearr_30218;
          };
          var state_machine__5938__auto____1 = function(state_30205) {
            while (true) {
              var ret_value__5939__auto__ = function() {
                try {
                  while (true) {
                    var result__5940__auto__ = switch__5937__auto__(state_30205);
                    if (cljs.core.keyword_identical_QMARK_(result__5940__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                      continue;
                    } else {
                      return result__5940__auto__;
                    }
                    break;
                  }
                } catch (e30219) {
                  if (e30219 instanceof Object) {
                    var ex__5941__auto__ = e30219;
                    var statearr_30220_30228 = state_30205;
                    statearr_30220_30228[5] = ex__5941__auto__;
                    cljs.core.async.impl.ioc_helpers.process_exception(state_30205);
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw e30219;
                    } else {
                      return null;
                    }
                  }
                }
              }();
              if (cljs.core.keyword_identical_QMARK_(ret_value__5939__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                var G__30229 = state_30205;
                state_30205 = G__30229;
                continue;
              } else {
                return ret_value__5939__auto__;
              }
              break;
            }
          };
          state_machine__5938__auto__ = function(state_30205) {
            switch(arguments.length) {
              case 0:
                return state_machine__5938__auto____0.call(this);
              case 1:
                return state_machine__5938__auto____1.call(this, state_30205);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5938__auto____0;
          state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5938__auto____1;
          return state_machine__5938__auto__;
        }();
      }(switch__5937__auto__);
    }();
    var state__5954__auto__ = function() {
      var statearr_30221 = f__5953__auto__.cljs$core$IFn$_invoke$arity$0 ? f__5953__auto__.cljs$core$IFn$_invoke$arity$0() : f__5953__auto__.call(null);
      statearr_30221[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5952__auto__;
      return statearr_30221;
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__5954__auto__);
  });
  return c__5952__auto__;
};
big_bang.examples.pacman.util.proxy_request = function proxy_request(url) {
  return[cljs.core.str("http://programming-enchiladas.destructuring-bind.org/proxy?url\x3d"), cljs.core.str(encodeURI(url))].join("");
};
big_bang.examples.pacman.util.with$ = function() {
  var with$__delegate = function(arg, fns) {
    var seq__30234 = cljs.core.seq(fns);
    var chunk__30235 = null;
    var count__30236 = 0;
    var i__30237 = 0;
    while (true) {
      if (i__30237 < count__30236) {
        var fn = chunk__30235.cljs$core$IIndexed$_nth$arity$2(null, i__30237);
        fn.cljs$core$IFn$_invoke$arity$1 ? fn.cljs$core$IFn$_invoke$arity$1(arg) : fn.call(null, arg);
        var G__30238 = seq__30234;
        var G__30239 = chunk__30235;
        var G__30240 = count__30236;
        var G__30241 = i__30237 + 1;
        seq__30234 = G__30238;
        chunk__30235 = G__30239;
        count__30236 = G__30240;
        i__30237 = G__30241;
        continue;
      } else {
        var temp__4092__auto__ = cljs.core.seq(seq__30234);
        if (temp__4092__auto__) {
          var seq__30234__$1 = temp__4092__auto__;
          if (cljs.core.chunked_seq_QMARK_(seq__30234__$1)) {
            var c__4150__auto__ = cljs.core.chunk_first(seq__30234__$1);
            var G__30242 = cljs.core.chunk_rest(seq__30234__$1);
            var G__30243 = c__4150__auto__;
            var G__30244 = cljs.core.count(c__4150__auto__);
            var G__30245 = 0;
            seq__30234 = G__30242;
            chunk__30235 = G__30243;
            count__30236 = G__30244;
            i__30237 = G__30245;
            continue;
          } else {
            var fn = cljs.core.first(seq__30234__$1);
            fn.cljs$core$IFn$_invoke$arity$1 ? fn.cljs$core$IFn$_invoke$arity$1(arg) : fn.call(null, arg);
            var G__30246 = cljs.core.next(seq__30234__$1);
            var G__30247 = null;
            var G__30248 = 0;
            var G__30249 = 0;
            seq__30234 = G__30246;
            chunk__30235 = G__30247;
            count__30236 = G__30248;
            i__30237 = G__30249;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  };
  var with$ = function(arg, var_args) {
    var fns = null;
    if (arguments.length > 1) {
      fns = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return with$__delegate.call(this, arg, fns);
  };
  with$.cljs$lang$maxFixedArity = 1;
  with$.cljs$lang$applyTo = function(arglist__30250) {
    var arg = cljs.core.first(arglist__30250);
    var fns = cljs.core.rest(arglist__30250);
    return with$__delegate(arg, fns);
  };
  with$.cljs$core$IFn$_invoke$arity$variadic = with$__delegate;
  return with$;
}();
goog.provide("big_bang.examples.pacman.config");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("dataview.loader");
goog.require("big_bang.examples.pacman.util");
goog.require("dataview.loader");
goog.require("big_bang.examples.pacman.util");
goog.require("cljs.core.async");
goog.require("cljs.core.async");
big_bang.examples.pacman.config.canvas = document.getElementById("pacman-canvas");
big_bang.examples.pacman.config.ctx = cljs.core.truth_(big_bang.examples.pacman.config.canvas) ? big_bang.examples.pacman.config.canvas.getContext("2d") : null;
big_bang.examples.pacman.config.cell_size = 12;
big_bang.examples.pacman.config.width = 29;
big_bang.examples.pacman.config.height = 31;
big_bang.examples.pacman.config.background_size = cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(cljs.core._STAR_, big_bang.examples.pacman.config.cell_size), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [big_bang.examples.pacman.config.width, big_bang.examples.pacman.config.height], null));
big_bang.examples.pacman.config.start_position = cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(cljs.core._STAR_, big_bang.examples.pacman.config.cell_size), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [13.5, 23], null));
big_bang.examples.pacman.config.frighten_duration = 1E3;
big_bang.examples.pacman.config.url = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "sprite-map", "sprite-map", 2544444870), "https://raw.github.com/rm-hull/big-bang/master/examples/pacman/data/spritemap-192.png", new cljs.core.Keyword(null, "levels", "levels", 4202744033), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["https://raw.github.com/rm-hull/big-bang/master/examples/pacman/data/", ".txt"], null)], null);
big_bang.examples.pacman.config.sprites = function() {
  var c = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0();
  var c__5952__auto___31949 = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(1);
  cljs.core.async.impl.dispatch.run(function() {
    var f__5953__auto__ = function() {
      var switch__5937__auto__ = function(state_31940) {
        var state_val_31941 = state_31940[1];
        if (state_val_31941 === 2) {
          var inst_31936 = state_31940[2];
          var inst_31937 = cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(inst_31936);
          var inst_31938 = big_bang.examples.pacman.util.into_channel(c, inst_31937);
          var state_31940__$1 = state_31940;
          return cljs.core.async.impl.ioc_helpers.return_chan(state_31940__$1, inst_31938);
        } else {
          if (state_val_31941 === 1) {
            var inst_31932 = (new cljs.core.Keyword(null, "sprite-map", "sprite-map", 2544444870)).cljs$core$IFn$_invoke$arity$1(big_bang.examples.pacman.config.url);
            var inst_31933 = big_bang.examples.pacman.util.proxy_request(inst_31932);
            var inst_31934 = dataview.loader.fetch_image(inst_31933);
            var state_31940__$1 = state_31940;
            return cljs.core.async.impl.ioc_helpers.take_BANG_(state_31940__$1, 2, inst_31934);
          } else {
            return null;
          }
        }
      };
      return function(switch__5937__auto__) {
        return function() {
          var state_machine__5938__auto__ = null;
          var state_machine__5938__auto____0 = function() {
            var statearr_31945 = [null, null, null, null, null, null, null];
            statearr_31945[0] = state_machine__5938__auto__;
            statearr_31945[1] = 1;
            return statearr_31945;
          };
          var state_machine__5938__auto____1 = function(state_31940) {
            while (true) {
              var ret_value__5939__auto__ = function() {
                try {
                  while (true) {
                    var result__5940__auto__ = switch__5937__auto__(state_31940);
                    if (cljs.core.keyword_identical_QMARK_(result__5940__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                      continue;
                    } else {
                      return result__5940__auto__;
                    }
                    break;
                  }
                } catch (e31946) {
                  if (e31946 instanceof Object) {
                    var ex__5941__auto__ = e31946;
                    var statearr_31947_31950 = state_31940;
                    statearr_31947_31950[5] = ex__5941__auto__;
                    cljs.core.async.impl.ioc_helpers.process_exception(state_31940);
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw e31946;
                    } else {
                      return null;
                    }
                  }
                }
              }();
              if (cljs.core.keyword_identical_QMARK_(ret_value__5939__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                var G__31951 = state_31940;
                state_31940 = G__31951;
                continue;
              } else {
                return ret_value__5939__auto__;
              }
              break;
            }
          };
          state_machine__5938__auto__ = function(state_31940) {
            switch(arguments.length) {
              case 0:
                return state_machine__5938__auto____0.call(this);
              case 1:
                return state_machine__5938__auto____1.call(this, state_31940);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5938__auto____0;
          state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5938__auto____1;
          return state_machine__5938__auto__;
        }();
      }(switch__5937__auto__);
    }();
    var state__5954__auto__ = function() {
      var statearr_31948 = f__5953__auto__.cljs$core$IFn$_invoke$arity$0 ? f__5953__auto__.cljs$core$IFn$_invoke$arity$0() : f__5953__auto__.call(null);
      statearr_31948[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5952__auto___31949;
      return statearr_31948;
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__5954__auto__);
  });
  return c;
}();
big_bang.examples.pacman.config.level = cljs.core.memoize(function(n) {
  var vec__31952 = (new cljs.core.Keyword(null, "levels", "levels", 4202744033)).cljs$core$IFn$_invoke$arity$1(big_bang.examples.pacman.config.url);
  var prefix = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31952, 0, null);
  var suffix = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31952, 1, null);
  var url = [cljs.core.str(prefix), cljs.core.str(n), cljs.core.str(suffix)].join("");
  var c = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0();
  var c__5952__auto___31969 = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(1);
  cljs.core.async.impl.dispatch.run(function() {
    var f__5953__auto__ = function() {
      var switch__5937__auto__ = function(state_31960) {
        var state_val_31961 = state_31960[1];
        if (state_val_31961 === 2) {
          var inst_31956 = state_31960[2];
          var inst_31957 = cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(inst_31956);
          var inst_31958 = big_bang.examples.pacman.util.into_channel(c, inst_31957);
          var state_31960__$1 = state_31960;
          return cljs.core.async.impl.ioc_helpers.return_chan(state_31960__$1, inst_31958);
        } else {
          if (state_val_31961 === 1) {
            var inst_31953 = big_bang.examples.pacman.util.proxy_request(url);
            var inst_31954 = dataview.loader.fetch_text(inst_31953);
            var state_31960__$1 = state_31960;
            return cljs.core.async.impl.ioc_helpers.take_BANG_(state_31960__$1, 2, inst_31954);
          } else {
            return null;
          }
        }
      };
      return function(switch__5937__auto__) {
        return function() {
          var state_machine__5938__auto__ = null;
          var state_machine__5938__auto____0 = function() {
            var statearr_31965 = [null, null, null, null, null, null, null];
            statearr_31965[0] = state_machine__5938__auto__;
            statearr_31965[1] = 1;
            return statearr_31965;
          };
          var state_machine__5938__auto____1 = function(state_31960) {
            while (true) {
              var ret_value__5939__auto__ = function() {
                try {
                  while (true) {
                    var result__5940__auto__ = switch__5937__auto__(state_31960);
                    if (cljs.core.keyword_identical_QMARK_(result__5940__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                      continue;
                    } else {
                      return result__5940__auto__;
                    }
                    break;
                  }
                } catch (e31966) {
                  if (e31966 instanceof Object) {
                    var ex__5941__auto__ = e31966;
                    var statearr_31967_31970 = state_31960;
                    statearr_31967_31970[5] = ex__5941__auto__;
                    cljs.core.async.impl.ioc_helpers.process_exception(state_31960);
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw e31966;
                    } else {
                      return null;
                    }
                  }
                }
              }();
              if (cljs.core.keyword_identical_QMARK_(ret_value__5939__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                var G__31971 = state_31960;
                state_31960 = G__31971;
                continue;
              } else {
                return ret_value__5939__auto__;
              }
              break;
            }
          };
          state_machine__5938__auto__ = function(state_31960) {
            switch(arguments.length) {
              case 0:
                return state_machine__5938__auto____0.call(this);
              case 1:
                return state_machine__5938__auto____1.call(this, state_31960);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5938__auto____0;
          state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5938__auto____1;
          return state_machine__5938__auto__;
        }();
      }(switch__5937__auto__);
    }();
    var state__5954__auto__ = function() {
      var statearr_31968 = f__5953__auto__.cljs$core$IFn$_invoke$arity$0 ? f__5953__auto__.cljs$core$IFn$_invoke$arity$0() : f__5953__auto__.call(null);
      statearr_31968[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5952__auto___31969;
      return statearr_31968;
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__5954__auto__);
  });
  return c;
});
goog.provide("dataview.ops");
goog.require("cljs.core");
dataview.ops.get_uint8 = function get_uint8(data_view, byte_offset) {
  return data_view.getUint8(byte_offset);
};
dataview.ops.get_uint16_le = function get_uint16_le(data_view, byte_offset) {
  return data_view.getUint16(byte_offset, true);
};
dataview.ops.get_uint32_le = function get_uint32_le(data_view, byte_offset) {
  return data_view.getUint32(byte_offset, true);
};
dataview.ops.get_float32_le = function get_float32_le(data_view, byte_offset) {
  return data_view.getFloat32(byte_offset, true);
};
dataview.ops.byte_length = function byte_length(data_view) {
  return data_view.byteLength;
};
dataview.ops.get_string = function() {
  var utf_QMARK_ = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "UTF-8", "UTF-8", 1094974692), null, new cljs.core.Keyword(null, "UTF8", "UTF8", 1016519427), null, new cljs.core.Keyword(null, "utf-8", "utf-8", 1125511428), null, new cljs.core.Keyword(null, "utf8", "utf8", 1017504483), null], null), null);
  return function() {
    var G__26415__delegate = function(data_view, byte_offset, p__26413) {
      var map__26414 = p__26413;
      var map__26414__$1 = cljs.core.seq_QMARK_(map__26414) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__26414) : map__26414;
      var opts = map__26414__$1;
      var encoding = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__26414__$1, new cljs.core.Keyword(null, "encoding", "encoding", 2725126341));
      var length = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__26414__$1, new cljs.core.Keyword(null, "length", "length", 4202507864));
      var delimiters = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__26414__$1, new cljs.core.Keyword(null, "delimiters", "delimiters", 1837780670));
      if (cljs.core.truth_(function() {
        var and__3396__auto__ = delimiters;
        if (cljs.core.truth_(and__3396__auto__)) {
          return length;
        } else {
          return and__3396__auto__;
        }
      }())) {
        throw new Error("Cannot support :length and :delimiters at the same time");
      } else {
        var take_fn = function(cs) {
          if (cljs.core.truth_(length)) {
            return cljs.core.take(length, cs);
          } else {
            return cljs.core.take_while(function(p1__26412_SHARP_) {
              return cljs.core.not(delimiters.cljs$core$IFn$_invoke$arity$1 ? delimiters.cljs$core$IFn$_invoke$arity$1(p1__26412_SHARP_) : delimiters.call(null, p1__26412_SHARP_));
            }, cs);
          }
        };
        var s = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str, take_fn(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.char$, cljs.core.partial.cljs$core$IFn$_invoke$arity$2(dataview.ops.get_uint8, data_view)), cljs.core.range.cljs$core$IFn$_invoke$arity$2(byte_offset, dataview.ops.byte_length(data_view)))));
        if (cljs.core.truth_(utf_QMARK_.cljs$core$IFn$_invoke$arity$1 ? utf_QMARK_.cljs$core$IFn$_invoke$arity$1(cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(encoding)) : utf_QMARK_.call(null, cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(encoding)))) {
          return decodeURIComponent(escape(s));
        } else {
          return s;
        }
      }
    };
    var G__26415 = function(data_view, byte_offset, var_args) {
      var p__26413 = null;
      if (arguments.length > 2) {
        p__26413 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__26415__delegate.call(this, data_view, byte_offset, p__26413);
    };
    G__26415.cljs$lang$maxFixedArity = 2;
    G__26415.cljs$lang$applyTo = function(arglist__26416) {
      var data_view = cljs.core.first(arglist__26416);
      arglist__26416 = cljs.core.next(arglist__26416);
      var byte_offset = cljs.core.first(arglist__26416);
      var p__26413 = cljs.core.rest(arglist__26416);
      return G__26415__delegate(data_view, byte_offset, p__26413);
    };
    G__26415.cljs$core$IFn$_invoke$arity$variadic = G__26415__delegate;
    return G__26415;
  }();
}();
dataview.ops.can_read_QMARK_ = function can_read_QMARK_(data_view, offset, bytes_to_read) {
  return offset + bytes_to_read <= dataview.ops.byte_length(data_view);
};
dataview.ops.IReader = function() {
  var obj26418 = {};
  return obj26418;
}();
dataview.ops.read_delimited_string = function read_delimited_string(this$, delimiters, encoding) {
  if (function() {
    var and__3396__auto__ = this$;
    if (and__3396__auto__) {
      return this$.dataview$ops$IReader$read_delimited_string$arity$3;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return this$.dataview$ops$IReader$read_delimited_string$arity$3(this$, delimiters, encoding);
  } else {
    var x__4029__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3408__auto__ = dataview.ops.read_delimited_string[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = dataview.ops.read_delimited_string["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IReader.read-delimited-string", this$);
        }
      }
    }().call(null, this$, delimiters, encoding);
  }
};
dataview.ops.read_fixed_string = function read_fixed_string(this$, length, encoding) {
  if (function() {
    var and__3396__auto__ = this$;
    if (and__3396__auto__) {
      return this$.dataview$ops$IReader$read_fixed_string$arity$3;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return this$.dataview$ops$IReader$read_fixed_string$arity$3(this$, length, encoding);
  } else {
    var x__4029__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3408__auto__ = dataview.ops.read_fixed_string[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = dataview.ops.read_fixed_string["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IReader.read-fixed-string", this$);
        }
      }
    }().call(null, this$, length, encoding);
  }
};
dataview.ops.read_uint8 = function read_uint8(this$) {
  if (function() {
    var and__3396__auto__ = this$;
    if (and__3396__auto__) {
      return this$.dataview$ops$IReader$read_uint8$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return this$.dataview$ops$IReader$read_uint8$arity$1(this$);
  } else {
    var x__4029__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3408__auto__ = dataview.ops.read_uint8[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = dataview.ops.read_uint8["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IReader.read-uint8", this$);
        }
      }
    }().call(null, this$);
  }
};
dataview.ops.read_uint16_le = function read_uint16_le(this$) {
  if (function() {
    var and__3396__auto__ = this$;
    if (and__3396__auto__) {
      return this$.dataview$ops$IReader$read_uint16_le$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return this$.dataview$ops$IReader$read_uint16_le$arity$1(this$);
  } else {
    var x__4029__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3408__auto__ = dataview.ops.read_uint16_le[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = dataview.ops.read_uint16_le["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IReader.read-uint16-le", this$);
        }
      }
    }().call(null, this$);
  }
};
dataview.ops.read_uint32_le = function read_uint32_le(this$) {
  if (function() {
    var and__3396__auto__ = this$;
    if (and__3396__auto__) {
      return this$.dataview$ops$IReader$read_uint32_le$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return this$.dataview$ops$IReader$read_uint32_le$arity$1(this$);
  } else {
    var x__4029__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3408__auto__ = dataview.ops.read_uint32_le[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = dataview.ops.read_uint32_le["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IReader.read-uint32-le", this$);
        }
      }
    }().call(null, this$);
  }
};
dataview.ops.read_float32_le = function read_float32_le(this$) {
  if (function() {
    var and__3396__auto__ = this$;
    if (and__3396__auto__) {
      return this$.dataview$ops$IReader$read_float32_le$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return this$.dataview$ops$IReader$read_float32_le$arity$1(this$);
  } else {
    var x__4029__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3408__auto__ = dataview.ops.read_float32_le[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = dataview.ops.read_float32_le["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IReader.read-float32-le", this$);
        }
      }
    }().call(null, this$);
  }
};
dataview.ops.eod_QMARK_ = function eod_QMARK_(this$) {
  if (function() {
    var and__3396__auto__ = this$;
    if (and__3396__auto__) {
      return this$.dataview$ops$IReader$eod_QMARK_$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return this$.dataview$ops$IReader$eod_QMARK_$arity$1(this$);
  } else {
    var x__4029__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3408__auto__ = dataview.ops.eod_QMARK_[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = dataview.ops.eod_QMARK_["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IReader.eod?", this$);
        }
      }
    }().call(null, this$);
  }
};
dataview.ops.IRandomAccess = function() {
  var obj26420 = {};
  return obj26420;
}();
dataview.ops.tell = function tell(this$) {
  if (function() {
    var and__3396__auto__ = this$;
    if (and__3396__auto__) {
      return this$.dataview$ops$IRandomAccess$tell$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return this$.dataview$ops$IRandomAccess$tell$arity$1(this$);
  } else {
    var x__4029__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3408__auto__ = dataview.ops.tell[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = dataview.ops.tell["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IRandomAccess.tell", this$);
        }
      }
    }().call(null, this$);
  }
};
dataview.ops.advance_BANG_ = function advance_BANG_(this$, delta) {
  if (function() {
    var and__3396__auto__ = this$;
    if (and__3396__auto__) {
      return this$.dataview$ops$IRandomAccess$advance_BANG_$arity$2;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return this$.dataview$ops$IRandomAccess$advance_BANG_$arity$2(this$, delta);
  } else {
    var x__4029__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3408__auto__ = dataview.ops.advance_BANG_[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = dataview.ops.advance_BANG_["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IRandomAccess.advance!", this$);
        }
      }
    }().call(null, this$, delta);
  }
};
dataview.ops.seek_BANG_ = function seek_BANG_(this$, new_offset) {
  if (function() {
    var and__3396__auto__ = this$;
    if (and__3396__auto__) {
      return this$.dataview$ops$IRandomAccess$seek_BANG_$arity$2;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return this$.dataview$ops$IRandomAccess$seek_BANG_$arity$2(this$, new_offset);
  } else {
    var x__4029__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3408__auto__ = dataview.ops.seek_BANG_[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = dataview.ops.seek_BANG_["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IRandomAccess.seek!", this$);
        }
      }
    }().call(null, this$, new_offset);
  }
};
dataview.ops.rewind_BANG_ = function rewind_BANG_(this$) {
  if (function() {
    var and__3396__auto__ = this$;
    if (and__3396__auto__) {
      return this$.dataview$ops$IRandomAccess$rewind_BANG_$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return this$.dataview$ops$IRandomAccess$rewind_BANG_$arity$1(this$);
  } else {
    var x__4029__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3408__auto__ = dataview.ops.rewind_BANG_[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = dataview.ops.rewind_BANG_["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IRandomAccess.rewind!", this$);
        }
      }
    }().call(null, this$);
  }
};
dataview.ops.create_seeker = function create_seeker(initial_offset) {
  var index = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(initial_offset);
  if (typeof dataview.ops.t26424 !== "undefined") {
  } else {
    dataview.ops.t26424 = function(index, initial_offset, create_seeker, meta26425) {
      this.index = index;
      this.initial_offset = initial_offset;
      this.create_seeker = create_seeker;
      this.meta26425 = meta26425;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    dataview.ops.t26424.cljs$lang$type = true;
    dataview.ops.t26424.cljs$lang$ctorStr = "dataview.ops/t26424";
    dataview.ops.t26424.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write(writer__3971__auto__, "dataview.ops/t26424");
    };
    dataview.ops.t26424.prototype.dataview$ops$IRandomAccess$ = true;
    dataview.ops.t26424.prototype.dataview$ops$IRandomAccess$tell$arity$1 = function(this$) {
      var self__ = this;
      var this$__$1 = this;
      return cljs.core.deref(self__.index);
    };
    dataview.ops.t26424.prototype.dataview$ops$IRandomAccess$advance_BANG_$arity$2 = function(this$, delta) {
      var self__ = this;
      var this$__$1 = this;
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.index, cljs.core._PLUS_, delta) - delta;
    };
    dataview.ops.t26424.prototype.dataview$ops$IRandomAccess$seek_BANG_$arity$2 = function(this$, new_offset) {
      var self__ = this;
      var this$__$1 = this;
      return cljs.core.reset_BANG_(self__.index, new_offset);
    };
    dataview.ops.t26424.prototype.dataview$ops$IRandomAccess$rewind_BANG_$arity$1 = function(this$) {
      var self__ = this;
      var this$__$1 = this;
      return dataview.ops.seek_BANG_(this$__$1, 0);
    };
    dataview.ops.t26424.prototype.cljs$core$IMeta$_meta$arity$1 = function(_26426) {
      var self__ = this;
      var _26426__$1 = this;
      return self__.meta26425;
    };
    dataview.ops.t26424.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_26426, meta26425__$1) {
      var self__ = this;
      var _26426__$1 = this;
      return new dataview.ops.t26424(self__.index, self__.initial_offset, self__.create_seeker, meta26425__$1);
    };
    dataview.ops.__GT_t26424 = function __GT_t26424(index__$1, initial_offset__$1, create_seeker__$1, meta26425) {
      return new dataview.ops.t26424(index__$1, initial_offset__$1, create_seeker__$1, meta26425);
    };
  }
  return new dataview.ops.t26424(index, initial_offset, create_seeker, null);
};
dataview.ops.create_reader = function create_reader(data_view) {
  var seeker = dataview.ops.create_seeker(0);
  if (typeof dataview.ops.t26430 !== "undefined") {
  } else {
    dataview.ops.t26430 = function(seeker, data_view, create_reader, meta26431) {
      this.seeker = seeker;
      this.data_view = data_view;
      this.create_reader = create_reader;
      this.meta26431 = meta26431;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    dataview.ops.t26430.cljs$lang$type = true;
    dataview.ops.t26430.cljs$lang$ctorStr = "dataview.ops/t26430";
    dataview.ops.t26430.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write(writer__3971__auto__, "dataview.ops/t26430");
    };
    dataview.ops.t26430.prototype.dataview$ops$IRandomAccess$ = true;
    dataview.ops.t26430.prototype.dataview$ops$IRandomAccess$tell$arity$1 = function(this$) {
      var self__ = this;
      var this$__$1 = this;
      return dataview.ops.tell(self__.seeker);
    };
    dataview.ops.t26430.prototype.dataview$ops$IRandomAccess$advance_BANG_$arity$2 = function(this$, delta) {
      var self__ = this;
      var this$__$1 = this;
      return dataview.ops.advance_BANG_(self__.seeker, delta);
    };
    dataview.ops.t26430.prototype.dataview$ops$IRandomAccess$seek_BANG_$arity$2 = function(this$, new_offset) {
      var self__ = this;
      var this$__$1 = this;
      return dataview.ops.seek_BANG_(self__.seeker, new_offset);
    };
    dataview.ops.t26430.prototype.dataview$ops$IRandomAccess$rewind_BANG_$arity$1 = function(this$) {
      var self__ = this;
      var this$__$1 = this;
      return dataview.ops.rewind_BANG_(self__.seeker);
    };
    dataview.ops.t26430.prototype.dataview$ops$IReader$ = true;
    dataview.ops.t26430.prototype.dataview$ops$IReader$read_delimited_string$arity$3 = function(this$, delimiters, encoding) {
      var self__ = this;
      var this$__$1 = this;
      if (cljs.core.truth_(dataview.ops.eod_QMARK_(this$__$1))) {
        return null;
      } else {
        var offset = dataview.ops.tell(self__.seeker);
        var data = dataview.ops.get_string.cljs$core$IFn$_invoke$arity$6 ? dataview.ops.get_string.cljs$core$IFn$_invoke$arity$6(self__.data_view, offset, new cljs.core.Keyword(null, "delimiters", "delimiters", 1837780670), delimiters, new cljs.core.Keyword(null, "encoding", "encoding", 2725126341), encoding) : dataview.ops.get_string.call(null, self__.data_view, offset, new cljs.core.Keyword(null, "delimiters", "delimiters", 1837780670), delimiters, new cljs.core.Keyword(null, "encoding", "encoding", 
        2725126341), encoding);
        dataview.ops.advance_BANG_(self__.seeker, cljs.core.count(data) + 1);
        return data;
      }
    };
    dataview.ops.t26430.prototype.dataview$ops$IReader$read_fixed_string$arity$3 = function(this$, length, encoding) {
      var self__ = this;
      var this$__$1 = this;
      if (dataview.ops.can_read_QMARK_(self__.data_view, dataview.ops.tell(self__.seeker), length)) {
        var offset = dataview.ops.advance_BANG_(self__.seeker, length);
        return dataview.ops.get_string.cljs$core$IFn$_invoke$arity$6 ? dataview.ops.get_string.cljs$core$IFn$_invoke$arity$6(self__.data_view, offset, new cljs.core.Keyword(null, "length", "length", 4202507864), length, new cljs.core.Keyword(null, "encoding", "encoding", 2725126341), encoding) : dataview.ops.get_string.call(null, self__.data_view, offset, new cljs.core.Keyword(null, "length", "length", 4202507864), length, new cljs.core.Keyword(null, "encoding", "encoding", 2725126341), encoding);
      } else {
        return null;
      }
    };
    dataview.ops.t26430.prototype.dataview$ops$IReader$read_uint8$arity$1 = function(this$) {
      var self__ = this;
      var this$__$1 = this;
      if (dataview.ops.can_read_QMARK_(self__.data_view, dataview.ops.tell(self__.seeker), 1)) {
        var offset = dataview.ops.advance_BANG_(this$__$1, 1);
        return dataview.ops.get_uint8(self__.data_view, offset);
      } else {
        return null;
      }
    };
    dataview.ops.t26430.prototype.dataview$ops$IReader$read_uint16_le$arity$1 = function(this$) {
      var self__ = this;
      var this$__$1 = this;
      if (dataview.ops.can_read_QMARK_(self__.data_view, dataview.ops.tell(self__.seeker), 2)) {
        var offset = dataview.ops.advance_BANG_(this$__$1, 2);
        return dataview.ops.get_uint16_le(self__.data_view, offset);
      } else {
        return null;
      }
    };
    dataview.ops.t26430.prototype.dataview$ops$IReader$read_uint32_le$arity$1 = function(this$) {
      var self__ = this;
      var this$__$1 = this;
      if (dataview.ops.can_read_QMARK_(self__.data_view, dataview.ops.tell(self__.seeker), 4)) {
        var offset = dataview.ops.advance_BANG_(this$__$1, 4);
        return dataview.ops.get_uint32_le(self__.data_view, offset);
      } else {
        return null;
      }
    };
    dataview.ops.t26430.prototype.dataview$ops$IReader$read_float32_le$arity$1 = function(this$) {
      var self__ = this;
      var this$__$1 = this;
      if (dataview.ops.can_read_QMARK_(self__.data_view, dataview.ops.tell(self__.seeker), 4)) {
        var offset = dataview.ops.advance_BANG_(this$__$1, 4);
        return dataview.ops.get_float32_le(self__.data_view, offset);
      } else {
        return null;
      }
    };
    dataview.ops.t26430.prototype.dataview$ops$IReader$eod_QMARK_$arity$1 = function(this$) {
      var self__ = this;
      var this$__$1 = this;
      return dataview.ops.tell(self__.seeker) >= dataview.ops.byte_length(self__.data_view);
    };
    dataview.ops.t26430.prototype.cljs$core$IMeta$_meta$arity$1 = function(_26432) {
      var self__ = this;
      var _26432__$1 = this;
      return self__.meta26431;
    };
    dataview.ops.t26430.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_26432, meta26431__$1) {
      var self__ = this;
      var _26432__$1 = this;
      return new dataview.ops.t26430(self__.seeker, self__.data_view, self__.create_reader, meta26431__$1);
    };
    dataview.ops.__GT_t26430 = function __GT_t26430(seeker__$1, data_view__$1, create_reader__$1, meta26431) {
      return new dataview.ops.t26430(seeker__$1, data_view__$1, create_reader__$1, meta26431);
    };
  }
  return new dataview.ops.t26430(seeker, data_view, create_reader, null);
};
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
goog.require("goog.string");
clojure.string.seq_reverse = function seq_reverse(coll) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, coll);
};
clojure.string.reverse = function reverse(s) {
  return s.split("").reverse().join("");
};
clojure.string.replace = function replace(s, match, replacement) {
  if (typeof match === "string") {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement);
  } else {
    if (cljs.core.truth_(match.hasOwnProperty("source"))) {
      return s.replace(new RegExp(match.source, "g"), replacement);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw[cljs.core.str("Invalid match arg: "), cljs.core.str(match)].join("");
      } else {
        return null;
      }
    }
  }
};
clojure.string.replace_first = function replace_first(s, match, replacement) {
  return s.replace(match, replacement);
};
clojure.string.join = function() {
  var join = null;
  var join__1 = function(coll) {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str, coll);
  };
  var join__2 = function(separator, coll) {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str, cljs.core.interpose(separator, coll));
  };
  join = function(separator, coll) {
    switch(arguments.length) {
      case 1:
        return join__1.call(this, separator);
      case 2:
        return join__2.call(this, separator, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  join.cljs$core$IFn$_invoke$arity$1 = join__1;
  join.cljs$core$IFn$_invoke$arity$2 = join__2;
  return join;
}();
clojure.string.upper_case = function upper_case(s) {
  return s.toUpperCase();
};
clojure.string.lower_case = function lower_case(s) {
  return s.toLowerCase();
};
clojure.string.capitalize = function capitalize(s) {
  if (cljs.core.count(s) < 2) {
    return clojure.string.upper_case(s);
  } else {
    return[cljs.core.str(clojure.string.upper_case(cljs.core.subs.cljs$core$IFn$_invoke$arity$3(s, 0, 1))), cljs.core.str(clojure.string.lower_case(cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, 1)))].join("");
  }
};
clojure.string.pop_last_while_empty = function pop_last_while_empty(v) {
  var v__$1 = v;
  while (true) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2("", cljs.core.peek(v__$1))) {
      var G__26433 = cljs.core.pop(v__$1);
      v__$1 = G__26433;
      continue;
    } else {
      return v__$1;
    }
    break;
  }
};
clojure.string.discard_trailing_if_needed = function discard_trailing_if_needed(limit, v) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(0, limit)) {
    return clojure.string.pop_last_while_empty(v);
  } else {
    return v;
  }
};
clojure.string.split_with_empty_regex = function split_with_empty_regex(s, limit) {
  if (limit <= 0 || limit >= 2 + cljs.core.count(s)) {
    return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.vec(cljs.core.cons("", cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.str, cljs.core.seq(s)))), "");
  } else {
    var pred__26437 = cljs.core._EQ_;
    var expr__26438 = limit;
    if (cljs.core.truth_(pred__26437.cljs$core$IFn$_invoke$arity$2 ? pred__26437.cljs$core$IFn$_invoke$arity$2(1, expr__26438) : pred__26437.call(null, 1, expr__26438))) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [s], null);
    } else {
      if (cljs.core.truth_(pred__26437.cljs$core$IFn$_invoke$arity$2 ? pred__26437.cljs$core$IFn$_invoke$arity$2(2, expr__26438) : pred__26437.call(null, 2, expr__26438))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", s], null);
      } else {
        var c = limit - 2;
        return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.vec(cljs.core.cons("", cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.str, cljs.core.seq(s))), 0, c))), cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, c));
      }
    }
  }
};
clojure.string.split = function() {
  var split = null;
  var split__2 = function(s, re) {
    return split.cljs$core$IFn$_invoke$arity$3(s, re, 0);
  };
  var split__3 = function(s, re, limit) {
    return clojure.string.discard_trailing_if_needed(limit, cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2([cljs.core.str(re)].join(""), "/(?:)/") ? clojure.string.split_with_empty_regex(s, limit) : limit < 1 ? cljs.core.vec([cljs.core.str(s)].join("").split(re)) : function() {
      var s__$1 = s;
      var limit__$1 = limit;
      var parts = cljs.core.PersistentVector.EMPTY;
      while (true) {
        if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(limit__$1, 1)) {
          return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(parts, s__$1);
        } else {
          var temp__4090__auto__ = cljs.core.re_find(re, s__$1);
          if (cljs.core.truth_(temp__4090__auto__)) {
            var m = temp__4090__auto__;
            var index = s__$1.indexOf(m);
            var G__26440 = s__$1.substring(index + cljs.core.count(m));
            var G__26441 = limit__$1 - 1;
            var G__26442 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(parts, s__$1.substring(0, index));
            s__$1 = G__26440;
            limit__$1 = G__26441;
            parts = G__26442;
            continue;
          } else {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(parts, s__$1);
          }
        }
        break;
      }
    }());
  };
  split = function(s, re, limit) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, s, re);
      case 3:
        return split__3.call(this, s, re, limit);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  split.cljs$core$IFn$_invoke$arity$2 = split__2;
  split.cljs$core$IFn$_invoke$arity$3 = split__3;
  return split;
}();
clojure.string.split_lines = function split_lines(s) {
  return clojure.string.split.cljs$core$IFn$_invoke$arity$2(s, /\n|\r\n/);
};
clojure.string.trim = function trim(s) {
  return goog.string.trim(s);
};
clojure.string.triml = function triml(s) {
  return goog.string.trimLeft(s);
};
clojure.string.trimr = function trimr(s) {
  return goog.string.trimRight(s);
};
clojure.string.trim_newline = function trim_newline(s) {
  var index = s.length;
  while (true) {
    if (index === 0) {
      return "";
    } else {
      var ch = cljs.core.get.cljs$core$IFn$_invoke$arity$2(s, index - 1);
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(ch, "\n") || cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(ch, "\r")) {
        var G__26443 = index - 1;
        index = G__26443;
        continue;
      } else {
        return s.substring(0, index);
      }
    }
    break;
  }
};
clojure.string.blank_QMARK_ = function blank_QMARK_(s) {
  return goog.string.isEmptySafe(s);
};
clojure.string.escape = function escape__$1(s, cmap) {
  var buffer = new goog.string.StringBuffer;
  var length = s.length;
  var index = 0;
  while (true) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(length, index)) {
      return buffer.toString();
    } else {
      var ch = s.charAt(index);
      var temp__4090__auto___26444 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cmap, ch);
      if (cljs.core.truth_(temp__4090__auto___26444)) {
        var replacement_26445 = temp__4090__auto___26444;
        buffer.append([cljs.core.str(replacement_26445)].join(""));
      } else {
        buffer.append(ch);
      }
      var G__26446 = index + 1;
      index = G__26446;
      continue;
    }
    break;
  }
};
goog.provide("big_bang.examples.pacman.level_builder");
goog.require("cljs.core");
goog.require("dataview.ops");
goog.require("cljs.core.async");
goog.require("clojure.string");
goog.require("big_bang.examples.pacman.util");
goog.require("big_bang.examples.pacman.util");
goog.require("big_bang.examples.pacman.config");
goog.require("big_bang.examples.pacman.config");
goog.require("dataview.ops");
goog.require("clojure.string");
goog.require("cljs.core.async");
goog.require("cljs.core.async");
big_bang.examples.pacman.level_builder.pieces = new cljs.core.PersistentArrayMap(null, 8, ["\u250f", big_bang.examples.pacman.util.posn(4, 4, big_bang.examples.pacman.config.cell_size), "\u2501", big_bang.examples.pacman.util.posn(0, 4, big_bang.examples.pacman.config.cell_size), "\u2513", big_bang.examples.pacman.util.posn(5, 4, big_bang.examples.pacman.config.cell_size), "\u2517", big_bang.examples.pacman.util.posn(2, 4, big_bang.examples.pacman.config.cell_size), "\u251b", big_bang.examples.pacman.util.posn(3, 
4, big_bang.examples.pacman.config.cell_size), "\u2503", big_bang.examples.pacman.util.posn(1, 4, big_bang.examples.pacman.config.cell_size), ".", cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(big_bang.examples.pacman.util.posn(16, 0, big_bang.examples.pacman.config.cell_size / 2), new cljs.core.Keyword(null, "target-offset", "target-offset", 1916378049), big_bang.examples.pacman.config.cell_size / 4), "O", cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(big_bang.examples.pacman.util.posn(20, 0, big_bang.examples.pacman.config.cell_size / 
2), new cljs.core.Keyword(null, "target-offset", "target-offset", 1916378049), big_bang.examples.pacman.config.cell_size / 4)], null);
big_bang.examples.pacman.level_builder.make_directive = function make_directive(p__31592, map_piece) {
  var vec__31595 = p__31592;
  var dx = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31595, 0, null);
  var dy = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31595, 1, null);
  var map__31596 = big_bang.examples.pacman.level_builder.pieces.cljs$core$IFn$_invoke$arity$1 ? big_bang.examples.pacman.level_builder.pieces.cljs$core$IFn$_invoke$arity$1(map_piece) : big_bang.examples.pacman.level_builder.pieces.call(null, map_piece);
  var map__31596__$1 = cljs.core.seq_QMARK_(map__31596) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__31596) : map__31596;
  var target_offset = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__31596__$1, new cljs.core.Keyword(null, "target-offset", "target-offset", 1916378049));
  var h = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__31596__$1, new cljs.core.Keyword(null, "h", "h", 1013904346));
  var w = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__31596__$1, new cljs.core.Keyword(null, "w", "w", 1013904361));
  var y = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__31596__$1, new cljs.core.Keyword(null, "y", "y", 1013904363));
  var x = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__31596__$1, new cljs.core.Keyword(null, "x", "x", 1013904362));
  return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, y, w, h, dx + target_offset, dy + target_offset, w, h], null);
};
big_bang.examples.pacman.level_builder.convert_level = function convert_level(raw_level_data) {
  var canvas_coords = function() {
    var iter__4119__auto__ = function iter__31603(s__31604) {
      return new cljs.core.LazySeq(null, function() {
        var s__31604__$1 = s__31604;
        while (true) {
          var temp__4092__auto__ = cljs.core.seq(s__31604__$1);
          if (temp__4092__auto__) {
            var xs__4579__auto__ = temp__4092__auto__;
            var y = cljs.core.first(xs__4579__auto__);
            var iterys__4115__auto__ = function(s__31604__$1, y, xs__4579__auto__, temp__4092__auto__) {
              return function iter__31605(s__31606) {
                return new cljs.core.LazySeq(null, function(s__31604__$1, y, xs__4579__auto__, temp__4092__auto__) {
                  return function() {
                    var s__31606__$1 = s__31606;
                    while (true) {
                      var temp__4092__auto____$1 = cljs.core.seq(s__31606__$1);
                      if (temp__4092__auto____$1) {
                        var s__31606__$2 = temp__4092__auto____$1;
                        if (cljs.core.chunked_seq_QMARK_(s__31606__$2)) {
                          var c__4117__auto__ = cljs.core.chunk_first(s__31606__$2);
                          var size__4118__auto__ = cljs.core.count(c__4117__auto__);
                          var b__31608 = cljs.core.chunk_buffer(size__4118__auto__);
                          if (function() {
                            var i__31607 = 0;
                            while (true) {
                              if (i__31607 < size__4118__auto__) {
                                var x = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4117__auto__, i__31607);
                                cljs.core.chunk_append(b__31608, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(cljs.core._STAR_, big_bang.examples.pacman.config.cell_size), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, y], null)));
                                var G__31609 = i__31607 + 1;
                                i__31607 = G__31609;
                                continue;
                              } else {
                                return true;
                              }
                              break;
                            }
                          }()) {
                            return cljs.core.chunk_cons(cljs.core.chunk(b__31608), iter__31605(cljs.core.chunk_rest(s__31606__$2)));
                          } else {
                            return cljs.core.chunk_cons(cljs.core.chunk(b__31608), null);
                          }
                        } else {
                          var x = cljs.core.first(s__31606__$2);
                          return cljs.core.cons(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(cljs.core._STAR_, big_bang.examples.pacman.config.cell_size), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, y], null)), iter__31605(cljs.core.rest(s__31606__$2)));
                        }
                      } else {
                        return null;
                      }
                      break;
                    }
                  };
                }(s__31604__$1, y, xs__4579__auto__, temp__4092__auto__), null, null);
              };
            }(s__31604__$1, y, xs__4579__auto__, temp__4092__auto__);
            var fs__4116__auto__ = cljs.core.seq(iterys__4115__auto__(cljs.core.range.cljs$core$IFn$_invoke$arity$2(0, big_bang.examples.pacman.config.width)));
            if (fs__4116__auto__) {
              return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(fs__4116__auto__, iter__31603(cljs.core.rest(s__31604__$1)));
            } else {
              var G__31610 = cljs.core.rest(s__31604__$1);
              s__31604__$1 = G__31610;
              continue;
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4119__auto__(cljs.core.range.cljs$core$IFn$_invoke$arity$2(0, big_bang.examples.pacman.config.height));
  }();
  return cljs.core.map.cljs$core$IFn$_invoke$arity$3(big_bang.examples.pacman.level_builder.make_directive, canvas_coords, cljs.core.seq(raw_level_data));
};
big_bang.examples.pacman.level_builder.make_ctx = function make_ctx(p__31611) {
  var vec__31613 = p__31611;
  var width = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31613, 0, null);
  var height = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31613, 1, null);
  var canvas = document.createElement("canvas");
  canvas.width = width;
  canvas.height = height;
  return canvas.getContext("2d");
};
big_bang.examples.pacman.level_builder.draw_cells = function draw_cells(ctx, level, sprite_map) {
  var level__$1 = level;
  while (true) {
    if (cljs.core.empty_QMARK_(level__$1)) {
      return ctx;
    } else {
      var temp__4092__auto__ = cljs.core.first(level__$1);
      if (cljs.core.truth_(temp__4092__auto__)) {
        var vec__31615 = temp__4092__auto__;
        var sx = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31615, 0, null);
        var sy = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31615, 1, null);
        var sw = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31615, 2, null);
        var sh = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31615, 3, null);
        var dx = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31615, 4, null);
        var dy = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31615, 5, null);
        var dw = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31615, 6, null);
        var dh = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31615, 7, null);
        ctx.drawImage(sprite_map, sx, sy, sw, sh, dx, dy, dw, dh);
        var G__31616 = cljs.core.rest(level__$1);
        level__$1 = G__31616;
        continue;
      } else {
        return null;
      }
    }
    break;
  }
};
big_bang.examples.pacman.level_builder.create_background_image = function create_background_image(level_chan, sprite_chan) {
  return cljs.core.async.map.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(big_bang.examples.pacman.level_builder.draw_cells, big_bang.examples.pacman.level_builder.make_ctx(big_bang.examples.pacman.config.background_size)), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [level_chan, sprite_chan], null));
};
big_bang.examples.pacman.level_builder.get_background = cljs.core.memoize(function(n) {
  var c = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0();
  var c__5952__auto___31636 = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(1);
  cljs.core.async.impl.dispatch.run(function() {
    var f__5953__auto__ = function() {
      var switch__5937__auto__ = function(state_31627) {
        var state_val_31628 = state_31627[1];
        if (state_val_31628 === 2) {
          var inst_31623 = state_31627[2];
          var inst_31624 = cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(inst_31623);
          var inst_31625 = big_bang.examples.pacman.util.into_channel(c, inst_31624);
          var state_31627__$1 = state_31627;
          return cljs.core.async.impl.ioc_helpers.return_chan(state_31627__$1, inst_31625);
        } else {
          if (state_val_31628 === 1) {
            var inst_31617 = big_bang.examples.pacman.config.level.cljs$core$IFn$_invoke$arity$1 ? big_bang.examples.pacman.config.level.cljs$core$IFn$_invoke$arity$1(n) : big_bang.examples.pacman.config.level.call(null, n);
            var inst_31618 = cljs.core.async.map_LT_(big_bang.examples.pacman.level_builder.convert_level, inst_31617);
            var inst_31619 = cljs.core.async.take.cljs$core$IFn$_invoke$arity$2(1, inst_31618);
            var inst_31620 = cljs.core.async.take.cljs$core$IFn$_invoke$arity$2(1, big_bang.examples.pacman.config.sprites);
            var inst_31621 = big_bang.examples.pacman.level_builder.create_background_image(inst_31619, inst_31620);
            var state_31627__$1 = state_31627;
            return cljs.core.async.impl.ioc_helpers.take_BANG_(state_31627__$1, 2, inst_31621);
          } else {
            return null;
          }
        }
      };
      return function(switch__5937__auto__) {
        return function() {
          var state_machine__5938__auto__ = null;
          var state_machine__5938__auto____0 = function() {
            var statearr_31632 = [null, null, null, null, null, null, null];
            statearr_31632[0] = state_machine__5938__auto__;
            statearr_31632[1] = 1;
            return statearr_31632;
          };
          var state_machine__5938__auto____1 = function(state_31627) {
            while (true) {
              var ret_value__5939__auto__ = function() {
                try {
                  while (true) {
                    var result__5940__auto__ = switch__5937__auto__(state_31627);
                    if (cljs.core.keyword_identical_QMARK_(result__5940__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                      continue;
                    } else {
                      return result__5940__auto__;
                    }
                    break;
                  }
                } catch (e31633) {
                  if (e31633 instanceof Object) {
                    var ex__5941__auto__ = e31633;
                    var statearr_31634_31637 = state_31627;
                    statearr_31634_31637[5] = ex__5941__auto__;
                    cljs.core.async.impl.ioc_helpers.process_exception(state_31627);
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw e31633;
                    } else {
                      return null;
                    }
                  }
                }
              }();
              if (cljs.core.keyword_identical_QMARK_(ret_value__5939__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                var G__31638 = state_31627;
                state_31627 = G__31638;
                continue;
              } else {
                return ret_value__5939__auto__;
              }
              break;
            }
          };
          state_machine__5938__auto__ = function(state_31627) {
            switch(arguments.length) {
              case 0:
                return state_machine__5938__auto____0.call(this);
              case 1:
                return state_machine__5938__auto____1.call(this, state_31627);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5938__auto____0;
          state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5938__auto____1;
          return state_machine__5938__auto__;
        }();
      }(switch__5937__auto__);
    }();
    var state__5954__auto__ = function() {
      var statearr_31635 = f__5953__auto__.cljs$core$IFn$_invoke$arity$0 ? f__5953__auto__.cljs$core$IFn$_invoke$arity$0() : f__5953__auto__.call(null);
      statearr_31635[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5952__auto___31636;
      return statearr_31635;
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__5954__auto__);
  });
  return c;
});
goog.provide("big_bang.examples.pacman.sprite");
goog.require("cljs.core");
goog.require("big_bang.examples.pacman.config");
goog.require("big_bang.examples.pacman.util");
goog.require("big_bang.examples.pacman.util");
goog.require("big_bang.examples.pacman.config");
goog.require("big_bang.examples.pacman.config");
big_bang.examples.pacman.sprite.frames = function() {
  var frames__delegate = function(frame_refs) {
    var v = cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(cljs.core.vals, frame_refs);
    var cnt = cljs.core.count(v);
    return function(frame_num) {
      return v.cljs$core$IFn$_invoke$arity$1 ? v.cljs$core$IFn$_invoke$arity$1(cljs.core.mod(frame_num, cnt)) : v.call(null, cljs.core.mod(frame_num, cnt));
    };
  };
  var frames = function(var_args) {
    var frame_refs = null;
    if (arguments.length > 0) {
      frame_refs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return frames__delegate.call(this, frame_refs);
  };
  frames.cljs$lang$maxFixedArity = 0;
  frames.cljs$lang$applyTo = function(arglist__27701) {
    var frame_refs = cljs.core.seq(arglist__27701);
    return frames__delegate(frame_refs);
  };
  frames.cljs$core$IFn$_invoke$arity$variadic = frames__delegate;
  return frames;
}();
big_bang.examples.pacman.sprite.sprites = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "pacman", "pacman", 4313007866), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "up", "up", 1013907981), big_bang.examples.pacman.sprite.frames.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([big_bang.examples.pacman.util.posn(1, 3, big_bang.examples.pacman.config.cell_size), big_bang.examples.pacman.util.posn(3, 3, big_bang.examples.pacman.config.cell_size), 
big_bang.examples.pacman.util.posn(0, 7, big_bang.examples.pacman.config.cell_size), big_bang.examples.pacman.util.posn(3, 3, big_bang.examples.pacman.config.cell_size)], 0)), new cljs.core.Keyword(null, "down", "down", 1016993812), big_bang.examples.pacman.sprite.frames.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([big_bang.examples.pacman.util.posn(5, 3, big_bang.examples.pacman.config.cell_size), big_bang.examples.pacman.util.posn(7, 3, big_bang.examples.pacman.config.cell_size), big_bang.examples.pacman.util.posn(0, 
7, big_bang.examples.pacman.config.cell_size), big_bang.examples.pacman.util.posn(7, 3, big_bang.examples.pacman.config.cell_size)], 0)), new cljs.core.Keyword(null, "left", "left", 1017222009), big_bang.examples.pacman.sprite.frames.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([big_bang.examples.pacman.util.posn(0, 3, big_bang.examples.pacman.config.cell_size), big_bang.examples.pacman.util.posn(2, 3, big_bang.examples.pacman.config.cell_size), big_bang.examples.pacman.util.posn(0, 7, 
big_bang.examples.pacman.config.cell_size), big_bang.examples.pacman.util.posn(2, 3, big_bang.examples.pacman.config.cell_size)], 0)), new cljs.core.Keyword(null, "right", "right", 1122416014), big_bang.examples.pacman.sprite.frames.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([big_bang.examples.pacman.util.posn(4, 3, big_bang.examples.pacman.config.cell_size), big_bang.examples.pacman.util.posn(6, 3, big_bang.examples.pacman.config.cell_size), big_bang.examples.pacman.util.posn(0, 7, 
big_bang.examples.pacman.config.cell_size), big_bang.examples.pacman.util.posn(6, 3, big_bang.examples.pacman.config.cell_size)], 0))], null), new cljs.core.Keyword(null, "blinky", "blinky", 3922538511), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "pinky", "pinky", 1120575797), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "inky", "inky", 1017141445), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "clyde", "clyde", 1108669731), cljs.core.PersistentArrayMap.EMPTY], 
null);
big_bang.examples.pacman.sprite.spritemap_position = function spritemap_position(refs, frame) {
  return cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(big_bang.examples.pacman.sprite.sprites, refs).call(null, frame);
};
goog.provide("big_bang.examples.pacman.render");
goog.require("cljs.core");
goog.require("big_bang.examples.pacman.level_builder");
goog.require("cljs.core.async");
goog.require("big_bang.examples.pacman.sprite");
goog.require("big_bang.examples.pacman.util");
goog.require("big_bang.examples.pacman.config");
goog.require("big_bang.examples.pacman.level_builder");
goog.require("big_bang.examples.pacman.sprite");
goog.require("big_bang.examples.pacman.util");
goog.require("big_bang.examples.pacman.config");
goog.require("cljs.core.async");
goog.require("cljs.core.async");
big_bang.examples.pacman.render.draw_backdrop_BANG_ = function() {
  var vec__31259 = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.dec, big_bang.examples.pacman.config.background_size);
  var width = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31259, 0, null);
  var height = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31259, 1, null);
  return function(world_state) {
    var c__5952__auto__ = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(1);
    cljs.core.async.impl.dispatch.run(function() {
      var f__5953__auto__ = function() {
        var switch__5937__auto__ = function(state_31270) {
          var state_val_31271 = state_31270[1];
          if (state_val_31271 === 2) {
            var inst_31265 = state_31270[2];
            var inst_31266 = inst_31265.canvas;
            var inst_31267 = big_bang.examples.pacman.config.ctx.clearRect(0, 0, width, height);
            var inst_31268 = big_bang.examples.pacman.config.ctx.drawImage(inst_31266, 0, 0);
            var state_31270__$1 = function() {
              var statearr_31272 = state_31270;
              statearr_31272[7] = inst_31267;
              return statearr_31272;
            }();
            return cljs.core.async.impl.ioc_helpers.return_chan(state_31270__$1, inst_31268);
          } else {
            if (state_val_31271 === 1) {
              var inst_31260 = [new cljs.core.Keyword(null, "level", "level", 1116770038), new cljs.core.Keyword(null, "number", "number", 4274507451)];
              var inst_31261 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, inst_31260, null);
              var inst_31262 = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(world_state, inst_31261);
              var inst_31263 = big_bang.examples.pacman.level_builder.get_background.cljs$core$IFn$_invoke$arity$1 ? big_bang.examples.pacman.level_builder.get_background.cljs$core$IFn$_invoke$arity$1(inst_31262) : big_bang.examples.pacman.level_builder.get_background.call(null, inst_31262);
              var state_31270__$1 = state_31270;
              return cljs.core.async.impl.ioc_helpers.take_BANG_(state_31270__$1, 2, inst_31263);
            } else {
              return null;
            }
          }
        };
        return function(switch__5937__auto__) {
          return function() {
            var state_machine__5938__auto__ = null;
            var state_machine__5938__auto____0 = function() {
              var statearr_31276 = [null, null, null, null, null, null, null, null];
              statearr_31276[0] = state_machine__5938__auto__;
              statearr_31276[1] = 1;
              return statearr_31276;
            };
            var state_machine__5938__auto____1 = function(state_31270) {
              while (true) {
                var ret_value__5939__auto__ = function() {
                  try {
                    while (true) {
                      var result__5940__auto__ = switch__5937__auto__(state_31270);
                      if (cljs.core.keyword_identical_QMARK_(result__5940__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__5940__auto__;
                      }
                      break;
                    }
                  } catch (e31277) {
                    if (e31277 instanceof Object) {
                      var ex__5941__auto__ = e31277;
                      var statearr_31278_31280 = state_31270;
                      statearr_31278_31280[5] = ex__5941__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception(state_31270);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e31277;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_(ret_value__5939__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__31281 = state_31270;
                  state_31270 = G__31281;
                  continue;
                } else {
                  return ret_value__5939__auto__;
                }
                break;
              }
            };
            state_machine__5938__auto__ = function(state_31270) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5938__auto____0.call(this);
                case 1:
                  return state_machine__5938__auto____1.call(this, state_31270);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5938__auto____0;
            state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5938__auto____1;
            return state_machine__5938__auto__;
          }();
        }(switch__5937__auto__);
      }();
      var state__5954__auto__ = function() {
        var statearr_31279 = f__5953__auto__.cljs$core$IFn$_invoke$arity$0 ? f__5953__auto__.cljs$core$IFn$_invoke$arity$0() : f__5953__auto__.call(null);
        statearr_31279[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5952__auto__;
        return statearr_31279;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__5954__auto__);
    });
    return c__5952__auto__;
  };
}();
big_bang.examples.pacman.render.draw_pills_BANG_ = function draw_pills_BANG_(world_state) {
  return null;
};
big_bang.examples.pacman.render.draw_ghosts_BANG_ = function draw_ghosts_BANG_(world_state) {
  return null;
};
big_bang.examples.pacman.render.draw_pacman_BANG_ = function draw_pacman_BANG_(world_state) {
  var c__5952__auto__ = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(1);
  cljs.core.async.impl.dispatch.run(function() {
    var f__5953__auto__ = function() {
      var switch__5937__auto__ = function(state_31329) {
        var state_val_31330 = state_31329[1];
        if (state_val_31330 === 2) {
          var inst_31313 = state_31329[2];
          var inst_31314 = (new cljs.core.Keyword(null, "direction", "direction", 4346280689)).cljs$core$IFn$_invoke$arity$1(world_state);
          var inst_31315 = [new cljs.core.Keyword(null, "pacman", "pacman", 4313007866), inst_31314];
          var inst_31316 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, inst_31315, null);
          var inst_31317 = (new cljs.core.Keyword(null, "frame", "frame", 1111596255)).cljs$core$IFn$_invoke$arity$1(world_state);
          var inst_31318 = cljs.core.quot(inst_31317, 5);
          var inst_31319 = big_bang.examples.pacman.sprite.spritemap_position(inst_31316, inst_31318);
          var inst_31320 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_31319, 0, null);
          var inst_31321 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_31319, 1, null);
          var inst_31322 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_31319, 2, null);
          var inst_31323 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_31319, 3, null);
          var inst_31324 = (new cljs.core.Keyword(null, "position", "position", 1761709211)).cljs$core$IFn$_invoke$arity$1(world_state);
          var inst_31325 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_31324, 0, null);
          var inst_31326 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_31324, 1, null);
          var inst_31327 = big_bang.examples.pacman.config.ctx.drawImage(inst_31313, inst_31320, inst_31321, inst_31322, inst_31323, inst_31325, inst_31326, inst_31322, inst_31323);
          var state_31329__$1 = state_31329;
          return cljs.core.async.impl.ioc_helpers.return_chan(state_31329__$1, inst_31327);
        } else {
          if (state_val_31330 === 1) {
            var state_31329__$1 = state_31329;
            return cljs.core.async.impl.ioc_helpers.take_BANG_(state_31329__$1, 2, big_bang.examples.pacman.config.sprites);
          } else {
            return null;
          }
        }
      };
      return function(switch__5937__auto__) {
        return function() {
          var state_machine__5938__auto__ = null;
          var state_machine__5938__auto____0 = function() {
            var statearr_31334 = [null, null, null, null, null, null, null];
            statearr_31334[0] = state_machine__5938__auto__;
            statearr_31334[1] = 1;
            return statearr_31334;
          };
          var state_machine__5938__auto____1 = function(state_31329) {
            while (true) {
              var ret_value__5939__auto__ = function() {
                try {
                  while (true) {
                    var result__5940__auto__ = switch__5937__auto__(state_31329);
                    if (cljs.core.keyword_identical_QMARK_(result__5940__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                      continue;
                    } else {
                      return result__5940__auto__;
                    }
                    break;
                  }
                } catch (e31335) {
                  if (e31335 instanceof Object) {
                    var ex__5941__auto__ = e31335;
                    var statearr_31336_31338 = state_31329;
                    statearr_31336_31338[5] = ex__5941__auto__;
                    cljs.core.async.impl.ioc_helpers.process_exception(state_31329);
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw e31335;
                    } else {
                      return null;
                    }
                  }
                }
              }();
              if (cljs.core.keyword_identical_QMARK_(ret_value__5939__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                var G__31339 = state_31329;
                state_31329 = G__31339;
                continue;
              } else {
                return ret_value__5939__auto__;
              }
              break;
            }
          };
          state_machine__5938__auto__ = function(state_31329) {
            switch(arguments.length) {
              case 0:
                return state_machine__5938__auto____0.call(this);
              case 1:
                return state_machine__5938__auto____1.call(this, state_31329);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5938__auto____0;
          state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5938__auto____1;
          return state_machine__5938__auto__;
        }();
      }(switch__5937__auto__);
    }();
    var state__5954__auto__ = function() {
      var statearr_31337 = f__5953__auto__.cljs$core$IFn$_invoke$arity$0 ? f__5953__auto__.cljs$core$IFn$_invoke$arity$0() : f__5953__auto__.call(null);
      statearr_31337[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5952__auto__;
      return statearr_31337;
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__5954__auto__);
  });
  return c__5952__auto__;
};
big_bang.examples.pacman.render.draw_score_BANG_ = function draw_score_BANG_(world_state) {
  return null;
};
big_bang.examples.pacman.render.render_frame = function render_frame(world_state) {
  var c__5952__auto__ = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(1);
  cljs.core.async.impl.dispatch.run(function() {
    var f__5953__auto__ = function() {
      var switch__5937__auto__ = function(state_31353) {
        var state_val_31354 = state_31353[1];
        if (state_val_31354 === 1) {
          var inst_31351 = big_bang.examples.pacman.util.with$.cljs$core$IFn$_invoke$arity$variadic(world_state, cljs.core.array_seq([big_bang.examples.pacman.render.draw_backdrop_BANG_, big_bang.examples.pacman.render.draw_pills_BANG_, big_bang.examples.pacman.render.draw_ghosts_BANG_, big_bang.examples.pacman.render.draw_pacman_BANG_, big_bang.examples.pacman.render.draw_score_BANG_], 0));
          var state_31353__$1 = state_31353;
          return cljs.core.async.impl.ioc_helpers.return_chan(state_31353__$1, inst_31351);
        } else {
          return null;
        }
      };
      return function(switch__5937__auto__) {
        return function() {
          var state_machine__5938__auto__ = null;
          var state_machine__5938__auto____0 = function() {
            var statearr_31358 = [null, null, null, null, null, null, null];
            statearr_31358[0] = state_machine__5938__auto__;
            statearr_31358[1] = 1;
            return statearr_31358;
          };
          var state_machine__5938__auto____1 = function(state_31353) {
            while (true) {
              var ret_value__5939__auto__ = function() {
                try {
                  while (true) {
                    var result__5940__auto__ = switch__5937__auto__(state_31353);
                    if (cljs.core.keyword_identical_QMARK_(result__5940__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                      continue;
                    } else {
                      return result__5940__auto__;
                    }
                    break;
                  }
                } catch (e31359) {
                  if (e31359 instanceof Object) {
                    var ex__5941__auto__ = e31359;
                    var statearr_31360_31362 = state_31353;
                    statearr_31360_31362[5] = ex__5941__auto__;
                    cljs.core.async.impl.ioc_helpers.process_exception(state_31353);
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw e31359;
                    } else {
                      return null;
                    }
                  }
                }
              }();
              if (cljs.core.keyword_identical_QMARK_(ret_value__5939__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                var G__31363 = state_31353;
                state_31353 = G__31363;
                continue;
              } else {
                return ret_value__5939__auto__;
              }
              break;
            }
          };
          state_machine__5938__auto__ = function(state_31353) {
            switch(arguments.length) {
              case 0:
                return state_machine__5938__auto____0.call(this);
              case 1:
                return state_machine__5938__auto____1.call(this, state_31353);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5938__auto____0;
          state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5938__auto____1;
          return state_machine__5938__auto__;
        }();
      }(switch__5937__auto__);
    }();
    var state__5954__auto__ = function() {
      var statearr_31361 = f__5953__auto__.cljs$core$IFn$_invoke$arity$0 ? f__5953__auto__.cljs$core$IFn$_invoke$arity$0() : f__5953__auto__.call(null);
      statearr_31361[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5952__auto__;
      return statearr_31361;
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__5954__auto__);
  });
  return c__5952__auto__;
};
goog.provide("big_bang.examples.pacman.main");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("big_bang.core");
goog.require("big_bang.examples.pacman.config");
goog.require("big_bang.examples.pacman.render");
goog.require("big_bang.examples.pacman.render");
goog.require("big_bang.examples.pacman.config");
goog.require("big_bang.examples.pacman.config");
goog.require("big_bang.core");
goog.require("cljs.core.async");
goog.require("cljs.core.async");
big_bang.examples.pacman.main.make_ghost = function make_ghost() {
  return cljs.core.PersistentArrayMap.EMPTY;
};
big_bang.examples.pacman.main.advance_ghost = function advance_ghost(world_state, ghost_name) {
  return world_state;
};
big_bang.examples.pacman.main.frighten_ghost = function frighten_ghost(world_state, ghost_name) {
  return world_state;
};
big_bang.examples.pacman.main.posn__GT_cell = function posn__GT_cell(p__31098) {
  var vec__31100 = p__31098;
  var x = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31100, 0, null);
  var y = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31100, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.quot(x, big_bang.examples.pacman.config.cell_size), cljs.core.quot(y, big_bang.examples.pacman.config.cell_size)], null);
};
big_bang.examples.pacman.main.cell__GT_offset = function cell__GT_offset(p__31101) {
  var vec__31103 = p__31101;
  var x = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31103, 0, null);
  var y = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31103, 1, null);
  return x + big_bang.examples.pacman.config.width * y;
};
big_bang.examples.pacman.main.adjust_for = function adjust_for(direction, p__31104) {
  var vec__31107 = p__31104;
  var x = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31107, 0, null);
  var y = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31107, 1, null);
  var G__31108 = direction;
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null, "down", "down", 1016993812), G__31108)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, y + big_bang.examples.pacman.config.cell_size], null);
  } else {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null, "right", "right", 1122416014), G__31108)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x + big_bang.examples.pacman.config.cell_size, y], null);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, y], null);
      } else {
        return null;
      }
    }
  }
};
big_bang.examples.pacman.main.level_item = function level_item(world_state, next_posn) {
  return cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(world_state, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "level", "level", 1116770038), new cljs.core.Keyword(null, "map", "map", 1014012110), big_bang.examples.pacman.main.cell__GT_offset(big_bang.examples.pacman.main.posn__GT_cell(big_bang.examples.pacman.main.adjust_for((new cljs.core.Keyword(null, "direction", "direction", 4346280689)).cljs$core$IFn$_invoke$arity$1(world_state), 
  next_posn)))], null));
};
big_bang.examples.pacman.main.update_score = function update_score(world_state, points_to_add) {
  return cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(world_state, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "score", "score", 1123168772)], null), cljs.core.partial.cljs$core$IFn$_invoke$arity$2(cljs.core._PLUS_, points_to_add));
};
big_bang.examples.pacman.main.eat_pill = function eat_pill(world_state, pill_pos) {
  var pill_offset = big_bang.examples.pacman.main.cell__GT_offset(big_bang.examples.pacman.main.posn__GT_cell(pill_pos));
  return cljs.core.assoc_in(world_state, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "level", "level", 1116770038), new cljs.core.Keyword(null, "map", "map", 1014012110), pill_offset], null), " ");
};
big_bang.examples.pacman.main.update_position = function update_position(world_state, new_posn) {
  return cljs.core.assoc_in(world_state, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "position", "position", 1761709211)], null), new_posn);
};
big_bang.examples.pacman.main.calc_next_position = function calc_next_position(world_state) {
  var vec__31111 = (new cljs.core.Keyword(null, "position", "position", 1761709211)).cljs$core$IFn$_invoke$arity$1(world_state);
  var x = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31111, 0, null);
  var y = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31111, 1, null);
  var G__31112 = (new cljs.core.Keyword(null, "direction", "direction", 4346280689)).cljs$core$IFn$_invoke$arity$1(world_state);
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null, "down", "down", 1016993812), G__31112)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, y + 1], null);
  } else {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null, "up", "up", 1013907981), G__31112)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, y - 1], null);
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null, "left", "left", 1017222009), G__31112)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x - 1, y], null);
      } else {
        if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null, "right", "right", 1122416014), G__31112)) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x + 1, y], null);
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw new Error([cljs.core.str("No matching clause: "), cljs.core.str((new cljs.core.Keyword(null, "direction", "direction", 4346280689)).cljs$core$IFn$_invoke$arity$1(world_state))].join(""));
          } else {
            return null;
          }
        }
      }
    }
  }
};
big_bang.examples.pacman.main.screen_wrap = function() {
  var vec__31113 = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.dec, big_bang.examples.pacman.config.background_size);
  var maxx = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31113, 0, null);
  var maxy = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31113, 1, null);
  return function(p__31114) {
    var vec__31115 = p__31114;
    var x = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31115, 0, null);
    var y = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31115, 1, null);
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x < 0 ? maxx : x > maxx ? 0 : new cljs.core.Keyword(null, "else", "else", 1017020587) ? x : null, y < 0 ? maxy : y > maxx ? 0 : new cljs.core.Keyword(null, "else", "else", 1017020587) ? y : null], null);
  };
}();
big_bang.examples.pacman.main.advance_pacman = function advance_pacman(world_state) {
  var next_pos = big_bang.examples.pacman.main.screen_wrap.cljs$core$IFn$_invoke$arity$1 ? big_bang.examples.pacman.main.screen_wrap.cljs$core$IFn$_invoke$arity$1(big_bang.examples.pacman.main.calc_next_position(world_state)) : big_bang.examples.pacman.main.screen_wrap.call(null, big_bang.examples.pacman.main.calc_next_position(world_state));
  var new_cell = big_bang.examples.pacman.main.level_item(world_state, next_pos);
  var pred__31119 = cljs.core._EQ_;
  var expr__31120 = new_cell;
  if (cljs.core.truth_(pred__31119.cljs$core$IFn$_invoke$arity$2 ? pred__31119.cljs$core$IFn$_invoke$arity$2(" ", expr__31120) : pred__31119.call(null, " ", expr__31120))) {
    return big_bang.examples.pacman.main.update_position(world_state, next_pos);
  } else {
    if (cljs.core.truth_(pred__31119.cljs$core$IFn$_invoke$arity$2 ? pred__31119.cljs$core$IFn$_invoke$arity$2(".", expr__31120) : pred__31119.call(null, ".", expr__31120))) {
      return big_bang.examples.pacman.main.update_score(big_bang.examples.pacman.main.eat_pill(big_bang.examples.pacman.main.update_position(world_state, next_pos), next_pos), 1);
    } else {
      if (cljs.core.truth_(pred__31119.cljs$core$IFn$_invoke$arity$2 ? pred__31119.cljs$core$IFn$_invoke$arity$2("O", expr__31120) : pred__31119.call(null, "O", expr__31120))) {
        return big_bang.examples.pacman.main.frighten_ghost(big_bang.examples.pacman.main.frighten_ghost(big_bang.examples.pacman.main.frighten_ghost(big_bang.examples.pacman.main.frighten_ghost(big_bang.examples.pacman.main.update_score(big_bang.examples.pacman.main.eat_pill(big_bang.examples.pacman.main.update_position(world_state, next_pos), next_pos), 10), new cljs.core.Keyword(null, "blinky", "blinky", 3922538511)), new cljs.core.Keyword(null, "pinky", "pinky", 1120575797)), new cljs.core.Keyword(null, 
        "inky", "inky", 1017141445)), new cljs.core.Keyword(null, "clyde", "clyde", 1108669731));
      } else {
        return world_state;
      }
    }
  }
};
big_bang.examples.pacman.main.update_state = function update_state(world_state) {
  return big_bang.examples.pacman.main.advance_pacman(big_bang.examples.pacman.main.advance_ghost(big_bang.examples.pacman.main.advance_ghost(big_bang.examples.pacman.main.advance_ghost(big_bang.examples.pacman.main.advance_ghost(cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(world_state, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "frame", "frame", 1111596255)], null), cljs.core.inc), new cljs.core.Keyword(null, "blinky", "blinky", 
  3922538511)), new cljs.core.Keyword(null, "pinky", "pinky", 1120575797)), new cljs.core.Keyword(null, "inky", "inky", 1017141445)), new cljs.core.Keyword(null, "clyde", "clyde", 1108669731)));
};
big_bang.examples.pacman.main.make_initial_state = function make_initial_state(level_num, level_data) {
  return new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "lives", "lives", 1116889209), 3, new cljs.core.Keyword(null, "frame", "frame", 1111596255), 0, new cljs.core.Keyword(null, "score", "score", 1123168772), 0, new cljs.core.Keyword(null, "direction", "direction", 4346280689), new cljs.core.Keyword(null, "left", "left", 1017222009), new cljs.core.Keyword(null, "position", "position", 1761709211), big_bang.examples.pacman.config.start_position, new cljs.core.Keyword(null, 
  "ghosts", "ghosts", 4062174006), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "blinky", "blinky", 3922538511), big_bang.examples.pacman.main.make_ghost(), new cljs.core.Keyword(null, "pinky", "pinky", 1120575797), big_bang.examples.pacman.main.make_ghost(), new cljs.core.Keyword(null, "inky", "inky", 1017141445), big_bang.examples.pacman.main.make_ghost(), new cljs.core.Keyword(null, "clyde", "clyde", 1108669731), big_bang.examples.pacman.main.make_ghost()], null), new cljs.core.Keyword(null, 
  "level", "level", 1116770038), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "map", "map", 1014012110), cljs.core.vec(level_data), new cljs.core.Keyword(null, "number", "number", 4274507451), level_num], null)], null);
};
big_bang.examples.pacman.main.start_game = function start_game() {
  var n = 1;
  var c__5952__auto__ = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(1);
  cljs.core.async.impl.dispatch.run(function() {
    var f__5953__auto__ = function() {
      var switch__5937__auto__ = function(state_31143) {
        var state_val_31144 = state_31143[1];
        if (state_val_31144 === 2) {
          var inst_31139 = state_31143[2];
          var inst_31140 = big_bang.examples.pacman.main.make_initial_state(n, inst_31139);
          var inst_31141 = big_bang.core.big_bang_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.Keyword(null, "initial-state", "initial-state", 4067401786), inst_31140, new cljs.core.Keyword(null, "on-tick", "on-tick", 3936889917), big_bang.examples.pacman.main.update_state, new cljs.core.Keyword(null, "to-draw", "to-draw", 4107602120), big_bang.examples.pacman.render.render_frame], 0));
          var state_31143__$1 = state_31143;
          return cljs.core.async.impl.ioc_helpers.return_chan(state_31143__$1, inst_31141);
        } else {
          if (state_val_31144 === 1) {
            var inst_31137 = big_bang.examples.pacman.config.level.cljs$core$IFn$_invoke$arity$1 ? big_bang.examples.pacman.config.level.cljs$core$IFn$_invoke$arity$1(n) : big_bang.examples.pacman.config.level.call(null, n);
            var state_31143__$1 = state_31143;
            return cljs.core.async.impl.ioc_helpers.take_BANG_(state_31143__$1, 2, inst_31137);
          } else {
            return null;
          }
        }
      };
      return function(switch__5937__auto__) {
        return function() {
          var state_machine__5938__auto__ = null;
          var state_machine__5938__auto____0 = function() {
            var statearr_31148 = [null, null, null, null, null, null, null];
            statearr_31148[0] = state_machine__5938__auto__;
            statearr_31148[1] = 1;
            return statearr_31148;
          };
          var state_machine__5938__auto____1 = function(state_31143) {
            while (true) {
              var ret_value__5939__auto__ = function() {
                try {
                  while (true) {
                    var result__5940__auto__ = switch__5937__auto__(state_31143);
                    if (cljs.core.keyword_identical_QMARK_(result__5940__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                      continue;
                    } else {
                      return result__5940__auto__;
                    }
                    break;
                  }
                } catch (e31149) {
                  if (e31149 instanceof Object) {
                    var ex__5941__auto__ = e31149;
                    var statearr_31150_31152 = state_31143;
                    statearr_31150_31152[5] = ex__5941__auto__;
                    cljs.core.async.impl.ioc_helpers.process_exception(state_31143);
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw e31149;
                    } else {
                      return null;
                    }
                  }
                }
              }();
              if (cljs.core.keyword_identical_QMARK_(ret_value__5939__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                var G__31153 = state_31143;
                state_31143 = G__31153;
                continue;
              } else {
                return ret_value__5939__auto__;
              }
              break;
            }
          };
          state_machine__5938__auto__ = function(state_31143) {
            switch(arguments.length) {
              case 0:
                return state_machine__5938__auto____0.call(this);
              case 1:
                return state_machine__5938__auto____1.call(this, state_31143);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5938__auto____0;
          state_machine__5938__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5938__auto____1;
          return state_machine__5938__auto__;
        }();
      }(switch__5937__auto__);
    }();
    var state__5954__auto__ = function() {
      var statearr_31151 = f__5953__auto__.cljs$core$IFn$_invoke$arity$0 ? f__5953__auto__.cljs$core$IFn$_invoke$arity$0() : f__5953__auto__.call(null);
      statearr_31151[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5952__auto__;
      return statearr_31151;
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__5954__auto__);
  });
  return c__5952__auto__;
};

//# sourceMappingURL=example.map